{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
    "id": 384106752,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg0MTA2NzUy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18267",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18267.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18267.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
    "number": 18267,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "BIP-325: Signet [consensus]",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR is a part of BIP-325 (https://github.com/bitcoin/bips/blob/master/bip-0325.mediawiki), and is a sub-PR of #16411.\r\n\r\n* Signet consensus (this)\r\n* Signet RPC tools (pending)\r\n* Signet utility scripts (contrib/signet) (pending)\r\n",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      },
      {
        "id": 192202000,
        "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
        "name": "Consensus",
        "color": "009800",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-03-05T07:16:00Z",
    "updated_at": "2022-05-16T05:59:52Z",
    "closed_at": "2020-09-21T20:34:58Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-09-21T20:34:58Z",
    "merge_commit_sha": "8c5f68118cd03ff0b9babee351fee83117fb7afa",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "kallewoof:2003-signet-consensus",
      "ref": "2003-signet-consensus",
      "sha": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 74733553,
        "node_id": "MDEwOlJlcG9zaXRvcnk3NDczMzU1Mw==",
        "name": "bitcoin",
        "full_name": "kallewoof/bitcoin",
        "owner": {
          "login": "kallewoof",
          "id": 250224,
          "node_id": "MDQ6VXNlcjI1MDIyNA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/kallewoof",
          "html_url": "https://github.com/kallewoof",
          "followers_url": "https://api.github.com/users/kallewoof/followers",
          "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
          "organizations_url": "https://api.github.com/users/kallewoof/orgs",
          "repos_url": "https://api.github.com/users/kallewoof/repos",
          "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/kallewoof/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/kallewoof/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/kallewoof/bitcoin",
        "archive_url": "https://api.github.com/repos/kallewoof/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/kallewoof/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/kallewoof/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/kallewoof/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/kallewoof/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/kallewoof/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/kallewoof/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/kallewoof/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/kallewoof/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/kallewoof/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/kallewoof/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/kallewoof/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/kallewoof/bitcoin/events",
        "forks_url": "https://api.github.com/repos/kallewoof/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/kallewoof/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/kallewoof/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/kallewoof/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/kallewoof/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/kallewoof/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/kallewoof/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/kallewoof/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/kallewoof/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/kallewoof/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/kallewoof/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/kallewoof/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/kallewoof/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/kallewoof/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/kallewoof/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/kallewoof/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:kallewoof/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/kallewoof/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/kallewoof/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/kallewoof/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/kallewoof/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/kallewoof/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/kallewoof/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/kallewoof/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/kallewoof/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/kallewoof/bitcoin/hooks",
        "svn_url": "https://github.com/kallewoof/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 206118,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-11T04:43:35Z",
        "created_at": "2016-11-25T06:59:31Z",
        "updated_at": "2023-05-05T12:10:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "652c45fdbbd55bde95c8c6cf08a5feb6055ac112",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 532,
    "deletions": 44,
    "changed_files": 21,
    "commits": 10,
    "review_comments": 260,
    "comments": 115
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 3100008160,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMDAwODE2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100008160",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T07:44:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3100016817,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMDAxNjgxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100016817",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T07:47:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3100018513,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMDAxODUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100018513",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T07:48:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3100023138,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMDAyMzEzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100023138",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T07:49:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3100066765,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMDA2Njc2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100066765",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T08:04:43Z"
    },
    {
      "event": "labeled",
      "id": 3100308688,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMDAzMDg2ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100308688",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T09:18:01Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 3100308689,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMDAzMDg2ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100308689",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T09:18:01Z",
      "label": {
        "name": "Consensus",
        "color": "009800"
      }
    },
    {
      "event": "labeled",
      "id": 3100308692,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMDAzMDg2OTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100308692",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T09:18:02Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "labeled",
      "id": 3100308697,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMDAzMDg2OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100308697",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T09:18:02Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 3100308702,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMDAzMDg3MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100308702",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T09:18:02Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 3100308710,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMDAzMDg3MTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3100308710",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T09:18:02Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3101148621,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMTE0ODYyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3101148621",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T13:17:29Z"
    },
    {
      "event": "commented",
      "id": 595290205,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTI5MDIwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595290205",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T15:30:02Z",
      "updated_at": "2020-09-19T16:17:20Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19937 (signet mining utility by ajtowns)\n* #19438 (Introduce deploymentstatus by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-595290205",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "added_to_project",
      "id": 3102538755,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzMTAyNTM4NzU1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3102538755",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T19:13:15Z",
      "project_card": {
        "id": 34150627,
        "url": "https://api.github.com/projects/columns/cards/34150627",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 595462480,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTQ2MjQ4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595462480",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T21:43:30Z",
      "updated_at": "2020-03-05T21:43:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-595462480",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3103967498,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEwMzk2NzQ5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3103967498",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-06T04:38:46Z"
    },
    {
      "event": "labeled",
      "id": 3120148754,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMjAxNDg3NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3120148754",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-11T19:05:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3121203705,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEyMTIwMzcwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3121203705",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-12T02:43:12Z"
    },
    {
      "event": "unlabeled",
      "id": 3121268318,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzEyMTI2ODMxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3121268318",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-12T03:25:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3128564191,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMjg1NjQxOTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3128564191",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-13T22:57:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 602268095,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjI2ODA5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602268095",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-22T20:34:24Z",
      "updated_at": "2020-03-22T20:34:24Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Local build and tests green, will review shortly.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-602268095",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3157980534,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE1Nzk4MDUzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3157980534",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T03:58:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3158002634,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE1ODAwMjYzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3158002634",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T04:11:33Z"
    },
    {
      "event": "unlabeled",
      "id": 3158008679,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzE1ODAwODY3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3158008679",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T04:15:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3171232928,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxNzEyMzI5Mjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3171232928",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T07:16:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 3172895405,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzE3Mjg5NTQwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3172895405",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T15:28:08Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "unlabeled",
      "id": 3172895954,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzE3Mjg5NTk1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3172895954",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T15:28:15Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "unlabeled",
      "id": 3172896556,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzE3Mjg5NjU1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3172896556",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T15:28:24Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "unlabeled",
      "id": 3172896557,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzE3Mjg5NjU1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3172896557",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T15:28:24Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3177364707,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE3NzM2NDcwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3177364707",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T08:00:53Z"
    },
    {
      "event": "unlabeled",
      "id": 3177383283,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzE3NzM4MzI4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3177383283",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T08:05:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 390001251,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDAxMjUx",
      "url": null,
      "actor": null,
      "commit_id": "79865a6d28e309334450fa58cb5d201f108ed23a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "concept ACK, scope ACK, if I can actually connect to signet(still waiting for connections from DNS response)",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-390001251",
      "submitted_at": "2020-04-08T14:17:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 610986949,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDk4Njk0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610986949",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-08T14:18:21Z",
      "updated_at": "2020-04-08T14:18:28Z",
      "author_association": "MEMBER",
      "body": "> bitcoin-qt: qt/bitcoin.cpp:528: int GuiMain(int, char**): Assertion `!networkStyle.isNull()' failed.\r\n\r\noops",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-610986949",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 611311289,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTMxMTI4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/611311289",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-09T03:42:59Z",
      "updated_at": "2020-04-09T03:42:59Z",
      "author_association": "MEMBER",
      "body": "> > bitcoin-qt: qt/bitcoin.cpp:528: int GuiMain(int, char**): Assertion `!networkStyle.isNull()' failed.\r\n> \r\n> oops\r\n\r\nOh.. Yeah I wanted to keep this ultra minimal, but I should probably not crash QT, yeah... :)",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-611311289",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3216669360,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzIxNjY2OTM2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3216669360",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-09T04:03:04Z"
    },
    {
      "event": "commented",
      "id": 611319221,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxMTMxOTIyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/611319221",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-09T04:19:35Z",
      "updated_at": "2020-04-09T04:19:35Z",
      "author_association": "MEMBER",
      "body": "> concept ACK, scope ACK, if I can actually connect to signet(still waiting for connections from DNS response)\r\n\r\nWeird. I just now started a fresh instance with a new datadir and it instantly connected and started syncing blocks..",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-611319221",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "labeled",
      "id": 3222740488,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyMjI3NDA0ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3222740488",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-10T18:43:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3223520172,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzIyMzUyMDE3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3223520172",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T01:51:57Z"
    },
    {
      "event": "unlabeled",
      "id": 3223578595,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzIyMzU3ODU5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3223578595",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T03:05:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3223636267,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzIyMzYzNjI2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3223636267",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T04:15:07Z"
    },
    {
      "event": "commented",
      "id": 620154768,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDE1NDc2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620154768",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-27T18:26:29Z",
      "updated_at": "2020-04-27T18:26:29Z",
      "author_association": "MEMBER",
      "body": "Signet worked perfectly the first try :100: ...following the instructions at https://gist.github.com/kallewoof/98b6d8dbe126d2b6f47da0ddccd2aa5a... now reviewing",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-620154768",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 620569419,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDU2OTQxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620569419",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-28T12:18:23Z",
      "updated_at": "2020-04-28T13:39:12Z",
      "author_association": "MEMBER",
      "body": "Er, I was excited (e.g. \"this is so cool\") and should have been more specific.\r\n\r\n<details>\r\n<summary>Here is what I did after building this PR branch... :memo:</summary>\r\n<p>\r\n\r\n```bash\r\ncd src\r\nmkdir signet\r\necho \"signet=1\" > signet/bitcoin.conf\r\n\r\n./bitcoind -datadir=signet  # in a separate terminal buffer to watch the debug log\r\n\r\n./bitcoin-cli -datadir=signet -getinfo\r\n\r\n./bitcoin-cli -datadir=signet getnewaddress\r\nsb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0\r\n\r\n./bitcoin-cli -datadir=signet setlabel sb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0 testing-signet\r\n\r\n./bitcoin-cli -datadir=signet getaddressinfo sb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0\r\n{\r\n  \"address\": \"sb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0\",\r\n  \"scriptPubKey\": \"0014f7904103854f5c4440b0e3089ea3aa4d7732db62\",\r\n  \"ismine\": true,\r\n  \"solvable\": true,\r\n  \"desc\": \"wpkh([6352002d/0'/0'/0']028f681e25caadc71f45e7811775f4e73b5b27ce7bf335888d514a9fc3999c55c1)#de6xjlkq\",\r\n  \"iswatchonly\": false,\r\n  \"isscript\": false,\r\n  \"iswitness\": true,\r\n  \"witness_version\": 0,\r\n  \"witness_program\": \"f7904103854f5c4440b0e3089ea3aa4d7732db62\",\r\n  \"pubkey\": \"028f681e25caadc71f45e7811775f4e73b5b27ce7bf335888d514a9fc3999c55c1\",\r\n  \"ischange\": false,\r\n  \"timestamp\": 1588011190,\r\n  \"hdkeypath\": \"m/0'/0'/0'\",\r\n  \"hdseedid\": \"50a32a27b26929927079cef87b19a7ffb673871b\",\r\n  \"hdmasterfingerprint\": \"6352002d\",\r\n  \"labels\": [\r\n    \"testing-signet\"\r\n  ]\r\n}\r\n```\r\n\r\nObtain 10 signet coins at https://signet.bc-2.jp/\r\n```\r\nPayment of 10.00000000 BTC sent with txid 1fb49b9b484e42f5f19a1e5491b1760f949c303a297a63b68e41e9e9f379b3d5\r\n```\r\n\r\nVerify reception\r\n```json\r\n./bitcoin-cli -datadir=signet gettransaction 1fb49b9b484e42f5f19a1e5491b1760f949c303a297a63b68e41e9e9f379b3d5\r\n{\r\n  \"amount\": 10.00000000,\r\n  \"confirmations\": 0,\r\n  \"trusted\": false,\r\n  \"txid\": \"1fb49b9b484e42f5f19a1e5491b1760f949c303a297a63b68e41e9e9f379b3d5\",\r\n  \"walletconflicts\": [\r\n  ],\r\n  \"time\": 1588011612,\r\n  \"timereceived\": 1588011612,\r\n  \"bip125-replaceable\": \"no\",\r\n  \"details\": [\r\n    {\r\n      \"address\": \"sb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0\",\r\n      \"category\": \"receive\",\r\n      \"amount\": 10.00000000,\r\n      \"label\": \"testing-signet\",\r\n      \"vout\": 0\r\n    }\r\n  ],\r\n  \"hex\": \"0200000000010154c0f4e926d77105e30311dd126f3a06aed63f7aa722702dd0c606e2f05a8db80100000000feffffff0200ca9a3b00000000160014f7904103854f5c4440b0e3089ea3aa4d7732db62fc33c6b8000000001600149218f528e0ebd953fdc72a7f42150facbe545ee1024730440220422cd8b64cdd49a87636ada6d41bfa761b592f99edc7d21081ba2b54e4d0672502207156fba2cec09d990a243c6925f4bca53e123730d13076d3e68cc0f96795e645012102a53a66b296489e8cd996c216d2c90e682187cce883f55d06c188daf5e8779816101f0000\"\r\n}\r\n\r\n./bitcoin-cli -datadir=signet getbalances\r\n{\r\n  \"mine\": {\r\n    \"trusted\": 0.00000000,\r\n    \"untrusted_pending\": 10.00000000,\r\n    \"immature\": 0.00000000\r\n  }\r\n}\r\n```\r\n\r\n...and after a few minutes...\r\n\r\n```json\r\n./bitcoin-cli -datadir=signet getbalances\r\n{\r\n  \"mine\": {\r\n    \"trusted\": 10.00000000,\r\n    \"untrusted_pending\": 0.00000000,\r\n    \"immature\": 0.00000000\r\n  }\r\n}\r\n\r\n./bitcoin-cli -datadir=signet -getinfo\r\n{\r\n  \"version\": 209900,\r\n  \"blocks\": 8055,\r\n  \"headers\": 8055,\r\n  \"verificationprogress\": 1.544713757023421e-05,\r\n  \"timeoffset\": 0,\r\n  \"connections\": 3,\r\n  \"proxy\": \"\",\r\n  \"difficulty\": 0.0008245888870457042,\r\n  \"chain\": \"signet\",\r\n  \"keypoolsize\": 999,\r\n  \"paytxfee\": 0.00000000,\r\n  \"balance\": 10.00000000,\r\n  \"relayfee\": 0.00001000,\r\n  \"warnings\": \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\"\r\n}\r\n\r\n./bitcoin-cli -datadir=signet stop\r\n```\r\n</p>\r\n</details>\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-620569419",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 401850965,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxODUwOTY1",
      "url": null,
      "actor": null,
      "commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 76047d0c77f0ade5b2e16f5d980c4d4b1709a13b with a few questions and minor comments below.\r\n\r\nCode review, gcc/clang/fuzz builds, unit/functional tests green. Manually tested bitcoind with signet per my last comment above, and it ran successfully for a day. Also tested the GUI (`./src/qt/bitcoin-qt -datadir=signet`) and ran various rpc commands in the console.\r\n\r\n![Screenshot from 2020-04-29 15-52-26](https://user-images.githubusercontent.com/2415484/80604347-222ab700-8a21-11ea-8002-cd2f1fcb9d02.jpg)",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-401850965",
      "submitted_at": "2020-04-29T14:02:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 621302081,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTMwMjA4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621302081",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T15:54:17Z",
      "updated_at": "2020-04-29T15:54:17Z",
      "author_association": "MEMBER",
      "body": "Made a few signet transactions using the GUI. Works well.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621302081",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 401918081,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTE4MDgx",
      "url": null,
      "actor": null,
      "commit_id": "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nI will do another manual test with the latest code before finishing the code review. In the meantime, I have some (mostly nit) comments and suggestions.\r\n\r\nFirst a conceptual question: I might be missing something and this might have been discussed previously but as a participant in the network (not the signer) what prevents me from taking the last block, mining a higher POW for it and then sending it out to replace the original block from the signer? If I understand it correctly, this is possible but attacks with this are probably not feasible because the attacker only has the block nonce to play with, not the extended nonce and they can also not change the other content of the block. For a moment I thought this might be a problem but since an attack with this would probably require many blocks, this is not a concern I think. I am just generally interested if I got this part right.\r\n\r\nMore general comments (did not make sense as inline comments):\r\n- You might plan to add them later, but I thought adding SIGNET to tests in `src/test/util_tests.cpp:870/871` and `src/test/key_io_tests.cpp:139` might make sense in this pull already\r\n- The first commit could be split into two: the move only part and the witness commitment section, for easier review",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-401918081",
      "submitted_at": "2020-04-29T16:22:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3285550926,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI4NTU1MDkyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3285550926",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T16:57:59Z"
    },
    {
      "event": "commented",
      "id": 621345945,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTM0NTk0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621345945",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T17:13:15Z",
      "updated_at": "2020-04-29T17:13:15Z",
      "author_association": "MEMBER",
      "body": "Thanks a lot @jonatack and @fjahr for your feedback. I've addressed all of your comments (let me know if I ignored something), so please re-review!",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621345945",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3285610257,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI4NTYxMDI1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3285610257",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T17:13:15Z"
    },
    {
      "event": "subscribed",
      "id": 3285610266,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyODU2MTAyNjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3285610266",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T17:13:15Z"
    },
    {
      "event": "mentioned",
      "id": 3285610275,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI4NTYxMDI3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3285610275",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T17:13:16Z"
    },
    {
      "event": "subscribed",
      "id": 3285610276,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyODU2MTAyNzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3285610276",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T17:13:16Z"
    },
    {
      "event": "commented",
      "id": 621353486,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTM1MzQ4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621353486",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T17:27:27Z",
      "updated_at": "2020-04-29T17:27:27Z",
      "author_association": "MEMBER",
      "body": "> First a conceptual question: I might be missing something and this might have been discussed previously but as a participant in the network (not the signer) what prevents me from taking the last block, mining a higher POW for it and then sending it out to replace the original block from the signer? If I understand it correctly, this is possible but attacks with this are probably not feasible because the attacker only has the block nonce to play with, not the extended nonce and they can also not change the other content of the block. For a moment I thought this might be a problem but since an attack with this would probably require many blocks, this is not a concern I think. I am just generally interested if I got this part right.\r\n> \r\n> More general comments (did not make sense as inline comments):\r\n> \r\n> * You might plan to add them later, but I thought adding SIGNET to tests in `src/test/util_tests.cpp:870/871` and `src/test/key_io_tests.cpp:139` might make sense in this pull already\r\n> * The first commit could be split into two: the move only part and the witness commitment section, for easier review\r\n\r\n@kallewoof I think you missed my comments in the review message? ^ Thanks!\r\n",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621353486",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3285663971,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI4NTY2Mzk3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3285663971",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T17:27:28Z"
    },
    {
      "event": "subscribed",
      "id": 3285663977,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyODU2NjM5Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3285663977",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T17:27:28Z"
    },
    {
      "event": "reviewed",
      "id": 402986678,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTg2Njc4",
      "url": null,
      "actor": null,
      "commit_id": "3b4e8d78f61a8869a5edc4cbbafd2cbe411eafd8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-402986678",
      "submitted_at": "2020-04-29T19:52:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3287372314,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI4NzM3MjMxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287372314",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T03:28:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3287380524,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI4NzM4MDUyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287380524",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T03:33:32Z"
    },
    {
      "event": "commented",
      "id": 621592585,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTU5MjU4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621592585",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T03:33:59Z",
      "updated_at": "2020-04-30T03:33:59Z",
      "author_association": "MEMBER",
      "body": "@fjahr Indeed, sorry about that!\r\n\r\n> First a conceptual question: I might be missing something and this might have been discussed previously but as a participant in the network (not the signer) what prevents me from taking the last block, mining a higher POW for it and then sending it out to replace the original block from the signer? If I understand it correctly, this is possible but attacks with this are probably not feasible because the attacker only has the block nonce to play with, not the extended nonce and they can also not change the other content of the block. For a moment I thought this might be a problem but since an attack with this would probably require many blocks, this is not a concern I think. I am just generally interested if I got this part right.\r\n\r\nYep, you did. There's nothing preventing you from doing this, and as Signet itself comes with built in double spend modes, this is going to be a fairly common occurrence for certain networks. I don't think it's a big problem, though.\r\n\r\n> * You might plan to add them later, but I thought adding SIGNET to tests in `src/test/util_tests.cpp:870/871` and `src/test/key_io_tests.cpp:139` might make sense in this pull already\r\n\r\nMakes sense, thanks!\r\n\r\n> * The first commit could be split into two: the move only part and the witness commitment section, for easier review\r\n\r\nYou're right, that makes more sense. Done.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621592585",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3287381283,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI4NzM4MTI4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287381283",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T03:33:59Z"
    },
    {
      "event": "subscribed",
      "id": 3287381286,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyODczODEyODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287381286",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T03:33:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3287399034,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI4NzM5OTAzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287399034",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T03:44:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3287400023,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI4NzQwMDAyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287400023",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T03:44:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3287863620,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI4Nzg2MzYyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287863620",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T07:07:31Z"
    },
    {
      "event": "labeled",
      "id": 3289576269,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyODk1NzYyNjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3289576269",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T14:03:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 621907454,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTkwNzQ1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621907454",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T14:57:11Z",
      "updated_at": "2020-04-30T14:57:11Z",
      "author_association": "MEMBER",
      "body": "Needs another rebase, but ACK 27619339eb4dc348a32aa68b517be5b49df3d6a3. Reviewed code including latest changes and synced a node and tested sending and receiving txs and some other basic functionalities, mostly info calls.\r\n\r\nOne thing I noticed is that the progress during sync currently doesn't work (shows 1.0 from the start) because there is no `chainTxData` for Signet, I guess that is something that gets added by maintainers? EDIT: Yes it is. https://github.com/bitcoin/bitcoin/blob/master/doc/release-process.md#before-branch-off",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621907454",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 622016262,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjAxNjI2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622016262",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T18:11:20Z",
      "updated_at": "2020-04-30T18:19:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 27619339eb4dc348a32aa68b517be5b49df3d6a3\r\n\r\nBuilt, run and tested on macOS Catalina 10.15.4\r\n\r\n**Unit tests** executed successfully.\r\n\r\nDone **manual tests** with `bitcoind` and bitcoin.conf that contained `signet=1` flag.\r\n\r\n**Examples**:\r\n\r\n* Query daemon info\r\n\r\n`./bitcoin-cli -datadir=signet -getinfo`\r\n\r\n```shell\r\n{\r\n  \"version\": 209900,\r\n  \"blocks\": 2875,\r\n  \"headers\": 8376,\r\n  \"verificationprogress\": 7.824597019403681e-230,\r\n  \"timeoffset\": 0,\r\n  \"connections\": 1,\r\n  \"proxy\": \"\",\r\n  \"difficulty\": 0.0007813477653418144,\r\n  \"chain\": \"signet\",\r\n  \"keypoolsize\": 1000,\r\n  \"paytxfee\": 0.00000000,\r\n  \"balance\": 0.00000000,\r\n  \"relayfee\": 0.00001000,\r\n  \"warnings\": \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\"\r\n}\r\n```\r\n\r\n* Created a signet address and received 10 signet BTCs:\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getnewaddress\r\nsb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t\r\n```\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet setlabel sb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t brakmic-signet-address\r\n```\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getaddressinfo sb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t\r\n{\r\n  \"address\": \"sb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t\",                     \r\n  \"scriptPubKey\": \"00148ae16f31908a38446b1dc19a7c67f908240e0730\",\r\n  \"ismine\": true,\r\n  \"solvable\": true,\r\n  \"desc\": \"wpkh([39028b98/0'/0'/0']03164fe243eda4c563657cc10b0c6f420fc92dde092f67b5e03f7d7ddfe20c9a6f)#l9u634et\",\r\n  \"iswatchonly\": false,\r\n  \"isscript\": false,\r\n  \"iswitness\": true,\r\n  \"witness_version\": 0,\r\n  \"witness_program\": \"8ae16f31908a38446b1dc19a7c67f908240e0730\",\r\n  \"pubkey\": \"03164fe243eda4c563657cc10b0c6f420fc92dde092f67b5e03f7d7ddfe20c9a6f\",\r\n  \"ischange\": false,\r\n  \"timestamp\": 1588269529,\r\n  \"hdkeypath\": \"m/0'/0'/0'\",\r\n  \"hdseedid\": \"0ba40a67510bf4857fd667d106e3f67c99257524\",\r\n  \"hdmasterfingerprint\": \"39028b98\",\r\n  \"labels\": [\r\n    \"brakmic-signet-address\"\r\n  ]\r\n}\r\n```\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet gettransaction 2588fc33f81a53994648773591d4a6e127535c74b6340dee19e5608d9547a9ce\r\n{\r\n  \"amount\": 10.00000000,\r\n  \"confirmations\": 0,\r\n  \"trusted\": false,\r\n  \"txid\": \"2588fc33f81a53994648773591d4a6e127535c74b6340dee19e5608d9547a9ce\",\r\n  \"walletconflicts\": [\r\n  ],\r\n  \"time\": 1588269697,\r\n  \"timereceived\": 1588269697,\r\n  \"bip125-replaceable\": \"no\",\r\n  \"details\": [\r\n    {\r\n      \"address\": \"sb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t\",\r\n      \"category\": \"receive\",\r\n      \"amount\": 10.00000000,\r\n      \"label\": \"brakmic-signet-address\",\r\n      \"vout\": 0\r\n    }\r\n  ],\r\n  \"hex\": \"0200000000010159fedd1084d29c3c4615254d1b3b5786c4f01c1a497e39762f40be3ec05b7b8d0000000000feffffff0200ca9a3b000000001600148ae16f31908a38446b1dc19a7c67f908240e073076c5f50500000000160014b342968beebfe1b0d17fe385e167567ad07811e902473044022053cc1d2a66739fb4b2ad6f284dff56cae186d7c9d464f4a1448ffcda4df95828022030f49b1c7d32544ce247d0a828254aa81b6ed315a00f37d225cee4585eeeb1f5012103c7f54159ca13bb20f515813df57de41cedae3c71dafc4b4150ab5b06ed72a527b8200000\"\r\n}\r\n```\r\n\r\n* My wallet balances (not confirmed)\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getbalances                   \r\n{\r\n  \"mine\": {\r\n    \"trusted\": 0.00000000,\r\n    \"untrusted_pending\": 10.00000000,\r\n    \"immature\": 0.00000000\r\n  }\r\n}\r\n```\r\n\r\n* Same balances after a few minutes\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getbalances\r\n{\r\n  \"mine\": {\r\n    \"trusted\": 10.00000000,\r\n    \"untrusted_pending\": 0.00000000,\r\n    \"immature\": 0.00000000\r\n  }\r\n}\r\n```",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622016262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3291212937,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5MTIxMjkzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3291212937",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T20:25:42Z"
    },
    {
      "event": "unlabeled",
      "id": 3291567712,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzI5MTU2NzcxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3291567712",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T22:21:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 622303723,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjMwMzcyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622303723",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:43:19Z",
      "updated_at": "2020-05-01T08:43:19Z",
      "author_association": "MEMBER",
      "body": "@fjahr \r\n\r\nThanks for the re-review; rebased!\r\n\r\n> One thing I noticed is that the progress during sync currently doesn't work (shows 1.0 from the start) because there is no chainTxData for Signet, I guess that is something that gets added by maintainers? EDIT: Yes it is. https://github.com/bitcoin/bitcoin/blob/master/doc/release-process.md#before-branch-off\r\n\r\nYeah, I think there's discussion to actually only display this for specific networks (mainnet, and testnet I guess). Since you can spin up custom signets, it seems not worthwhile to add checkpoints and such, but it's up to the contributors whether they do or not.\r\n\r\n@brakmic Thanks a lot for the detailed review. Would love a re-ACK now that it's been rebased :)",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622303723",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3292608054,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5MjYwODA1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3292608054",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:43:19Z"
    },
    {
      "event": "subscribed",
      "id": 3292608055,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTI2MDgwNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3292608055",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:43:20Z"
    },
    {
      "event": "mentioned",
      "id": 3292608061,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5MjYwODA2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3292608061",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:43:20Z"
    },
    {
      "event": "subscribed",
      "id": 3292608062,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTI2MDgwNjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3292608062",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:43:20Z"
    },
    {
      "event": "commented",
      "id": 622307198,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjMwNzE5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622307198",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:54:05Z",
      "updated_at": "2020-05-01T08:54:05Z",
      "author_association": "CONTRIBUTOR",
      "body": " > @brakmic Thanks a lot for the detailed review. Would love a re-ACK now that it's been rebased :)\r\n\r\nYou're welcome!\r\n\r\nI've recompiled your latest code as soon as it was available...on my **Raspberry Pi4** :) \r\n\r\n```shell\r\nuname -a\r\nLinux lnd 4.19.105-v8+ #1296 SMP PREEMPT Thu Feb 20 16:34:11 GMT 2020 aarch64 GNU/Linux\r\n```\r\nJust wanted to know how it works there. And I am keeping it online.\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet uptime\r\n39362\r\n```\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getblockchaininfo\r\n{\r\n  \"chain\": \"signet\",\r\n  \"blocks\": 8464,\r\n  \"headers\": 8464,\r\n  \"bestblockhash\": \"000002620188a0abe05b324d32ec943b71a593a6e2a577df6490af59079801c9\",\r\n  \"difficulty\": 0.0008142809685956302,\r\n  \"mediantime\": 1588319843,\r\n  \"verificationprogress\": 7.753189433667663e-09,\r\n  \"initialblockdownload\": false,\r\n  \"chainwork\": \"0000000000000000000000000000000000000000000000000000000564eb9c63\",\r\n  \"size_on_disk\": 3244862,\r\n  \"pruned\": false,\r\n```\r\n\r\nAwesome work, @kallewoof !\r\n\r\nACK 483fbce2b87de171112a0f304095797a6b5d3d08",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622307198",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3292630538,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5MjYzMDUzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3292630538",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:54:05Z"
    },
    {
      "event": "subscribed",
      "id": 3292630539,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTI2MzA1Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3292630539",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:54:05Z"
    },
    {
      "event": "mentioned",
      "id": 3292630543,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5MjYzMDU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3292630543",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:54:05Z"
    },
    {
      "event": "subscribed",
      "id": 3292630545,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTI2MzA1NDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3292630545",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T08:54:05Z"
    },
    {
      "event": "commented",
      "id": 622383322,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjM4MzMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622383322",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T13:15:09Z",
      "updated_at": "2020-05-01T13:15:09Z",
      "author_association": "MEMBER",
      "body": "re-ACK 483fbce2b87de171112a0f304095797a6b5d3d08\r\n\r\nOnly changes since last review were rebase and movement + usage of `MINIMUM_WITNESS_COMMITMENT` constant.\r\n\r\n> Yeah, I think there's discussion to actually only display this for specific networks (mainnet, and testnet I guess). Since you can spin up custom signets, it seems not worthwhile to add checkpoints and such, but it's up to the contributors whether they do or not.\r\n\r\nMakes sense, thanks!",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622383322",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 404199872,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MTk5ODcy",
      "url": null,
      "actor": null,
      "commit_id": "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-404199872",
      "submitted_at": "2020-05-01T14:47:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3295036810,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5NTAzNjgxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3295036810",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T06:05:47Z"
    },
    {
      "event": "commented",
      "id": 622690128,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjY5MDEyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622690128",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-02T06:06:08Z",
      "updated_at": "2020-05-02T06:06:08Z",
      "author_association": "MEMBER",
      "body": "Removed `inline`; also replaced two `Returns -1 if ...` with `Returns NO_WITNESS_COMMITMENT if ...`.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622690128",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3298403540,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5ODQwMzU0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3298403540",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T06:08:10Z"
    },
    {
      "event": "commented",
      "id": 623276883,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzI3Njg4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623276883",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T06:13:04Z",
      "updated_at": "2020-05-04T06:14:35Z",
      "author_association": "MEMBER",
      "body": "After feedback, I've restored `GetWitnessCommitmentIndex` into `validation.cpp`.\r\n\r\nThis also introduces the transaction-based variant which is used by the signet code.\r\n\r\nI.e.\r\n\r\n* the \"move GWCI from validation into primitives/block\" commit is gone\r\n* in its stead is a new \"add tx based GWCI variants\" commit\r\n* the remainder of the witness commitment section code has been moved into `signet.h/cpp`, and is now included in the `add signet basic support` commit",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-623276883",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3298423102,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5ODQyMzEwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3298423102",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T06:17:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3298427353,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5ODQyNzM1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3298427353",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T06:19:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3298540732,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5ODU0MDczMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3298540732",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T07:07:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3298561499,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5ODU2MTQ5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3298561499",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T07:14:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3298590146,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5ODU5MDE0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3298590146",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T07:23:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3298593838,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5ODU5MzgzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3298593838",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T07:24:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3298601401,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI5ODYwMTQwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3298601401",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T07:27:20Z"
    },
    {
      "event": "reviewed",
      "id": 405501609,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTAxNjA5",
      "url": null,
      "actor": null,
      "commit_id": "fd10dd5f0044b7426c4b8198dbcd82f6da89ce0d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-405501609",
      "submitted_at": "2020-05-05T05:32:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 405674808,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1Njc0ODA4",
      "url": null,
      "actor": null,
      "commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-405674808",
      "submitted_at": "2020-05-05T10:44:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 405895986,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODk1OTg2",
      "url": null,
      "actor": null,
      "commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Light re-ACK 3e44470efaafa.\r\n\r\nCode review, build/tests, ran bitcoind and the GUI and focused a bit more on the `-signet_blockscript` config option:\r\n\r\n- Passed 2 values to -signet_blockscript\r\n```\r\nError: SigNetParams: -signet_blockscript cannot be multiple values.\r\n```\r\n\r\n- Passed in a bad -signet_blockscript\r\n```\r\n[0%]...ERROR: CheckBlockSolution: Errors in block (block solution invalid)\r\n2020-05-05T16:54:56Z ERROR: VerifyDB(): *** ReadBlockFromDisk failed at 9078, hash=0000045cba9402f733c6aeb5ab9dd6f68d898539b5bb0416c7260d09b80901de\r\n2020-05-05T16:54:56Z : Corrupted block database detected.\r\nPlease restart with -reindex or -reindex-chainstate to recover.\r\n: Corrupted block database detected.\r\nPlease restart with -reindex or -reindex-chainstate to recover.\r\n```\r\nA few comments follow if you re-touch.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-405895986",
      "submitted_at": "2020-05-05T17:37:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3306846264,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMwNjg0NjI2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3306846264",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-06T04:28:08Z"
    },
    {
      "event": "commented",
      "id": 624435366,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDQzNTM2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624435366",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-06T04:28:26Z",
      "updated_at": "2020-05-06T04:28:26Z",
      "author_association": "MEMBER",
      "body": "Addressed @jonatack nits.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-624435366",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3306846675,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMwNjg0NjY3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3306846675",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-06T04:28:26Z"
    },
    {
      "event": "subscribed",
      "id": 3306846676,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMDY4NDY2NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3306846676",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-06T04:28:26Z"
    },
    {
      "event": "reviewed",
      "id": 406382618,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzgyNjE4",
      "url": null,
      "actor": null,
      "commit_id": "25be6f6c2dc6817c9e6463695a02d1db4780d325",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-406382618",
      "submitted_at": "2020-05-06T08:01:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3307501308,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMwNzUwMTMwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3307501308",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-06T08:50:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3307509516,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMwNzUwOTUxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3307509516",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-06T08:53:12Z"
    },
    {
      "event": "reviewed",
      "id": 406630008,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NjMwMDA4",
      "url": null,
      "actor": null,
      "commit_id": "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested re-ACK d4e204beb795319\r\n\r\nIf you retouch or as a follow-up: more explanation about `-signet_hrp` and https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420703244, and maybe consider the change in https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420275966 e.g. `-signet_seednode=<ip>` etc.\r\n\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-406630008",
      "submitted_at": "2020-05-06T13:55:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 406716343,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NzE2MzQz",
      "url": null,
      "actor": null,
      "commit_id": "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-406716343",
      "submitted_at": "2020-05-06T15:14:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3311376729,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMxMTM3NjcyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3311376729",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T06:19:45Z"
    },
    {
      "event": "commented",
      "id": 625053105,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTA1MzEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625053105",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T06:20:04Z",
      "updated_at": "2020-05-07T06:27:47Z",
      "author_association": "MEMBER",
      "body": "~Fixed documentation for `-signet_hrp` (said `suffix`, meant `prefix`).~\r\n\r\nRemoved `-signet_hrp` (see https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420017940)",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625053105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3311394988,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMxMTM5NDk4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3311394988",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T06:27:16Z"
    },
    {
      "event": "commented",
      "id": 625204514,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTIwNDUxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625204514",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T11:44:53Z",
      "updated_at": "2020-05-07T12:52:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 647c10fe82adcd5c4721424718afc67ce51b6c83\r\n\r\nBtw., I created a simple bash script for automatic building & running of Signet binaries on my 64bit Raspberry Pi. Should be able to run on other Linux systems as well.\r\n\r\nhttps://gist.github.com/brakmic/37c7618ad6e8bb33c6a271fe682e38a3\r\n\r\nCould maybe help to get more people to install and run Bitcoin Signet. :)\r\n\r\n*The script also asks for sBTC from your faucet via cURL, but currently there is an 502 HTTP error, so I couldn't test it thoroughly*.",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625204514",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 625422076,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTQyMjA3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625422076",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T18:26:33Z",
      "updated_at": "2020-05-07T18:26:33Z",
      "author_association": "MEMBER",
      "body": "@brakmic Wow, very nice! Also, thanks for the heads up on 502 error. Investigating that.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625422076",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3314128275,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNDEyODI3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3314128275",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T18:26:33Z"
    },
    {
      "event": "subscribed",
      "id": 3314128279,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTQxMjgyNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3314128279",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T18:26:33Z"
    },
    {
      "event": "commented",
      "id": 625429274,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTQyOTI3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625429274",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T18:41:09Z",
      "updated_at": "2020-05-07T18:41:09Z",
      "author_association": "MEMBER",
      "body": "@brakmic Tried that script on a MacBook, but it doesn't like some of the arguments (see below). Still, very cool :)\r\n\r\n(And the faucet is back up.)\r\n\r\n```\r\n$ bash ./runsignet.sh\r\ntr: Illegal byte sequence\r\ntr: Illegal byte sequence\r\nCreating backup datadir /Users/me/Downloads/signet/data/signet_datadir_backup\r\nmkdir: /Users/me/Downloads/signet/data: No such file or directory\r\nmkdir: /Users/me/Downloads/signet/data/signet_datadir_backup: No such file or directory\r\nmkdir: /Users/me/Downloads/signet/data/signet_datadir_backup/signet: No such file or directory\r\nCreating default bitcoin.conf\r\n./runsignet.sh: line 44: /Users/me/Downloads/signet/data/signet_datadir_backup/bitcoin.conf: No such file or directory\r\n-----------------------------------\r\n  Getting Bitcoin Signet sources\r\n-----------------------------------\r\nCloning into '/Users/me/Downloads/signet/data/signet'...\r\nremote: Enumerating objects: 9, done.\r\nremote: Counting objects: 100% (9/9), done.\r\nremote: Compressing objects: 100% (7/7), done.\r\n^Cceiving objects:  11% (19511/167291), 21.00 MiB | 4.31 MiB/s\r\n$ ls\r\ndata          runsignet.sh  runsignet.sh~\r\n$ ls data\r\n```\r\n",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625429274",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3314181077,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNDE4MTA3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3314181077",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T18:41:09Z"
    },
    {
      "event": "subscribed",
      "id": 3314181080,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTQxODEwODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3314181080",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T18:41:09Z"
    },
    {
      "event": "commented",
      "id": 625430464,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTQzMDQ2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625430464",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T18:43:38Z",
      "updated_at": "2020-05-07T18:43:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @brakmic Tried that script on a MacBook, but it doesn't like some of the arguments (see below). Still, very cool :)\r\n> \r\n\r\nOh, I didn't test it on a Mac. But as I luckily have one, I'll investigate it and come back to you (with a hopefully updated version) :)\r\n\r\n> (And the faucet is back up.)\r\n> \r\n\r\nAwesome! Thanks! Now I can test the last few commands from the script.\r\n\r\n",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625430464",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3314190254,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNDE5MDI1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3314190254",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T18:43:38Z"
    },
    {
      "event": "subscribed",
      "id": 3314190256,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTQxOTAyNTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3314190256",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T18:43:38Z"
    },
    {
      "event": "commented",
      "id": 625533405,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTUzMzQwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625533405",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T22:42:21Z",
      "updated_at": "2020-05-07T22:42:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @brakmic Tried that script on a MacBook, but it doesn't like some of the arguments (see below). Still, very cool :)\r\n> \r\n> ```\r\n> $ bash ./runsignet.sh\r\n> tr: Illegal byte sequence\r\n> tr: Illegal byte sequence\r\n\r\nHave fixed it. The problem was in random password/username generation sequence.\r\n\r\n**tr** on macOS doesn't like [certain byte sequences](https://unix.stackexchange.com/a/45406) because they aren't valid UTF-8.\r\n\r\nThe script now simply takes the current dir as its root. No extra changes needed.\r\n\r\nGist: https://gist.github.com/brakmic/37c7618ad6e8bb33c6a271fe682e38a3\r\n\r\nHowever, I wasn't able to beg for coins from your server. Will check it later. But that's not that important. ;)\r\n\r\n\r\n",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625533405",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3314915370,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNDkxNTM3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3314915370",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T22:42:21Z"
    },
    {
      "event": "subscribed",
      "id": 3314915378,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTQ5MTUzNzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3314915378",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-07T22:42:21Z"
    },
    {
      "event": "commented",
      "id": 625654711,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTY1NDcxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625654711",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T06:20:27Z",
      "updated_at": "2020-05-08T06:20:27Z",
      "author_association": "MEMBER",
      "body": "@brakmic Works better now! The rpcpassword ended up with a '#' in it, though, so this happened:\r\n```\r\nError: Error reading configuration file: parse error on line 8, using # in rpcpassword can be ambiguous and should be avoided\r\n```\r\n",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625654711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3315744785,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNTc0NDc4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315744785",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T06:20:27Z"
    },
    {
      "event": "subscribed",
      "id": 3315744790,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTU3NDQ3OTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315744790",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T06:20:27Z"
    },
    {
      "event": "commented",
      "id": 625659336,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTY1OTMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625659336",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T06:33:27Z",
      "updated_at": "2020-05-08T06:33:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @brakmic Works better now! The rpcpassword ended up with a '#' in it, though, so this happened:\r\n> \r\n> ```\r\n> Error: Error reading configuration file: parse error on line 8, using # in rpcpassword can be ambiguous and should be avoided\r\n> ```\r\n\r\nAh, yes, I was too generous with available random chars for user/pwd. Fixed now. Thanks!",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625659336",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3315774411,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNTc3NDQxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315774411",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T06:33:27Z"
    },
    {
      "event": "subscribed",
      "id": 3315774414,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTU3NzQ0MTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315774414",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T06:33:27Z"
    },
    {
      "event": "commented",
      "id": 625665271,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTY2NTI3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625665271",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T06:49:22Z",
      "updated_at": "2020-05-08T06:49:22Z",
      "author_association": "MEMBER",
      "body": "Works better this time; though it needs to wait for the node to finish starting up before it continues (am seeing a bunch of\r\n```\r\nerror code: -28\r\nerror message:\r\nLoading wallet...\r\n```\r\nnow).",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625665271",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 625683484,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTY4MzQ4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625683484",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:37:00Z",
      "updated_at": "2020-05-08T07:37:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Works better this time; though it needs to wait for the node to finish starting up before it continues (am seeing a bunch of\r\n> \r\n> ```\r\n> error code: -28\r\n> error message:\r\n> Loading wallet...\r\n> ```\r\n> \r\n> now).\r\n\r\nI think it's because the script was too fast for the IBD. Have put a simple \"sleep 10s\", just to let it download a few blocks.\r\n\r\nAlso, on macOS there is no manual BDB4 compilation anymore, only on Raspberry (no official packages in Raspbian repo)\r\n\r\nBut somehow I can't get the returned address to query for coins, which btw. now works. I can send a post to your server.  :)\r\n",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625683484",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 625689157,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTY4OTE1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625689157",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:50:15Z",
      "updated_at": "2020-05-08T07:50:15Z",
      "author_association": "MEMBER",
      "body": "@brakmic Check out https://gist.github.com/carnhofdaki/60edef577f637ef2dbf4d244e4e279c2 by @carnhofdaki -- it does some fancy stuff to hold until the server is up. (I think that script is outdated now, but not sure. See https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-547558988 for context.)",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625689157",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3315985448,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNTk4NTQ0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315985448",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:50:15Z"
    },
    {
      "event": "subscribed",
      "id": 3315985449,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTU5ODU0NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315985449",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:50:15Z"
    },
    {
      "event": "mentioned",
      "id": 3315985453,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNTk4NTQ1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315985453",
      "actor": {
        "login": "carnhofdaki",
        "id": 46941376,
        "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/46941376?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/carnhofdaki",
        "html_url": "https://github.com/carnhofdaki",
        "followers_url": "https://api.github.com/users/carnhofdaki/followers",
        "following_url": "https://api.github.com/users/carnhofdaki/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/carnhofdaki/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/carnhofdaki/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
        "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
        "repos_url": "https://api.github.com/users/carnhofdaki/repos",
        "events_url": "https://api.github.com/users/carnhofdaki/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:50:15Z"
    },
    {
      "event": "subscribed",
      "id": 3315985459,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTU5ODU0NTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315985459",
      "actor": {
        "login": "carnhofdaki",
        "id": 46941376,
        "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/46941376?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/carnhofdaki",
        "html_url": "https://github.com/carnhofdaki",
        "followers_url": "https://api.github.com/users/carnhofdaki/followers",
        "following_url": "https://api.github.com/users/carnhofdaki/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/carnhofdaki/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/carnhofdaki/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
        "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
        "repos_url": "https://api.github.com/users/carnhofdaki/repos",
        "events_url": "https://api.github.com/users/carnhofdaki/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:50:15Z"
    },
    {
      "event": "commented",
      "id": 625690363,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTY5MDM2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625690363",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:53:09Z",
      "updated_at": "2020-05-08T07:53:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @brakmic Check out https://gist.github.com/carnhofdaki/60edef577f637ef2dbf4d244e4e279c2 by @carnhofdaki -- it does some fancy stuff to hold until the server is up. (I think that script is outdated now, but not sure. See [#16411 (comment)](https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-547558988) for context.)\r\n\r\nThanks. I was wrong: the address got generated. The message \"missing address\" comes from your server, so I have somehow messed up the form data. :)",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625690363",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3315993991,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNTk5Mzk5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315993991",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:53:09Z"
    },
    {
      "event": "subscribed",
      "id": 3315993992,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTU5OTM5OTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315993992",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:53:10Z"
    },
    {
      "event": "mentioned",
      "id": 3315993996,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNTk5Mzk5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315993996",
      "actor": {
        "login": "carnhofdaki",
        "id": 46941376,
        "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/46941376?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/carnhofdaki",
        "html_url": "https://github.com/carnhofdaki",
        "followers_url": "https://api.github.com/users/carnhofdaki/followers",
        "following_url": "https://api.github.com/users/carnhofdaki/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/carnhofdaki/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/carnhofdaki/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
        "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
        "repos_url": "https://api.github.com/users/carnhofdaki/repos",
        "events_url": "https://api.github.com/users/carnhofdaki/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:53:10Z"
    },
    {
      "event": "subscribed",
      "id": 3315993997,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTU5OTM5OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3315993997",
      "actor": {
        "login": "carnhofdaki",
        "id": 46941376,
        "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/46941376?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/carnhofdaki",
        "html_url": "https://github.com/carnhofdaki",
        "followers_url": "https://api.github.com/users/carnhofdaki/followers",
        "following_url": "https://api.github.com/users/carnhofdaki/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/carnhofdaki/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/carnhofdaki/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
        "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
        "repos_url": "https://api.github.com/users/carnhofdaki/repos",
        "events_url": "https://api.github.com/users/carnhofdaki/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T07:53:10Z"
    },
    {
      "event": "commented",
      "id": 625701760,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTcwMTc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625701760",
      "actor": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T08:21:25Z",
      "updated_at": "2020-05-08T08:21:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "@kallewoof \r\n\r\nBegging for coins from your faucet works now :)\r\n\r\n![coin_faucet](https://raw.githubusercontent.com/brakmic/bazaar/master/images/random/signet_script_finish.png)",
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625701760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3316079004,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMxNjA3OTAwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3316079004",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T08:21:25Z"
    },
    {
      "event": "subscribed",
      "id": 3316079009,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMTYwNzkwMDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3316079009",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T08:21:25Z"
    },
    {
      "event": "commented",
      "id": 625868867,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTg2ODg2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625868867",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T15:24:03Z",
      "updated_at": "2020-05-08T15:24:03Z",
      "author_association": "MEMBER",
      "body": "re-ACK 647c10fe82adcd5c4721424718afc67ce51b6c83\r\n\r\nDid full review of earlier commits and checked later ones for no significant changes. Most notable changes:\r\n\r\n- rebased\r\n- reverted move of `GetWitnessCommitmentIndex`\r\n- moved `GetWitnessCommitmentSection` to signet.cpp\r\n- removed RPC `-signet_hrp`\r\n- introduced `g_signet_blockscript`\r\n- more nits addressed\r\n\r\nTests passed locally.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625868867",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 626360101,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjM2MDEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626360101",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-10T17:17:08Z",
      "updated_at": "2020-05-10T17:17:08Z",
      "author_association": "MEMBER",
      "body": "> I think it's because the script was too fast for the IBD. Have put a simple \"sleep 10s\", just to let it download a few blocks.\r\n\r\nEven simpler, add `-rpcwait` to the CLI command?",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626360101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 626361626,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjM2MTYyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626361626",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-10T17:28:58Z",
      "updated_at": "2020-05-10T17:28:58Z",
      "author_association": "MEMBER",
      "body": "Code review re-ACK 647c10f only change since previous review is removal of the `-signet_hrp` \"human-readable part\" user option, per git diff d4e204b 647c10f\r\n\r\n<details><summary><code>git diff d4e204b 647c10f</code></summary><p>\r\n\r\n```diff\r\n$ git diff d4e204b 647c10f\r\ndiff --git a/src/chainparams.cpp b/src/chainparams.cpp\r\nindex 797b22fbe9..669010c53e 100644\r\n--- a/src/chainparams.cpp\r\n+++ b/src/chainparams.cpp\r\n@@ -325,7 +325,7 @@ public:\r\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\r\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\r\n \r\n-        bech32_hrp = \"sb\" + args.GetArg(\"-signet_hrp\", \"\");\r\n+        bech32_hrp = \"sb\";\r\n \r\n         fDefaultConsistencyChecks = false;\r\n         fRequireStandard = true;\r\ndiff --git a/src/chainparamsbase.cpp b/src/chainparamsbase.cpp\r\nindex 4d5485e38a..78a87371bb 100644\r\n--- a/src/chainparamsbase.cpp\r\n+++ b/src/chainparamsbase.cpp\r\n@@ -26,7 +26,6 @@ void SetupChainParamsBaseOptions()\r\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\r\n     gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\r\n     gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\r\n-    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\r\n     gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\r\n }\r\n```\r\n</p></details>\r\n\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626361626",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 626494619,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjQ5NDYxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626494619",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-11T06:18:08Z",
      "updated_at": "2020-05-11T06:18:08Z",
      "author_association": "MEMBER",
      "body": "There are some really nice patches on top of this PR at https://github.com/ajtowns/bitcoin/commits/202005-signet-tweaks by @ajtowns -- hopefully those can be in a follow-up PR, as I think this PR is close to merge-ready (if not, I guess I can merge them in here; we'll see).",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626494619",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3321420506,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMyMTQyMDUwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3321420506",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-11T06:18:09Z"
    },
    {
      "event": "subscribed",
      "id": 3321420511,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMjE0MjA1MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3321420511",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-11T06:18:09Z"
    },
    {
      "event": "commented",
      "id": 626655676,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjY1NTY3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626655676",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-11T11:53:36Z",
      "updated_at": "2020-05-11T11:53:36Z",
      "author_association": "MEMBER",
      "body": "@kallewoof I think for consensus changes the bar is a bit higher than for wallet changes (or other changes) and we should aim to get them right the first time with as little back-and-forth on the way there.\r\n\r\nThe non-wip commits seem to get rid of quite a few chunks of code (and globals), so I wouldn't mind having them squashed (with the appropriate Co-Author tag) into the commits here before merge.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626655676",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3322614190,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzMyMjYxNDE5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3322614190",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-11T11:53:36Z"
    },
    {
      "event": "subscribed",
      "id": 3322614192,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzMjI2MTQxOTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3322614192",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-11T11:53:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3326835413,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMyNjgzNTQxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3326835413",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-12T10:30:12Z"
    },
    {
      "event": "commented",
      "id": 627261658,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzI2MTY1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627261658",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-12T10:40:12Z",
      "updated_at": "2020-05-12T10:40:12Z",
      "author_association": "MEMBER",
      "body": "Merged all except WIP commit into current branch.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-627261658",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 633084510,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzA4NDUxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633084510",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-23T16:09:48Z",
      "updated_at": "2020-05-23T16:09:48Z",
      "author_association": "MEMBER",
      "body": "re-ACK ae117d836a3371d294b03f73dff33604d1112702\r\n\r\nOnly changes since my last review were replacing the blockscript global with the signet challenge in the consensus params and getting rid of the `CheckBlockSolution` function. ",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-633084510",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 417310815,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzEwODE1",
      "url": null,
      "actor": null,
      "commit_id": "7168395ea63d33075a60369f5778eb635208beba",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-417310815",
      "submitted_at": "2020-05-23T21:50:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3369335557,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM2OTMzNTU1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3369335557",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-25T08:29:30Z"
    },
    {
      "event": "reviewed",
      "id": 418197105,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MTk3MTA1",
      "url": null,
      "actor": null,
      "commit_id": "988b8c065b7aa30c68588de35a620930b7a0ff91",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-418197105",
      "submitted_at": "2020-05-26T11:14:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3376363533,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM3NjM2MzUzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3376363533",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-27T04:45:12Z"
    },
    {
      "event": "reviewed",
      "id": 420942433,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwOTQyNDMz",
      "url": null,
      "actor": null,
      "commit_id": "72758ea816e143aeed0f7a736af7e8402c0121ef",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review ACK https://github.com/bitcoin/bitcoin/pull/18267/commits/d50b888aeb863532e37b3fb138c66bba0025d91a\r\n\r\nPleasingly simple and small PR. I think it's worth considering changing up the block witness format a bit to be forward-supporting of script updates, but is also simply a \"nice to have\" since this setup is only for test networks and doesn't involve a dynamic signer set. You could just release a new set of functionality for new type of signet for little cost later and still support \"legacy\" signet.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-420942433",
      "submitted_at": "2020-05-29T14:02:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3390313594,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM5MDMxMzU5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3390313594",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-31T05:41:44Z"
    },
    {
      "event": "mentioned",
      "id": 3390524017,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzM5MDUyNDAxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3390524017",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-31T11:28:50Z"
    },
    {
      "event": "subscribed",
      "id": 3390524018,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMzOTA1MjQwMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3390524018",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-31T11:28:50Z"
    },
    {
      "event": "comment_deleted",
      "id": 3390524810,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQzMzkwNTI0ODEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3390524810",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-31T11:29:59Z"
    },
    {
      "event": "comment_deleted",
      "id": 3390524854,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQzMzkwNTI0ODU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3390524854",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-31T11:30:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3391510995,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM5MTUxMDk5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3391510995",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-01T04:48:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3391521006,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM5MTUyMTAwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3391521006",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-01T04:55:00Z"
    },
    {
      "event": "commented",
      "id": 637071356,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzA3MTM1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637071356",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-01T19:59:06Z",
      "updated_at": "2020-06-01T19:59:06Z",
      "author_association": "MEMBER",
      "body": "re-ACK 03ac167829d555de456d684f6580c6429253c7f0\r\n\r\nChanges since my last review only addressed various review comments that came up in between. ",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-637071356",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 441652460,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjUyNDYw",
      "url": null,
      "actor": null,
      "commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-441652460",
      "submitted_at": "2020-07-02T12:58:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 441656778,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjU2Nzc4",
      "url": null,
      "actor": null,
      "commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-441656778",
      "submitted_at": "2020-07-02T13:03:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 441657194,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjU3MTk0",
      "url": null,
      "actor": null,
      "commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-441657194",
      "submitted_at": "2020-07-02T13:04:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 441669795,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjY5Nzk1",
      "url": null,
      "actor": null,
      "commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-441669795",
      "submitted_at": "2020-07-02T13:19:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 441743392,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzQzMzky",
      "url": null,
      "actor": null,
      "commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-441743392",
      "submitted_at": "2020-07-02T14:39:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 653051326,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA1MTMyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653051326",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-02T14:48:55Z",
      "updated_at": "2020-07-02T14:49:04Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nBuild OK (OSX), Tests pass locally OK functional + unit.\r\n\r\nThis is all very cool, going to run a node in a second but I have some general questions:\r\n\r\n1. Should there be additional test cases for address and key strings for signet in `src/test/data/key_io_valid.json` ?\r\n2. I'm unclear what the outcome would be if the challenge script had `CSV` or `CLTV` -- does the method from `BaseSignatureChecker` just return false? Is there any reason to expand those methods into the signet checker? Perhaps grab the `nSequence` or `nLocktime` values from the coinbase TX?\r\n3. Re: hard-coded public key and IP address for \"the\" signet. I understand the idea here is that groups of developers can launch their own signet chain with unique parameters. Still, having a default identity (pubkey, IP) seems potentially awkward. I wonder if the private key you set should be revealed? Or if the \"default\" challenge should be otherwise more accessible/permissionless? Having a single hard-coded seed might require on going maintenance.\r\n\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653051326",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 653055802,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA1NTgwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653055802",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-02T14:56:36Z",
      "updated_at": "2020-07-02T14:56:36Z",
      "author_association": "MEMBER",
      "body": ">  I wonder if the private key you set should be revealed? \r\n\r\nThis would turn into testnet with mining essentially. Private key being secret is important.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653055802",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 653059667,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA1OTY2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653059667",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-02T15:02:35Z",
      "updated_at": "2020-07-02T15:02:35Z",
      "author_association": "MEMBER",
      "body": "Running on signet now. I noticed in the log all blocks during IBD were reported as `progress=1.000000`\r\n\r\nI wonder if it makes sense to add logic in `GuessVerificationProgress()` that just compares current wall-clock time to the timestamp in the chain tip (I think this is how we used to do it before hard coding an estimated TX/s into chainparams)\r\n\r\nOr maybe there's a value equivalent to \"1 tx every ten minutes\" that can be used to fudge it:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/7027c67cac852b27c6d71489e4135fabdd624226/src/chainparams.cpp#L159-L164",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653059667",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 653060753,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA2MDc1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653060753",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-02T15:04:19Z",
      "updated_at": "2020-07-02T15:04:19Z",
      "author_association": "MEMBER",
      "body": "Might want to look how Elements(Liquid nodes) does it. Should be directly\nusable?\n\nOn Thu, Jul 2, 2020, 11:02 AM Matthew Zipkin <notifications@github.com>\nwrote:\n\n> Running on signet now. I noticed in the log all blocks during IBD were\n> reported as progress=1.000000\n>\n> I wonder if it makes sense to add logic in GuessVerificationProgress()\n> that just compares current wall-clock time to the timestamp in the chain\n> tip (I think this is how we used to do it before hard coding an estimated\n> TX/s into chainparams)\n>\n> Or maybe there's a value equivalent to \"1 tx every ten minutes\" that can\n> be used to fudge it:\n>\n>\n> https://github.com/bitcoin/bitcoin/blob/7027c67cac852b27c6d71489e4135fabdd624226/src/chainparams.cpp#L159-L164\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653059667>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABMAFU5DFVAK6YJBTNO3TSDRZSORZANCNFSM4LCDORNQ>\n> .\n>\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653060753",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 653067954,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA2Nzk1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653067954",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-02T15:16:45Z",
      "updated_at": "2020-07-02T15:16:45Z",
      "author_association": "MEMBER",
      "body": "> > I wonder if the private key you set should be revealed?\r\n> \r\n> This would turn into testnet with mining essentially. Private key being secret is important.\r\n\r\nOK - so this PR represents one single signet that everyone will use instead of testnet? If so then I understand keeping the key private, except that it could be a burden on the single \"host\".\r\n\r\nMy impression is that groups of developers will launch their own signets with custom parameters for various reasons, and this PR just defines a generic framework. I guess it just looks funny to hard code one person's key in consensus code, even for a test network. I'd expect to see that like more of an example in a test instead, with the actual production code left more generic.",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653067954",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 441815401,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODE1NDAx",
      "url": null,
      "actor": null,
      "commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-441815401",
      "submitted_at": "2020-07-02T15:45:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 653095871,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA5NTg3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653095871",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-02T16:06:47Z",
      "updated_at": "2020-07-02T16:06:47Z",
      "author_association": "MEMBER",
      "body": "Connected to signet, got coins from faucet, did a sendmany to a dozen internal wallet addresses - all good! Had to set `fallbackfee` for this network to send.\r\n\r\nAlso tried starting a signet with ` -signet_blockscript=51` (`OP_TRUE`) and still got `block solution missing` when attempting to generate. This branch doesn't have the mining code yet but I thought I could trick it by using an \"anyone can mine\" script :-)\r\n\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653095871",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 441970331,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTcwMzMx",
      "url": null,
      "actor": null,
      "commit_id": "fe5b704bdd4a6813b3fde72dd88d218fbf989e5b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-441970331",
      "submitted_at": "2020-07-08T23:11:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 657349391,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzM0OTM5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657349391",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:17:11Z",
      "updated_at": "2020-07-13T04:17:11Z",
      "author_association": "MEMBER",
      "body": "@pinheadmz \r\n\r\n> OK - so this PR represents one single signet that everyone will use instead of testnet? If so then I understand keeping the key private, except that it could be a burden on the single \"host\".\r\n> \r\n> My impression is that groups of developers will launch their own signets with custom parameters for various reasons, and this PR just defines a generic framework. I guess it just looks funny to hard code one person's key in consensus code, even for a test network. I'd expect to see that like more of an example in a test instead, with the actual production code left more generic.\r\n\r\nThat was my initial idea too, but current trend is that there is a super-signet that basically has most of the proposed features, and people choose to activate whatever they want to test out. Due to the nature of soft forks, inactive features will be silently ignored/accepted in blocks.\r\n\r\nOf course there may be spin-off signets, esp. as people want to test stuff out that hasn't gotten far enough to be added to the above yet, and there may be \"LTS signets\" for people who really only want to have something that runs forever, like mainnet.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-657349391",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3537903176,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzUzNzkwMzE3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3537903176",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:17:12Z"
    },
    {
      "event": "subscribed",
      "id": 3537903178,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1Mzc5MDMxNzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3537903178",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:17:12Z"
    },
    {
      "event": "commented",
      "id": 657350987,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzM1MDk4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657350987",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:25:22Z",
      "updated_at": "2020-07-13T23:28:12Z",
      "author_association": "MEMBER",
      "body": "@practicalswift @ajtowns @pinheadmz and others, thanks a lot for review, and sorry about delay in responding. I've pushed two to-squash commits. Feedback welcome!",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-657350987",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3537915059,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzUzNzkxNTA1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3537915059",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:25:22Z"
    },
    {
      "event": "subscribed",
      "id": 3537915062,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1Mzc5MTUwNjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3537915062",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:25:23Z"
    },
    {
      "event": "mentioned",
      "id": 3537915063,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzUzNzkxNTA2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3537915063",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:25:23Z"
    },
    {
      "event": "subscribed",
      "id": 3537915064,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1Mzc5MTUwNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3537915064",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:25:23Z"
    },
    {
      "event": "mentioned",
      "id": 3537915066,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzUzNzkxNTA2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3537915066",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:25:23Z"
    },
    {
      "event": "subscribed",
      "id": 3537915068,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1Mzc5MTUwNjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3537915068",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:25:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3537943864,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzNzk0Mzg2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3537943864",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T04:44:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3541669873,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0MTY2OTg3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3541669873",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-13T23:28:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3542902230,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0MjkwMjIzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3542902230",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T07:43:25Z"
    },
    {
      "event": "commented",
      "id": 658243537,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODI0MzUzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658243537",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T15:22:23Z",
      "updated_at": "2020-07-14T15:22:23Z",
      "author_association": "MEMBER",
      "body": "@instagibbs \r\n> Might want to look how Elements(Liquid nodes) does it. Should be directly usable?\r\n\r\nLooks like since Liquid has \"guaranteed\" block time (signet will too, right?) IBD progress is computed from the timestamp of the chain tip and current time.\r\n\r\nhttps://github.com/Blockstream/liquid/commit/5652022f4b21c8dd6bb595ede4c35e8ec62d5765#diff-24efdb00bfbe56b140fb006b562cc70bR5321-R5326",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-658243537",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3544677817,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU0NDY3NzgxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3544677817",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T15:22:23Z"
    },
    {
      "event": "subscribed",
      "id": 3544677821,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1NDQ2Nzc4MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3544677821",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T15:22:23Z"
    },
    {
      "event": "commented",
      "id": 658264426,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODI2NDQyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658264426",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T16:00:20Z",
      "updated_at": "2020-07-14T16:00:20Z",
      "author_association": "MEMBER",
      "body": "Confirmed recent rebase is minimal (just added 2 commits, not sure why other commit hashes changed or why github identified it as a force-push?)\r\n\r\nStill builds OK on OSX, unit tests pass. Synced to signet OK.\r\n\r\nJust waiting to hear more opinions on the commitment location before ACKing: https://github.com/bitcoin/bitcoin/pull/18267/commits/9fd83904dd745be7ffaf51262e344e6c3dcf07cc#r453420748\r\n\r\nFunctional tests failed:\r\n\r\n```\r\nwallet_basic.py failed, Duration: 62 s\r\nwallet_address_types.py failed, Duration: 65 s\r\n```\r\n\r\nBoth were `AssertionError: [node 4] Unable to connect to bitcoind after 60s` maybe just a CPU crunch on my own machine\r\n\r\nI can post the stack traces if you want ",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-658264426",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 658456829,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODQ1NjgyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658456829",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T23:10:33Z",
      "updated_at": "2020-07-14T23:10:33Z",
      "author_association": "MEMBER",
      "body": "@pinheadmz \r\n\r\nThanks for the re-review!\r\n\r\n> Looks like since Liquid has \"guaranteed\" block time (signet will too, right?) IBD progress is computed from the timestamp of the chain tip and current time.\r\n\r\nSignet will be using proof of work as well, so it's not guaranteed per se, but it should be very unusual to see big discrepancies in block times due to the limited difficulty (currently plan to mine 1 min and delay 9 mins, but there may be other types in the future).\r\n\r\n> Confirmed recent rebase is minimal (just added 2 commits, not sure why other commit hashes changed or why github identified it as a force-push?)\r\n\r\nThis is because I had to rebase on master to get some changes to `Span` that were added since the last rebase.\r\n\r\nThose errors you are seeing are most likely unrelated. If they persist when you run again, let me know and I'll look. :)\r\n",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-658456829",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3546247277,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU0NjI0NzI3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3546247277",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T23:10:33Z"
    },
    {
      "event": "subscribed",
      "id": 3546247280,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1NDYyNDcyODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3546247280",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T23:10:33Z"
    },
    {
      "event": "commented",
      "id": 658483596,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODQ4MzU5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658483596",
      "actor": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T00:51:07Z",
      "updated_at": "2020-07-15T00:51:07Z",
      "author_association": "MEMBER",
      "body": "For what it's worth, I ran the functional tests for wallet_basic.py and wallet_address_types.py four times against 9fd83904d and didn't get any failures.",
      "user": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-658483596",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 451272717,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjcyNzE3",
      "url": null,
      "actor": null,
      "commit_id": "e6ec7783d764b04c0122bb466494565929e74b1e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-451272717",
      "submitted_at": "2020-07-20T03:17:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3601783052,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYwMTc4MzA1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3601783052",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T03:12:01Z"
    },
    {
      "event": "commented",
      "id": 666066277,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjA2NjI3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666066277",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T03:14:51Z",
      "updated_at": "2020-07-30T03:14:51Z",
      "author_association": "MEMBER",
      "body": "This pull request has been updated to reflect the changes in https://github.com/bitcoin/bips/pull/947 -- see https://github.com/ajtowns/bitcoin/commits/202007-signet for details on what changed (note: some commits were out of scope for this PR, such as generation, and have not been cherry-picked/merged here).",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-666066277",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3602249181,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYwMjI0OTE4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3602249181",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T06:40:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3602257883,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYwMjI1Nzg4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3602257883",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T06:42:56Z"
    },
    {
      "event": "labeled",
      "id": 3604725327,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MDQ3MjUzMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3604725327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T16:26:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3606682746,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYwNjY4Mjc0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3606682746",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-31T03:23:21Z"
    },
    {
      "event": "unlabeled",
      "id": 3606886555,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzYwNjg4NjU1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3606886555",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-31T05:07:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 459609278,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjA5Mjc4",
      "url": null,
      "actor": null,
      "commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-459609278",
      "submitted_at": "2020-08-01T23:56:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 667784979,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2Nzc4NDk3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667784979",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T03:34:18Z",
      "updated_at": "2020-08-03T03:34:18Z",
      "author_association": "MEMBER",
      "body": "Addressed nits in to-squashies.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-667784979",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3641118560,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0MTExODU2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3641118560",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T02:06:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3641144942,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0MTE0NDk0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3641144942",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T02:21:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3641149364,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0MTE0OTM2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3641149364",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T02:23:33Z"
    },
    {
      "event": "commented",
      "id": 671686673,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTY4NjY3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671686673",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T02:25:56Z",
      "updated_at": "2020-08-11T02:26:12Z",
      "author_association": "MEMBER",
      "body": "* Updated to use new 1-of-2 key for the new Signet network (new 2nd key maintained by @ajtowns).\r\n* Trimmed down `consensus/validation.h` stuff, removing the transaction based `GetWitnessCommitmentIndex` variant\r\n* Squashed to-squashies (including the new stuff)",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-671686673",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3641154008,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY0MTE1NDAwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3641154008",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T02:25:57Z"
    },
    {
      "event": "subscribed",
      "id": 3641154010,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NDExNTQwMTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3641154010",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T02:25:57Z"
    },
    {
      "event": "commented",
      "id": 672551050,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjU1MTA1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672551050",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T03:32:13Z",
      "updated_at": "2020-08-12T03:32:13Z",
      "author_association": "MEMBER",
      "body": "Test network was restarted (Signet Global Test Net V) along with below services:\r\n* Faucet https://signet.bc-2.jp/\r\n* Explorer https://explorer.bc-2.jp/\r\n",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-672551050",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 672575995,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjU3NTk5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672575995",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T05:07:15Z",
      "updated_at": "2020-08-12T05:07:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "CR-Ack -- looked over, everything looks fine. Doesn't seem to interfere with any non-signet code paths.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-672575995",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 466430363,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NDMwMzYz",
      "url": null,
      "actor": null,
      "commit_id": "4b96892b06a5f45e9dc1117dda0552822bfb5ce4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 4b96892b06a5f45e9dc1117dda0552822bfb5ce4",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-466430363",
      "submitted_at": "2020-08-13T04:58:43Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3650502752,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY1MDUwMjc1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3650502752",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T05:44:53Z"
    },
    {
      "event": "reviewed",
      "id": 466463623,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NDYzNjIz",
      "url": null,
      "actor": null,
      "commit_id": "96e3d1e45157cb8f2c7ecae8366fe076cc913742",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-466463623",
      "submitted_at": "2020-08-13T05:57:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 673282533,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzI4MjUzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673282533",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T06:09:39Z",
      "updated_at": "2020-08-13T06:09:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "That's better than before. ACK 96e3d1e .\r\nI wish we can get signet soon, it will help to test taproot for example.",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673282533",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 673346135,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzM0NjEzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673346135",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T08:40:38Z",
      "updated_at": "2020-08-13T08:41:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "@kallewoof there is one thing I don't like, but feel free to ignore my remark:\r\n\r\nIf there is for example a new signet for taproot. People who wants to use it, need to get 3 command line parameters right.\r\n\r\nIt would be great if it was all in one parameter say\r\n\r\n`-signet=ab63bc...&signet.node.com` such that people creating signet can just share a single string with everthing needed instead of 3 different parameters.\r\n\r\nMaybe not worth another round of review though.",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673346135",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3651037591,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY1MTAzNzU5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3651037591",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T08:40:38Z"
    },
    {
      "event": "subscribed",
      "id": 3651037593,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NTEwMzc1OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3651037593",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T08:40:38Z"
    },
    {
      "event": "commented",
      "id": 673358532,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzM1ODUzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673358532",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T09:05:00Z",
      "updated_at": "2020-08-13T09:05:00Z",
      "author_association": "MEMBER",
      "body": "@NicolasDorier I think that makes perfect sense, but it can easily be a follow-up addition. (One that I will personally write, if nobody beats me to it!)",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673358532",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3651132149,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY1MTEzMjE0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3651132149",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T09:05:00Z"
    },
    {
      "event": "subscribed",
      "id": 3651132153,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NTExMzIxNTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3651132153",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T09:05:01Z"
    },
    {
      "event": "commented",
      "id": 673365884,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzM2NTg4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673365884",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T09:19:23Z",
      "updated_at": "2020-08-13T09:23:00Z",
      "author_association": "MEMBER",
      "body": "Built and manually retested following my steps in https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-620569419 -- the latest version still works as advertised.\r\n\r\nNow reviewing the code changes since my 4th review on May 10 at https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626361626.\r\n\r\nEdit: ugh, looks like a total re-review is needed.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673365884",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 673369040,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzM2OTA0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673369040",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T09:25:46Z",
      "updated_at": "2020-08-13T09:25:46Z",
      "author_association": "MEMBER",
      "body": "@jonatack Sorry about that. >< The changes are improvements, FWIW!",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673369040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3651210741,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY1MTIxMDc0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3651210741",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T09:25:46Z"
    },
    {
      "event": "subscribed",
      "id": 3651210744,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NTEyMTA3NDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3651210744",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T09:25:46Z"
    },
    {
      "event": "reviewed",
      "id": 467960074,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTYwMDc0",
      "url": null,
      "actor": null,
      "commit_id": "3c22f5fcd895c9ea7897c637a254a657a2581410",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 96e3d1e45157cb8f2c7ecae8366fe076cc913742\r\n\r\nTested by syncing with global signet and did full re-review of the code after studying changes in the BIP. I left a few nits, all of which I think can be ignored or left for follow-ups.\r\n\r\nAdditionally, I found the use of the `bad` variable in `Create` and passing an error from `Create` to `CheckBlockSolution` via clearing the transactions a bit hard to parse. This may be too late now since several have ACKed the current approach but I would have suggested using an externally passed `success` variable. I have drafted this out here https://github.com/fjahr/bitcoin/commit/46e049f65b31a229a84f18a7d6120c9f08725c35 and it uses fewer lines of code and is a bit more readable IMHO. I think this should not be a behavior change and I was able to sync with this code. However, absolutely feel free to ignore.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-467960074",
      "submitted_at": "2020-08-15T23:33:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 674605860,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDYwNTg2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674605860",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T01:02:42Z",
      "updated_at": "2020-08-17T01:02:42Z",
      "author_association": "MEMBER",
      "body": "@fjahr Thanks for review! Adapted your bad-replacement with some modifications. I addressed most other things, but kept the cidx stuff as is for now.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-674605860",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3659804836,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY1OTgwNDgzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3659804836",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T01:02:43Z"
    },
    {
      "event": "subscribed",
      "id": 3659804839,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NTk4MDQ4Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3659804839",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T01:02:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3660262575,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY2MDI2MjU3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3660262575",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T05:53:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3660566590,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY2MDU2NjU5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3660566590",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T07:32:16Z"
    },
    {
      "event": "reviewed",
      "id": 468212169,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MjEyMTY5",
      "url": null,
      "actor": null,
      "commit_id": "8b83160a74b62cd2d41ab011d8228a2c94c7800e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-468212169",
      "submitted_at": "2020-08-17T08:04:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 468265194,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MjY1MTk0",
      "url": null,
      "actor": null,
      "commit_id": "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Review checkpoint: while building and testing each commit, I'm seeing numerous unit test failures in `test/util_tests.cpp` at 6920af65. Feel free to ignore the nits below.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-468265194",
      "submitted_at": "2020-08-17T08:38:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 468305903,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MzA1OTAz",
      "url": null,
      "actor": null,
      "commit_id": "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks a lot for your continued work on signet! Really excited about the type of testing this will open up :)\r\n\r\nI wrote a small signet fuzzer which might be worth adding as part of this PR:\r\n\r\n```diff\r\ndiff --git a/src/Makefile.test.include b/src/Makefile.test.include\r\nindex 0068c9407..8eb417cbe 100644\r\n--- a/src/Makefile.test.include\r\n+++ b/src/Makefile.test.include\r\n@@ -134,6 +134,7 @@ FUZZ_TARGETS = \\\r\n   test/fuzz/scriptnum_ops \\\r\n   test/fuzz/service_deserialize \\\r\n   test/fuzz/signature_checker \\\r\n+  test/fuzz/signet \\\r\n   test/fuzz/snapshotmetadata_deserialize \\\r\n   test/fuzz/span \\\r\n   test/fuzz/spanparsing \\\r\n@@ -1106,6 +1107,12 @@ test_fuzz_signature_checker_LDADD = $(FUZZ_SUITE_LD_COMMON)\r\n test_fuzz_signature_checker_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\r\n test_fuzz_signature_checker_SOURCES = test/fuzz/signature_checker.cpp\r\n\r\n+test_fuzz_signet_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\r\n+test_fuzz_signet_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\r\n+test_fuzz_signet_LDADD = $(FUZZ_SUITE_LD_COMMON)\r\n+test_fuzz_signet_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\r\n+test_fuzz_signet_SOURCES = test/fuzz/signet.cpp\r\n+\r\n test_fuzz_snapshotmetadata_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSNAPSHOTMETADATA_DESERIALIZE=1\r\n test_fuzz_snapshotmetadata_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\r\n test_fuzz_snapshotmetadata_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\r\ndiff --git a/src/test/fuzz/signet.cpp b/src/test/fuzz/signet.cpp\r\nnew file mode 100644\r\nindex 000000000..5c2979abe\r\n--- /dev/null\r\n+++ b/src/test/fuzz/signet.cpp\r\n@@ -0,0 +1,35 @@\r\n+// Copyright (c) 2020 The Bitcoin Core developers\r\n+// Distributed under the MIT software license, see the accompanying\r\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n+\r\n+#include <chainparams.h>\r\n+#include <consensus/validation.h>\r\n+#include <primitives/block.h>\r\n+#include <signet.h>\r\n+#include <streams.h>\r\n+#include <test/fuzz/fuzz.h>\r\n+#include <test/fuzz/FuzzedDataProvider.h>\r\n+#include <test/fuzz/util.h>\r\n+\r\n+#include <cstdint>\r\n+#include <optional>\r\n+#include <vector>\r\n+\r\n+void initialize()\r\n+{\r\n+    InitializeFuzzingContext(CBaseChainParams::SIGNET);\r\n+}\r\n+\r\n+void test_one_input(const std::vector<uint8_t>& buffer)\r\n+{\r\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\r\n+    const std::optional<CBlock> block = ConsumeDeserializable<CBlock>(fuzzed_data_provider);\r\n+    if (!block) {\r\n+        return;\r\n+    }\r\n+    (void)CheckBlockSolution(*block, Params().GetConsensus());\r\n+    if (GetWitnessCommitmentIndex(*block) != NO_WITNESS_COMMITMENT) {\r\n+        (void)SignetTxs(*block, ConsumeScript(fuzzed_data_provider));\r\n+    }\r\n+}\r\n```",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-468305903",
      "submitted_at": "2020-08-17T09:30:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 674778009,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDc3ODAwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674778009",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T09:44:09Z",
      "updated_at": "2020-08-17T09:44:09Z",
      "author_association": "MEMBER",
      "body": "@jonatack I won't rebase/squash anything until you give me the go ahead.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-674778009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3661066174,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY2MTA2NjE3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3661066174",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T09:44:09Z"
    },
    {
      "event": "subscribed",
      "id": 3661066176,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NjEwNjYxNzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3661066176",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T09:44:09Z"
    },
    {
      "event": "commented",
      "id": 674781195,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDc4MTE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674781195",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T09:50:11Z",
      "updated_at": "2020-08-17T15:05:46Z",
      "author_association": "MEMBER",
      "body": "@kallewoof Thanks, good for now. My only substantive feedback at this point would be to make the commits hygienic by fixing up (or merging the unit test changes into the commits that require them), as the commits starting from 6920af6 fail the unit tests until the last commit. <strike>Functional tests to sanity check the conf options handling would be good as well; I'll propose a commit later today.</strike>\r\n\r\nEdit: thanks for the updates, LGTM.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-674781195",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3661089840,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY2MTA4OTg0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3661089840",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T09:50:12Z"
    },
    {
      "event": "subscribed",
      "id": 3661089842,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NjEwODk4NDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3661089842",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T09:50:12Z"
    },
    {
      "event": "subscribed",
      "id": 3661331070,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NjEzMzEwNzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3661331070",
      "actor": {
        "login": "janiovr",
        "id": 39975200,
        "node_id": "MDQ6VXNlcjM5OTc1MjAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/39975200?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janiovr",
        "html_url": "https://github.com/janiovr",
        "followers_url": "https://api.github.com/users/janiovr/followers",
        "following_url": "https://api.github.com/users/janiovr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janiovr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janiovr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janiovr/subscriptions",
        "organizations_url": "https://api.github.com/users/janiovr/orgs",
        "repos_url": "https://api.github.com/users/janiovr/repos",
        "events_url": "https://api.github.com/users/janiovr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janiovr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T10:58:50Z"
    },
    {
      "event": "reviewed",
      "id": 468668921,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NjY4OTIx",
      "url": null,
      "actor": null,
      "commit_id": "ad33fd5b5f74bb8ff56ffe901f5a1825e73ecf44",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-468668921",
      "submitted_at": "2020-08-17T17:16:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 675035794,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTAzNTc5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675035794",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T18:18:42Z",
      "updated_at": "2020-08-17T18:18:42Z",
      "author_association": "MEMBER",
      "body": "Unit tests `util_tests` still failing starting from 18e18820bb.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-675035794",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 675232466,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTIzMjQ2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675232466",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T03:47:42Z",
      "updated_at": "2020-08-18T03:47:42Z",
      "author_association": "MEMBER",
      "body": "@jonatack Sorry, forgot about that comment. Checking now.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-675232466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3664423063,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY2NDQyMzA2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3664423063",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T03:47:42Z"
    },
    {
      "event": "subscribed",
      "id": 3664423065,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NjQ0MjMwNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3664423065",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T03:47:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3664617076,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY2NDYxNzA3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3664617076",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T05:27:46Z"
    },
    {
      "event": "commented",
      "id": 675259421,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTI1OTQyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675259421",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T05:28:59Z",
      "updated_at": "2020-08-18T05:28:59Z",
      "author_association": "MEMBER",
      "body": "@jonatack Every commit should now compile and unit tests should succeed.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-675259421",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3664619868,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY2NDYxOTg2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3664619868",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T05:28:59Z"
    },
    {
      "event": "subscribed",
      "id": 3664619869,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NjQ2MTk4Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3664619869",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T05:28:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3664954198,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY2NDk1NDE5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3664954198",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T07:24:48Z"
    },
    {
      "event": "commented",
      "id": 675309799,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTMwOTc5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675309799",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T07:32:07Z",
      "updated_at": "2020-08-18T07:34:30Z",
      "author_association": "MEMBER",
      "body": "> @jonatack Every commit should now compile and unit tests should succeed.\r\n\r\nYes, verified all commits at 05115cd. Oops, just rebased again, but looks like no change per `git range-diff e6e277f9 05115cd 15a2608`.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-675309799",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3664980403,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY2NDk4MDQwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3664980403",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T07:32:07Z"
    },
    {
      "event": "subscribed",
      "id": 3664980410,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NjQ5ODA0MTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3664980410",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T07:32:07Z"
    },
    {
      "event": "commented",
      "id": 675310202,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTMxMDIwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675310202",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T07:32:51Z",
      "updated_at": "2020-08-18T07:32:51Z",
      "author_association": "MEMBER",
      "body": "Yeah, sorry, wallet_groups CI failure.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-675310202",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 469134313,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MTM0MzEz",
      "url": null,
      "actor": null,
      "commit_id": "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested ACK 15a26087a34 code review; clean debug build and green unit tests at each commit; fuzz build and ran the new signet fuzzer to 5 million execs; manually retested running signet with the CLI following my steps in https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-620569419 and verified the bitcoind signet helps and cli errors (e.g. if passing two signet_blockscript args), manually tested running signet with the GUI and ran signet actions with rpc commands in the GUI console. I think this can be merged.\r\n\r\n```\r\n$ test/fuzz/signet\r\nINFO: Seed: 1520911288\r\nINFO: Loaded 1 modules   (328861 inline 8-bit counters): 328861 [0x5567902be7d8, 0x55679030ec75), \r\nINFO: Loaded 1 PC tables (328861 PCs): 328861 [0x55679030ec78,0x556790813648), \r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: A corpus is not provided, starting from an empty corpus\r\n#2\tINITED cov: 363 ft: 364 corp: 1/1b exec/s: 0 rss: 121Mb\r\n.../...\r\n#5079429\tREDUCE cov: 1894 ft: 9844 corp: 317/166Kb lim: 4096 exec/s: 1505 rss: 367Mb L: 177/4096 MS: 2 EraseBytes-InsertRepeatedBytes-\r\n#5081700\tREDUCE cov: 1894 ft: 9844 corp: 317/166Kb lim: 4096 exec/s: 1505 rss: 367Mb L: 8/4096 MS: 1 EraseBytes-\r\n#5082051\tREDUCE cov: 1894 ft: 9844 corp: 317/166Kb lim: 4096 exec/s: 1505 rss: 367Mb L: 220/4096 MS: 1 EraseBytes-\r\n```",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-469134313",
      "submitted_at": "2020-08-18T09:05:50Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 675452690,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTQ1MjY5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675452690",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-18T12:37:42Z",
      "updated_at": "2020-08-18T12:37:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "Unit tests, functional tests passing on MacOS Catalina. Received Bitcoin from the Signet [faucet](https://signet.bc-2.jp/), verified my balance locally, sent Signet coins to another address with fee set (Fee estimation failed without fee set) ",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-675452690",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 469884494,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODg0NDk0",
      "url": null,
      "actor": null,
      "commit_id": "15a26087a3405903c562fce8c8d7682731b807c8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Build OK and passed functional and unit tests on OSX 10.14.6\r\nReviewed all changes as best I could. Signet faucet was down for me -- anyone got a coin? \r\n`sb1q4jtzm222357e5ewrf6gcfzdltm2jdk4efhnuld`\r\n\r\nAlso tried to `-generate` and got expected error:\r\n```\r\n2020-08-18T22:35:33Z ERROR: CheckBlockSolution: Errors in block (block solution parse failure)\r\n2020-08-18T22:35:33Z ERROR: ProcessNewBlock: AcceptBlock FAILED (bad-signet-blksig, signet block signature validation failure)\r\n```\r\n\r\nACK 15a26087a3405903c562fce8c8d7682731b807c8\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK 15a26087a3405903c562fce8c8d7682731b807c8\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAl88XHkACgkQ5+KYS2KJ\r\nyTrgaw/+Pb5Fpa7D8unEoaQ5koxvzhY9PMIvwbe+SA3arAsDVSf/8duHM1o7+ZVD\r\nmZgB02tm4JUGWD58MGnCsrKRkXa8MHikilPzAfFUb6IKeFCfJoK9/FUN0zq/w0ve\r\nphH26Zvw2KzPfkrZcyDXKOwkvOYXN/ro2a0IhjATMXQRJ26fltCVBiDcahxC4I8g\r\nbsDwsCfDx4dDCR6HT/dvrrph+EVZ+nPXYlqdhhXGdYiQvifgvAUr9fTg3dUUL2W5\r\npfZv167yGz3G+5Bgy1kJjTNWLsOKnie881pJIas/Gl//SMm8VBcrYLRxoGICNj6f\r\nKln9rufGyeNJI4RYsRFohmRmIlso9f/LHMTTb3A7qn1l9+gBUaBjOlshNs24kQLt\r\n6NsOxJsfnkyeeonDcvGHBm2LF/pzIPBRbzN3w5c31p6deYoVtCve/kW66zOs4xa+\r\n/u4Ig6MOUCTqv13UP/Oiu85Rhim9hxaI+32LABm6C7MXcIeIoRr1uGHsePr7tnKg\r\nC3MzyGzKYqsYXKkDGCu7M7P7Ab40wkBTyQLBSnANtPnu/EK7F2qqWs1sR4VDCiq1\r\nNHq2m57LtgYc+iro6WLQS2QQm2SSyXwlXcvWuDuMGDDA+k9/MrqdnQvO7FfHwLoC\r\nveCwBsy04NPxt8X4C+SY7GSnqDDWKT9efVUh43IkBwaUwGxTrio=\r\n=7d3n\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-469884494",
      "submitted_at": "2020-08-18T22:56:24Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 675786581,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTc4NjU4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675786581",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T00:39:16Z",
      "updated_at": "2020-08-19T00:39:29Z",
      "author_association": "MEMBER",
      "body": "@pinheadmz Sent. (DM me on Twitter with your IP number (or write last half of it or something here, if you don't mind) and I'll look.)",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-675786581",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3668605131,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY2ODYwNTEzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3668605131",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T00:39:16Z"
    },
    {
      "event": "subscribed",
      "id": 3668605135,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2Njg2MDUxMzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3668605135",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T00:39:16Z"
    },
    {
      "event": "commented",
      "id": 676381900,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjM4MTkwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676381900",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T13:44:21Z",
      "updated_at": "2020-08-19T13:44:21Z",
      "author_association": "MEMBER",
      "body": "Got some coins from @kallewoof and sent transactions to all 3 address types available from `getnewaddress` using `sendmany`.I repeated the send until I got too-long-mempool chain errors. Wallet balances all looked good so all the address types worked.\r\n\r\nThen something kinda interesting:\r\n\r\n```\r\n2020-08-19T12:58:27Z ERROR: ConnectBlock(): coinbase pays too much (actual=5000113810 vs limit=5000081890)\r\n2020-08-19T12:58:27Z InvalidChainFound: invalid block=00000899df7024bf4d015a59a89333a3e167e4c9c3667c42a72843a52f3cf751  height=1296  log2_work=28.919402  date=2020-08-19T12:58:25Z\r\n2020-08-19T12:58:27Z InvalidChainFound:  current best=000021da20b30538459493b10ad54460114d05e4187751c73f26b24889e28201  height=1295  log2_work=28.918289  date=2020-08-19T12:48:21Z\r\n2020-08-19T12:58:27Z ERROR: ConnectTip: ConnectBlock 00000899df7024bf4d015a59a89333a3e167e4c9c3667c42a72843a52f3cf751 failed, bad-cb-amount\r\n2020-08-19T12:58:27Z InvalidChainFound: invalid block=00000899df7024bf4d015a59a89333a3e167e4c9c3667c42a72843a52f3cf751  height=1296  log2_work=28.919402  date=2020-08-19T12:58:25Z\r\n2020-08-19T12:58:27Z InvalidChainFound:  current best=000021da20b30538459493b10ad54460114d05e4187751c73f26b24889e28201  height=1295  log2_work=28.918289  date=2020-08-19T12:48:21Z\r\nnoticed t2020-08-19T13:24:18Z Potential stale tip detected, will try using extra outbound peer (last tip update: 2153 seconds ago)\r\n2020-08-19T13:34:48Z Potential stale tip detected, will try using extra outbound peer (last tip update: 2783 seconds ago)\r\n```\r\n\r\n\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-676381900",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3670850009,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY3MDg1MDAwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3670850009",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T13:44:21Z"
    },
    {
      "event": "subscribed",
      "id": 3670850013,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NzA4NTAwMTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3670850013",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T13:44:21Z"
    },
    {
      "event": "commented",
      "id": 676387834,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjM4NzgzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676387834",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T13:48:14Z",
      "updated_at": "2020-08-19T13:48:14Z",
      "author_association": "MEMBER",
      "body": "@pinheadmz Yep! The block generation script had a cap at 20 txs, but getblocktemplate happily included more, resulting in a block with more subsidy than were accounted for in fees. Good catch, and this has been fixed!",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-676387834",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3670867579,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY3MDg2NzU3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3670867579",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T13:48:15Z"
    },
    {
      "event": "subscribed",
      "id": 3670867583,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NzA4Njc1ODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3670867583",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T13:48:15Z"
    },
    {
      "event": "commented",
      "id": 678293654,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODI5MzY1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678293654",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T13:34:56Z",
      "updated_at": "2020-08-21T13:34:56Z",
      "author_association": "MEMBER",
      "body": "tested ACK 15a26087a3405903c562fce8c8d7682731b807c8\r\n\r\nReviewed changes since my last review per `git range-diff a4a279b4f368661ea7d2507dd963469f432f916c..96e3d1e45157cb8f2c7ecae8366fe076cc913742 e6e277f9ed4da7aff9b7b39a7838bada0c3e572a..15a26087a3405903c562fce8c8d7682731b807c8`. Changes address feedback and include the new fuzzer.\r\n\r\nResynced global signet, got some coins from the faucet, and made some test transactions.\r\n",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-678293654",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 472644904,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjQ0OTA0",
      "url": null,
      "actor": null,
      "commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Found the BIP's explanation of the commitment section incomprehensible. Discussing offline, I think everything looks fine otherwise, assuming my reading of the commitment code was what was intended :)",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-472644904",
      "submitted_at": "2020-08-21T17:44:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 472927139,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTI3MTM5",
      "url": null,
      "actor": null,
      "commit_id": "6aae461a4e565b3639bc84a512d72c26f26d225c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, feel free to ignore the other style-related feedback\r\n\r\n1cc60a05426b02f86f63a2d3f3744ae484e1ac71",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-472927139",
      "submitted_at": "2020-08-22T16:32:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 472942257,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTQyMjU3",
      "url": null,
      "actor": null,
      "commit_id": "15a26087a3405903c562fce8c8d7682731b807c8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-472942257",
      "submitted_at": "2020-08-22T18:06:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 472943994,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTQzOTk0",
      "url": null,
      "actor": null,
      "commit_id": "15a26087a3405903c562fce8c8d7682731b807c8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-472943994",
      "submitted_at": "2020-08-22T18:37:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 473149586,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMTQ5NTg2",
      "url": null,
      "actor": null,
      "commit_id": "62a618f92544d2ed600876c2391f0593bed5610a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-473149586",
      "submitted_at": "2020-08-24T07:36:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 473190606,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMTkwNjA2",
      "url": null,
      "actor": null,
      "commit_id": "a1646829ab70682245c240fdc3a38f588545ff81",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for the fixups. Will re-review after a squash.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-473190606",
      "submitted_at": "2020-08-24T07:42:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 473196007,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMTk2MDA3",
      "url": null,
      "actor": null,
      "commit_id": "a1646829ab70682245c240fdc3a38f588545ff81",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "one more nit (feel free to ignore)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-473196007",
      "submitted_at": "2020-08-24T07:51:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3684543727,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY4NDU0MzcyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3684543727",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T09:25:25Z"
    },
    {
      "event": "commented",
      "id": 679016011,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTAxNjAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679016011",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T09:27:05Z",
      "updated_at": "2020-08-24T09:27:05Z",
      "author_association": "MEMBER",
      "body": "Addressed @MarcoFalke comments and squashed.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-679016011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3684550058,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY4NDU1MDA1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3684550058",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T09:27:06Z"
    },
    {
      "event": "subscribed",
      "id": 3684550060,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2ODQ1NTAwNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3684550060",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T09:27:06Z"
    },
    {
      "event": "commented",
      "id": 679024361,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTAyNDM2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679024361",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T09:41:35Z",
      "updated_at": "2020-08-24T09:41:35Z",
      "author_association": "MEMBER",
      "body": "Approach ACK 2e539c8fce 🔵\r\n\r\nChanges since last review:\r\n* First commit is a bit more move-only now (--color-moved=dimmed-zebra)\r\n* Various renamed symbols\r\n* Removed two checks that appeared redundant\r\n* Replaced error() with logging to category when checking blocks from p2p. Added error() when checking blocks from local disk\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nApproach ACK 2e539c8fce 🔵\r\n\r\nChanges since last review:\r\n* First commit is a bit more move-only now (--color-moved=dimmed-zebra)\r\n* Various renamed symbols\r\n* Removed two checks that appeared redundant\r\n* Replaced error() with logging to category when checking blocks from p2p. Added error() when checking blocks from local disk\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUj4jwv/XcMQCGF2ONm0QH/wCSeZBSinuIVIPWHESkmfTl37b7tEnhGoA2reS/KO\r\nQ56LPhpKSL6rHDdYZ9UgiVpifGKj3t2tYWpTMELwO9KBFokQQxdrIad9njakBH1N\r\nk1lZVx3AcVI4+bcVN6d2ahhrDw4cMhCCiJH+Y4PI8idzifgEVvSKhwt4f2LGzzf4\r\n2M7i/iXTJQfl3XRyPeGw4+lqOVZeNHlzwYp/PbtPHvK9K087t71P9uQiDA2HKdZ+\r\nE3D0WpvkLDnRqjDbWDKAt26sYo0G5Wfh5D7mYv49iABz9c9/e/Hvz9D8lmDC25TK\r\nLGZ8s7AA/Yxg0tP9Jc5UE8RpS8t8NAFGuxJ81L6TIXgtw2F87xyKwcQZcIitN+Yp\r\n+6T6qTY3t0ZjzePRlD9OMuCFzgMUHVvX2B1g4dH2glT8wNCK2nCROTGXIINWwqNO\r\nDcVDY4qi0dQ2VpI6DFOAAJKTIQgtvsqhF1d6aVTEtnzfGw8/1QPR1VsM1kgQH2zi\r\nPXjgpqXV\r\n=OXBM\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `166d1361fb6b73e01325bfdd8de0862d00829ee56aa1eb658e7709da09c5c947  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108166d1361fb6b73e01325bfdd8de0862d00829ee56aa1eb658e7709da09c5c947f0102b12888125c13f1c84ba55861487897608fff0102b4507d508b6ee41e20dc4597fd5df6008f1045f438b25f0086460cdfd33881f360083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff01042db0ce45cb725c26ee9e8e5e2bd01f508f1045f438b26f00873c82de5ca17653a0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff0106b4b5276463457656f62ca28094a870908f1045f438b25f0082f118d80bf0794d00083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010aef572ee4b0bc99c37a28f2d4c85becc08f1045f438b26f00839204b21bf588d990083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6d)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-679024361",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 679125591,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTEyNTU5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679125591",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T13:27:22Z",
      "updated_at": "2020-08-24T13:27:22Z",
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/18267/commits/2e539c8fceeed72730528639176a88690731cfd0\r\n\r\nI have some meta-thoughts: Under what circumstances would signet be rebooted? I presume any time there is suspected key theft/loss? Should nets just have a limited lifespan? ",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-679125591",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 679137469,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTEzNzQ2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679137469",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T13:48:51Z",
      "updated_at": "2020-08-24T13:48:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Opened an [issue](https://github.com/bitcoin/bitcoin/issues/19787) for meta discussion of Signet",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-679137469",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 679201258,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTIwMTI1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679201258",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T15:35:26Z",
      "updated_at": "2020-08-24T15:35:26Z",
      "author_association": "MEMBER",
      "body": "tested ACK 2e539c8fceeed72730528639176a88690731cfd0\r\n\r\nReviewed changes since last review per `git range-diff e6e277f9ed4da7aff9b7b39a7838bada0c3e572a..15a26087a3405903c562fce8c8d7682731b807c8 e6e277f9ed4da7aff9b7b39a7838bada0c3e572a..2e539c8fceeed72730528639176a88690731cfd0`. Resynced global signet and performend test transactions.\r\n\r\nSide-note: This time the faucet txs did not end up in my mempool which is different from my test 3 days ago. I could not find out why that is yet. All other behavior was the same, I could see the txs in the block explorer right away. Did anything change in the faucet node by any chance?",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-679201258",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 679499977,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTQ5OTk3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679499977",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T03:15:59Z",
      "updated_at": "2020-08-25T03:15:59Z",
      "author_association": "MEMBER",
      "body": "@fjahr Thanks for re-review!\r\n\r\n> Side-note: This time the faucet txs did not end up in my mempool which is different from my test 3 days ago. I could not find out why that is yet. All other behavior was the same, I could see the txs in the block explorer right away. Did anything change in the faucet node by any chance?\r\n\r\nWeird. It was probably a case of bad connectivity. There are so few nodes right now that you may have not connected to the \"right\" ones. If it happens again check getconnectioncount and getpeerinfo and see if you see anything odd there?",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-679499977",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3688014520,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY4ODAxNDUyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3688014520",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T03:15:59Z"
    },
    {
      "event": "subscribed",
      "id": 3688014521,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2ODgwMTQ1MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3688014521",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T03:15:59Z"
    },
    {
      "event": "commented",
      "id": 679561065,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTU2MTA2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679561065",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T04:02:16Z",
      "updated_at": "2020-08-25T04:02:16Z",
      "author_association": "MEMBER",
      "body": "re-ACK 2e539c8fceeed727305 reviewed diff since last review per `git diff 15a2608 2e539c8`, re-reviewed the code in the changed areas, tested running and using signet via the cli.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-679561065",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 679568110,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTU2ODExMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679568110",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T04:07:40Z",
      "updated_at": "2020-08-25T04:09:12Z",
      "author_association": "MEMBER",
      "body": "> Weird. It was probably a case of bad connectivity. There are so few nodes right now that you may have not connected to the \"right\" ones. If it happens again check getconnectioncount and getpeerinfo and see if you see anything odd there?\r\n\r\nWorked for me just now.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-679568110",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 681477552,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTQ3NzU1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/681477552",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T05:03:28Z",
      "updated_at": "2020-08-27T05:03:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can you give some instructions for testing this?\r\n\r\nI'm following along with https://en.bitcoin.it/wiki/Signet, but since contrib isn't in this PR how can I test the block generation stuff?",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-681477552",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 681525469,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTUyNTQ2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/681525469",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T05:22:40Z",
      "updated_at": "2020-08-27T05:22:40Z",
      "author_association": "MEMBER",
      "body": "@JeremyRubin This is only the consensus stuff, so it doesn't have any of the mining related things. I think @ajtowns is opening a PR with the miner stuff soon, if he hasn't already.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-681525469",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3697698693,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY5NzY5ODY5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3697698693",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T05:22:40Z"
    },
    {
      "event": "subscribed",
      "id": 3697698694,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2OTc2OTg2OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3697698694",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T05:22:40Z"
    },
    {
      "event": "mentioned",
      "id": 3697698699,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY5NzY5ODY5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3697698699",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T05:22:40Z"
    },
    {
      "event": "subscribed",
      "id": 3697698701,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2OTc2OTg3MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3697698701",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T05:22:40Z"
    },
    {
      "event": "commented",
      "id": 682152237,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjE1MjIzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682152237",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T19:40:24Z",
      "updated_at": "2020-08-27T19:48:39Z",
      "author_association": "MEMBER",
      "body": "Perhaps I'm missing some discussion, but I'm not really comfortable with merging this, as it doesn't seem there are any tests included that exercise the signet code at all.\r\n\r\nIdeally I'd say there should be a functional test that builds a 2-node signet and does some basic interactions. If signing blocks is complicated, it could be something with just a trivial script even, but just something would be far better than nothing.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-682152237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 682156205,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjE1NjIwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682156205",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T19:49:23Z",
      "updated_at": "2020-08-27T19:49:23Z",
      "author_association": "MEMBER",
      "body": "transaction-style signing should make test-writing with non-OP_TRUE pretty simple I'd hope.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-682156205",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 682157821,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjE1NzgyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682157821",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T19:52:48Z",
      "updated_at": "2020-08-27T19:52:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "FWIW I think it's OK-ish if the tests are in a follow up PR on this exact commit that is opened before this is merged, because people want to bikeshed that part. No need to IMO write brand new code if you have code for launching one already, but it should be possible to test it manually (although automated testing is of course preferred).",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-682157821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 682277458,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjI3NzQ1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682277458",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T01:42:49Z",
      "updated_at": "2020-08-28T01:42:49Z",
      "author_association": "MEMBER",
      "body": "@sipa It's a bit of a chicken/egg problem. This PR tries to be minimal and focus on consensus stuff only, which means mining functionality is not present yet. In the original PR (which is referenced in the OP) there are mining tests for signet (although outdated currently).",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-682277458",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3702015283,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzcwMjAxNTI4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702015283",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T01:42:50Z"
    },
    {
      "event": "subscribed",
      "id": 3702015287,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3MDIwMTUyODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702015287",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T01:42:50Z"
    },
    {
      "event": "commented",
      "id": 682278243,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjI3ODI0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682278243",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T01:45:57Z",
      "updated_at": "2020-08-28T01:45:57Z",
      "author_association": "MEMBER",
      "body": "@kallewoof To be clear: I'm not asking for full support for mining or the ability to build your own signet or anything like that here; just that the code which is introduced in this PR has tests. For example that could just be a slow Python implementation in the test framework that can construct signet blocks for a dummy OP_TRUE challenge script or so...",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-682278243",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3702020693,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzcwMjAyMDY5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702020693",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T01:45:57Z"
    },
    {
      "event": "subscribed",
      "id": 3702020695,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3MDIwMjA2OTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702020695",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T01:45:57Z"
    },
    {
      "event": "commented",
      "id": 682279942,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjI3OTk0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682279942",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T01:52:22Z",
      "updated_at": "2020-08-28T01:52:22Z",
      "author_association": "MEMBER",
      "body": "@sipa Got you. I'll look into that now.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-682279942",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3702032606,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzcwMjAzMjYwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702032606",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T01:52:22Z"
    },
    {
      "event": "subscribed",
      "id": 3702032609,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3MDIwMzI2MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702032609",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T01:52:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702123474,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjEyMzQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702123474",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T02:42:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702125240,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjEyNTI0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702125240",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T02:44:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702130597,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjEzMDU5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702130597",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T02:47:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702135989,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjEzNTk4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702135989",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T02:50:28Z"
    },
    {
      "event": "labeled",
      "id": 3702136670,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3MDIxMzY2NzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702136670",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T02:50:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702147211,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjE0NzIxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702147211",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T02:57:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702246684,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjI0NjY4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702246684",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T03:56:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702249885,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjI0OTg4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702249885",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T03:57:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702291858,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjI5MTg1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702291858",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T04:22:27Z"
    },
    {
      "event": "commented",
      "id": 682320558,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjMyMDU1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682320558",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T04:39:16Z",
      "updated_at": "2020-08-28T04:39:55Z",
      "author_association": "MEMBER",
      "body": "The `test: basic signet tests` commit now has a bunch of tests.\r\n\r\nAlso changed:\r\n* `chainparams.cpp`:\r\n   * `gArgs` → `args`\r\n   * The `powLimit` has been modified to exactly match the compact variant (in genesis) (this is not a hard fork)\r\n* `signet.cpp`:\r\n   * An `OP_TRUE` challenge is now accepted as a valid challenge/solution (used in the first part of the new `feature_signet.py` tests)\r\n",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-682320558",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "unlabeled",
      "id": 3702346832,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzcwMjM0NjgzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702346832",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T04:55:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 477259090,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MjU5MDkw",
      "url": null,
      "actor": null,
      "commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looked at the test, but couldn't make much sense out of it. Maybe it is better to submit the test/contrib scripts in separate pull requests? This way they can be reviewed and force-pushed as often as needed without dragging the consensus code commits with it every time.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-477259090",
      "submitted_at": "2020-08-28T06:12:10Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702596862,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjU5Njg2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702596862",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T06:43:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702654859,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjY1NDg1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702654859",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T07:04:29Z"
    },
    {
      "event": "reviewed",
      "id": 477303478,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MzAzNDc4",
      "url": null,
      "actor": null,
      "commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-477303478",
      "submitted_at": "2020-08-28T07:14:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "reviewed",
      "id": 477400654,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NDAwNjU0",
      "url": null,
      "actor": null,
      "commit_id": "567c8813e8b3c3ca649dd0e485cd5aa8d9c67e1d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-477400654",
      "submitted_at": "2020-08-28T07:33:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3702765480,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMjc2NTQ4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3702765480",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T07:40:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3703196270,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwMzE5NjI3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3703196270",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T09:45:19Z"
    },
    {
      "event": "commented",
      "id": 682434128,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjQzNDEyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682434128",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-28T09:45:26Z",
      "updated_at": "2020-08-28T09:45:26Z",
      "author_association": "MEMBER",
      "body": "Renamed `-signet_blockscript` to `-signet_challenge` to match the BIP.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-682434128",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 478116913,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTE2OTEz",
      "url": null,
      "actor": null,
      "commit_id": "6206c2e8e87fcc70848e4a0fab871d5fd9ea6b16",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-478116913",
      "submitted_at": "2020-08-29T10:24:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3706506869,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwNjUwNjg2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3706506869",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-29T13:34:12Z"
    },
    {
      "event": "commented",
      "id": 683291400,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzI5MTQwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683291400",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-29T13:39:07Z",
      "updated_at": "2020-08-29T13:39:07Z",
      "author_association": "MEMBER",
      "body": "Removed the additional check that the commitment is not empty; we now allow empty commitments for `OP_TRUE` challenge networks. This has been reflected in the BIP update PR https://github.com/bitcoin/bips/pull/983 as well.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-683291400",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 478130087,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTMwMDg3",
      "url": null,
      "actor": null,
      "commit_id": "5abbd8f1366ee971085ea73b6e5f193a8f1135f8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-478130087",
      "submitted_at": "2020-08-29T14:02:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3707680225,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwNzY4MDIyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3707680225",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-30T22:34:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3707696940,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcwNzY5Njk0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3707696940",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-30T23:01:40Z"
    },
    {
      "event": "reviewed",
      "id": 482450002,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNDUwMDAy",
      "url": null,
      "actor": null,
      "commit_id": "6e5e3b3355cca37ec67f38704daa409a1271a41f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-482450002",
      "submitted_at": "2020-09-04T08:13:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3738955584,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzczODk1NTU4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3738955584",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T03:52:08Z"
    },
    {
      "event": "commented",
      "id": 688604116,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODYwNDExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688604116",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T03:57:45Z",
      "updated_at": "2020-09-08T06:16:18Z",
      "author_association": "MEMBER",
      "body": "Changes:\r\n* Skipping length for missing witness data is no longer allowed, as per the BIP changes; this means less corner cases for other software to track\r\n* Minimum POW difficulty was too low, resulting in overflow at first retargeting; to avoid undefined/unexpected stuff, a decision was made to address this, even though it results in yet another reset (hopefully the last one!)\r\n* Some clean-up to the signet creation (see https://arne-mertz.de/2016/10/tag-dispatch/ for details on the `struct invalid` stuff)\r\n\r\nEdit: the explorer and faucet have been updated and now run against the new network.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-688604116",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3739250807,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzczOTI1MDgwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3739250807",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T06:22:14Z"
    },
    {
      "event": "reviewed",
      "id": 485208775,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MjA4Nzc1",
      "url": null,
      "actor": null,
      "commit_id": "a25a5e42221dad720d4f204d7ba03a22ac3ff4cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-485208775",
      "submitted_at": "2020-09-09T20:33:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMjE0N2Q3ZGFkZWMxZmViY2Q5YzJiOGViYmJmNzhkY2U2ZDA1NTZi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2147d7dadec1febcd9c2b8ebbbf78dce6d0556b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a2147d7dadec1febcd9c2b8ebbbf78dce6d0556b",
      "tree": {
        "sha": "880bea2c07142cb1baed308558de38111079df77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/880bea2c07142cb1baed308558de38111079df77"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 880bea2c07142cb1baed308558de38111079df77\nparent 15886b08aa5f05194633eba063d7412d0e4fd036\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1588217145 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1599702460 +0900\n\nvalidation: move GetWitnessCommitmentIndex to consensus/validation\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9ZhbwACgkQV692LbM1\nMyKCDhAAnkyX6NgvhKLlWrG11B/ikctD+efJQOpewoeHb2m700ZSBnPpg5+CRp+k\nomkO41IKsUyPPNlz9zwl7ZYtZf57HzwIG/6mUyD9R4J9M8rU8VQirNRixwQVxZnL\nUoms9uw3XjqSwJ/BfPQxemX7JEGKPEPiHlT+bzawXRfjzzXJbbEDDQ+XqEYh5Wju\nvvL+snt+RZeTquuRJiTQ39WdldvPxRuwMQyvV1m7aFCVrjib2xLzEgJBsKwiBmEs\nDmP7NR0GJL6UcgDpUIV7gurzcdCmbZqsTkLJlt2GQN49B7wjvEsEdx/+UtBEs2re\ntOtXsm9alWJ8BJ5fduuyYbGxA+OjqcaWzrhX2jBl2ht14qowNKd9lgN1Y1Wis+C6\no7XKYsiP3wfuSHdOast2KfvzLSeElxRmSt51wX9jTWCg4/jVKFVbuJJWJOhFyTga\nPqvd46QLmpOPVYdCmmfHTi23Ww5uGmO2cnfARc9saOhrJYwv3DeBaqcfk0vSV/js\nGzxf9QrXvsrF4X/VbHzHf27Op/BIpIM2O7uLvo0/EKfmhiYBTp+zR4jNFN5+Pyqh\nGlXu6nceIPBxe8sXN0sqfwFy75RYwwTP55+DAo0sotRgm4IY4HMtdBZh4tJGkmry\nHTEb7GEGwPnTlPhpXVpHEGSTHr/W63GI2udXrTCy7FkqSZsp6GE=\n=mt/R\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15886b08aa5f05194633eba063d7412d0e4fd036",
          "sha": "15886b08aa5f05194633eba063d7412d0e4fd036",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/15886b08aa5f05194633eba063d7412d0e4fd036"
        }
      ],
      "message": "validation: move GetWitnessCommitmentIndex to consensus/validation",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-10T01:47:40Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-04-30T03:25:45Z"
      },
      "sha": "a2147d7dadec1febcd9c2b8ebbbf78dce6d0556b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDQ2ODJiN2NkYjU0NDk0ZTdjOThmMGJhMGNhYzhiNTFmMzc5NzUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/404682b7cdb54494e7c98f0ba0cac8b51f379750",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/404682b7cdb54494e7c98f0ba0cac8b51f379750",
      "tree": {
        "sha": "efbf6c2ab88f7392185efefb5f77006c2db2cecc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/efbf6c2ab88f7392185efefb5f77006c2db2cecc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree efbf6c2ab88f7392185efefb5f77006c2db2cecc\nparent a2147d7dadec1febcd9c2b8ebbbf78dce6d0556b\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1563352892 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1599702460 +0900\n\nadd signet basic support (signet.cpp)\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9ZhbwACgkQV692LbM1\nMyKP6A//YtBpDifIsmPyCIPbA49MYWjjf+B183ETMdWfthwUvK5B4G4Qwrpe+OjE\nYaAMoPrcA8AmSuv0tQ3mObAhIu4QV7I0x/bb+52XwatDl4Q+1O7tNwurJQ/vC/jU\nwem0DHJNym8fsJbfRGWJixzUInr3PGYi43qWpVGNANZ77hjbCdsn+mI6+TvMuv0+\n5CaG46A3Yx+I3P/1tR91ws080dr//PBVk7KLYUgIhmpcquaB+aM0WeK1/2s+c+SL\nhk5PZ9OA1sKDs1MJKmt02t10x/oRw8IOH+luecwvywg0gAKapzHFM4huKNseP8np\n6alVF29cg2965CF7An7Pk6fQYHEbUMFleyE/Hd16hX8BMrCVus1skZZCKeKIBZsh\nQQeQbkXoZhBLkgNBHMeQismtkLMuxNU2v7zJZyBTx6PFTCz/1E68XApDiorOB0AS\n2QL+FRqj45amDUk9vmX/p3B3HdxF9BEIVqwpryjgPu0591CV0uz6dkoY+QPFJnuA\nOC/O2dxL5p3Hn6OBF3pULhy2ASL+FlHthbfsUALH5iQtEaKm8NxLb+8FwwPFdTsy\nhlHCxt3KzZ7QQd68kM5qcIM8nCJEtWU+S5cuGtFwZvZtVdsRPo4a+O1PiKBHXNEv\nPKVlGnaJ2s0gRSv27KBAH8E6rogO6V5DU5Ra5LPE4SPTHrQZj4I=\n=wmUM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2147d7dadec1febcd9c2b8ebbbf78dce6d0556b",
          "sha": "a2147d7dadec1febcd9c2b8ebbbf78dce6d0556b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a2147d7dadec1febcd9c2b8ebbbf78dce6d0556b"
        }
      ],
      "message": "add signet basic support (signet.cpp)\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-10T01:47:40Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-07-17T08:41:32Z"
      },
      "sha": "404682b7cdb54494e7c98f0ba0cac8b51f379750"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3748520949,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc0ODUyMDk0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3748520949",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T01:48:00Z"
    },
    {
      "event": "commented",
      "id": 689972448,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTk3MjQ0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/689972448",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T04:28:44Z",
      "updated_at": "2020-09-10T04:28:44Z",
      "author_association": "MEMBER",
      "body": "Addressed comment by jnewbery. No changes planned at this point, please re-review so we can get this in!",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-689972448",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 485741006,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NzQxMDA2",
      "url": null,
      "actor": null,
      "commit_id": "dbeea65aec1cc8ff4c3a6ba84950794498fdaae3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested re-ACK dbeea65aec1cc8ff4c3a6ba84950794498fdaae3",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-485741006",
      "submitted_at": "2020-09-10T09:16:34Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 690112575,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDExMjU3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690112575",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T09:31:50Z",
      "updated_at": "2020-09-10T09:31:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK dbeea65aec1cc8ff4c3a6ba84950794498fdaae3\r\n\r\nStill seems rough around the edges but for Jon's (and other's) sanity probably best we get this merged and then look at follow up PRs.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-690112575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 690288603,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDI4ODYwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690288603",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T13:27:47Z",
      "updated_at": "2020-09-10T13:27:47Z",
      "author_association": "MEMBER",
      "body": "Thanks @michaelfolkson. (If by any chance you are referring to my comment [here](https://bitcoincore.reviews/18267#l-547), I take it back. It was (a) issues with peers still running the previous genesis block code, and (b) I mistakenly blew out my signet conf file while resetting the signet dir.)",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-690288603",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3751046972,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc1MTA0Njk3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3751046972",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T13:27:47Z"
    },
    {
      "event": "subscribed",
      "id": 3751046976,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NTEwNDY5NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3751046976",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T13:27:47Z"
    },
    {
      "event": "commented",
      "id": 690334738,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDMzNDczOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690334738",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T14:40:36Z",
      "updated_at": "2020-09-10T14:40:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Normally (especially for a consensus change) we would want to get a period of sustained review on a stable iteration, be confident there won't be any material future changes and I wouldn't ACK it. \r\n\r\nHowever, the consensus part is small, it has gone through a number of different iterations, I'm personally broadly happy with the decisions made in the latest iteration, it seems to work fine. There are a number of things I can foresee being changed (e.g. 1-of-2 multisig to a 1-of-3 or 1-of-4) but at what point do we put a stake in the ground and say let's clean this up with smaller future PRs?\r\n\r\nI'd be interested to hear the concerns of this approach for this specific PR. I understand why this generally shouldn't be the approach. What do we need to be ACKing? That this is the last iteration, it won't be reset again, that the consensus part is fine?\r\n\r\nPersonally I'd appreciate some guidance on what still needs doing to ensure we can merge this under the understanding that there will need to be further changes to it even if we do. The danger otherwise is that this keeps going in circles with continued changes around the edges. I would be interested to hear thoughts.\r\n\r\n",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-690334738",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 690763925,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDc2MzkyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690763925",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T22:23:48Z",
      "updated_at": "2020-09-10T22:23:48Z",
      "author_association": "MEMBER",
      "body": "re-tACK dbeea65aec1cc8ff4c3a6ba84950794498fdaae3\r\n\r\nCode reviewed changes in commits from last review per `git range-diff e6e277f9ed4da7aff9b7b39a7838bada0c3e572a..2e539c8fceeed72730528639176a88690731cfd0 15886b08aa5f05194633eba063d7412d0e4fd036..dbeea65aec1cc8ff4c3a6ba84950794498fdaae3` and did fresh review on the new last two test-only commits. Manually tested with a fresh sync and making some transactions.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-690763925",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 690856866,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDg1Njg2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690856866",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T03:48:39Z",
      "updated_at": "2020-09-11T03:48:39Z",
      "author_association": "MEMBER",
      "body": "@michaelfolkson \r\n\r\n> Normally (especially for a consensus change) we would want to get a period of sustained review on a stable iteration, be confident there won't be any material future changes and I wouldn't ACK it.\r\n\r\nWhile it is a consensus change, it is effectively a \"testnet consensus change\", with fairly straightforward logic indicating that it only applies to a signet enabled chain. It's also been split into its own commit, which is only 11 lines of code (including newlines), so it should be reasonably easy to review.\r\n\r\n> There are a number of things I can foresee being changed (e.g. 1-of-2 multisig to a 1-of-3 or 1-of-4) but at what point do we put a stake in the ground and say let's clean this up with smaller future PRs?\r\n\r\nThe default signet network is one thing, and the signet feature itself is another, I think. The current default signet network is a 1-of-2 between me and AJ. God knows what will happen with time, and I think this might surprise all of us. For now, I think it's a reasonable compromise (if one of us vanishes, the other one can still keep things afloat until we reset or whatnot), and we can decide later on whether to switch to something more sturdy/long-term-viable.\r\n\r\n> I'd be interested to hear the concerns of this approach for this specific PR. I understand why this generally shouldn't be the approach. What do we need to be ACKing? That this is the last iteration, it won't be reset again, that the consensus part is fine?\r\n\r\nI'm not sure why this shouldn't be the approach, personally. After all, signet coins are worthless, and we all base the decisions we make on that basic concept -- since they're worthless, it ultimately doesn't really matter if a single person has all the control, as long as they're making blocks regularly and not doing any shenanigans (which, again, they have no incentive to do, because the coins are worthless).\r\n\r\n> Personally I'd appreciate some guidance on what still needs doing to ensure we can merge this under the understanding that there will need to be further changes to it even if we do. The danger otherwise is that this keeps going in circles with continued changes around the edges. I would be interested to hear thoughts.\r\n\r\nThe way I see it is, signet will \"start\" once we merge the initial version (this), and realize all of the flaws with the initial approach, and then as time goes on, we fine tune it to work as we want it to. A lot of energy has already gone into making this as minimal of an impact as possible, but you can never be sure until you actually start using something actively.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-690856866",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3754177789,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc1NDE3Nzc4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3754177789",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T03:48:39Z"
    },
    {
      "event": "subscribed",
      "id": 3754177790,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NTQxNzc3OTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3754177790",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T03:48:39Z"
    },
    {
      "event": "commented",
      "id": 691533796,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTUzMzc5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691533796",
      "actor": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-12T19:17:37Z",
      "updated_at": "2020-09-12T19:17:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "tACK dbeea65aec1cc8ff4c3a6ba84950794498fdaae3 built on macOS Catalina 10.15.6 ran tests and functional tests, did not run fuzzer.\r\n\r\nI performed the following tests before RTFM (aka https://gist.github.com/kallewoof/98b6d8dbe126d2b6f47da0ddccd2aa5a):\r\n\r\nDid not configure `bitcoin.conf`, rather started bitcoind with `-signet`, so IBD worked but daemon commands not. Synced up to block 2925, which was the tip at that point. \r\n\r\n```\r\n./bitcoind -datadir=/tmp/pr18267 -signet\r\ngetconnectioncount\r\n$ ./bitcoin-cli -datadir=/tmp/pr18267 getconnectioncount \r\nerror: Could not connect to the server 127.0.0.1:8332\r\n\r\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\r\n```\r\nRestarted with `-chain=signet` parameter instead to see if that works, even if help does not mention it among accepted parameters:\r\n```\r\n$ ./bitcoin-cli -h\r\nChain selection options:\r\n\r\n  -chain=<chain>\r\n       Use the chain <chain> (default: main). Allowed values: main, test,\r\n       regtest\r\n$ ./bitcoind -datadir=/tmp/pr18267 -chain=signet\r\n2020-09-12T16:32:57Z UpdateTip: new best=0000007a3fbc38ea8934ebcc86eab0bad652aba78d8a75437f697b8cd5dd605b height=2926 version=0x20000000 log2_work=34.398140 tx=2970 date='2020-09-12T16:30:00Z' progress=1.000000 cache=0.0MiB(1txo)\r\n$ ./bitcoin-cli -datadir=/tmp/pr18267 getconnectioncount\r\nerror: Could not connect to the server 127.0.0.1:8332\r\n\r\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\r\n```\r\n\r\nTook the _bitcoin.conf route_, there seem to be an issue with `-chain=signet` but `-signet` works (and of course leaving it out works too):\r\n\r\n```\r\n$ mkdir -p  /tmp/St13runtime_error\r\necho \"signet=1\r\ndaemon=1\" > /tmp/St13runtime_error/bitcoin.conf\r\n$ ./bitcoind -datadir=/tmp/St13runtime_error -chain=signet\r\n\r\n************************\r\nEXCEPTION: St13runtime_error       \r\nInvalid combination of -regtest, -signet, -testnet and -chain. Can use at most one.       \r\nbitcoin in AppInit()       \r\n\r\nAssertion failed: (globalChainBaseParams), function BaseParams, file chainparamsbase.cpp, line 36.\r\nAbort trap: 6\r\n```\r\n\r\n```\r\n$ cat /tmp/St13runtime_error/bitcoin.conf \r\nsignet=1\r\ndaemon=1\r\n$ ./bitcoind -datadir=/tmp/St13runtime_error -signet\r\nBitcoin Core starting\r\n$ ./bitcoin-cli -datadir=/tmp/St13runtime_error getconnectioncount\r\n2\r\n```\r\n\r\nMaybe this behavior is known and expected at this point. Am I wrong to assume/expect that `-signet -daemon` should work equally well as configuring the values in _bitcoin.conf_?\r\n\r\nI couldn't get the signet faucet to work (it keeps giving me Nuh-uh) so I'll pause my review here until I can acquire some sBTC.\r\n\r\nSo far it looks really good. Outstanding work @kallewoof ! 👍 ",
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-691533796",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3759676370,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc1OTY3NjM3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3759676370",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-12T19:17:37Z"
    },
    {
      "event": "subscribed",
      "id": 3759676372,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NTk2NzYzNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3759676372",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-12T19:17:38Z"
    },
    {
      "event": "commented",
      "id": 691602634,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTYwMjYzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691602634",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T03:27:57Z",
      "updated_at": "2020-09-13T03:27:57Z",
      "author_association": "MEMBER",
      "body": "@eriknylund Thanks a lot for testing! The faucet will say \"Nuh-uh\" if you've already used it once that day, but maybe something got screwed up. I've sent you some coins, though.\r\n\r\n> Did not configure `bitcoin.conf`, rather started bitcoind with `-signet`, so IBD worked but daemon commands not. Synced up to block 2925, which was the tip at that point.\r\n\r\nThe reason is that you did not include `-datadir=/tmp/pr18267 -signet` in the calls to `bitcoin-cli`. Since you did not have a config file, you need to provide those for every command.\r\n\r\n> ```\r\n> $ mkdir -p  /tmp/St13runtime_error\r\n> echo \"signet=1\r\n> daemon=1\" > /tmp/St13runtime_error/bitcoin.conf\r\n> $ ./bitcoind -datadir=/tmp/St13runtime_error -chain=signet\r\n> \r\n> ************************\r\n> EXCEPTION: St13runtime_error       \r\n> Invalid combination of -regtest, -signet, -testnet and -chain. Can use at most one.       \r\n> bitcoin in AppInit()       \r\n> \r\n> Assertion failed: (globalChainBaseParams), function BaseParams, file chainparamsbase.cpp, line 36.\r\n> Abort trap: 6\r\n> ```\r\n\r\nAhh, yeah. This definitely needs fixing; for now, not using `-chain` should work.\r\n",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-691602634",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3760040896,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc2MDA0MDg5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760040896",
      "actor": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T03:27:57Z"
    },
    {
      "event": "subscribed",
      "id": 3760040899,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NjAwNDA4OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760040899",
      "actor": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T03:27:57Z"
    },
    {
      "event": "commented",
      "id": 691605198,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTYwNTE5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691605198",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T03:49:33Z",
      "updated_at": "2020-09-13T03:49:33Z",
      "author_association": "MEMBER",
      "body": ">  there seem to be an issue with `-chain=signet`\r\n> Invalid combination of -regtest, -signet, -testnet and -chain. Can use at most one.\r\n\r\nIf you've got `signet=1` in your conf, specifying `-chain=anything` on the commandline will error. The assertion failure in addition to the error is pretty lame, but is present in master (`bitcoind -testnet -chain=test`) too.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-691605198",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 691625342,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTYyNTM0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691625342",
      "actor": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T07:17:53Z",
      "updated_at": "2020-09-13T09:26:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @eriknylund Thanks a lot for testing! The faucet will say \"Nuh-uh\" if you've already used it once that day, but maybe something got screwed up. I've sent you some coins, though.\r\n\r\nThanks for the coins. I think it was a case of PEBCAK. I tried it again today and the faucet worked as intended:\r\n\r\n`Payment of 10.00000000 BTC sent with txid 70eb286708b2d680628647599a363495b983bce081af489f73715e2a75c93634`\r\n\r\n> The reason is that you did not include `-datadir=/tmp/pr18267 -signet` in the calls to `bitcoin-cli`. Since you did not have a config file, you need to provide those for every command.\r\n\r\nThanks for kindly pointing this out. It's obvious when I see it now. I'll repeat my steps to make sure this work. Albeit a very small thing, it gave me a deeper insight into how these configurations work behind the scenes.\r\n\r\nI can now see my balance\r\n```\r\n$ ./bitcoin-cli -datadir=/tmp/pr18267 getbalance\r\n110.0000000\r\n\r\n$ ./bitcoin-cli -datadir=/tmp/pr18267 gettransaction 50ea5a5074c282dc63877561d14c2aa8c11c4f00f8b962b21713c3f071a37a29\r\n{\r\n  \"amount\": 100.00000000,\r\n  \"confirmations\": 23,\r\n  \"blockhash\": \"000000fd523e539ee8741fab5557ca906541ccddb18c8f532e2ebd85d7ffc799\",\r\n  \"blockheight\": 2992,\r\n  \"blockindex\": 1,\r\n  \"blocktime\": 1599967800,\r\n  \"txid\": \"50ea5a5074c282dc63877561d14c2aa8c11c4f00f8b962b21713c3f071a37a29\",\r\n  \"walletconflicts\": [\r\n  ],\r\n  \"time\": 1599967826,\r\n  \"timereceived\": 1599967826,\r\n  \"bip125-replaceable\": \"no\",\r\n  \"details\": [\r\n    {\r\n      \"address\": \"tb1q542wz3eaexcum4njg7mumqwvag86hw502dkgme\",\r\n      \"category\": \"receive\",\r\n      \"amount\": 100.00000000,\r\n      \"label\": \"\",\r\n      \"vout\": 0\r\n    }\r\n  ],\r\n  \"hex\": \"02000000000103f88072817493b332cee5647a6ef06b50cd3040353a7ef2d0a1a7f79697ca84530000000000feffffffcff070331e946a95ae4d2120bce7efa63c0d1d6984646a9096b95209b63a16240000000000feffffffa2c9556ce9e69f839151b43303036ea89bbea16f76720720c6cefa1839012fe50000000000feffffff0200e40b5402000000160014a554e1473dc9b1cdd67247b7cd81ccea0fabba8fecf0052a01000000160014232d82ad2dd367e4672169d336220f29b5966f6d0247304402204655e573c4a016f3d159da2b6a35e30f1d0fb0e29baf4634bfceaf9f4809f998022074a4967177d76066d25c29bfc38e005a7d3e2bf1fdaf33274eaa9d75a9b1cdcb01210375c1648db9f764e8c55ed5185d6c0c858a1c1d34a9e3c0b1ad74f8b395bd643b0247304402205ace84abfac338bd19488acf1c7265358a8c5291671c74937195b605e706bf0f0220135c9cf40132e1961368c890302b8f255f74547de662d9d787badb16f4c0f38101210375c1648db9f764e8c55ed5185d6c0c858a1c1d34a9e3c0b1ad74f8b395bd643b02473044022079e573339bfe2ef51c38fc88fc662d511584d9a278c25583e5c0211f76ce30f402204441d6796ccd9c48ff36f5ebd13edc55a087b3144d2950f800856b2dfc5dbfb401210375c1648db9f764e8c55ed5185d6c0c858a1c1d34a9e3c0b1ad74f8b395bd643baf0b0000\"\r\n}\r\n\r\n$ ./bitcoin-cli -datadir=/tmp/pr18267 gettransaction 70eb286708b2d680628647599a363495b983bce081af489f73715e2a75c93634\r\n{\r\n  \"amount\": 10.00000000,\r\n  \"confirmations\": 1,\r\n  \"blockhash\": \"00000080285a6fd52632f17814ee6525429170b6e0a508e73c80e4402494fe50\",\r\n  \"blockheight\": 3014,\r\n  \"blockindex\": 1,\r\n  \"blocktime\": 1599981000,\r\n  \"txid\": \"70eb286708b2d680628647599a363495b983bce081af489f73715e2a75c93634\",\r\n  \"walletconflicts\": [\r\n  ],\r\n  \"time\": 1599980676,\r\n  \"timereceived\": 1599980676,\r\n  \"bip125-replaceable\": \"no\",\r\n  \"details\": [\r\n    {\r\n      \"address\": \"tb1qyxatme4ggsxjsymle0k53csel5tleqfgcu8m9t\",\r\n      \"category\": \"receive\",\r\n      \"amount\": 10.00000000,\r\n      \"label\": \"\",\r\n      \"vout\": 0\r\n    }\r\n  ],\r\n  \"hex\": \"020000000001010fbd483e1ec45cd2925f71209db315ab60106f3f9d509b9e2520d6da70dc905c0000000000feffffff0200ca9a3b0000000016001421babde6a8440d28137fcbed48e219fd17fc8128eafde191e600000016001428e5662a809bb4e7d5e1b192d09cb12fa42bfe2a024730440220782359408c80c4600c1c5ad451b2a5e22090b647cfcfe77bf3b1f0c558610ef402202a884638cc7b26e84f2624606314d02e7c08ea0e21dd2de0a9941798807ee852012103e53ae50c6ecfdc66a94e02208743923ebf9ac20f62106924d78172a0a45528c2c50b0000\"\r\n}\r\n```\r\n\r\nI then proceeded to send some coins over to a second wallet and that worked well. I first received an error about the fee estimation, but that is perhaps to be expected.\r\n\r\n```\r\n$ ./bitcoin-cli -datadir=/tmp/pr18267 sendtoaddress \"tb1qccu5k3l2fpc5fphmd75a3llfqlsw9msrh956nh\" 2.89985002 \"signet send test for #18267\"\r\nerror code: -6\r\nerror message:\r\nFee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.\r\n\r\n$ ./bitcoin-cli -datadir=/tmp/pr18267 sendtoaddress \"tb1qccu5k3l2fpc5fphmd75a3llfqlsw9msrh956nh\" 2.89985002 \"signet send test for #18267\" \"\" false true 1 sat/B\r\n821672c87a723ee7053a8d6ee513bb6632a5d1ba7434ac2866cb2954abee3006\r\n\r\n$ ./bitcoin-cli -datadir=/tmp/pr18267 gettransaction 821672c87a723ee7053a8d6ee513bb6632a5d1ba7434ac2866cb2954abee3006\r\n{\r\n  \"amount\": -2.89985002,\r\n  \"fee\": -0.00000141,\r\n  \"confirmations\": 1,\r\n  \"blockhash\": \"00000033631f0508ab6211af734aabca6ee746dc67d63553ec6d8682af55663f\",\r\n  \"blockheight\": 3018,\r\n  \"blockindex\": 1,\r\n  \"blocktime\": 1599983400,\r\n  \"txid\": \"821672c87a723ee7053a8d6ee513bb6632a5d1ba7434ac2866cb2954abee3006\",\r\n  \"walletconflicts\": [\r\n  ],\r\n  \"time\": 1599983335,\r\n  \"timereceived\": 1599983335,\r\n  \"bip125-replaceable\": \"no\",\r\n  \"comment\": \"signet send test for #18267\",\r\n  \"details\": [\r\n    {\r\n      \"address\": \"tb1qccu5k3l2fpc5fphmd75a3llfqlsw9msrh956nh\",\r\n      \"category\": \"send\",\r\n      \"amount\": -2.89985002,\r\n      \"vout\": 0,\r\n      \"fee\": -0.00000141,\r\n      \"abandoned\": false\r\n    }\r\n  ],\r\n  \"hex\": \"02000000000101297aa371f0c31317b262b9f8004f1cc1a82a4cd161758763dc82c274505aea500000000000fdffffff02ead1481100000000160014c6394b47ea48714486fb6fa9d8ffe907e0e2ee038911c342020000001600143e9c78a55f49f39e6ac3d732a539872a4ff1a7950247304402202afc9a1c181c09f4d157e05bce12761b0594ea05e682e745efcc5c6d36203d8302205e9d268d01d167693abf44f5cf84531506c65feda07693f39657a06de39348db012103e05ec20667b5200e1431fe548e34cb91b81b6a25850ce6a5721df4ff5ed6fe26c90b0000\"\r\n}\r\n\r\n\r\n```",
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-691625342",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3760175238,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc2MDE3NTIzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760175238",
      "actor": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T07:17:53Z"
    },
    {
      "event": "subscribed",
      "id": 3760175239,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NjAxNzUyMzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760175239",
      "actor": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T07:17:53Z"
    },
    {
      "event": "commented",
      "id": 691633947,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTYzMzk0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691633947",
      "actor": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T08:20:13Z",
      "updated_at": "2020-09-13T08:20:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "I redid my tests per instructions from @kallewoof and @ajtowns and can confirm it works as I initially imagined to run it - with bitcoind in the foreground and then running bitcoin-cli with the `-signet` argument in a separate window thus skipping the _bitcoin.conf_ step:\r\n```\r\nmdkir -p /tmp/cli-args-only\r\n./bitcoind -datadir=/tmp/cli-args-only -signet\r\n2020-09-13T08:10:16Z UpdateTip: new best=0000002c6d162d115a91ed5759e22344f51d479dd1ef1f3a3eada7dee1473edc height=3020 version=0x20000000 log2_work=34.480471 tx=3067 date='2020-09-13T08:10:00Z' progress=1.000000 cache=0.0MiB(1txo)\r\n```\r\n\r\n```\r\n$ ./bitcoin-cli -datadir=/tmp/cli-args-only -signet getconnectioncount\r\n1\r\n$ ./bitcoin-cli -datadir=/tmp/cli-args-only -signet getblockcount\r\n3020\r\n```\r\n",
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-691633947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3760217775,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc2MDIxNzc3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760217775",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T08:20:13Z"
    },
    {
      "event": "subscribed",
      "id": 3760217777,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NjAyMTc3Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760217777",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T08:20:13Z"
    },
    {
      "event": "mentioned",
      "id": 3760217778,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc2MDIxNzc3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760217778",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T08:20:13Z"
    },
    {
      "event": "subscribed",
      "id": 3760217779,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NjAyMTc3Nzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760217779",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T08:20:13Z"
    },
    {
      "event": "commented",
      "id": 691679053,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTY3OTA1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691679053",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T14:33:02Z",
      "updated_at": "2020-09-13T14:33:02Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke You have a change-request state right now. Mind re-reviewing?",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-691679053",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "mentioned",
      "id": 3760499100,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc2MDQ5OTEwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760499100",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T14:33:02Z"
    },
    {
      "event": "subscribed",
      "id": 3760499101,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NjA0OTkxMDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3760499101",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-13T14:33:02Z"
    },
    {
      "event": "reviewed",
      "id": 487333816,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzMzODE2",
      "url": null,
      "actor": null,
      "commit_id": "fba375689b4c2a84aeff5b91c16c02b6f8a7c924",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-487333816",
      "submitted_at": "2020-09-13T20:18:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "review_requested",
      "id": 3772700760,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50Mzc3MjcwMDc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3772700760",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T11:24:43Z",
      "requested_reviewer": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODk5MGYxMjE0MDVhZjhjZDUzOWI5MDRlZjA4MjQzOTI2MWU2Yzkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8990f121405af8cd539b904ef082439261e6c93",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e8990f121405af8cd539b904ef082439261e6c93",
      "tree": {
        "sha": "894930d7f74f876800c1073af5930d1c0e68b71c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/894930d7f74f876800c1073af5930d1c0e68b71c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 894930d7f74f876800c1073af5930d1c0e68b71c\nparent 404682b7cdb54494e7c98f0ba0cac8b51f379750\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583391510 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1600389477 +0900\n\nadd signet chain and accompanying parameters\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9kAWUACgkQV692LbM1\nMyKdrw/9EmvunHn4ihSrLCECeSc0u38fvKmZ6DVECCiEcw06vkllmBw+asZig40K\nslXWAcVMZfwRxZCwGC37JBoSehM9bAwr9FFd1+auN52Q5yQJuenSLfwSoSxgE3zH\n0a7ExyqU5r4Bc1y1PnY+hoSiPu6NE1qE+wYx1mtguiNPQP5Y9KmVGhkErf1Yk1E/\nfiIpveKtrXHGaDhBh8NYaBJ5kAp3EQBY2WwEeTthcTkJE4dN/2vII73uZOKtIpKn\nhnlYCAIOcoYgvzV1v5Vu+CG2XReQn3/7OwrwdWdxlHn7LIL9aTcfOB8VZVwDzlWQ\nkY7wZ3lBh24pXFqPppnP3xCvJrGyL3Xiq2S399riLlP0WSTuJ+GywyQdv5Sb1Ldh\nkE9ruG8AynI75130vibR6vBDklcTzy2i6RhFywnV9+Nzb0rui4kAeHID32QfxbbZ\nnU7UMCKVB0p0eE80K+B6k6ByU0ngEm0peiHrULdI8aSwXEsnWd7gFXErS5xJuqsp\nizLFJGRv6bpmSy3ZO5yCnHw0UTQwQbhYOxzLn6ZFVFBtR+JRsmO1uuT0/19mjsHO\n1afH9l3G/60kWbbpTLGDV8+PcTUgM2TR9q7fY6NS/lTZkItgwl36Mj9dzCjygKl1\nByzq+x/vZH5s5vMu5ugS+jsVwhnZJQR0RXJmkdkrgAJTdKHxPHc=\n=4xhj\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/404682b7cdb54494e7c98f0ba0cac8b51f379750",
          "sha": "404682b7cdb54494e7c98f0ba0cac8b51f379750",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/404682b7cdb54494e7c98f0ba0cac8b51f379750"
        }
      ],
      "message": "add signet chain and accompanying parameters\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-18T00:37:57Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-05T06:58:30Z"
      },
      "sha": "e8990f121405af8cd539b904ef082439261e6c93"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGRlNDdhMWM5MDMzZmFjMzM1NTU5MGYxZmUyMTU4YTk1MDExYmIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8de47a1c9033fac3355590f1fe2158a95011bb3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a8de47a1c9033fac3355590f1fe2158a95011bb3",
      "tree": {
        "sha": "f75c49126205ad5223bcef9998fa41d4457b372c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f75c49126205ad5223bcef9998fa41d4457b372c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f75c49126205ad5223bcef9998fa41d4457b372c\nparent e8990f121405af8cd539b904ef082439261e6c93\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1563356434 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1600389477 +0900\n\nconsensus: add signet validation\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9kAWUACgkQV692LbM1\nMyLEvxAAlZyUSz1Jyg4Gcihedwu3lAYuwR7Tk5yuhRVnolYnFijkWzaac8AxF4A8\nWF05TsUN+zTIwzpDZRwR7SbzhSEqXuc3+Nn+KRuEnElLvFrZrVJlM0qwHKuhxdfZ\nFThG1uAK0QDlLnh5M10e7Jaa+gktvncH3Wgs+VakwAfMpleqd31LQJv4q/NDRxXL\nyxQAA7HJunXo1B1SFfw1E5zY8vjNTOO08zFMxsbqqgCPpZniJi6U4lTCISCi/xTj\nUkAnJ2f7Q3T8fKq+Ml1z5+pbh1ToE01wl5mGf1KCvirg4h1uOvn/pBGu7S+2XyWE\nQQ4NF22POOacCqTj4bS7clxCCPEF+8jj1/OFLQcwuSts1SG8NYyjVUq8VNHuoeGT\nQJXKUm7E6rFwFAkWS6QcUcwmjyZ5HL2A2glIDQpQoyZd8kTEWKOib5H1vVGFC5Qs\nVXj/lvet/rBcKyYU9Hx6SM+KkymSuDgE3mb8OW0r1EcJL2N9oZLbrTUMyAzHqjtK\nobTNoKVVGQS+wL3N6p5Ng8PfwfaybzACf/VYtmcb4pYZHCG1t4Q/2awonaXcgMGq\nvTvLQAHg1FCrJZR/U3TeuIhNdDbvJIDQct4L926z26AerDOyChevqZ7P05+JoYWZ\n8LQ2ZHOmieenwxF9IZ8CTQyFOx3uf7YU7XOGrKFp/i07C1gf0tk=\n=dH1I\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8990f121405af8cd539b904ef082439261e6c93",
          "sha": "e8990f121405af8cd539b904ef082439261e6c93",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e8990f121405af8cd539b904ef082439261e6c93"
        }
      ],
      "message": "consensus: add signet validation",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-18T00:37:57Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-07-17T09:40:34Z"
      },
      "sha": "a8de47a1c9033fac3355590f1fe2158a95011bb3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzg5OGJjYTRlMWNjYmM2ZWRhZmQzYjcyZWFmODBkZjM4ZTNhZjMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7898bca4e1ccbc6edafd3b72eaf80df38e3af32",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c7898bca4e1ccbc6edafd3b72eaf80df38e3af32",
      "tree": {
        "sha": "40d3d4b697d72febb69cc975a53d2811a4d9885e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40d3d4b697d72febb69cc975a53d2811a4d9885e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 40d3d4b697d72febb69cc975a53d2811a4d9885e\nparent a8de47a1c9033fac3355590f1fe2158a95011bb3\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1563353713 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1600389477 +0900\n\nqt: update QT to support signet network\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9kAWUACgkQV692LbM1\nMyKF7Q//VwKHfM9sCHu3P4UCRHWY0EdTrrUT7cwg520eQlFZA558SWO0YR8PagKn\nW748zBgPirHOHXjPB4lVBNl3zyfDuGrVkd4bb8vjbe2HqhZsZ6DhNF/8QkWYViQy\nF+ybYp/jitofrUqSGbbeRVfGuaNJWeJ2KEg8s4gp3BSovYZYXenEg+aNWBb3ap2K\nbOK3tsSNtycnlRRAp/igMuu7rSbu7EVlPKX7fRXczUvQlX9OPrNrJvM9uafJwNLU\n1UnOC7ksxsL2IVNtB7WRJeYSGucW10he2h1HvrQZgp7waJZKUzVJ9lmemU4SwX1V\nJ2KO8qkdxUG1UzF0xnmKEerJ+XS5uMenQFX6TCF8hDhCkFqis68ALaMCvlrYXttf\npvusv08yRfD/gxVfVGwG/RHRerGiOLqhwbYS/hH07MuglkofW/L07MY+Fqcc4NdT\nTvdv4LmiohRgeA72CxIyIw+djUiyQ20NQtAyQN0qpr2et2O6kHFOO1GY3+DxoRog\nVjD9Nv7HvnRhaGSxvKDUC4z+AN+Afqh8tfzTEvvhLAOASFxrJ0PCat1TUECWy2Ck\no3n+l4o0mwtLo43M0zP0vDSPRpeenf4EeNAMDPXFAt8q1Wr0jUld5bx0gCFtH5kN\nmV2oS/UenksxP1jvoT2z7vMjpMt8zkkCY0vCkaVQrGSZjTtYMPE=\n=llhD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8de47a1c9033fac3355590f1fe2158a95011bb3",
          "sha": "a8de47a1c9033fac3355590f1fe2158a95011bb3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a8de47a1c9033fac3355590f1fe2158a95011bb3"
        }
      ],
      "message": "qt: update QT to support signet network",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-18T00:37:57Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-07-17T08:55:13Z"
      },
      "sha": "c7898bca4e1ccbc6edafd3b72eaf80df38e3af32"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3780427671,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc4MDQyNzY3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3780427671",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T00:39:45Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWZlMjk4ZGNjYjI0OGYyNWQ2YjAxYWI2YTgwYjFjZDZjOWUxYTFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3efe298dccb248f25d6b01ab6a80b1cd6c9e1a1e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3efe298dccb248f25d6b01ab6a80b1cd6c9e1a1e",
      "tree": {
        "sha": "f60a9445082f37a4d617482173ed2a92578db49d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f60a9445082f37a4d617482173ed2a92578db49d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f60a9445082f37a4d617482173ed2a92578db49d\nparent c7898bca4e1ccbc6edafd3b72eaf80df38e3af32\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583394660 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1600391982 +0900\n\nsignet: hard-coded parameters for Signet Global Network VI (2020-09-07)\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9kCy4ACgkQV692LbM1\nMyIVVA/+N9MRdimEqXmSdVRJuCepdOJ03hw0TWBM+CZnPhR5UAfVBX1S2T4d5aIB\ntpoXqlFNR4wBrLxPu57rtjyBY0y9sx1c2UZo9maOQdqlNYj7gzDr6ICQF5D9O3nd\nt+EBkM4nSsnQwEXdVq2mZzpy1Fg8Jux2VR7M+lyjs881874+/lXHp0pmUrRz7iFJ\no2luHnY6y8q4kJDM4kwpfsQOuiZs5Oazf16plo+iX+EleoYTVNxQfy5vEUvBH51J\nKNqR4zvh5+jxIPPNBnlTAaRi1vNZQIcgHmE96a6+AFpmoCGX7XCEcp/aQqx//QMs\nyIg9P06g49GEkDjvrFw4OJTO+OTOFeXeBCnEm60XbZiRYoPQYX/F419vbIuk4m/v\n7SWslKzEHShIgKDxufiEn8fgRFyOUuQpxvYtW8bLuXXtBO7xiZvtnXqmjKpENfgW\nvbAxhZHv32oCb/tLV/4mLH5PWnxdhNV9R29ww6KNMJSqrWoFipqIK6A5M3sNRiCk\nIqaSbmkLbp5rKg21IxDKwoa8yHVnfueyoUWm1WXwZYQPjviJpZzMCNRDngBrujuN\nRkFz9S0BWgTRdpwyHOeF8g0zi3OXM0alhTYohCCHCKD5xlGw9aFctVD3bDyXUrhF\ncZmMUNCgCZjbDVCMWEuc2nl+7a+dA3CTiMsx7flJWIe41hnqy/I=\n=WKT5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7898bca4e1ccbc6edafd3b72eaf80df38e3af32",
          "sha": "c7898bca4e1ccbc6edafd3b72eaf80df38e3af32",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c7898bca4e1ccbc6edafd3b72eaf80df38e3af32"
        }
      ],
      "message": "signet: hard-coded parameters for Signet Global Network VI (2020-09-07)\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-18T01:19:42Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-05T07:51:00Z"
      },
      "sha": "3efe298dccb248f25d6b01ab6a80b1cd6c9e1a1e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzliMjVkMDQ2NzkzYmU1MGRhMWMxMWJhNjFkMWI0YjEzYjI5NWIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec9b25d046793be50da1c11ba61d1b4b13b295b0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ec9b25d046793be50da1c11ba61d1b4b13b295b0",
      "tree": {
        "sha": "2d6a438a2ede8de9f6ed614cc4d75e4f714b5cf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d6a438a2ede8de9f6ed614cc4d75e4f714b5cf2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2d6a438a2ede8de9f6ed614cc4d75e4f714b5cf2\nparent 3efe298dccb248f25d6b01ab6a80b1cd6c9e1a1e\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1588216106 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1600391982 +0900\n\ntest: signet network selection tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9kCy4ACgkQV692LbM1\nMyIPpw/8C2c5ZjSTJoBJKwaDmYtU8qqMjlNSAC8lStlO9u2DS/7+QufzKA1FwctT\nr1cmEQhyoL4u1nfxN1R9H2U0ktVMqsJDTZX6g3KDNHIFLzVZiajfr2t/fzvEhbD6\nlnxP1/7UO0cwMhHkekygI5zwbcNvZu+HQvxHDWkg5QufpHLKTYofiwk5wSS3k8WI\nLbRJuJITRkMX3cd8rfwFg9msGPd1JERwL7WpS80mT4mgmJ53u1s82U64BIeFDMxv\nl0kN5XDMnLPyBmSUo2Lc9OFyftXVmQ1H3KbqvLdhmiN2eMU/JvSQtBTsWlVtRtrH\niNI1HF17zA+/CEcy71pI2Dl5lu905UTWgDhvPjOrpsdxi70d9yDyPaHPAlzML5ev\n+GiMJtcjMTl94i5p551XV+EPj1FKHXKqjYl9Kk1TLyjFf8/UlZ6cTXqQt643lsH1\nUxeePy2HnoFhIuL8Wv4Kfl3587gv9jKahlVLM2TcAR1xL+ISyacPXdUrpcaMnxP+\nFZzgigGDFpZdQ9dX1essY91y5ycDNFT42EOBkf95hwy1h9z+HuLy8fThwEyuFGiz\nxojTmYaSCMVrTwgraRphUIL8Bf0vUdamHwaqpBIa/DfwcVWGkKegh4zEfBr82OAA\nxyALoI/U69FEZJrWe6wB8OWcr9oAnRpiVOOEUNHbrQyitblVWgA=\n=T+jq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3efe298dccb248f25d6b01ab6a80b1cd6c9e1a1e",
          "sha": "3efe298dccb248f25d6b01ab6a80b1cd6c9e1a1e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3efe298dccb248f25d6b01ab6a80b1cd6c9e1a1e"
        }
      ],
      "message": "test: signet network selection tests",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-18T01:19:42Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-04-30T03:08:26Z"
      },
      "sha": "ec9b25d046793be50da1c11ba61d1b4b13b295b0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YzE4OWFiZGM0NTJmMDhkZmE3NTg1NjRiNTM4MWJjNzhjNDJkNDgx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c189abdc452f08dfa758564b5381bc78c42d481",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c189abdc452f08dfa758564b5381bc78c42d481",
      "tree": {
        "sha": "729ebcfd19d8d0cca09ef09f56762b8cdd80071a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/729ebcfd19d8d0cca09ef09f56762b8cdd80071a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 729ebcfd19d8d0cca09ef09f56762b8cdd80071a\nparent ec9b25d046793be50da1c11ba61d1b4b13b295b0\nauthor practicalswift <practicalswift@users.noreply.github.com> 1597657297 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1600391982 +0900\n\ntest: add small signet fuzzer\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9kCy4ACgkQV692LbM1\nMyJUHw//Rnmdr0dwat90RSBxdQA4USjzOI8y+xaaeoQ5IpPGU/7UUmo+AMSif4SX\nAbUJC+0nIdGcBW10+eyqxseBqSv5VEJ5ULURofM82VEFXOQh/A2fuAakmfdSF1Gu\n2qCF5/rGzGmuqjY9RHb4X5tEXDgmO0gBcnqGJaeSmbugZhstkdE/ckJ8sI5J/3T8\nVT9P6+m0ztghTRBElH8WnGMRsNrv0t7bFCG0z7O+RH9anpVBVOMmkhT+hcaSfve8\n1OVePD/Ajw7qW4sMtTvcrgEjEMhYpeUfL14aPtpmsQSlfnNFtY7K9npxOiqGCgZl\nebAerO1X/EQgF2ScLdJgaI2x9jmxq7f62bClRytFWrngsmjrSzrLzB7h/jReGRGk\n+QyLqlCMPvPPLCH14ECWU6G0CLsggyEBPu7Nh+DiTswo/NRJ0viwt/zvP83LAKIk\niXTK1wBq2XokUBELiFaZ4Bo8nHPzzO6QcgwwoJ1PSyKeN1dKHor8sBb6OB7T2m2S\nRPYQWQgdR+gRdKVWZ3vW1zEYmV0OYTg8dNpiug9vnWXPQKz0kZACdYALzGtZqUlw\nTPzodo6avz8oTYTtt4YxOH1yZ+OyklQyFc5elzFHDh9OubtlY/LvPi8TqwhxvcMi\n6ACaWQ9QgxFeAuf78oK7dUkfbQn0keoRFB5PQ29GUhYk905u9es=\n=0yMs\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec9b25d046793be50da1c11ba61d1b4b13b295b0",
          "sha": "ec9b25d046793be50da1c11ba61d1b4b13b295b0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ec9b25d046793be50da1c11ba61d1b4b13b295b0"
        }
      ],
      "message": "test: add small signet fuzzer",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-18T01:19:42Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-08-17T09:41:37Z"
      },
      "sha": "4c189abdc452f08dfa758564b5381bc78c42d481"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDdhZDM3NWJmMTc1NTdmODA1YmQyMDZlNzg5YjhkYjc4YzYzMzhh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e47ad375bf17557f805bd206e789b8db78c6338a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e47ad375bf17557f805bd206e789b8db78c6338a",
      "tree": {
        "sha": "882307bc4f62f5a3377a0643f7539d63b00348b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/882307bc4f62f5a3377a0643f7539d63b00348b9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 882307bc4f62f5a3377a0643f7539d63b00348b9\nparent 4c189abdc452f08dfa758564b5381bc78c42d481\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1565017314 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1600391983 +0900\n\ntest: basic signet tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9kCy8ACgkQV692LbM1\nMyJhcQ//SZQW9y/RtwVDuX+OKrhSiG88vRVJicko3V3KsoqUtyPxjwCaGBgh4SCx\nlC2af9cywqNaWev81EiFZPYLwwTon5P3QWbViDWQsr8Pl3SqlRGdtAjDz1qIXjUr\nFtNPE7Z6wuDGgmdDePQk7EVCmBYNtOSEkyg76QI+rEdC/Yl3i6wGjHvqbGOv1s54\njsqy4s9kCW35z8+uKO6gn3HBF2GUAkxZWg9vizN12oyh7SHVbNDA+s08yXTUChap\nyjIppy6K7ADoekgcHiIdGpq1ev3XPOmYf6berS1hvTE3mQHY7fSIHeFUgBmS2P1h\naYuRzk+oAJJuXuEWUKYPL6Mo/IKdu7/QdN8htybQuS3l8e9tMYZPAIpSR94cHu3F\nlBqYl6H97eWjQhHr2x3ySd9tncF3R6+oL+TtJatsa9AUdTeF6yj+khkE56SL0nsk\nO80lT8Hv8bNKQ469PczNEeil2SMioYow3Lh6LbAsXlCex7Rt06RH3rx2zyE3h5qm\nze2OCWAIlBbbyFKgwcgezq3Ws0MlAbpdxDBZ5bST2LyMfNDDcKJeSfD86rSYGhUC\nodGTNd4dat7saXdYYvSnnAOCIXBtZ7WTzHyrHCLES4LKcEUgfNQs4bHLieooED75\nh5Qm3TODFeInc110LWw2ecNJ5Xol9eXQxdFsIwgPnou9o/7C3mc=\n=MR2B\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c189abdc452f08dfa758564b5381bc78c42d481",
          "sha": "4c189abdc452f08dfa758564b5381bc78c42d481",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c189abdc452f08dfa758564b5381bc78c42d481"
        }
      ],
      "message": "test: basic signet tests",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-18T01:19:43Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-08-05T15:01:54Z"
      },
      "sha": "e47ad375bf17557f805bd206e789b8db78c6338a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjU4YzRjMDA3NmJiNWYyN2VmZGMxMTdhMDRiMjdmY2Q2ZGQwMGIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "tree": {
        "sha": "401d5ec56e7dfe28a8c7e58a3ae3a373c44c55f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/401d5ec56e7dfe28a8c7e58a3ae3a373c44c55f5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 401d5ec56e7dfe28a8c7e58a3ae3a373c44c55f5\nparent e47ad375bf17557f805bd206e789b8db78c6338a\nauthor Anthony Towns <aj@erisian.com.au> 1599530140 +1000\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1600391983 +0900\n\ntest: some sanity checks for consensus logic\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl9kCy8ACgkQV692LbM1\nMyIN5Q/9G2vis6XEMnj64MCi4ivGHHHOGdTh4VCzkoy22CT6WdyXh1fqSIVlfkC3\nv4Hs3ErDMchPOlK6iBBV7zV1IaAinBV7CtOaFU3d/08zyvuixiST5CUuLNM4E8HM\n2H2velDShNh2zFsfmRIQ2/iGHkk6J7E5ReED96JnByzq8KoOhCqxzgrugplYnBJB\nmmMC15wONNY5InPj74JY6GcIUnpU/prHZqjb8UqWhRfa/nYt0I7QlqlyIKawOkaF\nNTOVofg5VSwN2TJpu1sbTKsLfJEoJWsf+qvCRXBEmn8QDWG0UU7nMLbcitKlRHvE\nYcX0otl9E6cD2dDyJzlvS1zW1snxQ7ilARQXHnCRjtugCexasgxItx4zIdWL26N+\n1LZC71t1NiC+mF5zJn8hpSAnekwWl4XsDLu0P9z/lOBO1zYW0ROgw71dAaGL6YVV\n6yWQSWupwWyV890vQmyx9lG3Cxzz73aUNkWY3Am2xQgsbrlw1kxhlh/3edLFy6gm\nt/kP+ZpoGv2iOWdEQTyeNy2s9j/1jOPrqCz1PPk98xkW+PKwQvjCKdDQcN0nRopp\nxOxtlSOJ8qBVigFQqKfKPOe7rRMiLZKeD99rSvRMg7uaiOXx5kFPgjXrXwc1oLr8\nOl5xjzqria+UGiJAgevgHLgMWA8PnDkWuJP19FOK8W1qqi3Ono0=\n=XCeG\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e47ad375bf17557f805bd206e789b8db78c6338a",
          "sha": "e47ad375bf17557f805bd206e789b8db78c6338a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e47ad375bf17557f805bd206e789b8db78c6338a"
        }
      ],
      "message": "test: some sanity checks for consensus logic",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-09-18T01:19:43Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-09-08T01:55:40Z"
      },
      "sha": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3780505488,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc4MDUwNTQ4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3780505488",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T01:20:01Z"
    },
    {
      "event": "commented",
      "id": 694593031,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDU5MzAzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694593031",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T01:22:02Z",
      "updated_at": "2020-09-18T01:22:02Z",
      "author_association": "MEMBER",
      "body": "Updated to rename `-signet_*` to `-signet*`.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-694593031",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 694695772,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDY5NTc3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694695772",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T07:03:23Z",
      "updated_at": "2020-09-18T07:03:23Z",
      "author_association": "MEMBER",
      "body": "I have no idea why `feature_pruning` is failing in that one test in Travis. It works on my mac and linux machines.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-694695772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 694769539,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDc2OTUzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694769539",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T09:45:09Z",
      "updated_at": "2020-09-18T09:45:09Z",
      "author_association": "MEMBER",
      "body": "> I have no idea why `feature_pruning` is failing in that one test in Travis. It works on my mac and linux machines.\r\n\r\nI think the CI job failure `Method not found (wallet method is disabled because no wallet is loaded) (-32601)` is from #15454 merged yesterday.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-694769539",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 694770431,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDc3MDQzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694770431",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T09:47:06Z",
      "updated_at": "2020-09-21T09:56:18Z",
      "author_association": "MEMBER",
      "body": "re-ACK 8258c4c0076bb5f27efdc117a04b27fcd6dd00b per `git diff dbeea65 8258c4c`, only change since last review is updated `-signet*` config option naming.\r\n\r\nUpdated config options and help:\r\n```\r\n((HEAD detached from origin/pr/18267))$ ./src/bitcoind -signet -help | grep -A2 signet\r\n  -signet\r\n       Use the signet chain. Note that the network is defined by the\r\n       -signetchallenge parameter\r\n\r\n  -signetchallenge\r\n       Blocks must satisfy the given script to be considered valid (only for\r\n       signet networks; defaults to the global default signet test\r\n       network challenge)\r\n\r\n  -signetseednode\r\n       Specify a seed node for the signet network, in the hostname[:port]\r\n       format, e.g. sig.net:1234 (may be used multiple times to specify\r\n       multiple seed nodes; defaults to the global default signet test\r\n       network seed node(s))\r\n```\r\n<details><summary>some manual CLI testing</summary><p>\r\n\r\n```\r\n$ ./src/bitcoin-cli -datadir=src/signet -netinfo 4\r\nBitcoin Core v0.20.99.0-178345497c - 70016/Satoshi:0.20.99/\r\n\r\nPeer connections sorted by direction and min ping\r\n<-> relay   net mping   ping send recv  txn  blk uptime id address                      version\r\nout  full onion   477    477   40   40         5      6  0 vpytsykcl4w4dr2x.onion:38333 70016/Satoshi:0.20.99/\r\n                   ms     ms  sec  sec  min  min    min\r\n\r\n        ipv4    ipv6   onion   total  block-relay\r\nin         0       0       0       0       0\r\nout        0       0       1       1       0\r\ntotal      0       0       1       1       0\r\n\r\nLocal addresses\r\nnhvodudwrn5pka7l.onion                    port 38333     score      4\r\nugv7httwbjaayfuj.onion                    port 38333     score      4\r\n\r\n$ ./src/bitcoin-cli -datadir=src/signet -getinfo\r\n{\r\n  \"version\": 209900,\r\n  \"blocks\": 3747,\r\n  \"headers\": 3747,\r\n  \"verificationprogress\": 1,\r\n  \"timeoffset\": 0,\r\n  \"connections\": {\r\n    \"in\": 0,\r\n    \"out\": 1,\r\n    \"total\": 1\r\n  },\r\n  \"proxy\": \"127.0.0.1:9050\",\r\n  \"difficulty\": 0.003293189602495658,\r\n  \"chain\": \"signet\",\r\n  \"keypoolsize\": 1000,\r\n  \"paytxfee\": 0.00000000,\r\n  \"balance\": 9.49818000,\r\n  \"relayfee\": 0.00001000,\r\n  \"warnings\": \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\"\r\n}\r\n\r\n$ ./src/bitcoin-cli -datadir=src/signet getwalletinfo\r\n{\r\n  \"walletname\": \"\",\r\n  \"walletversion\": 169900,\r\n  \"balance\": 9.49818000,\r\n  \"unconfirmed_balance\": 0.00000000,\r\n  \"immature_balance\": 0.00000000,\r\n  \"txcount\": 10,\r\n  \"keypoololdest\": 1599664406,\r\n  \"keypoolsize\": 1000,\r\n  \"hdseedid\": \"xxx\",\r\n  \"keypoolsize_hd_internal\": 1000,\r\n  \"paytxfee\": 0.00000000,\r\n  \"private_keys_enabled\": true,\r\n  \"avoid_reuse\": false,\r\n  \"scanning\": false,\r\n  \"descriptors\": false\r\n}\r\n```\r\n</p></details>\r\n\r\n\r\n<details><summary>some manual GUI testing</summary><p>\r\n\r\n![Screenshot from 2020-09-18 11-37-42](https://user-images.githubusercontent.com/2415484/93583068-e0c88300-f992-11ea-802f-661126eab551.jpg)\r\n\r\n</p></details>\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-694770431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "commented",
      "id": 694796568,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDc5NjU2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694796568",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T10:45:27Z",
      "updated_at": "2020-09-18T10:45:27Z",
      "author_association": "MEMBER",
      "body": "re-ACK 8258c4c\r\n\r\nThe only change was the renaming of the `-signet*` args.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-694796568",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 491730396,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzMwMzk2",
      "url": null,
      "actor": null,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Seems like bech32 HRP is not updated",
      "user": {
        "login": "dr-orlovsky",
        "id": 372034,
        "node_id": "MDQ6VXNlcjM3MjAzNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/372034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dr-orlovsky",
        "html_url": "https://github.com/dr-orlovsky",
        "followers_url": "https://api.github.com/users/dr-orlovsky/followers",
        "following_url": "https://api.github.com/users/dr-orlovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dr-orlovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dr-orlovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dr-orlovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/dr-orlovsky/orgs",
        "repos_url": "https://api.github.com/users/dr-orlovsky/repos",
        "events_url": "https://api.github.com/users/dr-orlovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dr-orlovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-491730396",
      "submitted_at": "2020-09-18T19:32:01Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 695186025,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTE4NjAyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695186025",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-19T08:49:57Z",
      "updated_at": "2020-09-19T08:49:57Z",
      "author_association": "MEMBER",
      "body": "Travis now passes after wallet PR fix. Please re-review.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-695186025",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "reviewed",
      "id": 492187976,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMTg3OTc2",
      "url": null,
      "actor": null,
      "commit_id": "404682b7cdb54494e7c98f0ba0cac8b51f379750",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK 8258c4c007 🌵\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nApproach ACK 8258c4c007 🌵\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUhgkAv9HshmtvJ5n8HJ+i7B/2ZZCH5k4QsVC7dOG62A9TJf25LL1vSbmQLMNcmr\r\nrYihCi+Hl9gtMLj4ond8EgYrXTRLxcwwaiJIBrnpb/5dJnIH5W65HG3rFN6fBzSg\r\nSf+DmYi990uJUcB9/TSmofpAff4ufc5+1alnXaDDAeo9fMcDgjs79sWy28eGClw3\r\nnP5JSU8iJd8u6dQsKmqUmjvP/BTSA+biz3Uz9Q0WLxeYFuX1p3rryo6IfBTZx7iB\r\n/aQFJgukOjaQSVDOlKUfVGkAX3EBA5tcNhPU4eQ6sJORKQhopuHvq1JrunWJ7lSz\r\nhjiIDw2vI6mEcC7N2zfVCXZu5OV84EWA5GYK4uC44j5dulPbwIEPEMbhSXAi1TLO\r\nlY1Lve7ot5/YVGW2TqVa5JhJxv6CdH7Drj8QPQQ00YwUknlUQjiXtT/sB/W6VEZP\r\n/4wB9KdOaO+d/e8xq+K5WaGnk7dDiuOXwiSKyKXyxbve9mSIXSxwgBNM6pf6GUvt\r\ndS9yZ6ox\r\n=IKXe\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `46dca4399a20a8d06fcc6a4bb3621364ceb7aa953eaaeec52880e8248a1abbbd  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e89294010846dca4399a20a8d06fcc6a4bb3621364ceb7aa953eaaeec52880e8248a1abbbdf010fb5e8c5d79994267b4e4f4af26b87e6a08fff0101ada0562be8f16440ea1340e929edd7708f1045f673c14f0088bda4d649460007b0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff0102c7eeeda0992e231de5eab8f30b9516a08f020d32402f4ab245a07fce77518d58e9eacb5d40b1570de70650187cfcd0983a68708f1045f673c14f008922a07c83697138f0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010ed17dc245fc89e05d81cad71c815885908f1045f673c14f0085ce9596b4f25bac30083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df010f8913a74509e366df7bf41b49176d8c308f0200303697b57f080ab1a6f9822d8d2d619781341dd84efcb03fb9b3e7515b8523c08f020822441461d0edd7c48f817ca6796e341d0f4778ebfcf08d9bd9655b3844a05a808f1045f673c14f0086196c3b22ff7907d0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-492187976",
      "submitted_at": "2020-09-20T11:25:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "commented",
      "id": 696357656,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjM1NzY1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696357656",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T20:31:45Z",
      "updated_at": "2020-09-21T20:31:45Z",
      "author_association": "MEMBER",
      "body": "ACK 8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-696357656",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18267"
    },
    {
      "event": "merged",
      "id": 3790473904,
      "node_id": "MDExOk1lcmdlZEV2ZW50Mzc5MDQ3MzkwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3790473904",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8c5f68118cd03ff0b9babee351fee83117fb7afa",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c5f68118cd03ff0b9babee351fee83117fb7afa",
      "created_at": "2020-09-21T20:34:58Z"
    },
    {
      "event": "closed",
      "id": 3790473910,
      "node_id": "MDExOkNsb3NlZEV2ZW50Mzc5MDQ3MzkxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3790473910",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T20:34:59Z"
    },
    {
      "event": "referenced",
      "id": 3791386924,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3OTEzODY5MjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3791386924",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dc852693897819eb4b32034a801b1ef04d23def0",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/dc852693897819eb4b32034a801b1ef04d23def0",
      "created_at": "2020-09-22T04:03:20Z"
    },
    {
      "event": "removed_from_project",
      "id": 3791459838,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50Mzc5MTQ1OTgzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3791459838",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-22T04:50:03Z",
      "project_card": {
        "id": 34150627,
        "url": "https://api.github.com/projects/columns/cards/34150627",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 493316097,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMzE2MDk3",
      "url": null,
      "actor": null,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#pullrequestreview-493316097",
      "submitted_at": "2020-09-22T10:19:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
    },
    {
      "event": "referenced",
      "id": 3796560440,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3OTY1NjA0NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3796560440",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "82198938255783d2593f42a652efc9921550d86d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82198938255783d2593f42a652efc9921550d86d",
      "created_at": "2020-09-23T07:02:56Z"
    },
    {
      "event": "referenced",
      "id": 3799103738,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3OTkxMDM3Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3799103738",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "edce8124047c1798524d9e0f30f949950fd6a852",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/edce8124047c1798524d9e0f30f949950fd6a852",
      "created_at": "2020-09-23T16:50:25Z"
    },
    {
      "event": "referenced",
      "id": 3813388667,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4MTMzODg2Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3813388667",
      "actor": {
        "login": "domob1812",
        "id": 4943644,
        "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domob1812",
        "html_url": "https://github.com/domob1812",
        "followers_url": "https://api.github.com/users/domob1812/followers",
        "following_url": "https://api.github.com/users/domob1812/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domob1812/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domob1812/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
        "organizations_url": "https://api.github.com/users/domob1812/orgs",
        "repos_url": "https://api.github.com/users/domob1812/repos",
        "events_url": "https://api.github.com/users/domob1812/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domob1812/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0e77b03aba65458455a6aa3f4d4b6ba32416b776",
      "commit_url": "https://api.github.com/repos/domob1812/namecoin-core/commits/0e77b03aba65458455a6aa3f4d4b6ba32416b776",
      "created_at": "2020-09-28T08:52:23Z"
    },
    {
      "event": "referenced",
      "id": 4328788131,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzMjg3ODgxMzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4328788131",
      "actor": {
        "login": "guggero",
        "id": 1008879,
        "node_id": "MDQ6VXNlcjEwMDg4Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guggero",
        "html_url": "https://github.com/guggero",
        "followers_url": "https://api.github.com/users/guggero/followers",
        "following_url": "https://api.github.com/users/guggero/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guggero/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guggero/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guggero/subscriptions",
        "organizations_url": "https://api.github.com/users/guggero/orgs",
        "repos_url": "https://api.github.com/users/guggero/repos",
        "events_url": "https://api.github.com/users/guggero/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guggero/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2f74446f17166cfdc12cd3972c56ceb23f06f33c",
      "commit_url": "https://api.github.com/repos/guggero/btcd/commits/2f74446f17166cfdc12cd3972c56ceb23f06f33c",
      "created_at": "2021-02-14T14:42:01Z"
    },
    {
      "event": "referenced",
      "id": 4340525643,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNDA1MjU2NDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4340525643",
      "actor": {
        "login": "guggero",
        "id": 1008879,
        "node_id": "MDQ6VXNlcjEwMDg4Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guggero",
        "html_url": "https://github.com/guggero",
        "followers_url": "https://api.github.com/users/guggero/followers",
        "following_url": "https://api.github.com/users/guggero/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guggero/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guggero/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guggero/subscriptions",
        "organizations_url": "https://api.github.com/users/guggero/orgs",
        "repos_url": "https://api.github.com/users/guggero/repos",
        "events_url": "https://api.github.com/users/guggero/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guggero/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d9b1cad06f330214fef48ed32186c8af4cd8b072",
      "commit_url": "https://api.github.com/repos/guggero/btcd/commits/d9b1cad06f330214fef48ed32186c8af4cd8b072",
      "created_at": "2021-02-17T10:07:31Z"
    },
    {
      "event": "referenced",
      "id": 4436031894,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0MzYwMzE4OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4436031894",
      "actor": {
        "login": "guggero",
        "id": 1008879,
        "node_id": "MDQ6VXNlcjEwMDg4Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guggero",
        "html_url": "https://github.com/guggero",
        "followers_url": "https://api.github.com/users/guggero/followers",
        "following_url": "https://api.github.com/users/guggero/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guggero/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guggero/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guggero/subscriptions",
        "organizations_url": "https://api.github.com/users/guggero/orgs",
        "repos_url": "https://api.github.com/users/guggero/repos",
        "events_url": "https://api.github.com/users/guggero/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guggero/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "72cba19f1990c68280f45bffbbf87302af6675ed",
      "commit_url": "https://api.github.com/repos/guggero/btcd/commits/72cba19f1990c68280f45bffbbf87302af6675ed",
      "created_at": "2021-03-10T12:40:16Z"
    },
    {
      "event": "referenced",
      "id": 4459317226,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0NTkzMTcyMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4459317226",
      "actor": {
        "login": "guggero",
        "id": 1008879,
        "node_id": "MDQ6VXNlcjEwMDg4Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guggero",
        "html_url": "https://github.com/guggero",
        "followers_url": "https://api.github.com/users/guggero/followers",
        "following_url": "https://api.github.com/users/guggero/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guggero/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guggero/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guggero/subscriptions",
        "organizations_url": "https://api.github.com/users/guggero/orgs",
        "repos_url": "https://api.github.com/users/guggero/repos",
        "events_url": "https://api.github.com/users/guggero/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guggero/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "91a21e38d574581cb24eb005abbb7511250f282d",
      "commit_url": "https://api.github.com/repos/guggero/btcd/commits/91a21e38d574581cb24eb005abbb7511250f282d",
      "created_at": "2021-03-15T15:07:20Z"
    },
    {
      "event": "referenced",
      "id": 4630114540,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2MzAxMTQ1NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4630114540",
      "actor": {
        "login": "guggero",
        "id": 1008879,
        "node_id": "MDQ6VXNlcjEwMDg4Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guggero",
        "html_url": "https://github.com/guggero",
        "followers_url": "https://api.github.com/users/guggero/followers",
        "following_url": "https://api.github.com/users/guggero/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guggero/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guggero/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guggero/subscriptions",
        "organizations_url": "https://api.github.com/users/guggero/orgs",
        "repos_url": "https://api.github.com/users/guggero/repos",
        "events_url": "https://api.github.com/users/guggero/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guggero/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "73ecb5997bcf3d69482bd3780c02472f0bde699a",
      "commit_url": "https://api.github.com/repos/guggero/btcd/commits/73ecb5997bcf3d69482bd3780c02472f0bde699a",
      "created_at": "2021-04-22T11:10:50Z"
    },
    {
      "event": "referenced",
      "id": 5409705593,
      "node_id": "REFE_lADOABII584iVbIfzwAAAAFCcY55",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5409705593",
      "actor": {
        "login": "marni",
        "id": 225871,
        "node_id": "MDQ6VXNlcjIyNTg3MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/225871?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marni",
        "html_url": "https://github.com/marni",
        "followers_url": "https://api.github.com/users/marni/followers",
        "following_url": "https://api.github.com/users/marni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marni/subscriptions",
        "organizations_url": "https://api.github.com/users/marni/orgs",
        "repos_url": "https://api.github.com/users/marni/repos",
        "events_url": "https://api.github.com/users/marni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "950e8b3fd1a46fcac37e702d3c3e5181646de706",
      "commit_url": "https://api.github.com/repos/decfi/btcd/commits/950e8b3fd1a46fcac37e702d3c3e5181646de706",
      "created_at": "2021-10-05T10:22:19Z"
    },
    {
      "event": "referenced",
      "id": 5489308443,
      "node_id": "REFE_lADOABII584iVbIfzwAAAAFHMDMb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5489308443",
      "actor": {
        "login": "roylee17",
        "id": 97372,
        "node_id": "MDQ6VXNlcjk3Mzcy",
        "avatar_url": "https://avatars.githubusercontent.com/u/97372?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roylee17",
        "html_url": "https://github.com/roylee17",
        "followers_url": "https://api.github.com/users/roylee17/followers",
        "following_url": "https://api.github.com/users/roylee17/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/roylee17/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/roylee17/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/roylee17/subscriptions",
        "organizations_url": "https://api.github.com/users/roylee17/orgs",
        "repos_url": "https://api.github.com/users/roylee17/repos",
        "events_url": "https://api.github.com/users/roylee17/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/roylee17/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d17e62ae3e322b8620ec22207f6e5f1f3469a078",
      "commit_url": "https://api.github.com/repos/lbryio/lbcd/commits/d17e62ae3e322b8620ec22207f6e5f1f3469a078",
      "created_at": "2021-10-20T05:09:21Z"
    },
    {
      "event": "referenced",
      "id": 5629109569,
      "node_id": "REFE_lADOABII584iVbIfzwAAAAFPhWVB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5629109569",
      "actor": {
        "login": "kcalvinalvin",
        "id": 37185887,
        "node_id": "MDQ6VXNlcjM3MTg1ODg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/37185887?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kcalvinalvin",
        "html_url": "https://github.com/kcalvinalvin",
        "followers_url": "https://api.github.com/users/kcalvinalvin/followers",
        "following_url": "https://api.github.com/users/kcalvinalvin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kcalvinalvin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kcalvinalvin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kcalvinalvin/subscriptions",
        "organizations_url": "https://api.github.com/users/kcalvinalvin/orgs",
        "repos_url": "https://api.github.com/users/kcalvinalvin/repos",
        "events_url": "https://api.github.com/users/kcalvinalvin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kcalvinalvin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fd711cec2203ad187f61f84e524b7f5871d891d6",
      "commit_url": "https://api.github.com/repos/kcalvinalvin/btcd/commits/fd711cec2203ad187f61f84e524b7f5871d891d6",
      "created_at": "2021-11-17T03:38:27Z"
    },
    {
      "event": "locked",
      "id": 6074015476,
      "node_id": "LOE_lADOABII584iVbIfzwAAAAFqCh70",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6074015476",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T11:04:23Z",
      "lock_reason": "resolved"
    },
    {
      "event": "head_ref_deleted",
      "id": 6613159116,
      "node_id": "HRDE_lADOABII584iVbIfzwAAAAGKLMzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6613159116",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T05:59:52Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405546360",
      "pull_request_review_id": 390001251,
      "id": 405546360,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0NjM2MA==",
      "diff_hunk": "@@ -28,3 +28,65 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    ++pc; // move beyond initial OP_RETURN",
      "path": "src/primitives/block.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "79865a6d28e309334450fa58cb5d201f108ed23a",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't we at least assert that the length of the script is > 0?\r\n\r\na normal `script.GetOp` and checking the result seems more self-explanatory and safe to me",
      "created_at": "2020-04-08T13:58:37Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r405546360",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405546360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405939735",
      "pull_request_review_id": 390472523,
      "id": 405939735,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkzOTczNQ==",
      "diff_hunk": "@@ -28,3 +28,65 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    ++pc; // move beyond initial OP_RETURN",
      "path": "src/primitives/block.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "79865a6d28e309334450fa58cb5d201f108ed23a",
      "in_reply_to_id": 405546360,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think it's strictly necessary as the witness commitment index search requires an OP_RETURN, but I don't think it hurts either so will switch.",
      "created_at": "2020-04-09T03:46:08Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r405939735",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405939735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416625974",
      "pull_request_review_id": 401850965,
      "id": 416625974,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYyNTk3NA==",
      "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 22,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in 63b5d7a, if #18780 is merged, can replace `38` with `MINIMUM_WITNESS_COMMITMENT`",
      "created_at": "2020-04-28T13:46:09Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416625974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416625974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416633644",
      "pull_request_review_id": 401850965,
      "id": 416633644,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYzMzY0NA==",
      "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 11,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in 63b5d7a3a7e6081e perhaps replace the four `-1` commitment index values in `block.h/.cpp` with a static constant whose name could also make their meaning explicit",
      "created_at": "2020-04-28T13:56:02Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416633644",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416633644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416679361",
      "pull_request_review_id": 401918081,
      "id": 416679361,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3OTM2MQ==",
      "diff_hunk": "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "path": "src/chainparams.cpp",
      "position": 40,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/signet/SigNet/",
      "created_at": "2020-04-28T14:52:50Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416679361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416679361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416897762",
      "pull_request_review_id": 401850965,
      "id": 416897762,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5Nzc2Mg==",
      "diff_hunk": "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in d55bcb17844e6e68 perhaps cache the args in a localvar\r\n```diff\r\n-            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\r\n+            const auto sbs = args.GetArgs(\"-signet_blockscript\");\r\n+            if (sbs.size() != 1) {\r\n                 throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\r\n             }\r\n-            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\r\n+            bin = ParseHex(sbs[0]);\r\n             if (args.IsArgSet(\"-signet_seednode\")) {\r\n                 vSeeds = gArgs.GetArgs(\"-signet_seednode\");\r\n             }\r\n \r\n-            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\r\n+            LogPrintf(\"SigNet with block script %s\\n\", sbs[0]);\r\n```",
      "created_at": "2020-04-28T20:22:22Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416897762",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416897762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416905437",
      "pull_request_review_id": 401850965,
      "id": 416905437,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkwNTQzNw==",
      "diff_hunk": "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In d55bcb1, how did you arrive at this `powLimit` value?",
      "created_at": "2020-04-28T20:36:05Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416905437",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416905437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416910629",
      "pull_request_review_id": 401850965,
      "id": 416910629,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkxMDYyOQ==",
      "diff_hunk": "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << g_signet_blockscript;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"sb\" + args.GetArg(\"-signet_hrp\", \"\");\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = true;",
      "path": "src/chainparams.cpp",
      "position": 108,
      "original_position": 101,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "d55bcb1 do we need any of these additional params to be set in `SigNetParams`? (values tba). Some of them may have been added since this PR was made.\r\n```diff\r\n+        // The best chain should have at least this much work.\r\n+        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000000001495c1d5a01e2af8a23\");\r\n+\r\n+        // By default assume that the signatures in ancestors of this block are valid.\r\n+        consensus.defaultAssumeValid = uint256S(\"0x000000000000056c49030c174179b52a928c870e6e8a822c75973b7970cfbd01\"); // 1692000\r\n \r\n         nDefaultPort = 38333;\r\n         nPruneAfterHeight = 1000;\r\n+        m_assumed_blockchain_size = 40;\r\n+        m_assumed_chain_state_size = 2;\r\n \r\n         fDefaultConsistencyChecks = false;\r\n         fRequireStandard = true;\r\n         m_is_test_chain = true;\r\n+        m_is_mockable_chain = true;\r\n```",
      "created_at": "2020-04-28T20:45:35Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416910629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416910629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 336,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416972019",
      "pull_request_review_id": 401850965,
      "id": 416972019,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3MjAxOQ==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "d55bcb1 I like the readability of snakecased config options, but is the current convention that they be without separators? e.g. -signetblockscript, -signethrp, -signetseednode",
      "created_at": "2020-04-28T22:54:38Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416972019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416972019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416972958",
      "pull_request_review_id": 401850965,
      "id": 416972958,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3Mjk1OA==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "d55bcb1 nit: s/Human readable/Human-readable/",
      "created_at": "2020-04-28T22:57:09Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416972958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416972958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416976162",
      "pull_request_review_id": 401850965,
      "id": 416976162,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NjE2Mg==",
      "diff_hunk": "@@ -41,8 +46,9 @@ std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain\n         return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n     else if (chain == CBaseChainParams::REGTEST)\n         return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+    else if (chain == CBaseChainParams::SIGNET)\n+        return MakeUnique<CBaseChainParams>(\"signet\", 38332);",
      "path": "src/chainparamsbase.cpp",
      "position": 30,
      "original_position": 26,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In d55bcb1, maintain the same sort (main/testnet/signet/regtest) here as in `chainparamsbase.h`?\r\n```diff\r\n-    else if (chain == CBaseChainParams::REGTEST)\r\n-        return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\r\n     else if (chain == CBaseChainParams::SIGNET)\r\n         return MakeUnique<CBaseChainParams>(\"signet\", 38332);\r\n+    else if (chain == CBaseChainParams::REGTEST)\r\n+        return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\r\n```\r\nAlso, should we keep the `else` before the throw?",
      "created_at": "2020-04-28T23:05:55Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416976162",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416976162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417267584",
      "pull_request_review_id": 401850965,
      "id": 417267584,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2NzU4NA==",
      "diff_hunk": "@@ -396,6 +477,9 @@ std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n         return std::unique_ptr<CChainParams>(new CRegTestParams(gArgs));\n+    else if (chain == CBaseChainParams::SIGNET) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "d55bcb1 perhaps maintain the same sort (main/testnet/signet/regtest) here (and in general wherever the four chains are enumerated)?",
      "created_at": "2020-04-29T12:13:34Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417267584",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417267584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 491,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417298730",
      "pull_request_review_id": 401850965,
      "id": 417298730,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5ODczMA==",
      "diff_hunk": "@@ -1151,6 +1152,11 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    if (consensusParams.signet_blocks && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "db73201 istm a comment here and at line 3300 below would be helpful (the neighbouring code is commented as well)",
      "created_at": "2020-04-29T13:06:24Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417298730",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417298730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417314418",
      "pull_request_review_id": 401850965,
      "id": 417314418,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxNDQxOA==",
      "diff_hunk": "@@ -28,3 +28,67 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    // move beyond initial OP_RETURN\n+    if (pc != script.end() && script.GetOp(pc, opcode, result) && opcode == OP_RETURN) {\n+        while (script.GetOp(pc, opcode, result)) {\n+            if (result.size() > 3 && !memcmp(result.data(), header, 4)) {\n+                result.erase(result.begin(), result.begin() + 4);\n+                return true;\n+            }\n+        }\n+    }\n+    result.clear();\n+    return false;\n+}\n+\n+bool CBlock::SetWitnessCommitmentSection(CMutableTransaction& mtx, const uint8_t header[4], const std::vector<uint8_t>& data)\n+{\n+    int cidx = GetWitnessCommitmentIndex(mtx);\n+    if (cidx == -1) return false;\n+\n+    CScript result;\n+    std::vector<uint8_t> pushdata;\n+    auto script = mtx.vout[cidx].scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    result.push_back(*pc++);",
      "path": "src/primitives/block.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "63b5d7a3a7e6081e3b42a78ad1f nit: would it be better to construct rather than copy?\r\n```diff\r\n-    result.push_back(*pc++);\r\n+    result.emplace_back(*pc++);\r\n```",
      "created_at": "2020-04-29T13:29:46Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417314418",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417314418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417331044",
      "pull_request_review_id": 401918081,
      "id": 417331044,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMzMTA0NA==",
      "diff_hunk": "@@ -1125,7 +1125,7 @@ BOOST_FIXTURE_TEST_CASE(util_ChainMerge, ChainMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"f0b3a3c29869edc765d579c928f7f1690a71fbb673b49ccf39cbc4de18156a0d\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"4645298a210e40fd8dfacc2b470be96a186f0ff2ebab328953cfe1ce866e55cf\");",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not knowing this test, I was confused why this is needed until I dumped the file. So a little better explanation would be nice in the commit message. Suggestion: \"Even though the test is not changed, error messages for missing/invalid parameter combinations now include -signet. This is why the hash changes.\"",
      "created_at": "2020-04-29T13:52:13Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417331044",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417331044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417353416",
      "pull_request_review_id": 401918081,
      "id": 417353416,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1MzQxNg==",
      "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {\n+                return o;\n+            }\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Attempt to get the data for the section with the given header in the witness commitment of this block.",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 30,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "63b5d7a3a7e6081e3b42a78ad1fd1cafd578b49e",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think there could be an additional comment for these CommitmentSection functions that they are specific for SigNet",
      "created_at": "2020-04-29T14:21:03Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417353416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417353416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417359282",
      "pull_request_review_id": 401918081,
      "id": 417359282,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1OTI4Mg==",
      "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 22,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416625974,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree, I was even going to suggest pulling the whole SigNet header into a named constant and then work with that.",
      "created_at": "2020-04-29T14:28:21Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417359282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417359282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417363952",
      "pull_request_review_id": 401918081,
      "id": 417363952,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2Mzk1Mg==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "super nit\r\n```suggestion\r\n/** A low level signature checker. Note that it does not verify that the hash passed in relates to a known message (unlike for the other signature checkers). */\r\n```",
      "created_at": "2020-04-29T14:34:06Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417363952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417363952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417392936",
      "pull_request_review_id": 401918081,
      "id": 417392936,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5MjkzNg==",
      "diff_hunk": "@@ -249,13 +252,86 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit s/signet/SigNet/",
      "created_at": "2020-04-29T15:11:10Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417392936",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417392936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 267,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417394889",
      "pull_request_review_id": 401918081,
      "id": 417394889,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5NDg4OQ==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/signet/SigNet/",
      "created_at": "2020-04-29T15:13:40Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417394889",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417394889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417395253",
      "pull_request_review_id": 401918081,
      "id": 417395253,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5NTI1Mw==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/signet/SigNet/",
      "created_at": "2020-04-29T15:14:10Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417395253",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417395253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417444593",
      "pull_request_review_id": 401918081,
      "id": 417444593,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0NDU5Mw==",
      "diff_hunk": "@@ -249,13 +252,86 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I guess starting a custom signet without a seed node only makes sense if the user is running the seed node themselves. It might be worth a warning or a log message in case people wonder why nothing is happening if they forget this.",
      "created_at": "2020-04-29T16:22:04Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417444593",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417444593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417445644",
      "pull_request_review_id": 402833061,
      "id": 417445644,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0NTY0NA==",
      "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 22,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416625974,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was wondering about whether anyone would knee-jerk if we `#include <script/script.h>`'d, but then I realized this is already happening (evidenced by the fact `OP_RETURN` does not give a compile error here) via `primitives/transaction.h`, so it should be fine.\r\n\r\nSwitching to this, thanks!",
      "created_at": "2020-04-29T16:23:46Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417445644",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417445644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417448693",
      "pull_request_review_id": 402836749,
      "id": 417448693,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0ODY5Mw==",
      "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 11,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416633644,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense; also switching the couple of places in validation.cpp where `-1` is used.",
      "created_at": "2020-04-29T16:28:27Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417448693",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417448693"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417450702",
      "pull_request_review_id": 402839174,
      "id": 417450702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MDcwMg==",
      "diff_hunk": "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416897762,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sounds good!",
      "created_at": "2020-04-29T16:31:27Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417450702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417450702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417451540",
      "pull_request_review_id": 402840244,
      "id": 417451540,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MTU0MA==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": 417363952,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ISTM the first version is correct?",
      "created_at": "2020-04-29T16:32:50Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417451540",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417451540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417451806",
      "pull_request_review_id": 402840564,
      "id": 417451806,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MTgwNg==",
      "diff_hunk": "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416905437,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I grinded a block for a short while and picked the lowest resulting value. It is a bit more random than it needs to be, but doesn't seem harmful so I kept it as is.",
      "created_at": "2020-04-29T16:33:14Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417451806",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417451806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417452296",
      "pull_request_review_id": 402841169,
      "id": 417452296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MjI5Ng==",
      "diff_hunk": "@@ -1125,7 +1125,7 @@ BOOST_FIXTURE_TEST_CASE(util_ChainMerge, ChainMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"f0b3a3c29869edc765d579c928f7f1690a71fbb673b49ccf39cbc4de18156a0d\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"4645298a210e40fd8dfacc2b470be96a186f0ff2ebab328953cfe1ce866e55cf\");",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 417331044,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was wondering this, too.",
      "created_at": "2020-04-29T16:33:58Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417452296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417452296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417452794",
      "pull_request_review_id": 402841806,
      "id": 417452794,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1Mjc5NA==",
      "diff_hunk": "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << g_signet_blockscript;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"sb\" + args.GetArg(\"-signet_hrp\", \"\");\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = true;",
      "path": "src/chainparams.cpp",
      "position": 108,
      "original_position": 101,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416910629,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I didn't notice these additions, thanks. Adding. Edit: well, the first ones are from before; I was simply not including a minimum chain work or default assume valid.",
      "created_at": "2020-04-29T16:34:45Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417452794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417452794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 336,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417454170",
      "pull_request_review_id": 402843509,
      "id": 417454170,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NDE3MA==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": 417363952,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> ISTM the first version is correct?\r\n\r\nThat's why it's a nit.",
      "created_at": "2020-04-29T16:36:54Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417454170",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417454170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455144",
      "pull_request_review_id": 402844787,
      "id": 417455144,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NTE0NA==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": 417363952,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is a double space and it assumes that the caller has to do something which is why I like my version a bit better.",
      "created_at": "2020-04-29T16:38:25Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455144",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455144"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455255",
      "pull_request_review_id": 402844913,
      "id": 417455255,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NTI1NQ==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": 417363952,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I mean that I think the first version is better.",
      "created_at": "2020-04-29T16:38:35Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455255",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455264",
      "pull_request_review_id": 402844928,
      "id": 417455264,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NTI2NA==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416972958,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Both seem to be acceptable. E.g. https://en.wikipedia.org/wiki/Human-readable_medium has as an example the sentence `Human readable protocols greatly reduce the cost of debugging.[1]`.",
      "created_at": "2020-04-29T16:38:36Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455856",
      "pull_request_review_id": 402845649,
      "id": 417455856,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NTg1Ng==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416972019,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I haven't heard of such a convention for options. I'll keep this until someone else yells at me, as it's spread around a bit. (Will change if it's important though!)",
      "created_at": "2020-04-29T16:39:30Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455856",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417457480",
      "pull_request_review_id": 402847749,
      "id": 417457480,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NzQ4MA==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": 417363952,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Yes, I mean that I think the first version is better.\r\n\r\nHow can you be sure that the caller always has to do this whenever this function is used?",
      "created_at": "2020-04-29T16:42:12Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417457480",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417457480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417457574",
      "pull_request_review_id": 402847874,
      "id": 417457574,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NzU3NA==",
      "diff_hunk": "@@ -41,8 +46,9 @@ std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain\n         return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n     else if (chain == CBaseChainParams::REGTEST)\n         return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+    else if (chain == CBaseChainParams::SIGNET)\n+        return MakeUnique<CBaseChainParams>(\"signet\", 38332);",
      "path": "src/chainparamsbase.cpp",
      "position": 30,
      "original_position": 26,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416976162,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Swapped; I don't see the point keeping the else as every if case returns, and it seems more clear to be explicit, but I can see the argument for minimal diffs...",
      "created_at": "2020-04-29T16:42:20Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417457574",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417457574"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417459940",
      "pull_request_review_id": 402850754,
      "id": 417459940,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1OTk0MA==",
      "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 22,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416625974,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe have a look at #18780 that looks like it's about to be merged to see if you want to pull in some of the changes.",
      "created_at": "2020-04-29T16:45:49Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417459940",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417459940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417460090",
      "pull_request_review_id": 402850960,
      "id": 417460090,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2MDA5MA==",
      "diff_hunk": "@@ -28,3 +28,67 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    // move beyond initial OP_RETURN\n+    if (pc != script.end() && script.GetOp(pc, opcode, result) && opcode == OP_RETURN) {\n+        while (script.GetOp(pc, opcode, result)) {\n+            if (result.size() > 3 && !memcmp(result.data(), header, 4)) {\n+                result.erase(result.begin(), result.begin() + 4);\n+                return true;\n+            }\n+        }\n+    }\n+    result.clear();\n+    return false;\n+}\n+\n+bool CBlock::SetWitnessCommitmentSection(CMutableTransaction& mtx, const uint8_t header[4], const std::vector<uint8_t>& data)\n+{\n+    int cidx = GetWitnessCommitmentIndex(mtx);\n+    if (cidx == -1) return false;\n+\n+    CScript result;\n+    std::vector<uint8_t> pushdata;\n+    auto script = mtx.vout[cidx].scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    result.push_back(*pc++);",
      "path": "src/primitives/block.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 417314418,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Switched to `emplace_back`",
      "created_at": "2020-04-29T16:46:04Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417460090",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417460090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417462467",
      "pull_request_review_id": 402853915,
      "id": 417462467,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2MjQ2Nw==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": 417363952,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> There is a double space and it assumes that the caller has to do something which is why I like my version a bit better.\r\n\r\nDouble space is grammatically correct and the warning to the caller seems preferable IMO.",
      "created_at": "2020-04-29T16:49:40Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417462467",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417462467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417465360",
      "pull_request_review_id": 402857304,
      "id": 417465360,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2NTM2MA==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": 417363952,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's my point: \"must\" is not a warning, it's a requirement.",
      "created_at": "2020-04-29T16:53:46Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417465360",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417465360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417470956",
      "pull_request_review_id": 402864189,
      "id": 417470956,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MDk1Ng==",
      "diff_hunk": "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "path": "src/chainparams.cpp",
      "position": 40,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "in_reply_to_id": 416679361,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think we call any of the other nets RegTest or TestNet, so signet seems OK here. I did a regexp search for `\"([^\"]*)testnet` and all instances I found used lowercase except for start-of-sentence-uppercasing.",
      "created_at": "2020-04-29T17:02:11Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417470956",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417470956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417471567",
      "pull_request_review_id": 402864971,
      "id": 417471567,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTU2Nw==",
      "diff_hunk": "@@ -1125,7 +1125,7 @@ BOOST_FIXTURE_TEST_CASE(util_ChainMerge, ChainMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"f0b3a3c29869edc765d579c928f7f1690a71fbb673b49ccf39cbc4de18156a0d\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"4645298a210e40fd8dfacc2b470be96a186f0ff2ebab328953cfe1ce866e55cf\");",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 417331044,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Apologies; I don't actually expect this commit to make it through in the end. I should mark it as such. I believe this is something @laanwj wants to double check and commit when appropriate, but I may be off here.",
      "created_at": "2020-04-29T17:03:16Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417471567",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417471567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417472690",
      "pull_request_review_id": 402866360,
      "id": 417472690,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MjY5MA==",
      "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {\n+                return o;\n+            }\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Attempt to get the data for the section with the given header in the witness commitment of this block.",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 30,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "63b5d7a3a7e6081e3b42a78ad1fd1cafd578b49e",
      "in_reply_to_id": 417353416,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Technically they're not; this code simply adds support for a feature that segwit always supported, which is the extension of the witness commitment to add arbitrary/additional data. This adds a framework to find/modify such extensions, and includes a header for each one, so they are distinguishable.",
      "created_at": "2020-04-29T17:05:00Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417472690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417472690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417474643",
      "pull_request_review_id": 402868657,
      "id": 417474643,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDY0Mw==",
      "diff_hunk": "@@ -249,13 +252,86 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "in_reply_to_id": 417444593,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it will be fairly common to start a node and then manually `addnode=` peers to build a network real quick. Having a seed node is only really meant for super permanent signets (like the default one) where you want people to just be able to start and go. I'm not sure how this will all pan out, but that's how I envision it right now.",
      "created_at": "2020-04-29T17:08:04Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417474643",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417474643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417474840",
      "pull_request_review_id": 402868883,
      "id": 417474840,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDg0MA==",
      "diff_hunk": "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "path": "src/chainparams.cpp",
      "position": 40,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "in_reply_to_id": 416679361,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ":+1: on signet",
      "created_at": "2020-04-29T17:08:22Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417474840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417474840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417476362",
      "pull_request_review_id": 402870727,
      "id": 417476362,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NjM2Mg==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": 417363952,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I read it as \"the caller is responsible for verifying\" which is more defensively paranoid, in a good way, I think, than \"it does not verify\".",
      "created_at": "2020-04-29T17:10:48Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417476362",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417476362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417476433",
      "pull_request_review_id": 402870820,
      "id": 417476433,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NjQzMw==",
      "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 22,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416625974,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will check out #18780 for sure, thanks.\r\n\r\nAlso, @fjahr this is not signet stuff, this is segwit stuff (the 38 + OP_RET + etc). It's the witness commitment header. Or are you referring to something else when you say \"the whole SigNet header into a named constant\"?",
      "created_at": "2020-04-29T17:10:54Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417476433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417476433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417477253",
      "pull_request_review_id": 402871843,
      "id": 417477253,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NzI1Mw==",
      "diff_hunk": "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "path": "src/chainparams.cpp",
      "position": 40,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "in_reply_to_id": 416679361,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, then it's just inconsistent because I saw `SigNet` as well in comments and log messages.",
      "created_at": "2020-04-29T17:12:11Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417477253",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417477253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417477271",
      "pull_request_review_id": 402871887,
      "id": 417477271,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NzI3MQ==",
      "diff_hunk": "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "in_reply_to_id": 417363952,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The current version seems a tiny bit more clear on the fact that if you use this thing, you (the caller) have to check this stuff yourself, so keeping as is.",
      "created_at": "2020-04-29T17:12:13Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417477271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417477271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417569922",
      "pull_request_review_id": 402986678,
      "id": 417569922,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2OTkyMg==",
      "diff_hunk": "@@ -249,13 +252,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3b4e8d78f61a8869a5edc4cbbafd2cbe411eafd8",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/SigNet/Signet/",
      "created_at": "2020-04-29T19:49:41Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417569922",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417569922"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417570226",
      "pull_request_review_id": 402986678,
      "id": 417570226,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MDIyNg==",
      "diff_hunk": "@@ -249,13 +252,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", blockscript[0]);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3b4e8d78f61a8869a5edc4cbbafd2cbe411eafd8",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/SigNet/Signet/",
      "created_at": "2020-04-29T19:50:09Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417570226",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417570226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417734749",
      "pull_request_review_id": 403179678,
      "id": 417734749,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczNDc0OQ==",
      "diff_hunk": "@@ -249,13 +252,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3b4e8d78f61a8869a5edc4cbbafd2cbe411eafd8",
      "in_reply_to_id": 417569922,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A-ha! Thanks, my consistency is admirable... Fixed.",
      "created_at": "2020-04-30T03:34:59Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417734749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417734749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417736702",
      "pull_request_review_id": 403181807,
      "id": 417736702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczNjcwMg==",
      "diff_hunk": "@@ -1125,7 +1125,7 @@ BOOST_FIXTURE_TEST_CASE(util_ChainMerge, ChainMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"f0b3a3c29869edc765d579c928f7f1690a71fbb673b49ccf39cbc4de18156a0d\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"4645298a210e40fd8dfacc2b470be96a186f0ff2ebab328953cfe1ce866e55cf\");",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 417331044,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Update: I looked closer into this (my initial impression was that this was a maintainer thing, but it actually looks like the contributors are supposed to deal with it), and have updated the commit message to explain why the hash changed.\r\n\r\nAlso, a recent addition to tests resulted in another hash changing; these were combined in one commit.",
      "created_at": "2020-04-30T03:43:44Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417736702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417736702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418465059",
      "pull_request_review_id": 404072426,
      "id": 418465059,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2NTA1OQ==",
      "diff_hunk": "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "path": "src/chainparams.cpp",
      "position": 40,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "in_reply_to_id": 416679361,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, sorry about that. Fixed.",
      "created_at": "2020-05-01T08:44:34Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418465059",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418465059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418574248",
      "pull_request_review_id": 404199872,
      "id": 418574248,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU3NDI0OA==",
      "diff_hunk": "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 34,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I still don't understand why this is moved https://github.com/bitcoin/bitcoin/pull/16411#discussion_r335017902\r\n\r\n* GetWitnessCommitmentIndex is a member function, but doesn't access any member variables. This is confusing and makes it hard to write clean code.\r\n* `src/primitives` only contains data structures, and no validation logic. If this becomes the new place for validation, we might as well move the rest of validation to this file. E.g. ConnectBlock to `CBlock::Connect`, etc. This clearly defeats the purpose of having different modules for primitives and validation.",
      "created_at": "2020-05-01T14:47:59Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418574248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418574248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418574836",
      "pull_request_review_id": 404200623,
      "id": 418574836,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU3NDgzNg==",
      "diff_hunk": "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 34,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "in_reply_to_id": 418574248,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit: member functions are already inline, same goes for `template<>`s. No need to specify it twice.",
      "created_at": "2020-05-01T14:49:19Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418574836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418574836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418917924",
      "pull_request_review_id": 404503309,
      "id": 418917924,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkxNzkyNA==",
      "diff_hunk": "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 34,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "in_reply_to_id": 418574248,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I hear you on the \"only data structure\" part... perhaps this belongs in validation.cpp in the end. It's bloated and I didn't wanna bloat it more with the new witness commitment section stuff, though.",
      "created_at": "2020-05-02T05:58:09Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418917924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418917924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418918363",
      "pull_request_review_id": 404503560,
      "id": 418918363,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkxODM2Mw==",
      "diff_hunk": "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 34,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "in_reply_to_id": 418574248,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "On the other hand, it could be argued that this is in fact data structure *stuff* and not validation. I mean, there's no validation done here, it simply locates and returns the index of the witness commitment, if any.",
      "created_at": "2020-05-02T06:03:47Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418918363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418918363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419005415",
      "pull_request_review_id": 404559085,
      "id": 419005415,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwNTQxNQ==",
      "diff_hunk": "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 34,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "in_reply_to_id": 418574248,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`GetWitnessCommitmentIndex` has been added to validation in commit 8b49040854be2e26b66366aeae1cba4716f93d93. Generally we don't move stuff around unless there is a reason to. Maybe @sipa can give more insights. Though, if no one else complains about this, I will close this conversation as resolved.\r\n\r\nHowever, making this a member function of CBlock, whereas it doesn't read any of the member variables, is highly confusing and should be fixed.",
      "created_at": "2020-05-02T20:41:07Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419005415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419005415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419005700",
      "pull_request_review_id": 404559262,
      "id": 419005700,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwNTcwMA==",
      "diff_hunk": "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 34,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "in_reply_to_id": 418574248,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I strongly prefer keeping this in validation. Not every piece of code that uses transactions (e.g. wallets, P2P layer things, ...) needs to depend on something that only matters to validation.",
      "created_at": "2020-05-02T20:43:53Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419005700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419005700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419228261",
      "pull_request_review_id": 404726158,
      "id": 419228261,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyODI2MQ==",
      "diff_hunk": "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "path": "src/primitives/block.h",
      "position": null,
      "original_position": 34,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "in_reply_to_id": 418574248,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've restored it to validation.cpp, and added a variant that takes a transaction rather than a block. The block-based one (original) is converted into a wrapper calling the variant.",
      "created_at": "2020-05-04T06:12:04Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419228261",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419228261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419872121",
      "pull_request_review_id": 405501609,
      "id": 419872121,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg3MjEyMQ==",
      "diff_hunk": "@@ -332,6 +334,9 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n int GetWitnessCommitmentIndex(const CBlock& block);\n \n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */",
      "path": "src/validation.h",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "fd10dd5f0044b7426c4b8198dbcd82f6da89ce0d",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment should use the new constant, not `-1`. Will fix at next rebase.",
      "created_at": "2020-05-05T05:32:48Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419872121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419872121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420017940",
      "pull_request_review_id": 405674808,
      "id": 420017940,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAxNzk0MA==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Mind to explain the use case for `signet_hrp` being a run-time option?",
      "created_at": "2020-05-05T10:44:54Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420017940",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420017940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420194254",
      "pull_request_review_id": 405895986,
      "id": 420194254,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE5NDI1NA==",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+extern CScript g_signet_blockscript;\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);\n+\n+static constexpr int NO_WITNESS_COMMITMENT{-1}; // note: this is copied from validation.h, to avoid a circular dependency issue\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    if (!CheckBlockSolution(GetSignetHash(block), signet_data, consensusParams)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution invalid)\");\n+    }\n+    return true;\n+}\n+\n+bool CheckBlockSolution(const uint256& signet_hash, const std::vector<uint8_t>& signature, const Consensus::Params& params)\n+{\n+    SimpleSignatureChecker bsc(signet_hash);\n+    CScript solution = CScript(signature.begin(), signature.end());\n+    return VerifyScript(solution, g_signet_blockscript, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc);\n+}\n+\n+uint256 BlockSignetMerkleRoot(const CBlock& block, bool* mutated = nullptr)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    {\n+        // find and delete signet signature\n+        CMutableTransaction mtx(*block.vtx.at(0));\n+        SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});\n+        leaves[0] = mtx.GetHash();\n+    }\n+    for (size_t s = 1; s < block.vtx.size(); s++) {",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fd10dd5f and 6209c21 pico-nit: if you retouch, here and a couple other places in the changeset, `++s` is preferred over `s++` per developer-notes.md::L94",
      "created_at": "2020-05-05T15:22:05Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420194254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420194254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420214083",
      "pull_request_review_id": 405895986,
      "id": 420214083,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIxNDA4Mw==",
      "diff_hunk": "@@ -3381,31 +3393,37 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n     return (height >= params.SegwitHeight);\n }\n \n-int GetWitnessCommitmentIndex(const CBlock& block)\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx)\n {\n-    int commitpos = -1;\n-    if (!block.vtx.empty()) {\n-        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n-            const CTxOut& vout = block.vtx[0]->vout[o];\n-            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                vout.scriptPubKey[0] == OP_RETURN &&\n-                vout.scriptPubKey[1] == 0x24 &&\n-                vout.scriptPubKey[2] == 0xaa &&\n-                vout.scriptPubKey[3] == 0x21 &&\n-                vout.scriptPubKey[4] == 0xa9 &&\n-                vout.scriptPubKey[5] == 0xed) {\n-                commitpos = o;\n-            }\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    for (size_t o = 0; o < tx.vout.size(); o++) {\n+        const CTxOut& vout = tx.vout[o];\n+        if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+            vout.scriptPubKey[0] == OP_RETURN &&\n+            vout.scriptPubKey[1] == 0x24 &&\n+            vout.scriptPubKey[2] == 0xaa &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fd10dd5f If you retouch, perhaps add comments to document the byte values:\r\n\r\n```diff\r\n-            vout.scriptPubKey[1] == 0x24 &&\r\n-            vout.scriptPubKey[2] == 0xaa &&\r\n+            vout.scriptPubKey[1] == 0x24 &&  // Push the following 36 bytes\r\n+            vout.scriptPubKey[2] == 0xaa &&  // BIP141 SegWit commitment header (4 bytes: 0xaa21a9ed)\r\n```",
      "created_at": "2020-05-05T15:48:54Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420214083",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420214083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420269434",
      "pull_request_review_id": 405895986,
      "id": 420269434,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI2OTQzNA==",
      "diff_hunk": "@@ -249,13 +254,93 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c1144b86 These 3 lines can use `emplace_back` like the other vSeeds.emplace_back operations in this file.",
      "created_at": "2020-05-05T17:07:30Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420269434",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420269434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420271626",
      "pull_request_review_id": 405895986,
      "id": 420271626,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MTYyNg==",
      "diff_hunk": "@@ -249,13 +254,93 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }",
      "path": "src/chainparams.cpp",
      "position": 49,
      "original_position": 60,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c1144b86 `-signet_seednode` appears to only take effect if `-signet_blockscript` is also passed. If so, perhaps say so in the `-signet_seednode` help in chainparamsbase.cpp.",
      "created_at": "2020-05-05T17:11:02Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420271626",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420271626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 277,
      "original_line": 277,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420275966",
      "pull_request_review_id": 405895986,
      "id": 420275966,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3NTk2Ng==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the difference between the `-signet_seednode` chainparams option, and the `-seednode` connection option in init.cpp?\r\n\r\nPerhaps (pulling in some ideas from the `-seednode` help):\r\n```diff\r\n-    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\r\n+    gArgs.AddArg(\"-signet_seednode=<ip>\", \"Specify a seed node for the signet network (may be specified multiple times to connect to multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\r\n```\r\n",
      "created_at": "2020-05-05T17:17:52Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420275966",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420275966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420287152",
      "pull_request_review_id": 405895986,
      "id": 420287152,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NzE1Mg==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": 420017940,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Mind to explain the use case for `signet_hrp` being a run-time option?\r\n\r\nAgree; I don't know how this is to be used.",
      "created_at": "2020-05-05T17:35:22Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420287152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420287152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420535779",
      "pull_request_review_id": 406293820,
      "id": 420535779,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNTc3OQ==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": 420017940,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This became useful when I was running a taproot signet there for awhile, as it allowed correctly configured nodes to distinguish between addresses for the two networks.\r\n\r\nI think we are leaning more and more towards having \"one\" signet most of the time, but having this feature still seems like a good idea. I don't have a strong opinion, and can drop this out for later consideration if you guys feel uncomfortable about it.",
      "created_at": "2020-05-06T04:14:28Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420535779",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420535779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420536312",
      "pull_request_review_id": 406294357,
      "id": 420536312,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNjMxMg==",
      "diff_hunk": "@@ -3381,31 +3393,37 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n     return (height >= params.SegwitHeight);\n }\n \n-int GetWitnessCommitmentIndex(const CBlock& block)\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx)\n {\n-    int commitpos = -1;\n-    if (!block.vtx.empty()) {\n-        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n-            const CTxOut& vout = block.vtx[0]->vout[o];\n-            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                vout.scriptPubKey[0] == OP_RETURN &&\n-                vout.scriptPubKey[1] == 0x24 &&\n-                vout.scriptPubKey[2] == 0xaa &&\n-                vout.scriptPubKey[3] == 0x21 &&\n-                vout.scriptPubKey[4] == 0xa9 &&\n-                vout.scriptPubKey[5] == 0xed) {\n-                commitpos = o;\n-            }\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    for (size_t o = 0; o < tx.vout.size(); o++) {\n+        const CTxOut& vout = tx.vout[o];\n+        if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+            vout.scriptPubKey[0] == OP_RETURN &&\n+            vout.scriptPubKey[1] == 0x24 &&\n+            vout.scriptPubKey[2] == 0xaa &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": 420214083,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you do `?w=1` suffix on the view all changes page [ https://github.com/bitcoin/bitcoin/pull/18267/files?w=1#diff-24efdb00bfbe56b140fb006b562cc70b ], you will note that I'm only indenting these lines, so I think I'll skip touching them for now.",
      "created_at": "2020-05-06T04:16:50Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420536312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420536312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420536454",
      "pull_request_review_id": 406294537,
      "id": 420536454,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNjQ1NA==",
      "diff_hunk": "@@ -249,13 +254,93 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }",
      "path": "src/chainparams.cpp",
      "position": 49,
      "original_position": 60,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": 420271626,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think that's a good logic, actually. I'm going to change it to always take seeds, thanks.",
      "created_at": "2020-05-06T04:17:44Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420536454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420536454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 277,
      "original_line": 277,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420537098",
      "pull_request_review_id": 406295194,
      "id": 420537098,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNzA5OA==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": 420275966,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not entirely sure; it seems the -seednode flag is used to set up `CConnman` options in `init.cpp`, but I can't see that using the chain parameter stuff, so... yeah, not sure.",
      "created_at": "2020-05-06T04:20:47Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420537098",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420537098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420610372",
      "pull_request_review_id": 406382618,
      "id": 420610372,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMDM3Mg==",
      "diff_hunk": "@@ -251,13 +254,88 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+        if (blockscript.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(blockscript[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "25be6f6c2dc6817c9e6463695a02d1db4780d325",
      "in_reply_to_id": null,
      "user": {
        "login": "brakmic",
        "id": 56779,
        "node_id": "MDQ6VXNlcjU2Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brakmic",
        "html_url": "https://github.com/brakmic",
        "followers_url": "https://api.github.com/users/brakmic/followers",
        "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
        "organizations_url": "https://api.github.com/users/brakmic/orgs",
        "repos_url": "https://api.github.com/users/brakmic/repos",
        "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brakmic/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This line causes compilation errors, because of undeclared *blockscript* variable.\r\n\r\n```shell\r\nchainparams.cpp: In constructor ‘SigNetParams::SigNetParams(const ArgsManager&)’:\r\nchainparams.cpp:284:52: error: ‘blockscript’ was not declared in this scope\r\n         LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\r\n                                                    ^~~~~~~~~~~\r\nmake[2]: *** [Makefile:10152: libbitcoin_common_a-chainparams.o] Error 1\r\n```\r\n\r\nblockscript is only visible within the **else** statement above.  ",
      "created_at": "2020-05-06T08:01:52Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420610372",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420610372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420637114",
      "pull_request_review_id": 406416881,
      "id": 420637114,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzNzExNA==",
      "diff_hunk": "@@ -251,13 +254,88 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+        if (blockscript.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(blockscript[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "25be6f6c2dc6817c9e6463695a02d1db4780d325",
      "in_reply_to_id": 420610372,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, yeah I failed at a rebase. Fixed now.",
      "created_at": "2020-05-06T08:51:15Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420637114",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420637114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420703244",
      "pull_request_review_id": 406501703,
      "id": 420703244,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwMzI0NA==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": 420017940,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> it allowed correctly configured nodes ...\r\n\r\nThat assumes correct configuration. In converse, incorrect configuration will reject addresses of the own network. Leaving this option out will configure all nodes correctly and I don't see a risk where mixing up addresses could lead to an issue. It could even make sense to call it `tb`, see here #12314 ",
      "created_at": "2020-05-06T10:55:37Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420703244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420703244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420760682",
      "pull_request_review_id": 406574313,
      "id": 420760682,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc2MDY4Mg==",
      "diff_hunk": "@@ -3381,31 +3393,37 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n     return (height >= params.SegwitHeight);\n }\n \n-int GetWitnessCommitmentIndex(const CBlock& block)\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx)\n {\n-    int commitpos = -1;\n-    if (!block.vtx.empty()) {\n-        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n-            const CTxOut& vout = block.vtx[0]->vout[o];\n-            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                vout.scriptPubKey[0] == OP_RETURN &&\n-                vout.scriptPubKey[1] == 0x24 &&\n-                vout.scriptPubKey[2] == 0xaa &&\n-                vout.scriptPubKey[3] == 0x21 &&\n-                vout.scriptPubKey[4] == 0xa9 &&\n-                vout.scriptPubKey[5] == 0xed) {\n-                commitpos = o;\n-            }\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    for (size_t o = 0; o < tx.vout.size(); o++) {\n+        const CTxOut& vout = tx.vout[o];\n+        if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+            vout.scriptPubKey[0] == OP_RETURN &&\n+            vout.scriptPubKey[1] == 0x24 &&\n+            vout.scriptPubKey[2] == 0xaa &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": 420214083,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok",
      "created_at": "2020-05-06T12:45:07Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420760682",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420760682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420804460",
      "pull_request_review_id": 406630008,
      "id": 420804460,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwNDQ2MA==",
      "diff_hunk": "@@ -249,13 +252,86 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "in_reply_to_id": 417444593,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It may still be good to change the output if `-seednode` is passed and echo it rather than only \"Using default signet network\"",
      "created_at": "2020-05-06T13:48:04Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420804460",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420804460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420809318",
      "pull_request_review_id": 406630008,
      "id": 420809318,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwOTMxOA==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "in_reply_to_id": 416972958,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/suffixed/prefixed/?\r\n\r\nMaybe add a usage example.",
      "created_at": "2020-05-06T13:54:05Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420809318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420809318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420872951",
      "pull_request_review_id": 406716343,
      "id": 420872951,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg3Mjk1MQ==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems that this also changes the network magic, so this is a switch to run a different signet?",
      "created_at": "2020-05-06T15:14:52Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420872951",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420872951"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421263518",
      "pull_request_review_id": 407175988,
      "id": 421263518,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI2MzUxOA==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "in_reply_to_id": 420872951,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, the blockscript defines the network magic.\r\n\r\nhttps://github.com/bitcoin/bips/blob/master/bip-0325.mediawiki#message-start\r\n\r\nEdit: to clarify, each blockscript is considered its own signet, which is why the network magic depends on the blockscript.",
      "created_at": "2020-05-07T06:17:38Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421263518",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421263518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421266858",
      "pull_request_review_id": 407179911,
      "id": 421266858,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI2Njg1OA==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3e44470efaafac77b538707b02a3fca163b38ea3",
      "in_reply_to_id": 420017940,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't know about calling it `tb`, but I've seen enough friction to warrant removing this option in the first iteration/PR, so I'm removing this parameter for now.",
      "created_at": "2020-05-07T06:26:32Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421266858",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421266858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421501655",
      "pull_request_review_id": 407468546,
      "id": 421501655,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUwMTY1NQ==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "in_reply_to_id": 420872951,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wasn't the point of signet to be a single network and everyone could choose their keys to decide which reorg to \"follow\"?\r\n\r\nE.g. there are different keys like:\r\n\r\n* no_regorgs_key: signs every block, advancing height by 1 every 10 min, never decreasing height. This is the \"true\" signet chain\r\n* 10_reorg_key: reorgs 10 blocks every 20 blocks, then reorgs back to to the \"true\" chain\r\n* 101_reorg_key: reorgs 100 blocks every 200 blocks, then back to the \"true\" chain",
      "created_at": "2020-05-07T13:26:21Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421501655",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421501655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421705685",
      "pull_request_review_id": 407726906,
      "id": 421705685,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwNTY4NQ==",
      "diff_hunk": "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "in_reply_to_id": 420872951,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's on the map, for sure, but it adds complexity I'm trying to avoid in the initial release.\r\n\r\nAs for the single network, yes! The thing is, people are unpredictable, and I can imagine we will end up switching networks on rare occasions; in the end, we may have some form of org handling the privkeys to sign blocks, but initially at least, it will probably be me volunteering to do it, and if I go missing or evil or something, it should be trivial to switch to a new setup (later on, I'd like to make this also possible to switch without having to reset the chain, but that's not MVP stuff). There may also be Bitcoin related companies (e.g. exchanges) who want to have their own signets in addition to the existing one.\r\n\r\nThe approach here is discussed in https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-577999888 but essentially, we are using the same genesis block for all signets, and instead switching the network magic to avoid mixing signets up.\r\n",
      "created_at": "2020-05-07T18:24:58Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421705685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421705685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580302",
      "pull_request_review_id": 417310815,
      "id": 429580302,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MDMwMg==",
      "diff_hunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <consensus/params.h>\n+\n+#include <stdint.h>",
      "path": "src/signet.h",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "7168395ea63d33075a60369f5778eb635208beba",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit 7168395ea63d33075a60369f5778eb635208beba\r\n\r\nAre all these includes really needed? I've removed all non-std-lib includes and everything compiles fine with this diff:\r\n\r\n```diff\r\ndiff --git a/src/signet.h b/src/signet.h\r\nindex b9946f950a..679df85c5d 100644\r\n--- a/src/signet.h\r\n+++ b/src/signet.h\r\n@@ -5,18 +5,16 @@\r\n #ifndef BITCOIN_SIGNET_H\r\n #define BITCOIN_SIGNET_H\r\n \r\n-#if defined(HAVE_CONFIG_H)\r\n-#include <config/bitcoin-config.h>\r\n-#endif\r\n-\r\n-#include <consensus/params.h>\r\n-\r\n-#include <stdint.h>\r\n+#include <cstdint>\r\n+#include <vector>\r\n \r\n class CBlock;\r\n class CScript;\r\n class uint256;\r\n struct CMutableTransaction;\r\n+namespace Consensus {\r\n+struct Params;\r\n+}\r\n \r\n constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\r\n \r\n",
      "created_at": "2020-05-23T21:40:04Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429580302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580400",
      "pull_request_review_id": 417310815,
      "id": 429580400,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MDQwMA==",
      "diff_hunk": "@@ -0,0 +1,122 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);\n+\n+static constexpr int NO_WITNESS_COMMITMENT{-1}; // note: this is copied from validation.h, to avoid a circular dependency issue\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution invalid)\");\n+    }\n+    return true;\n+}\n+\n+uint256 BlockSignetMerkleRoot(const CBlock& block, bool* mutated = nullptr)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    {\n+        // find and delete signet signature\n+        CMutableTransaction mtx(*block.vtx.at(0));\n+        SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "7168395ea63d33075a60369f5778eb635208beba",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in commit 7168395ea63d33075a60369f5778eb635208beba\r\n\r\nI think the ignored return value should be documented\r\n\r\n```suggestion\r\n        (void)SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});\r\n```",
      "created_at": "2020-05-23T21:41:27Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429580400",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580797",
      "pull_request_review_id": 417310815,
      "id": 429580797,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MDc5Nw==",
      "diff_hunk": "@@ -0,0 +1,122 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);\n+\n+static constexpr int NO_WITNESS_COMMITMENT{-1}; // note: this is copied from validation.h, to avoid a circular dependency issue",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "7168395ea63d33075a60369f5778eb635208beba",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit 7168395ea63d33075a60369f5778eb635208beba\r\n\r\nI don't think we solve circular dependencies by copy pasting parts of the dependencies into each other. Doing so slightly defeats the purpose of having separate modules. There are at least two options:\r\n\r\n* Ignore the circular dependency for now (and document it as an exception in the linter)\r\n* Move the witness commitment stuff to a new \"module\". I think libconsensus `consensus/witness_commitment` (or similar) could make sense. This would also help the miner not depend on the server (in a theoretical world where the miner is a separate util binary, where all state is passed in), but only on libconsensus.",
      "created_at": "2020-05-23T21:48:10Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429580797",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429800129",
      "pull_request_review_id": 417542252,
      "id": 429800129,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwMDEyOQ==",
      "diff_hunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <consensus/params.h>\n+\n+#include <stdint.h>",
      "path": "src/signet.h",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "7168395ea63d33075a60369f5778eb635208beba",
      "in_reply_to_id": 429580302,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure about the namespace/struct part, but otherwise sounds reasonable. Updated to this.",
      "created_at": "2020-05-25T08:21:36Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429800129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429800129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429800204",
      "pull_request_review_id": 417542336,
      "id": 429800204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwMDIwNA==",
      "diff_hunk": "@@ -0,0 +1,122 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);\n+\n+static constexpr int NO_WITNESS_COMMITMENT{-1}; // note: this is copied from validation.h, to avoid a circular dependency issue",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "7168395ea63d33075a60369f5778eb635208beba",
      "in_reply_to_id": 429580797,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moving to avoid duplicate makes sense; honestly not sure what I was thinking here.\r\n\r\nI'm not sure it warrants a new module, so I've put it in `consensus/validation.h` for now. If you really do think it should be in a separate file, I'll move it.\r\n",
      "created_at": "2020-05-25T08:21:44Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429800204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429800204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430335345",
      "pull_request_review_id": 418197105,
      "id": 430335345,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMzNTM0NQ==",
      "diff_hunk": "@@ -0,0 +1,121 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "988b8c065b7aa30c68588de35a620930b7a0ff91",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same for those two as well, obviously ;)",
      "created_at": "2020-05-26T11:13:23Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r430335345",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430335345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430854321",
      "pull_request_review_id": 418853413,
      "id": 430854321,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg1NDMyMQ==",
      "diff_hunk": "@@ -0,0 +1,121 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "988b8c065b7aa30c68588de35a620930b7a0ff91",
      "in_reply_to_id": 430335345,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh... yeah, okay. I moved the declarations as well (from `src/validation.h`).",
      "created_at": "2020-05-27T04:45:50Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r430854321",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430854321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432476733",
      "pull_request_review_id": 420942433,
      "id": 432476733,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3NjczMw==",
      "diff_hunk": "@@ -1501,6 +1501,18 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+bool SimpleSignatureChecker::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const",
      "path": "src/script/interpreter.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "72758ea816e143aeed0f7a736af7e8402c0121ef",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`scriptCode` unused ever, maybe drop a comment saying it's just there due to inheritance? ",
      "created_at": "2020-05-29T13:19:17Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432476733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432476733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1504,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432488802",
      "pull_request_review_id": 420942433,
      "id": 432488802,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4ODgwMg==",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Have you given thought to the other script verification flags? People can malleate the witness to make it larger.\r\n\r\nAlternative is to cap the signature size by consensus param.",
      "created_at": "2020-05-29T13:39:33Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432488802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432488802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432491910",
      "pull_request_review_id": 420942433,
      "id": 432491910,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5MTkxMA==",
      "diff_hunk": "@@ -3318,6 +3325,11 @@ bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensu\n     if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n         return false;\n \n+    // Signet only: check block solution, unless this is the genesis block\n+    if (consensusParams.signet_blocks && fCheckPOW && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {\n+        return false;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "4991f1545bbefc100c6ece97787ccb71f7746880",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could return an explicit `state.Invalid` line for better debugging?",
      "created_at": "2020-05-29T13:44:38Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432491910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432491910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432497862",
      "pull_request_review_id": 420942433,
      "id": 432497862,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5Nzg2Mg==",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe too late but: Turning this into a witness stack + adding some validation flags would allow new scripts to be deployed on new networks without any additional work. We do this in Elements which means you can deploy segwit-style scripts, taproot etc.\r\n\r\nOk there's one catch in that the witnessScript has to be known by the blocksigner to fill out the witness stack, but relatively small burden.",
      "created_at": "2020-05-29T13:53:59Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432497862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432497862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911042",
      "pull_request_review_id": 421462540,
      "id": 432911042,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTA0Mg==",
      "diff_hunk": "@@ -1501,6 +1501,18 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+bool SimpleSignatureChecker::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const",
      "path": "src/script/interpreter.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "72758ea816e143aeed0f7a736af7e8402c0121ef",
      "in_reply_to_id": 432476733,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do we usually do that? I know e.g. in other languages unused parameters are marked by giving them an underscore prefix, but I don't think I've seen this in Bitcoin Core.",
      "created_at": "2020-05-31T05:22:52Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1504,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911752",
      "pull_request_review_id": 421463127,
      "id": 432911752,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTc1Mg==",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "in_reply_to_id": 432488802,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "People can already kind of malleate blocks by changing the nonce, since it isn't committed to in the signet hash, so it feels like going for the same level of restrictions as in the block checks is sensible, I think. Thoughts @ajtowns ?",
      "created_at": "2020-05-31T05:36:58Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911752",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911875",
      "pull_request_review_id": 421463224,
      "id": 432911875,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTg3NQ==",
      "diff_hunk": "@@ -3318,6 +3325,11 @@ bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensu\n     if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n         return false;\n \n+    // Signet only: check block solution, unless this is the genesis block\n+    if (consensusParams.signet_blocks && fCheckPOW && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {\n+        return false;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "4991f1545bbefc100c6ece97787ccb71f7746880",
      "in_reply_to_id": 432491910,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sounds good!",
      "created_at": "2020-05-31T05:39:07Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911875",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911959",
      "pull_request_review_id": 421463283,
      "id": 432911959,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTk1OQ==",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "in_reply_to_id": 432497862,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think @ajtowns is working on a patch to Signet to do precisely this, but I think I'm leaning towards keeping it simple for now. I mean, taproot in signet blocks doesn't really make any sense, or open up any possibilities, AFAICT.",
      "created_at": "2020-05-31T05:40:15Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432933933",
      "pull_request_review_id": 421482543,
      "id": 432933933,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMzkzMw==",
      "diff_hunk": "@@ -1501,6 +1501,18 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+bool SimpleSignatureChecker::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const",
      "path": "src/script/interpreter.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "72758ea816e143aeed0f7a736af7e8402c0121ef",
      "in_reply_to_id": 432476733,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In some places we omit unused args (like `scriptCode`), in others we mark it unused like `/* scriptCode */`. In both cases only the type is kept, which indicates that the value can not be used and is unused. Not sure if there is a guideline.",
      "created_at": "2020-05-31T10:49:25Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432933933",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432933933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1504,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433039843",
      "pull_request_review_id": 421590913,
      "id": 433039843,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAzOTg0Mw==",
      "diff_hunk": "@@ -1501,6 +1501,18 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+bool SimpleSignatureChecker::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const",
      "path": "src/script/interpreter.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "72758ea816e143aeed0f7a736af7e8402c0121ef",
      "in_reply_to_id": 432476733,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I updated the code to exclude the name (`scriptCode`) in declaration/definition.",
      "created_at": "2020-06-01T04:49:27Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r433039843",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433039843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1504,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448982216",
      "pull_request_review_id": 441652460,
      "id": 448982216,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4MjIxNg==",
      "diff_hunk": "@@ -136,7 +136,7 @@ BOOST_AUTO_TEST_CASE(key_io_invalid)\n         std::string exp_base58string = test[0].get_str();\n \n         // must be invalid as public and as private key\n-        for (const auto& chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::REGTEST }) {\n+        for (const auto& chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET, CBaseChainParams::REGTEST }) {\n             SelectParams(chain);\n             destination = DecodeDestination(exp_base58string);\n             BOOST_CHECK_MESSAGE(!IsValidDestination(destination), \"IsValid pubkey in mainnet:\" + strTest);",
      "path": "src/test/key_io_tests.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This may be out of scope for this PR, but as long as we're here - should the word \"mainnet\" actually be replaced by the name of the network selected in the for loop? `chain.NetworkIDString()`",
      "created_at": "2020-07-02T12:58:35Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448982216",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448982216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 142,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448985621",
      "pull_request_review_id": 441656778,
      "id": 448985621,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4NTYyMQ==",
      "diff_hunk": "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do you think it would be helpful to print the decoded ASM of the script as well?",
      "created_at": "2020-07-02T13:03:56Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448985621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448985621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448985929",
      "pull_request_review_id": 441657194,
      "id": 448985929,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4NTkyOQ==",
      "diff_hunk": "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`OP_1 03ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430 OP_1 OP_CHECKMULTISIG`\r\n\r\nWhy did you choose 1-of-1 multisig instead of a single `OP_CHECKSIG` ?",
      "created_at": "2020-07-02T13:04:26Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448985929",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448985929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448995439",
      "pull_request_review_id": 441669795,
      "id": 448995439,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk5NTQzOQ==",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution invalid)\");\n+    }\n+    return true;\n+}\n+\n+uint256 BlockSignetMerkleRoot(const CBlock& block, bool* mutated = nullptr)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    {\n+        // find and delete signet signature\n+        CMutableTransaction mtx(*block.vtx.at(0));\n+        (void)SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});\n+        leaves[0] = mtx.GetHash();\n+    }\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves), mutated);\n+}\n+\n+uint256 GetSignetHash(const CBlock& block)\n+{\n+    if (block.vtx.size() == 0) return block.GetHash();\n+    return (CHashWriter(SER_DISK, PROTOCOL_VERSION) << block.nVersion << block.hashPrevBlock << BlockSignetMerkleRoot(block) << block.nTime << block.nBits).GetHash();\n+}\n+\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result)\n+{\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) return false;",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This may be more of a note on BIP325 in general, but on mainnet currently it is not invalid to produce a block with no transactions and therefore no witness commitment in the coinbase tx.\r\n\r\nI found a recent example: https://blockstream.info/block/0000000000000000000e77c9c81498be9a4aa226d4be35a19a0fb11d99331d6a\r\n\r\nWhy does the spec depend on a witness commitment instead of new `OP_RETURN` for this purpose?",
      "created_at": "2020-07-02T13:19:05Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448995439",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448995439"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449050474",
      "pull_request_review_id": 441743392,
      "id": 449050474,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1MDQ3NA==",
      "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "path": "src/signet.h",
      "position": null,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Array-to-pointer safety nit: What about `const std::array<uint8_t, 4>` (instead of `const uint8_t header[4]`) and giving `SIGNET_HEADER` the same treatment?",
      "created_at": "2020-07-02T14:39:06Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r449050474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449050474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449105201",
      "pull_request_review_id": 441815401,
      "id": 449105201,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEwNTIwMQ==",
      "diff_hunk": "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"sb\";\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;",
      "path": "src/chainparams.cpp",
      "position": 107,
      "original_position": 104,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why require standard for signet? This is `false` for testnet. Is the idea just to be more mainnet-like?",
      "created_at": "2020-07-02T15:45:09Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r449105201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449105201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449228243",
      "pull_request_review_id": 441970331,
      "id": 449228243,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyODI0Mw==",
      "diff_hunk": "@@ -144,4 +144,13 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+\n+/** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 11,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "fe5b704bdd4a6813b3fde72dd88d218fbf989e5b",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think if you're moving these functions into consensus/ then they should either be inline (which seems reasonable enough) or should be in a new consensus/validation.cpp as otherwise libconsensus won't be self-contained.",
      "created_at": "2020-07-02T19:35:18Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r449228243",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449228243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451873501",
      "pull_request_review_id": 441970331,
      "id": 451873501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3MzUwMQ==",
      "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "path": "src/signet.h",
      "position": null,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 449050474,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think using a span here would work even better.",
      "created_at": "2020-07-08T23:08:46Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r451873501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451873501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419296",
      "pull_request_review_id": 446963828,
      "id": 453419296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTI5Ng==",
      "diff_hunk": "@@ -136,7 +136,7 @@ BOOST_AUTO_TEST_CASE(key_io_invalid)\n         std::string exp_base58string = test[0].get_str();\n \n         // must be invalid as public and as private key\n-        for (const auto& chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::REGTEST }) {\n+        for (const auto& chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET, CBaseChainParams::REGTEST }) {\n             SelectParams(chain);\n             destination = DecodeDestination(exp_base58string);\n             BOOST_CHECK_MESSAGE(!IsValidDestination(destination), \"IsValid pubkey in mainnet:\" + strTest);",
      "path": "src/test/key_io_tests.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 448982216,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's a good point, yeah. I think it deserves a dedicated PR though, even if a one liner.",
      "created_at": "2020-07-13T03:44:47Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453419296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 142,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419619",
      "pull_request_review_id": 446964132,
      "id": 453419619,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTYxOQ==",
      "diff_hunk": "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 448985621,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From personal experience, this is a check point to ensure you're not accidentally running on the wrong signet, in which case the ASM won't really help any.",
      "created_at": "2020-07-13T03:46:06Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453419619",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419873",
      "pull_request_review_id": 446964421,
      "id": 453419873,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTg3Mw==",
      "diff_hunk": "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 448985929,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Mostly as I expect there to be backup signers and such, so having it on a multisig setup from the start seems sensible.",
      "created_at": "2020-07-13T03:47:19Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453419873",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453420748",
      "pull_request_review_id": 446965461,
      "id": 453420748,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDc0OA==",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution invalid)\");\n+    }\n+    return true;\n+}\n+\n+uint256 BlockSignetMerkleRoot(const CBlock& block, bool* mutated = nullptr)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    {\n+        // find and delete signet signature\n+        CMutableTransaction mtx(*block.vtx.at(0));\n+        (void)SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});\n+        leaves[0] = mtx.GetHash();\n+    }\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves), mutated);\n+}\n+\n+uint256 GetSignetHash(const CBlock& block)\n+{\n+    if (block.vtx.size() == 0) return block.GetHash();\n+    return (CHashWriter(SER_DISK, PROTOCOL_VERSION) << block.nVersion << block.hashPrevBlock << BlockSignetMerkleRoot(block) << block.nTime << block.nBits).GetHash();\n+}\n+\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result)\n+{\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) return false;",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 448995439,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's a good point, but then again, it IS allowed to put a witness commitment in a block with no transactions (as evidenced by most of the signet blocks right now), so it doesn't feel like a huge deal in the end. After all, the signet blocks will \"suffer\" from the extra overhead with empty blocks, but that seems like an acceptable trade-off.\r\n\r\nThe question is if it's simpler to do an OP_RETURN instead of a witness commitment extension. @sipa or someone, would love your input on this.",
      "created_at": "2020-07-13T03:51:40Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453420748",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453420748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453424499",
      "pull_request_review_id": 446969714,
      "id": 453424499,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNDQ5OQ==",
      "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "path": "src/signet.h",
      "position": null,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 449050474,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Trying to switch the `SIGNET_HEADER` declaration into a `Span`, I end up with this ugly beast. Anything I can do to improve that? Going to go with @practicalswift's suggestion for now. :)\r\n\r\n```C++\r\nconst Span<const uint8_t> SIGNET_HEADER =\r\n  MakeSpan(\r\n    (const std::vector<const uint8_t>)std::vector<const uint8_t>{0xec, 0xc7, 0xda, 0xa2}\r\n  );\r\n```\r\n",
      "created_at": "2020-07-13T04:09:56Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453424499",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453424499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453425026",
      "pull_request_review_id": 446970277,
      "id": 453425026,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNTAyNg==",
      "diff_hunk": "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"sb\";\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;",
      "path": "src/chainparams.cpp",
      "position": 107,
      "original_position": 104,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 449105201,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, one of the design goals with signet is to be as close to mainnet as possible. The further it deviates, the less useful it is for people who want to make sure their stuff works.",
      "created_at": "2020-07-13T04:12:29Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453425026",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453425026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453425899",
      "pull_request_review_id": 446971183,
      "id": 453425899,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNTg5OQ==",
      "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "path": "src/signet.h",
      "position": null,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 449050474,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, Span does not store any data. Doing that would be illegal (it's creating a vector, storing a pointer to its data in a Span, and then throwing the vector away).\r\n\r\nJust do this:\r\n\r\n```c++\r\nconst uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\r\n```\r\n(or `std::array`, or `std::vector`, or whatever container you prefer...)\r\n\r\nAnd make `GetWitnessCommitmentSection` accept a `Span<const uint8_t>`. You can just pass `SIGNET_HEADER` as argument to `GetWitnessCommitmentSection` - it'll be converted to a Span on the fly.",
      "created_at": "2020-07-13T04:16:27Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453425899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453425899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453427204",
      "pull_request_review_id": 446972609,
      "id": 453427204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNzIwNA==",
      "diff_hunk": "@@ -144,4 +144,13 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+\n+/** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 11,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "fe5b704bdd4a6813b3fde72dd88d218fbf989e5b",
      "in_reply_to_id": 449228243,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Experimenting with making these inline and contained in `consensus/validation.h`.\r\n",
      "created_at": "2020-07-13T04:22:53Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453427204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453427204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453429312",
      "pull_request_review_id": 446974984,
      "id": 453429312,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyOTMxMg==",
      "diff_hunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "path": "src/signet.h",
      "position": null,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 449050474,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Gotcha! Thanks.",
      "created_at": "2020-07-13T04:32:59Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453429312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453429312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457006827",
      "pull_request_review_id": 451270809,
      "id": 457006827,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAwNjgyNw==",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "in_reply_to_id": 432488802,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since you can already malleate the nonce to get a different block, and can't build on the block without being able to do a valid signature, I guess malleation isn't really a concern, but I think extra flags would make sense. I wonder if exporting  `validation.cpp:GetBlockScriptFlags` and calling it with the genesis block (or making it accept pindexPrev and calling it with nullptr) to get the script flags would make sense.",
      "created_at": "2020-07-20T03:08:22Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r457006827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457006827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457010234",
      "pull_request_review_id": 451272717,
      "id": 457010234,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxMDIzNA==",
      "diff_hunk": "@@ -166,6 +166,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */\n+class SimpleSignatureChecker : public BaseSignatureChecker",
      "path": "src/script/interpreter.h",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "e6ec7783d764b04c0122bb466494565929e74b1e",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've done a proposal to change from a special signature checker to reusing transaction signature checking at https://github.com/bitcoin/bips/pull/947 . @sdaftuar I think this might resolve your concern from https://github.com/bitcoin/bitcoin/pull/16653#issuecomment-523495761",
      "created_at": "2020-07-20T03:17:28Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r457010234",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457010234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464010088",
      "pull_request_review_id": 459609278,
      "id": 464010088,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMDA4OA==",
      "diff_hunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }",
      "path": "src/signet.h",
      "position": null,
      "original_position": 34,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nnit, args can have the same name as members.",
      "created_at": "2020-08-01T23:23:13Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464010088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464010088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464010767",
      "pull_request_review_id": 459609278,
      "id": 464010767,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMDc2Nw==",
      "diff_hunk": "@@ -80,6 +80,13 @@ struct Params {\n     int64_t DifficultyAdjustmentInterval() const { return nPowTargetTimespan / nPowTargetSpacing; }\n     uint256 nMinimumChainWork;\n     uint256 defaultAssumeValid;\n+\n+    /**\n+     * If true, witness commitments contain a payload equal to a Bitcoin Script solution\n+     * to the signet challenge.\n+     */\n+    bool signet_blocks{false};",
      "path": "src/consensus/params.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nnit, just noting `signet_blocks` is only used in the next commit.",
      "created_at": "2020-08-01T23:33:54Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464010767",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464010767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011050",
      "pull_request_review_id": 459609278,
      "id": 464011050,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMTA1MA==",
      "diff_hunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }\n+\n+    static SignetTxs Create(const CBlock& block, const CScript& challenge);",
      "path": "src/signet.h",
      "position": 32,
      "original_position": 36,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nWhy have this separated? Could be in the to the constructor?",
      "created_at": "2020-08-01T23:37:58Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464011050",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011118",
      "pull_request_review_id": 459609278,
      "id": 464011118,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMTExOA==",
      "diff_hunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }\n+\n+    static SignetTxs Create(const CBlock& block, const CScript& challenge);\n+\n+public:\n+    SignetTxs(const CBlock& block, const CScript& challenge) : SignetTxs(Create(block, challenge)) { }\n+\n+    CTransaction to_spend;",
      "path": "src/signet.h",
      "position": null,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nThese could be const?",
      "created_at": "2020-08-01T23:39:07Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464011118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011952",
      "pull_request_review_id": 459609278,
      "id": 464011952,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMTk1Mg==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+    {",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nCan't find a reason for this block. Is this a leftover?",
      "created_at": "2020-08-01T23:52:09Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464011952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464013798",
      "pull_request_review_id": 459611192,
      "id": 464013798,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMzc5OA==",
      "diff_hunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }\n+\n+    static SignetTxs Create(const CBlock& block, const CScript& challenge);",
      "path": "src/signet.h",
      "position": 32,
      "original_position": 36,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "in_reply_to_id": 464011050,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The member vars are CTransactions rather than CMutableTransactions, and are effectively const, so have to be list initialized, so the actual logic has to be moved elsewhere. (At least as far as I can see)",
      "created_at": "2020-08-02T00:21:22Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464013798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464013798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464014430",
      "pull_request_review_id": 459611517,
      "id": 464014430,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxNDQzMA==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+    {",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "in_reply_to_id": 464011952,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it was making it possible to free up some data at one point, but now there's nothing going on afterwards anymore.",
      "created_at": "2020-08-02T00:31:20Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464014430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464014430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464015795",
      "pull_request_review_id": 459612260,
      "id": 464015795,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxNTc5NQ==",
      "diff_hunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }\n+\n+    static SignetTxs Create(const CBlock& block, const CScript& challenge);",
      "path": "src/signet.h",
      "position": 32,
      "original_position": 36,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "in_reply_to_id": 464011050,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the explanation 👍 ",
      "created_at": "2020-08-02T00:53:07Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464015795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464015795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464176423",
      "pull_request_review_id": 459728598,
      "id": 464176423,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE3NjQyMw==",
      "diff_hunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }",
      "path": "src/signet.h",
      "position": null,
      "original_position": 34,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "359badf294c8fa632b7df479a3e146cf28658f6b",
      "in_reply_to_id": 464010088,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I personally find that confusing. I think renaming the instance vars to `m_*` is worthwhile, though, so will do that.",
      "created_at": "2020-08-03T03:29:25Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464176423",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464176423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469684620",
      "pull_request_review_id": 466430363,
      "id": 469684620,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4NDYyMA==",
      "diff_hunk": "@@ -1162,6 +1163,12 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    // Signet only: check block solution, unless this is the genesis block\n+    if (consensusParams.signet_blocks && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "4b96892b06a5f45e9dc1117dda0552822bfb5ce4",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason not to move the `block.GetHash() != consensusParams.hashGenesisBlock` check into `CheckBlockSolution`?",
      "created_at": "2020-08-13T04:08:11Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469684620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469684620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469709732",
      "pull_request_review_id": 466458917,
      "id": 469709732,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcwOTczMg==",
      "diff_hunk": "@@ -1162,6 +1163,12 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    // Signet only: check block solution, unless this is the genesis block\n+    if (consensusParams.signet_blocks && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "4b96892b06a5f45e9dc1117dda0552822bfb5ce4",
      "in_reply_to_id": 469684620,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There was, but not any more -- fixed, thanks!",
      "created_at": "2020-08-13T05:44:47Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469709732",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469709732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469713812",
      "pull_request_review_id": 466463623,
      "id": 469713812,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcxMzgxMg==",
      "diff_hunk": "@@ -250,13 +255,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 99,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "96e3d1e45157cb8f2c7ecae8366fe076cc913742",
      "in_reply_to_id": null,
      "user": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why are these prefix values different from testnet/regtest?",
      "created_at": "2020-08-13T05:57:20Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469713812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469713812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": 323,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469718546",
      "pull_request_review_id": 466469370,
      "id": 469718546,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcxODU0Ng==",
      "diff_hunk": "@@ -250,13 +255,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 99,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "96e3d1e45157cb8f2c7ecae8366fe076cc913742",
      "in_reply_to_id": 469713812,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Having them be the same might cause confusion when someone tries to use test/signet to transact on sig/testnet.. no biggie for regtest, which I assume is why (reg)test(net) share prefixes.",
      "created_at": "2020-08-13T06:12:18Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469718546",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469718546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": 323,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470999292",
      "pull_request_review_id": 467960074,
      "id": 470999292,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk5OTI5Mg==",
      "diff_hunk": "@@ -80,6 +80,13 @@ struct Params {\n     int64_t DifficultyAdjustmentInterval() const { return nPowTargetTimespan / nPowTargetSpacing; }\n     uint256 nMinimumChainWork;\n     uint256 defaultAssumeValid;\n+\n+    /**\n+     * If true, witness commitments contain a payload equal to a Bitcoin Script solution\n+     * to the signet challenge.",
      "path": "src/consensus/params.h",
      "position": null,
      "original_position": 7,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3d1b58f1efd60a44beaeb3ef88ee2a616a8566d4",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Could add reference to BIP325 here",
      "created_at": "2020-08-15T15:12:19Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r470999292",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470999292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471010081",
      "pull_request_review_id": 467960074,
      "id": 471010081,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAxMDA4MQ==",
      "diff_hunk": "@@ -0,0 +1,151 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    bool bad = false;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        bad = true; // no commitment\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+            if (!v.empty()) bad = true;\n+        } catch (const std::exception&) {\n+            bad = true;\n+        }\n+    }\n+    if (bad) {\n+        // treat deserialization problems as not providing any signature and an unspendable input\n+        tx_to_spend.vout[0].scriptPubKey = CScript(OP_RETURN);\n+        tx_spending.vin[0].scriptSig.clear();\n+        tx_spending.vin[0].scriptWitness.stack.clear();\n+    } else {\n+        uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+        data.clear();\n+        CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        writer << block.nVersion;\n+        writer << block.hashPrevBlock;\n+        writer << signet_merkle;\n+        writer << block.nTime;\n+        tx_to_spend.vin[0].scriptSig << data;\n+    }\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness comittment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 132,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3d1b58f1efd60a44beaeb3ef88ee2a616a8566d4",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");\r\n```",
      "created_at": "2020-08-15T16:14:09Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471010081",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471010081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471010900",
      "pull_request_review_id": 467960074,
      "id": 471010900,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAxMDkwMA==",
      "diff_hunk": "@@ -150,4 +150,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+static inline int GetWitnessCommitmentIndex(const CBlock& block)\n+{\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    if (!block.vtx.empty()) {\n+        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n+            const CTxOut& vout = block.vtx[0]->vout[o];\n+            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+                vout.scriptPubKey[0] == OP_RETURN &&\n+                vout.scriptPubKey[1] == 0x24 &&\n+                vout.scriptPubKey[2] == 0xaa &&\n+                vout.scriptPubKey[3] == 0x21 &&\n+                vout.scriptPubKey[4] == 0xa9 &&\n+                vout.scriptPubKey[5] == 0xed) {\n+                commitpos = o;\n+            }\n+        }\n+    }\n+    return commitpos;",
      "path": "src/consensus/validation.h",
      "position": 35,
      "original_position": 27,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3c22f5fcd895c9ea7897c637a254a657a2581410",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: to consider if you feel like improving this a little more since it's not strictly move-only anyway (github doesn't highlight changes here, which is annoying. This drops the `commitpos` variable and changes for loop increment to conform with the style guide.)\r\n\r\n```suggestion\r\n    if (!block.vtx.empty()) {\r\n        for (size_t o = 0; o < block.vtx[0]->vout.size(); ++o) {\r\n            const CTxOut& vout = block.vtx[0]->vout[o];\r\n            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\r\n                vout.scriptPubKey[0] == OP_RETURN &&\r\n                vout.scriptPubKey[1] == 0x24 &&\r\n                vout.scriptPubKey[2] == 0xaa &&\r\n                vout.scriptPubKey[3] == 0x21 &&\r\n                vout.scriptPubKey[4] == 0xa9 &&\r\n                vout.scriptPubKey[5] == 0xed) {\r\n                return o;\r\n            }\r\n        }\r\n    }\r\n    return NO_WITNESS_COMMITMENT;\r\n```",
      "created_at": "2020-08-15T16:23:48Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471010900",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471010900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": 163,
      "original_start_line": 161,
      "start_side": "RIGHT",
      "line": 178,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471026715",
      "pull_request_review_id": 467960074,
      "id": 471026715,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAyNjcxNQ==",
      "diff_hunk": "@@ -0,0 +1,151 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    bool bad = false;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        bad = true; // no commitment\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+            if (!v.empty()) bad = true;\n+        } catch (const std::exception&) {\n+            bad = true;\n+        }\n+    }\n+    if (bad) {\n+        // treat deserialization problems as not providing any signature and an unspendable input\n+        tx_to_spend.vout[0].scriptPubKey = CScript(OP_RETURN);\n+        tx_spending.vin[0].scriptSig.clear();\n+        tx_spending.vin[0].scriptWitness.stack.clear();\n+    } else {\n+        uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+        data.clear();\n+        CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        writer << block.nVersion;\n+        writer << block.hashPrevBlock;\n+        writer << signet_merkle;\n+        writer << block.nTime;\n+        tx_to_spend.vin[0].scriptSig << data;\n+    }\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 131,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3d1b58f1efd60a44beaeb3ef88ee2a616a8566d4",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: can be shortened (or make `cidx` const).\r\n```suggestion\r\n    if (GetWitnessCommitmentIndex(block) == NO_WITNESS_COMMITMENT) {\r\n```",
      "created_at": "2020-08-15T19:32:03Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471026715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471026715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471026891",
      "pull_request_review_id": 467960074,
      "id": 471026891,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAyNjg5MQ==",
      "diff_hunk": "@@ -0,0 +1,151 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    int cidx = GetWitnessCommitmentIndex(block);",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3d1b58f1efd60a44beaeb3ef88ee2a616a8566d4",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    const int cidx = GetWitnessCommitmentIndex(block);\r\n```",
      "created_at": "2020-08-15T19:34:53Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471026891",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471026891"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471182577",
      "pull_request_review_id": 468112966,
      "id": 471182577,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4MjU3Nw==",
      "diff_hunk": "@@ -150,4 +150,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+static inline int GetWitnessCommitmentIndex(const CBlock& block)\n+{\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    if (!block.vtx.empty()) {\n+        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n+            const CTxOut& vout = block.vtx[0]->vout[o];\n+            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+                vout.scriptPubKey[0] == OP_RETURN &&\n+                vout.scriptPubKey[1] == 0x24 &&\n+                vout.scriptPubKey[2] == 0xaa &&\n+                vout.scriptPubKey[3] == 0x21 &&\n+                vout.scriptPubKey[4] == 0xa9 &&\n+                vout.scriptPubKey[5] == 0xed) {\n+                commitpos = o;\n+            }\n+        }\n+    }\n+    return commitpos;",
      "path": "src/consensus/validation.h",
      "position": 35,
      "original_position": 27,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "3c22f5fcd895c9ea7897c637a254a657a2581410",
      "in_reply_to_id": 471010900,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wanted to do even more (e.g. loop from end and break on first encounter, rather than always going through all of them), but I refrained as I wanted minimal changes. ~~[Edit: I think I'm misremembering something, because this code doesn't do what I said (anymore?)]~~ [Edit 2: your changes actually change the behavior. See the Segwit BIP on witness commitment.] Chicken-egg issue though, as we tend to discourage pure refactors, and we also tend to shy away from changing things unnecessarily in unrelated PRs...",
      "created_at": "2020-08-17T00:45:12Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471182577",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471182577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": 163,
      "original_start_line": 161,
      "start_side": "RIGHT",
      "line": 178,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471267630",
      "pull_request_review_id": 468212169,
      "id": 471267630,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI2NzYzMA==",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>",
      "path": "src/signet.h",
      "position": null,
      "original_position": 15,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8b83160a74b62cd2d41ab011d8228a2c94c7800e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "9d19caf nit: sort ;) or just run clang-format on signet.h/signet.cpp\r\n```diff\r\n #include <consensus/params.h>\r\n-#include <primitives/transaction.h>\r\n #include <primitives/block.h>\r\n+#include <primitives/transaction.h>\r\n #include <uint256.h>\r\n \r\n+#include <array>\r\n #include <cstdint>\r\n #include <vector>\r\n-#include <array>\r\n```",
      "created_at": "2020-08-17T06:59:16Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471267630",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471267630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471321602",
      "pull_request_review_id": 468265194,
      "id": 471321602,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyMTYwMg==",
      "diff_hunk": "@@ -922,16 +923,21 @@ std::string ArgsManager::GetChainName() const\n     };\n \n     const bool fRegTest = get_net(\"-regtest\");\n+    const bool fSigNet  = get_net(\"-signet\");\n     const bool fTestNet = get_net(\"-testnet\");\n     const bool is_chain_arg_set = IsArgSet(\"-chain\");\n \n-    if ((int)is_chain_arg_set + (int)fRegTest + (int)fTestNet > 1) {\n-        throw std::runtime_error(\"Invalid combination of -regtest, -testnet and -chain. Can use at most one.\");\n+    if ((int)is_chain_arg_set + (int)fRegTest + (int)fTestNet + (int)fSigNet > 1) {\n+        throw std::runtime_error(\"Invalid combination of -regtest, -testnet, -signet and -chain. Can use at most one.\");",
      "path": "src/util/system.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "6920af6 nit, consistent order\r\n```suggestion\r\n        throw std::runtime_error(\"Invalid combination of -regtest, -signet, -testnet and -chain. Can use at most one.\");\r\n```",
      "created_at": "2020-08-17T08:27:22Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471321602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471321602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 931,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471324349",
      "pull_request_review_id": 468265194,
      "id": 471324349,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyNDM0OQ==",
      "diff_hunk": "@@ -39,10 +43,11 @@ std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain\n         return MakeUnique<CBaseChainParams>(\"\", 8332);\n     else if (chain == CBaseChainParams::TESTNET)\n         return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n+    else if (chain == CBaseChainParams::SIGNET)\n+        return MakeUnique<CBaseChainParams>(\"signet\", 38332);\n     else if (chain == CBaseChainParams::REGTEST)\n         return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));",
      "path": "src/chainparamsbase.cpp",
      "position": 36,
      "original_position": 28,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "6920af6 nit: while here, it would be nice to add brackets to these successive conditionals\r\n\r\nedit: idem in `CreateChainParams`, line 485 ",
      "created_at": "2020-08-17T08:32:06Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471324349",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471324349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471325983",
      "pull_request_review_id": 468265194,
      "id": 471325983,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyNTk4Mw==",
      "diff_hunk": "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "6920af6 for node operators, perhaps state the accepted format and/or give an example for the seednode and/or blockscript",
      "created_at": "2020-08-17T08:34:53Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471325983",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471325983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471353926",
      "pull_request_review_id": 468305903,
      "id": 471353926,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM1MzkyNg==",
      "diff_hunk": "@@ -0,0 +1,146 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "When fuzzing the signet code I noticed that the `block.vtx.empty()` isn't handled here. What about handling it by returning invalid, or alternatively asserting that `!block.vtx.empty()`?",
      "created_at": "2020-08-17T09:26:15Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471353926",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471353926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471363273",
      "pull_request_review_id": 468317445,
      "id": 471363273,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM2MzI3Mw==",
      "diff_hunk": "@@ -0,0 +1,146 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "in_reply_to_id": 471353926,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch! Done. Also added a commit with your fuzzer (under your name).",
      "created_at": "2020-08-17T09:43:21Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471363273",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471363273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471632336",
      "pull_request_review_id": 468668921,
      "id": 471632336,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYzMjMzNg==",
      "diff_hunk": "@@ -265,19 +265,25 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n-        if (blockscript.size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/chainparams.cpp",
      "position": 41,
      "original_position": 10,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "ad33fd5b5f74bb8ff56ffe901f5a1825e73ecf44",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in ad33fd5b5f74bb8ff56ffe901f5a1825e73ecf44\r\n\r\nnit: The help info on the args could be updated to reflect the defaults to the global signet. Right now it's not obvious that blockscript and seednode are optional.",
      "created_at": "2020-08-17T17:16:41Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471632336",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471632336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 269,
      "original_line": 269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471636977",
      "pull_request_review_id": 468671620,
      "id": 471636977,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYzNjk3Nw==",
      "diff_hunk": "@@ -265,19 +265,25 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n-        if (blockscript.size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/chainparams.cpp",
      "position": 41,
      "original_position": 10,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "ad33fd5b5f74bb8ff56ffe901f5a1825e73ecf44",
      "in_reply_to_id": 471632336,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Otherwise all the changes look good to me!",
      "created_at": "2020-08-17T17:20:30Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471636977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471636977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 269,
      "original_line": 269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474815018",
      "pull_request_review_id": 472644904,
      "id": 474815018,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxNTAxOA==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"script\" is really not self-documenting.",
      "created_at": "2020-08-21T16:54:19Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r474815018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474815018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474819686",
      "pull_request_review_id": 472644904,
      "id": 474819686,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxOTY4Ng==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`s/ExtractCommitmentSection/ExtractCommitmentSectionAndModifyCB/` ?",
      "created_at": "2020-08-21T17:03:52Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r474819686",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474819686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474819953",
      "pull_request_review_id": 472644904,
      "id": 474819953,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxOTk1Mw==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 474819686,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you please re-order the arguments so they are all const first, then non-const, or vice versa?",
      "created_at": "2020-08-21T17:04:29Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r474819953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474819953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474820565",
      "pull_request_review_id": 472644904,
      "id": 474820565,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgyMDU2NQ==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 474819686,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`s/script/witness_commitment_script_to_replace/` or something? really would like this more self-documenting",
      "created_at": "2020-08-21T17:05:50Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r474820565",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474820565"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474822582",
      "pull_request_review_id": 472644904,
      "id": 474822582,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgyMjU4Mg==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`s/found/found_header/`",
      "created_at": "2020-08-21T17:10:04Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r474822582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474822582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474823457",
      "pull_request_review_id": 472644904,
      "id": 474823457,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgyMzQ1Nw==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "please move this to the top of the function, weird to only clear when successfully finding data",
      "created_at": "2020-08-21T17:11:46Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r474823457",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474823457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474835423",
      "pull_request_review_id": 472644904,
      "id": 474835423,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzNTQyMw==",
      "diff_hunk": "@@ -0,0 +1,146 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "in_reply_to_id": 471353926,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`s/cb/modified_cb/` ? ",
      "created_at": "2020-08-21T17:36:25Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r474835423",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474835423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474835734",
      "pull_request_review_id": 472644904,
      "id": 474835734,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzNTczNA==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`s/data/witness_data/`",
      "created_at": "2020-08-21T17:37:03Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r474835734",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474835734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474836607",
      "pull_request_review_id": 472644904,
      "id": 474836607,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzNjYwNw==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 102,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just make a new vector named `to_spend_data`",
      "created_at": "2020-08-21T17:38:59Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r474836607",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474836607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475091870",
      "pull_request_review_id": 472927139,
      "id": 475091870,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5MTg3MA==",
      "diff_hunk": "@@ -151,4 +151,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+static inline int GetWitnessCommitmentIndex(const CBlock& block)",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 10,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "6aae461a4e565b3639bc84a512d72c26f26d225c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in commit \"validation: move GetWitnessCommitmentIndex to consensus/validation\":\r\n\r\nAny reason to add a `static` in a header file? Also, why is the docstring changed in a move-only commit?",
      "created_at": "2020-08-22T13:34:03Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475091870",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475091870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475095527",
      "pull_request_review_id": 472927139,
      "id": 475095527,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5NTUyNw==",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <span.h>",
      "path": "src/signet.h",
      "position": null,
      "original_position": 17,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in commit 0855e12485848b578bd2796d24d5a16cbb763b72:\r\n\r\nAre any of the includes here used in the header? (Except for the first three)",
      "created_at": "2020-08-22T14:19:12Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475095527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475095527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475099766",
      "pull_request_review_id": 472927139,
      "id": 475099766,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5OTc2Ng==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 474815018,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> \"script\" is really not self-documenting.\r\n\r\n\r\n`witness_commitment` seems a better name",
      "created_at": "2020-08-22T15:08:42Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475099766",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475099766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475100199",
      "pull_request_review_id": 472927139,
      "id": 475100199,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwMDE5OQ==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 474835734,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">  s/data/witness_data/\r\n\r\n\r\ndata includes both the scritptSig and scriptWitness, so instead of witness_data, what about `signet_solution` (the BIP also calls it that way)",
      "created_at": "2020-08-22T15:13:44Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475100199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475100199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475100672",
      "pull_request_review_id": 472927139,
      "id": 475100672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwMDY3Mg==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 102,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 474836607,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Just make a new vector named to_spend_data\r\n\r\n\r\nor `block_data` (as it is called in the BIP)",
      "created_at": "2020-08-22T15:19:33Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475100672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475100672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475104288",
      "pull_request_review_id": 472927139,
      "id": 475104288,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNDI4OA==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please don't use local system errors for remote peer misbehaviour. If you want to log the reject reason, please use a log category (probably VALIDATION?).",
      "created_at": "2020-08-22T16:01:04Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475104288",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475104288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475104486",
      "pull_request_review_id": 472927139,
      "id": 475104486,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNDQ4Ng==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475104288,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, it seems this check can be removed (if the assert in `Create` is replaced with a `return`)",
      "created_at": "2020-08-22T16:03:26Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475104486",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475104486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475115595",
      "pull_request_review_id": 472942257,
      "id": 475115595,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTU5NQ==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");\n+    }\n+\n+    const CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    const SignetTxs signet_txs(block, challenge);\n+\n+    if (!signet_txs.m_valid) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution parse failure)\");\n+    }\n+\n+    const CScript& scriptSig = signet_txs.m_to_sign.vin[0].scriptSig;\n+    const CScriptWitness& witness = signet_txs.m_to_sign.vin[0].scriptWitness;\n+\n+    if (scriptSig.empty() && witness.stack.empty()) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 138,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "15a26087a3405903c562fce8c8d7682731b807c8",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason for this check? Unless I am mistaken, a challenge that allows both to be empty and still be valid also allows the solution to be non-empty and thus mutable. Allowing mutable solutions is probably no less than a footgun that allows empty solutions.",
      "created_at": "2020-08-22T18:06:19Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475115595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475115595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475118311",
      "pull_request_review_id": 472943994,
      "id": 475118311,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODMxMQ==",
      "diff_hunk": "@@ -848,8 +848,8 @@ struct ArgsMergeTestingSetup : public BasicTestingSetup {\n             ForEachNoDup(conf_actions, SET, SECTION_NEGATE, [&] {\n                 for (bool soft_set : {false, true}) {\n                     for (bool force_set : {false, true}) {\n-                        for (const std::string& section : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET}) {\n-                            for (const std::string& network : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET}) {\n+                        for (const std::string& section : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET}) {\n+                            for (const std::string& network : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET}) {",
      "path": "src/test/util_tests.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "15a26087a3405903c562fce8c8d7682731b807c8",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason to add this here? I think the test only wants to test mainnet vs non-mainnet behavior and not specific chain behavior",
      "created_at": "2020-08-22T18:36:24Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475118311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475118311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 852,
      "original_line": 852,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475345512",
      "pull_request_review_id": 473123041,
      "id": 475345512,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NTUxMg==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 474819686,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Renamed `FetchAndClearCommitmentSection`.",
      "created_at": "2020-08-24T05:08:57Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475345512",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475345512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475350377",
      "pull_request_review_id": 473128583,
      "id": 475350377,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MDM3Nw==",
      "diff_hunk": "@@ -151,4 +151,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+static inline int GetWitnessCommitmentIndex(const CBlock& block)",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 10,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "6aae461a4e565b3639bc84a512d72c26f26d225c",
      "in_reply_to_id": 475091870,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `static inline` seems to be useful in some cases, unless I'm misreading https://stackoverflow.com/questions/47819719/static-inline-functions-in-a-header-file . No strong opinion though (and it seems to compile without `static`).\r\n\r\nDocstring change was a leftover from when I modified this to take a transaction -- thanks for pointing it out! Reverting.",
      "created_at": "2020-08-24T05:27:34Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475350377",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475350377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475350981",
      "pull_request_review_id": 473129295,
      "id": 475350981,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MDk4MQ==",
      "diff_hunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <span.h>",
      "path": "src/signet.h",
      "position": null,
      "original_position": 17,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475095527,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "They weren't -- moved to `signet.cpp`.",
      "created_at": "2020-08-24T05:29:57Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475350981",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475350981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475352136",
      "pull_request_review_id": 473130750,
      "id": 475352136,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MjEzNg==",
      "diff_hunk": "@@ -151,4 +151,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+static inline int GetWitnessCommitmentIndex(const CBlock& block)",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 10,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "6aae461a4e565b3639bc84a512d72c26f26d225c",
      "in_reply_to_id": 475091870,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`static` means that if the function gets inlined in every call site, it won't be materialized as a separate function in the object file. However, if they can't be inlined, every compilation unit will get its own copy.\n\nWithout `static`, there will be exactly one copy in the binary, shared by all non-inlined callsites.\n\nBoth will work, but the resulting binary is slightly differently layed out.",
      "created_at": "2020-08-24T05:34:51Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475352136",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475352136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475362739",
      "pull_request_review_id": 473143394,
      "id": 475362739,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2MjczOQ==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475104288,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "E.g. in `ReadBlockFromDisk`, this isn't remote peer misbehavior, is it? Either way, it uses `error()` when errors in the block is encountered, and depends on `CheckBlockSolution` to do so as well. I could remove that dependency and just put a generic error in `ReadBlockFromDisk`, but not sure it's necessary.\r\n\r\nThe `error()` result is unused in `CheckBlock()`.",
      "created_at": "2020-08-24T06:11:14Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475362739",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475362739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475363668",
      "pull_request_review_id": 473144523,
      "id": 475363668,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2MzY2OA==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");\n+    }\n+\n+    const CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    const SignetTxs signet_txs(block, challenge);\n+\n+    if (!signet_txs.m_valid) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution parse failure)\");\n+    }\n+\n+    const CScript& scriptSig = signet_txs.m_to_sign.vin[0].scriptSig;\n+    const CScriptWitness& witness = signet_txs.m_to_sign.vin[0].scriptWitness;\n+\n+    if (scriptSig.empty() && witness.stack.empty()) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 138,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "15a26087a3405903c562fce8c8d7682731b807c8",
      "in_reply_to_id": 475115595,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point; removing this check.",
      "created_at": "2020-08-24T06:14:11Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475363668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475363668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475364747",
      "pull_request_review_id": 473145882,
      "id": 475364747,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2NDc0Nw==",
      "diff_hunk": "@@ -848,8 +848,8 @@ struct ArgsMergeTestingSetup : public BasicTestingSetup {\n             ForEachNoDup(conf_actions, SET, SECTION_NEGATE, [&] {\n                 for (bool soft_set : {false, true}) {\n                     for (bool force_set : {false, true}) {\n-                        for (const std::string& section : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET}) {\n-                            for (const std::string& network : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET}) {\n+                        for (const std::string& section : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET}) {\n+                            for (const std::string& network : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET}) {",
      "path": "src/test/util_tests.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "15a26087a3405903c562fce8c8d7682731b807c8",
      "in_reply_to_id": 475118311,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems not unreasonable to test signet behavior in this manner as well, so keeping this for now. No strong opinion though, so will remove if you or someone insist.",
      "created_at": "2020-08-24T06:17:19Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475364747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475364747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 852,
      "original_line": 852,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475366669",
      "pull_request_review_id": 473148329,
      "id": 475366669,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2NjY2OQ==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475104288,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What I meant to say is that `error()` will unconditionally log to disk (something that should happen on local system errors, e.g. ironically out-of-disk). Reject reasons that originate from messages sent by remote peers should be logged with a log category, which can be turned on or off.",
      "created_at": "2020-08-24T06:23:06Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475366669",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475366669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475367730",
      "pull_request_review_id": 473149586,
      "id": 475367730,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2NzczMA==",
      "diff_hunk": "@@ -17,35 +17,43 @@\n #include <util/strencodings.h>\n #include <util/system.h>\n ",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 3,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "62a618f92544d2ed600876c2391f0593bed5610a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "no need for a new line here",
      "created_at": "2020-08-24T06:26:03Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475367730",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475367730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475378136",
      "pull_request_review_id": 473162534,
      "id": 475378136,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM3ODEzNg==",
      "diff_hunk": "@@ -151,4 +151,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+static inline int GetWitnessCommitmentIndex(const CBlock& block)",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 10,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "6aae461a4e565b3639bc84a512d72c26f26d225c",
      "in_reply_to_id": 475091870,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense, thank you. Dropping `static`.",
      "created_at": "2020-08-24T06:54:08Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475378136",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475378136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475380835",
      "pull_request_review_id": 473165830,
      "id": 475380835,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4MDgzNQ==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475104288,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm confused. The other `error()` calls e.g. in `ReadBlockFromDisk` are exactly of the same type. If you mean that these are invalid and should (eventually) be fixed, then I'm completely on board.\r\n\r\nThe end result, in this case, will still be a log to disk, since `ReadBlockFromDisk` calls `error()` -- it will just be less detailed/helpful.\r\n\r\nI could break the current pattern, i.e. not call `error()` on this particular failure type, but every other type does call `error()`, so it seems sensible. See 1152, 1160, 1165 below.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a789f251e8fa2d1569c8f4d23f84d75bf74e1f94/src/validation.cpp#L1146-L1174",
      "created_at": "2020-08-24T07:00:30Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475380835",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475380835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475382791",
      "pull_request_review_id": 473168243,
      "id": 475382791,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4Mjc5MQ==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475104288,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "error() is for system errors, situations where something is wrong with your computer locally, rather than something wrong with the block itself.\n\nThis here looks like a consensus rule violation instead. ",
      "created_at": "2020-08-24T07:05:10Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475382791",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475382791"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475386718",
      "pull_request_review_id": 473173008,
      "id": 475386718,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4NjcxOA==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475104288,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "OK, I think L1164 is similar, but I can sort of get the difference. Changing to logging.",
      "created_at": "2020-08-24T07:13:59Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475386718",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475386718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475400527",
      "pull_request_review_id": 473190606,
      "id": 475400527,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQwMDUyNw==",
      "diff_hunk": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+#include <uint256.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <span.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(modified_cb, block);\n+\n+    std::vector<uint8_t> block_data;\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, block_data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << block_data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        LogPrint(BCLog::VALIDATION, \"CheckBlockSolution: Errors in block (no witness commitment)\\n\");\n+        return false;\n+    }",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 136,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "a1646829ab70682245c240fdc3a38f588545ff81",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This check seems duplicate and can be removed. The ` if (!signet_txs.m_valid) {` in the next line already checks for missing witness commitment, missing signet header in the commitment, or incorrect size of the signet_solution",
      "created_at": "2020-08-24T07:42:16Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475400527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475400527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475404918",
      "pull_request_review_id": 473196007,
      "id": 475404918,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQwNDkxOA==",
      "diff_hunk": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+#include <uint256.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <span.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(modified_cb, block);\n+\n+    std::vector<uint8_t> block_data;\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, block_data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << block_data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "a1646829ab70682245c240fdc3a38f588545ff81",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Maybe also rename this to `CheckSignetBlockSolution` to be extra verbose. Also, could add a `if (!consensusparams.signet_blocks) return false;` or `assert(false);`",
      "created_at": "2020-08-24T07:50:16Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475404918",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475404918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475455815",
      "pull_request_review_id": 473280660,
      "id": 475455815,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ1NTgxNQ==",
      "diff_hunk": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+#include <uint256.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <span.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(modified_cb, block);\n+\n+    std::vector<uint8_t> block_data;\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, block_data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << block_data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        LogPrint(BCLog::VALIDATION, \"CheckBlockSolution: Errors in block (no witness commitment)\\n\");\n+        return false;\n+    }",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 136,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "a1646829ab70682245c240fdc3a38f588545ff81",
      "in_reply_to_id": 475400527,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, you're right. Removing.",
      "created_at": "2020-08-24T09:20:47Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475455815",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475455815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475456743",
      "pull_request_review_id": 473284155,
      "id": 475456743,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ1Njc0Mw==",
      "diff_hunk": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+#include <uint256.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <span.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(modified_cb, block);\n+\n+    std::vector<uint8_t> block_data;\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, block_data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << block_data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "a1646829ab70682245c240fdc3a38f588545ff81",
      "in_reply_to_id": 475404918,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, misleadingly named. Renaming.",
      "created_at": "2020-08-24T09:22:27Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475456743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475456743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475462743",
      "pull_request_review_id": 473288942,
      "id": 475462743,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2Mjc0Mw==",
      "diff_hunk": "@@ -17,35 +17,43 @@\n #include <util/strencodings.h>\n #include <util/system.h>\n ",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 3,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "62a618f92544d2ed600876c2391f0593bed5610a",
      "in_reply_to_id": 475367730,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reordered alphabetically and split into 'C++ stuff' and 'Bitcoin Core stuff'.",
      "created_at": "2020-08-24T09:27:57Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475462743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475462743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476124017",
      "pull_request_review_id": 474113112,
      "id": 476124017,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjEyNDAxNw==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475104288,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@kallewoof Just to make sure this is clear: L1164 isn't part of the consensus rules, but just a disk-sanity check.\r\n\r\nThe reason is that we don't store blocks with invalid PoW on disk, as it's verified before that point is reached (it's verified in `CheckBlockHeader`). In `ReadBlockFromDisk` the check is redundant for that reason, but it's used as a simple (but rather expensive) checksum that the header is read correctly.\r\n\r\nThe code here (I believe?) is the actual signet consensus rule implementation, so it's more akin to what `CheckBlockHeader` is doing, and shouldn't unconditionally log violations.",
      "created_at": "2020-08-25T03:41:29Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r476124017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476124017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476192151",
      "pull_request_review_id": 474151874,
      "id": 476192151,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5MjE1MQ==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475104288,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, yep!",
      "created_at": "2020-08-25T05:47:42Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r476192151",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476192151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476196808",
      "pull_request_review_id": 474157563,
      "id": 476196808,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5NjgwOA==",
      "diff_hunk": "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        return {tx_to_spend, tx_spending}; // no commitment; invalid\n+    }\n+    try {\n+        VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        v >> tx_spending.vin[0].scriptSig;\n+        if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+        if (!v.empty()) return {tx_to_spend, tx_spending}; // extraneous data encountered; invalid\n+    } catch (const std::exception&) {\n+        return {tx_to_spend, tx_spending}; // excepted; invalid\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+    data.clear();\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending, true};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "0855e12485848b578bd2796d24d5a16cbb763b72",
      "in_reply_to_id": 475104288,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this has been correctly solved in the latest force push (Thus I resolved the discussion here)",
      "created_at": "2020-08-25T06:01:46Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r476196808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476196808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478745564",
      "pull_request_review_id": 477144406,
      "id": 478745564,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc0NTU2NA==",
      "diff_hunk": "@@ -249,13 +252,86 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "in_reply_to_id": 417444593,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `args` not `gArgs`",
      "created_at": "2020-08-27T23:14:06Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478745564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478745564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478847575",
      "pull_request_review_id": 477259090,
      "id": 478847575,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0NzU3NQ==",
      "diff_hunk": "@@ -378,7 +378,8 @@ def setup_nodes(self):\n             for w in wallets[i]:\n                 wallet_name = w.split('=', 1)[1]\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n-        self.import_deterministic_coinbase_privkeys()\n+        if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why is this needed?",
      "created_at": "2020-08-28T05:59:41Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478847575",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478847575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478847732",
      "pull_request_review_id": 477259090,
      "id": 478847732,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0NzczMg==",
      "diff_hunk": "@@ -675,19 +676,20 @@ def _initialize_chain(self):\n             # Set a time in the past, so that blocks don't end up in the future\n             cache_node.setmocktime(cache_node.getblockheader(cache_node.getbestblockhash())['time'])\n \n-            # Create a 199-block-long chain; each of the 4 first nodes\n-            # gets 25 mature blocks and 25 immature.\n-            # The 4th node gets only 24 immature blocks so that the very last\n-            # block in the cache does not age too much (have an old tip age).\n-            # This is needed so that we are out of IBD when the test starts,\n-            # see the tip age check in IsInitialBlockDownload().\n-            for i in range(8):\n-                cache_node.generatetoaddress(\n-                    nblocks=25 if i != 7 else 24,\n-                    address=TestNode.PRIV_KEYS[i % 4].address,\n-                )\n-\n-            assert_equal(cache_node.getblockchaininfo()[\"blocks\"], 199)\n+            if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 27,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why is this needed when setup_clean_chain is set to true?",
      "created_at": "2020-08-28T06:00:09Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478847732",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478847732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 678,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478848058",
      "pull_request_review_id": 477259090,
      "id": 478848058,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0ODA1OA==",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['signet', 'segwit']})\n+    assert_equal(rsp, expect)\n+\n+def generate(node, count):\n+    for _ in range(count):\n+        addr = node.getnewaddress()\n+        node.generatetoaddress(1, addr)\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signet_blockscript=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signet_blockscript=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+        node = self.nodes[0]\n+\n+        self.log.info('getmininginfo')\n+        mining_info = node.getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        generate(node, 1)\n+        tmpl = node.getblocktemplate({'rules': ['segwit', 'signet']})\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]))\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        coinbase_tx.rehash()\n+\n+        block = CBlock()\n+        block.nVersion = tmpl[\"version\"]\n+        block.hashPrevBlock = int(tmpl[\"previousblockhash\"], 16)\n+        block.nTime = tmpl[\"curtime\"]\n+        block.nBits = int(tmpl[\"bits\"], 16)\n+        block.nNonce = 0\n+        block.vtx = [coinbase_tx]\n+\n+        self.log.info(\"pregenerated signet blocks check\")\n+        node = self.nodes[2]\n+\n+        height = 0\n+        for block in signet_blocks:\n+            assert_equal(node.submitblock(block), None)\n+            height = height + 1\n+            assert_equal(node.getblockcount(), height)\n+\n+        self.log.info(\"pregenerated signet blocks check (incompatible solution)\")\n+        node = self.nodes[4]\n+\n+        height = 0\n+        try:\n+            node.submitblock(signet_blocks[0])\n+            assert False # this should fail\n+        except:",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 105,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could use `assert_raises` or a specific exception to avoid catching a keyboard interrupt ",
      "created_at": "2020-08-28T06:01:05Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478848058",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478848058"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478848224",
      "pull_request_review_id": 477259090,
      "id": 478848224,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0ODIyNA==",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['signet', 'segwit']})\n+    assert_equal(rsp, expect)\n+\n+def generate(node, count):\n+    for _ in range(count):\n+        addr = node.getnewaddress()\n+        node.generatetoaddress(1, addr)\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signet_blockscript=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signet_blockscript=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+        node = self.nodes[0]\n+\n+        self.log.info('getmininginfo')\n+        mining_info = node.getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        generate(node, 1)\n+        tmpl = node.getblocktemplate({'rules': ['segwit', 'signet']})\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]))\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        coinbase_tx.rehash()\n+\n+        block = CBlock()\n+        block.nVersion = tmpl[\"version\"]\n+        block.hashPrevBlock = int(tmpl[\"previousblockhash\"], 16)\n+        block.nTime = tmpl[\"curtime\"]\n+        block.nBits = int(tmpl[\"bits\"], 16)\n+        block.nNonce = 0\n+        block.vtx = [coinbase_tx]\n+\n+        self.log.info(\"pregenerated signet blocks check\")\n+        node = self.nodes[2]\n+\n+        height = 0\n+        for block in signet_blocks:\n+            assert_equal(node.submitblock(block), None)\n+            height = height + 1\n+            assert_equal(node.getblockcount(), height)\n+\n+        self.log.info(\"pregenerated signet blocks check (incompatible solution)\")\n+        node = self.nodes[4]\n+\n+        height = 0",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 101,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why is this set?",
      "created_at": "2020-08-28T06:01:41Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478848224",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478848224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478848834",
      "pull_request_review_id": 477259090,
      "id": 478848834,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0ODgzNA==",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['signet', 'segwit']})\n+    assert_equal(rsp, expect)\n+\n+def generate(node, count):\n+    for _ in range(count):\n+        addr = node.getnewaddress()\n+        node.generatetoaddress(1, addr)\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6",
      "path": "test/functional/feature_signet.py",
      "position": 28,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why 6 nodes when only 3 are queried?",
      "created_at": "2020-08-28T06:03:59Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478848834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478848834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478849922",
      "pull_request_review_id": 477259090,
      "id": 478849922,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0OTkyMg==",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['signet', 'segwit']})\n+    assert_equal(rsp, expect)\n+\n+def generate(node, count):\n+    for _ in range(count):\n+        addr = node.getnewaddress()\n+        node.generatetoaddress(1, addr)\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signet_blockscript=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signet_blockscript=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+        node = self.nodes[0]\n+\n+        self.log.info('getmininginfo')\n+        mining_info = node.getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        generate(node, 1)\n+        tmpl = node.getblocktemplate({'rules': ['segwit', 'signet']})\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]))\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        coinbase_tx.rehash()\n+\n+        block = CBlock()\n+        block.nVersion = tmpl[\"version\"]\n+        block.hashPrevBlock = int(tmpl[\"previousblockhash\"], 16)\n+        block.nTime = tmpl[\"curtime\"]\n+        block.nBits = int(tmpl[\"bits\"], 16)\n+        block.nNonce = 0\n+        block.vtx = [coinbase_tx]",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 87,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why create a block that is unused?",
      "created_at": "2020-08-28T06:07:26Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478849922",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478849922"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478859676",
      "pull_request_review_id": 477275953,
      "id": 478859676,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg1OTY3Ng==",
      "diff_hunk": "@@ -378,7 +378,8 @@ def setup_nodes(self):\n             for w in wallets[i]:\n                 wallet_name = w.split('=', 1)[1]\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n-        self.import_deterministic_coinbase_privkeys()\n+        if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478847575,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because the privkeys cannot be imported due to signet having a different prefix. (`Invalid private key encoding (-5)`)",
      "created_at": "2020-08-28T06:33:57Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478859676",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478859676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478859993",
      "pull_request_review_id": 477276357,
      "id": 478859993,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg1OTk5Mw==",
      "diff_hunk": "@@ -675,19 +676,20 @@ def _initialize_chain(self):\n             # Set a time in the past, so that blocks don't end up in the future\n             cache_node.setmocktime(cache_node.getblockheader(cache_node.getbestblockhash())['time'])\n \n-            # Create a 199-block-long chain; each of the 4 first nodes\n-            # gets 25 mature blocks and 25 immature.\n-            # The 4th node gets only 24 immature blocks so that the very last\n-            # block in the cache does not age too much (have an old tip age).\n-            # This is needed so that we are out of IBD when the test starts,\n-            # see the tip age check in IsInitialBlockDownload().\n-            for i in range(8):\n-                cache_node.generatetoaddress(\n-                    nblocks=25 if i != 7 else 24,\n-                    address=TestNode.PRIV_KEYS[i % 4].address,\n-                )\n-\n-            assert_equal(cache_node.getblockchaininfo()[\"blocks\"], 199)\n+            if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 27,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478847732,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because `cache_node` is perhaps unable to generate any blocks at all, due to lacking the privkeys to properly sign them.",
      "created_at": "2020-08-28T06:34:51Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478859993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478859993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 678,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478861480",
      "pull_request_review_id": 477278169,
      "id": 478861480,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2MTQ4MA==",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['signet', 'segwit']})\n+    assert_equal(rsp, expect)\n+\n+def generate(node, count):\n+    for _ in range(count):\n+        addr = node.getnewaddress()\n+        node.generatetoaddress(1, addr)\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signet_blockscript=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signet_blockscript=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+        node = self.nodes[0]\n+\n+        self.log.info('getmininginfo')\n+        mining_info = node.getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        generate(node, 1)\n+        tmpl = node.getblocktemplate({'rules': ['segwit', 'signet']})\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]))\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        coinbase_tx.rehash()\n+\n+        block = CBlock()\n+        block.nVersion = tmpl[\"version\"]\n+        block.hashPrevBlock = int(tmpl[\"previousblockhash\"], 16)\n+        block.nTime = tmpl[\"curtime\"]\n+        block.nBits = int(tmpl[\"bits\"], 16)\n+        block.nNonce = 0\n+        block.vtx = [coinbase_tx]\n+\n+        self.log.info(\"pregenerated signet blocks check\")\n+        node = self.nodes[2]\n+\n+        height = 0\n+        for block in signet_blocks:\n+            assert_equal(node.submitblock(block), None)\n+            height = height + 1\n+            assert_equal(node.getblockcount(), height)\n+\n+        self.log.info(\"pregenerated signet blocks check (incompatible solution)\")\n+        node = self.nodes[4]\n+\n+        height = 0\n+        try:\n+            node.submitblock(signet_blocks[0])\n+            assert False # this should fail\n+        except:",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 105,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478848058,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, that code is broken; the submitblock call does not raise anything, but returns an error string. Fixed though.",
      "created_at": "2020-08-28T06:38:52Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478861480",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478861480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478861698",
      "pull_request_review_id": 477278448,
      "id": 478861698,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2MTY5OA==",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['signet', 'segwit']})\n+    assert_equal(rsp, expect)\n+\n+def generate(node, count):\n+    for _ in range(count):\n+        addr = node.getnewaddress()\n+        node.generatetoaddress(1, addr)\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signet_blockscript=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signet_blockscript=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+        node = self.nodes[0]\n+\n+        self.log.info('getmininginfo')\n+        mining_info = node.getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        generate(node, 1)\n+        tmpl = node.getblocktemplate({'rules': ['segwit', 'signet']})\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]))\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        coinbase_tx.rehash()\n+\n+        block = CBlock()\n+        block.nVersion = tmpl[\"version\"]\n+        block.hashPrevBlock = int(tmpl[\"previousblockhash\"], 16)\n+        block.nTime = tmpl[\"curtime\"]\n+        block.nBits = int(tmpl[\"bits\"], 16)\n+        block.nNonce = 0\n+        block.vtx = [coinbase_tx]\n+\n+        self.log.info(\"pregenerated signet blocks check\")\n+        node = self.nodes[2]\n+\n+        height = 0\n+        for block in signet_blocks:\n+            assert_equal(node.submitblock(block), None)\n+            height = height + 1\n+            assert_equal(node.getblockcount(), height)\n+\n+        self.log.info(\"pregenerated signet blocks check (incompatible solution)\")\n+        node = self.nodes[4]\n+\n+        height = 0",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 101,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478848224,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Left-over, removed. (I wanted to sync and check that peer(s) were at the right heights)",
      "created_at": "2020-08-28T06:39:29Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478861698",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478861698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478862000",
      "pull_request_review_id": 477278761,
      "id": 478862000,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2MjAwMA==",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['signet', 'segwit']})\n+    assert_equal(rsp, expect)\n+\n+def generate(node, count):\n+    for _ in range(count):\n+        addr = node.getnewaddress()\n+        node.generatetoaddress(1, addr)\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6",
      "path": "test/functional/feature_signet.py",
      "position": 28,
      "original_position": 41,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478848834,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I originally intended to pair-wise ensure that the nodes shared blocks, but this was flakey so I removed those checks.\r\n\r\nMore importantly though, `getblocktemplate` requires at least 1 peer or it errors.\r\n\r\nEdit: to clarify, there are 3 separate networks, even though they're all clumped together as I don't want to make 3 separate files and classes; nodes 0-1 are on a challenge = OP_TRUE network, nodes 2-3 are on the current default signet (without syncing), nodes 4-5 are on an incompatible signet. Node pairs might disconnect/ban the others, so having 2 for each type seems sensible.",
      "created_at": "2020-08-28T06:40:15Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478862000",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478862000"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478862811",
      "pull_request_review_id": 477281438,
      "id": 478862811,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2MjgxMQ==",
      "diff_hunk": "@@ -378,7 +378,8 @@ def setup_nodes(self):\n             for w in wallets[i]:\n                 wallet_name = w.split('=', 1)[1]\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n-        self.import_deterministic_coinbase_privkeys()\n+        if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478847575,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Probably another reason why it would be better to have the same prefix. See also:\r\n\r\n* https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469713812\r\n* #12314 ",
      "created_at": "2020-08-28T06:42:28Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478862811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478862811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478862849",
      "pull_request_review_id": 477281649,
      "id": 478862849,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2Mjg0OQ==",
      "diff_hunk": "@@ -0,0 +1,109 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['signet', 'segwit']})\n+    assert_equal(rsp, expect)\n+\n+def generate(node, count):\n+    for _ in range(count):\n+        addr = node.getnewaddress()\n+        node.generatetoaddress(1, addr)\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signet_blockscript=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signet_blockscript=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+        node = self.nodes[0]\n+\n+        self.log.info('getmininginfo')\n+        mining_info = node.getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        generate(node, 1)\n+        tmpl = node.getblocktemplate({'rules': ['segwit', 'signet']})\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        coinbase_tx = create_coinbase(height=int(tmpl[\"height\"]))\n+        # sequence numbers must not be max for nLockTime to have effect\n+        coinbase_tx.vin[0].nSequence = 2 ** 32 - 2\n+        coinbase_tx.rehash()\n+\n+        block = CBlock()\n+        block.nVersion = tmpl[\"version\"]\n+        block.hashPrevBlock = int(tmpl[\"previousblockhash\"], 16)\n+        block.nTime = tmpl[\"curtime\"]\n+        block.nBits = int(tmpl[\"bits\"], 16)\n+        block.nNonce = 0\n+        block.vtx = [coinbase_tx]",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 87,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478849922,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think something went missing from the import. The original code does nothing with it either, so removing for now. (Would be good to test a manually crafted block, but I don't think that's easy without mining stuff.)",
      "created_at": "2020-08-28T06:42:34Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478862849",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478862849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478866619",
      "pull_request_review_id": 477303478,
      "id": 478866619,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2NjYxOQ==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't like this change either. Just because the challenge doesn't require a signature shouldn't mean the header can simply be omitted completely",
      "created_at": "2020-08-28T06:52:36Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478866619",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478866619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478871058",
      "pull_request_review_id": 477327652,
      "id": 478871058,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg3MTA1OA==",
      "diff_hunk": "@@ -378,7 +378,8 @@ def setup_nodes(self):\n             for w in wallets[i]:\n                 wallet_name = w.split('=', 1)[1]\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n-        self.import_deterministic_coinbase_privkeys()\n+        if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478847575,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Switched to using testnet prefixes (including bech32 one).",
      "created_at": "2020-08-28T07:03:35Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478871058",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478871058"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478871089",
      "pull_request_review_id": 477327855,
      "id": 478871089,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg3MTA4OQ==",
      "diff_hunk": "@@ -250,13 +255,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 99,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "96e3d1e45157cb8f2c7ecae8366fe076cc913742",
      "in_reply_to_id": 469713812,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Switched to using testnet prefixes (including bech32 one).",
      "created_at": "2020-08-28T07:03:41Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478871089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478871089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": 323,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478875978",
      "pull_request_review_id": 477303478,
      "id": 478875978,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg3NTk3OA==",
      "diff_hunk": "@@ -675,19 +676,20 @@ def _initialize_chain(self):\n             # Set a time in the past, so that blocks don't end up in the future\n             cache_node.setmocktime(cache_node.getblockheader(cache_node.getbestblockhash())['time'])\n \n-            # Create a 199-block-long chain; each of the 4 first nodes\n-            # gets 25 mature blocks and 25 immature.\n-            # The 4th node gets only 24 immature blocks so that the very last\n-            # block in the cache does not age too much (have an old tip age).\n-            # This is needed so that we are out of IBD when the test starts,\n-            # see the tip age check in IsInitialBlockDownload().\n-            for i in range(8):\n-                cache_node.generatetoaddress(\n-                    nblocks=25 if i != 7 else 24,\n-                    address=TestNode.PRIV_KEYS[i % 4].address,\n-                )\n-\n-            assert_equal(cache_node.getblockchaininfo()[\"blocks\"], 199)\n+            if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 27,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478847732,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "locally it is passing for me. What is the error message you get? This code path should only be executed when `setup_clean_chain==False`",
      "created_at": "2020-08-28T07:14:39Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478875978",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478875978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 678,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478881190",
      "pull_request_review_id": 477384504,
      "id": 478881190,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg4MTE5MA==",
      "diff_hunk": "@@ -675,19 +676,20 @@ def _initialize_chain(self):\n             # Set a time in the past, so that blocks don't end up in the future\n             cache_node.setmocktime(cache_node.getblockheader(cache_node.getbestblockhash())['time'])\n \n-            # Create a 199-block-long chain; each of the 4 first nodes\n-            # gets 25 mature blocks and 25 immature.\n-            # The 4th node gets only 24 immature blocks so that the very last\n-            # block in the cache does not age too much (have an old tip age).\n-            # This is needed so that we are out of IBD when the test starts,\n-            # see the tip age check in IsInitialBlockDownload().\n-            for i in range(8):\n-                cache_node.generatetoaddress(\n-                    nblocks=25 if i != 7 else 24,\n-                    address=TestNode.PRIV_KEYS[i % 4].address,\n-                )\n-\n-            assert_equal(cache_node.getblockchaininfo()[\"blocks\"], 199)\n+            if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 27,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478847732,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ahh I see what you're saying. Removing this part, thanks!",
      "created_at": "2020-08-28T07:25:08Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478881190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478881190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 678,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478888089",
      "pull_request_review_id": 477400654,
      "id": 478888089,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg4ODA4OQ==",
      "diff_hunk": "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+def assert_template(node, block, expect, rehash=True):",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 25,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "567c8813e8b3c3ca649dd0e485cd5aa8d9c67e1d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "unused?",
      "created_at": "2020-08-28T07:33:20Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478888089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478888089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478894582",
      "pull_request_review_id": 477416127,
      "id": 478894582,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg5NDU4Mg==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "in_reply_to_id": 478866619,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It does enable `generate*` for `OP_TRUE` signets, though, which is handy.",
      "created_at": "2020-08-28T07:41:14Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478894582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478894582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478906453",
      "pull_request_review_id": 477442881,
      "id": 478906453,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwNjQ1Mw==",
      "diff_hunk": "@@ -378,7 +378,8 @@ def setup_nodes(self):\n             for w in wallets[i]:\n                 wallet_name = w.split('=', 1)[1]\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n-        self.import_deterministic_coinbase_privkeys()\n+        if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478847575,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "After switching I noticed that `rust-bitcoin` relies on bech32 prefixes to be unique per network. This change breaks that assumption.",
      "created_at": "2020-08-28T07:55:00Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478906453",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478906453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478908941",
      "pull_request_review_id": 477448292,
      "id": 478908941,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkwODk0MQ==",
      "diff_hunk": "@@ -378,7 +378,8 @@ def setup_nodes(self):\n             for w in wallets[i]:\n                 wallet_name = w.split('=', 1)[1]\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n-        self.import_deterministic_coinbase_privkeys()\n+        if self.chain != \"signet\":",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "cbb6f9439df8593c3aa52b56698788cc73108831",
      "in_reply_to_id": 478847575,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It also breaks the assumption that each prefix (pubkey etc) maps to a specific network. Maybe I need to revert this change..\r\n\r\nEdit: it seems to be the case for regtest as well, so I'm patching it up in the hopes that it will \"just work\".\r\n\r\nEdit 2: I've updated the explorer (which relies on rust-bitcoin) and it seems to be running without problems.",
      "created_at": "2020-08-28T07:57:42Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478908941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478908941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478911601",
      "pull_request_review_id": 477454029,
      "id": 478911601,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxMTYwMQ==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "in_reply_to_id": 478866619,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changing consensus code to return early to avoid having to write tests for it seems backward. I'd rather have no tests than a test that requires changing consensus code. Also, this will need to be changed in the BIP first.",
      "created_at": "2020-08-28T08:00:38Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478911601",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478911601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478947960",
      "pull_request_review_id": 477524878,
      "id": 478947960,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk0Nzk2MA==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "in_reply_to_id": 478866619,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Honestly, I always assumed that an OP_TRUE challenge with an empty solution was implicitly accepted, even with the BIP as it stands now.\r\n\r\nI read this code as \"if it is able to fetch the signet commitment, deserialize it into the scriptSig/witness of the spending tx vin[0]\", i.e. it doesn't actually return early, it just doesn't deserialize. The actual validation (i.e. call to `VerifyScript(...)`) still happens.\r\n\r\nWe can remove this an the OP_TRUE test portion for now, though. Thoughts, @ajtowns ?",
      "created_at": "2020-08-28T08:37:24Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478947960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478947960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478963010",
      "pull_request_review_id": 477551581,
      "id": 478963010,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk2MzAxMA==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "in_reply_to_id": 478866619,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think having \"no block solution\" encoded as no signet commitment rather than an empty signet commitment seems slightly better; and it makes it possible for signet with \"pushdata(non-zero)\" as the challenge act like a unique (as far as magic is concerned), pow-enforcing regtest without needing any additional mining code. I'm not sure that's useful, but I don't think it's worse -- you can have an empty challenge to require a signet commitment (with scriptSig \"op_true\") if you want. I think the BIP should be changed either way to clarify what happens if the signet commitment isn't present.\r\n\r\nAlso the BIP says the scriptPubKey is called the \"block challenge\", but the command line args is \"-signet_blockscript\"; seems inconsistent?",
      "created_at": "2020-08-28T08:52:51Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r478963010",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478963010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479006569",
      "pull_request_review_id": 477576220,
      "id": 479006569,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAwNjU2OQ==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "in_reply_to_id": 478866619,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I like challenge/solution, but `-signet_blockchallenge` looks really long to me...",
      "created_at": "2020-08-28T09:19:51Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479006569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479006569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479010878",
      "pull_request_review_id": 477579040,
      "id": 479010878,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxMDg3OA==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "in_reply_to_id": 478866619,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The BIP refers to it as `signet_challenge`, not block challenge?! Am I reading the wrong doc?",
      "created_at": "2020-08-28T09:22:34Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479010878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479010878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479025663",
      "pull_request_review_id": 477586218,
      "id": 479025663,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAyNTY2Mw==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "in_reply_to_id": 478866619,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "BIP revision proposal: https://github.com/bitcoin/bips/pull/983",
      "created_at": "2020-08-28T09:33:19Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479025663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479025663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479028919",
      "pull_request_review_id": 477587978,
      "id": 479028919,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAyODkxOQ==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "800794f52ebb69690c035283bf11665162471e46",
      "in_reply_to_id": 478866619,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ahh, yeah it does call it `signet_challenge` in the new version.",
      "created_at": "2020-08-28T09:36:06Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479028919",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479028919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479635027",
      "pull_request_review_id": 478116913,
      "id": 479635027,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzNTAyNw==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            if (tx_spending.vin[0].scriptSig.empty() && v.empty()) return {tx_to_spend, tx_spending}; // empty commitment; should not be present instead",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "6206c2e8e87fcc70848e4a0fab871d5fd9ea6b16",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Again, I don't understand what this is trying to achieve. See also https://github.com/bitcoin/bitcoin/pull/18267#discussion_r475115595",
      "created_at": "2020-08-29T10:24:56Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479635027",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479635027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479650275",
      "pull_request_review_id": 478128422,
      "id": 479650275,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY1MDI3NQ==",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return {tx_to_spend, tx_spending}; // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return {tx_to_spend, tx_spending}; // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            if (tx_spending.vin[0].scriptSig.empty() && v.empty()) return {tx_to_spend, tx_spending}; // empty commitment; should not be present instead",
      "path": "src/signet.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "6206c2e8e87fcc70848e4a0fab871d5fd9ea6b16",
      "in_reply_to_id": 479635027,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I don't think this is necessary. Removing.",
      "created_at": "2020-08-29T13:32:22Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479650275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479650275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479652603",
      "pull_request_review_id": 478130087,
      "id": 479652603,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY1MjYwMw==",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def generate(self, node, count):\n+        height = node.getblockcount()\n+        for _ in range(count):\n+            addr = node.getnewaddress()\n+            node.generatetoaddress(1, addr)\n+        self.wait_until(lambda: node.getblockcount() == height + count, timeout=10)",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 31,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "5abbd8f1366ee971085ea73b6e5f193a8f1135f8",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why wait? `generatetoaddress` is blocking, so the assertion can be evaluated immediately after it returns",
      "created_at": "2020-08-29T13:59:37Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479652603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479652603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479652706",
      "pull_request_review_id": 478130087,
      "id": 479652706,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY1MjcwNg==",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def generate(self, node, count):",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 26,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "5abbd8f1366ee971085ea73b6e5f193a8f1135f8",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why is this even overwritten?",
      "created_at": "2020-08-29T14:00:33Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479652706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479652706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479652869",
      "pull_request_review_id": 478130087,
      "id": 479652869,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY1Mjg2OQ==",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def generate(self, node, count):\n+        height = node.getblockcount()\n+        for _ in range(count):\n+            addr = node.getnewaddress()\n+            node.generatetoaddress(1, addr)\n+        self.wait_until(lambda: node.getblockcount() == height + count, timeout=10)\n+\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signet_challenge=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signet_challenge=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+        node = self.nodes[0]\n+\n+        self.log.info('getmininginfo')\n+        mining_info = node.getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        self.generate(node, 1)\n+        tmpl = node.getblocktemplate({'rules': ['segwit', 'signet']})\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        self.log.info(\"pregenerated signet blocks check\")\n+        node = self.nodes[2]\n+\n+        height = 0\n+        for block in signet_blocks:\n+            assert_equal(node.submitblock(block), None)\n+            height = height + 1\n+            assert_equal(node.getblockcount(), height)\n+\n+        self.log.info(\"pregenerated signet blocks check (incompatible solution)\")\n+        node = self.nodes[4]",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 80,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "5abbd8f1366ee971085ea73b6e5f193a8f1135f8",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd prefer to simply write out the node index. This might even be shorter",
      "created_at": "2020-08-29T14:02:18Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479652869",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479652869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479823721",
      "pull_request_review_id": 478240042,
      "id": 479823721,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyMzcyMQ==",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def generate(self, node, count):\n+        height = node.getblockcount()\n+        for _ in range(count):\n+            addr = node.getnewaddress()\n+            node.generatetoaddress(1, addr)\n+        self.wait_until(lambda: node.getblockcount() == height + count, timeout=10)",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 31,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "5abbd8f1366ee971085ea73b6e5f193a8f1135f8",
      "in_reply_to_id": 479652603,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I saw intermittent failures; you're right, this is blocking, so this solution is not correct; reverting.",
      "created_at": "2020-08-30T22:27:23Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479823721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479823721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479824201",
      "pull_request_review_id": 478240367,
      "id": 479824201,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyNDIwMQ==",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def generate(self, node, count):",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 26,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "5abbd8f1366ee971085ea73b6e5f193a8f1135f8",
      "in_reply_to_id": 479652706,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It originally did block signing/grinding and such, but you're right, it's not needed at this stage; removing.",
      "created_at": "2020-08-30T22:32:58Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479824201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479824201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479824262",
      "pull_request_review_id": 478240407,
      "id": 479824262,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyNDI2Mg==",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '000000209d7961aee045f252e2653297ff04985bc9e70fea2a15b7c79eaf677f2d030000c18056977d14f38c21c844a9a5e0709a71c9479343149d8bc29d1d6eb9f3eca2c045315f28dc2a1ea5c4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022006cc48d7c3f13ce39ceaa8b4a0bb90dc3912f303b909c79ff02ecbc80136cbce0220353a8353542812ae4ee84b669dcfb28f6417258122e8268b58903c3a25f28729010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bc632b80f00c410c9ba86f4b208c95ebe41531f737a39c668c9bab17b5180000a5b1ec07c41066c837ecb7fc15d648bef65e7b4ba87b6c9dde1a1a36937d734fc545315f28dc2a1e562a040001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402201b9dedfb80346b66fd8962a0f874de88b578d7008cf9c38525c0ea823c3036ba022012d8eb97c5e66b406e7f510bac1480523ce90da0c8706ddd5481f349498da1b9010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020fa337bb2bdf372bfdbab85b8d56325b3e566ab8c0c24ec03ce9641eeae250000d9cb0ae3e04f2f330b96dd6182fe3d6e0c02f468d8203085843825087ee69c3214bb315f28dc2a1e9b5e0a0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220415b7172231277ef85ec2516177f1316628c99c4c35e00f9c8b5de488c02463902205342dafbbf3922ffbbc46d692a5fa8b47afd977453aac530de14bc7424bda085010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002016d90f09ec92b66e7233c796bd1ef64fc022b26be70b04b3614eba02b114000056da87b60f9517926611db57d785d91cc905089018ab976ef0a07e27cbe73ec5ceff315f28dc2a1e1450080001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a01000000000000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220378df0d77b449096b5b5475586ee1b2834044219b4bbff8080380701ed48b52602205d73312e4ce98360f1fc5c0951a7fb6b7fb26cc3d198afc960f025601f76e9f4010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020771037dd773ff36da73d886c1b438e6d07c4d85c0a8d704bce82fb4c761c00006b7e50cb80afedc2ed4bf48ca27476f055aeac59f9ba6c6a30fc8b464b866c6e9000325f28dc2a1e82e4020001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402203f254ee2a4958382f17920c5a7067f1fe4d5810c6ab9b02a2c3dc730caa46de802207d8cf6038e78f06337365ab76eababed0078f46375e3994e66f3bf08df48d830010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a6143c64d2d72db0740b78ae82a4b522125d0c1d431c2d636cb04789600a0000bb11dac7fd024ada923231bd0d17107facc4e2989cda9c0e8b4ff4cdfba414379600325f28dc2a1e492f120001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a01000000160014218756592118b9349807ce9fd91d2bdc254d79730000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220145e90993a216261a685263619056e1e7504ccbac0a6139e3cb68d4102266fa10220380054d093bf58a9afbdc0d5b321d7fc688823e85248bd37d9d8d8e49497a7ff010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020eb7e4051e7bd10636d5e7380ca74771b284425bf69637d2c88e841d33e0500007768a8a6536a5d55b2125fd1fd80fbc1a5722728cf1668ffc2faaa9a83d5a6ee261a325f28dc2a1e8127000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa2490047304402204109f2014dd4a9bcbdb43b14a67eb2dd11d55bc205b20cb73884d2d01af466400220209a14c5d38d0f36b080f0d3807917340e0db8fbaa327ce58a44aed5228112eb010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000204765c5525340783e50e5ab9a60ed45247c0a5376d113ab9027d04524dd260000bfae9d0edb60bcc8314458341a13d5f8d2def60b61abceaf1dda8a03ec7c71c92a1a325f28dc2a1e6d14000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa249004730440220179ce76d5f2293a781348eec5ced16ca68d0e12dfda30f169ef8f78952e2242002207a1e848f16019376ada366f00e3d2b48d210bc9f2e2f73c2b82bbd2d170d608d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '0000002090e20d551753314673ab7b35a4e79276b50b2742acb94d6898f68b8bcb160000cdcb82f191a03ac8d759e33adeaa806d840f1a5aab27d87d62528c834cc8f55d131b325f28dc2a1e791a010001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022052c9fae3f5d4d3e608f71222f15ff6250d70c38877a929a6e3e790b941ca67c1022053f259179e007e184b7fbbd3f0f65b9563f932149f20c4aa772ad6c4343ce59d010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020bbb57e867e82507e4643c6ecdd3c1c185745dbcbf6cd12c72736764ea52a000054f1ff647eef12aa3659d102fccbf9e09f9201bc5372c9e0f29b9e74bec44b29261b325f28dc2a1e9d97000001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a0100000047512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae0000000000000000766a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4eecc7daa24900473044022070264c40d291b035dc734d8faec72302b478869fa6a06e5cf42a3ef11da476b102207bc0817928969ba9aa036739061dfef9edf79ea0638e539e0fd2f30439c2df59010120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def generate(self, node, count):\n+        height = node.getblockcount()\n+        for _ in range(count):\n+            addr = node.getnewaddress()\n+            node.generatetoaddress(1, addr)\n+        self.wait_until(lambda: node.getblockcount() == height + count, timeout=10)\n+\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signet_challenge=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signet_challenge=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+        node = self.nodes[0]\n+\n+        self.log.info('getmininginfo')\n+        mining_info = node.getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        self.generate(node, 1)\n+        tmpl = node.getblocktemplate({'rules': ['segwit', 'signet']})\n+        self.log.info(\"getblocktemplate: Test capability advertised\")\n+        assert 'proposal' in tmpl['capabilities']\n+        assert 'coinbasetxn' not in tmpl\n+\n+        self.log.info(\"pregenerated signet blocks check\")\n+        node = self.nodes[2]\n+\n+        height = 0\n+        for block in signet_blocks:\n+            assert_equal(node.submitblock(block), None)\n+            height = height + 1\n+            assert_equal(node.getblockcount(), height)\n+\n+        self.log.info(\"pregenerated signet blocks check (incompatible solution)\")\n+        node = self.nodes[4]",
      "path": "test/functional/feature_signet.py",
      "position": null,
      "original_position": 80,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "5abbd8f1366ee971085ea73b6e5f193a8f1135f8",
      "in_reply_to_id": 479652869,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That is fine by me.",
      "created_at": "2020-08-30T22:33:50Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r479824262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479824262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483460766",
      "pull_request_review_id": 482450002,
      "id": 483460766,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ2MDc2Ng==",
      "diff_hunk": "@@ -250,13 +255,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_challenge\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto signet_challenge = args.GetArgs(\"-signet_challenge\");\n+            if (signet_challenge.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_challenge cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(signet_challenge[0]);\n+\n+            LogPrintf(\"Signet with challenge %s\\n\", signet_challenge[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = args.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28000000000000000000000000000000000000000000000000000000\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "6e5e3b3355cca37ec67f38704daa409a1271a41f",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`math.log2(0x00002adc28000000000000000000000000000000000000000000000000000000 * (14*24*60*60))` gives `257.62...` that is in `pow.cpp:CalculateNextWorkRequired`, if you're at minimum work and aren't getting to the next retarget period in less than the target timespan, you'll overflow the `arith_uint256` when trying to work out the next difficulty and get a weird answer. For current signet, that's resulted in nbits going from `0x1e2adc28` at block 2015 to `0x1e04ffd2` which is a difficulty increase of ~8.5x when it should have been ~0~ 1.07x, and should have been capped at 4x anyway.\r\n\r\nI think we can keep the low difficulty (useful for custom signets, and means we don't need to get a new genesis block) while avoiding the overflow by changing nPowTargetTimespan to be 1 day instead of 2 weeks.",
      "created_at": "2020-09-04T08:12:59Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r483460766",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483460766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484069009",
      "pull_request_review_id": 483142475,
      "id": 484069009,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA2OTAwOQ==",
      "diff_hunk": "@@ -250,13 +255,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_challenge\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto signet_challenge = args.GetArgs(\"-signet_challenge\");\n+            if (signet_challenge.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_challenge cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(signet_challenge[0]);\n+\n+            LogPrintf(\"Signet with challenge %s\\n\", signet_challenge[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = args.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28000000000000000000000000000000000000000000000000000000\");",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "6e5e3b3355cca37ec67f38704daa409a1271a41f",
      "in_reply_to_id": 483460766,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would like to avoid deviating from mainnet parameters as much as possible, permanently. It sucks, but another reset may be worth it here.",
      "created_at": "2020-09-06T13:15:43Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r484069009",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484069009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484734516",
      "pull_request_review_id": 483898492,
      "id": 484734516,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczNDUxNg==",
      "diff_hunk": "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"sb\";\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;",
      "path": "src/chainparams.cpp",
      "position": 107,
      "original_position": 104,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "03ac167829d555de456d684f6580c6429253c7f0",
      "in_reply_to_id": 449105201,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that the `fRequireStandard` is in validation.cpp and initialised in init.cpp based on `-acceptnonstdtxn` -- so users can individually override this setting if they want. [ie, the value that actually controls whether non std txs get into the mempool is in validation.cpp, the setting here changes the member variable in chainparams which is just used as a default for initialising the global from validation]",
      "created_at": "2020-09-08T08:15:29Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r484734516",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484734516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485766059",
      "pull_request_review_id": 485208775,
      "id": 485766059,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NjA1OQ==",
      "diff_hunk": "@@ -151,4 +151,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "a25a5e42221dad720d4f204d7ba03a22ac3ff4cc",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We usually put constant declarations at the top of the file for visibility. These symbols are included in other translation units.",
      "created_at": "2020-09-09T16:45:45Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r485766059",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485766059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486013306",
      "pull_request_review_id": 485509649,
      "id": 486013306,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAxMzMwNg==",
      "diff_hunk": "@@ -151,4 +151,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "a25a5e42221dad720d4f204d7ba03a22ac3ff4cc",
      "in_reply_to_id": 485766059,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, moved.",
      "created_at": "2020-09-10T01:44:11Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r486013306",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486013306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487568141",
      "pull_request_review_id": 487333816,
      "id": 487568141,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU2ODE0MQ==",
      "diff_hunk": "@@ -1163,6 +1164,11 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    // Signet only: check block solution",
      "path": "src/validation.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "fba375689b4c2a84aeff5b91c16c02b6f8a7c924",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"consensus: add signet validation\":\r\n\r\nIs this necessary? If a block is corrupted on disk, the PoW check above will already catch it.",
      "created_at": "2020-09-13T19:33:32Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r487568141",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487568141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1167,
      "original_line": 1167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487571772",
      "pull_request_review_id": 487333816,
      "id": 487571772,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MTc3Mg==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return invalid(); // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return invalid(); // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "404682b7cdb54494e7c98f0ba0cac8b51f379750",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"add signet basic support (signet.cpp)\":\r\n\r\nIt looks like this is actually just implying a spending transaction with empty scriptSig/witness stack, not one that contains OP_TRUE. Is the comment outdated?",
      "created_at": "2020-09-13T20:09:03Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r487571772",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487571772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487572143",
      "pull_request_review_id": 487333816,
      "id": 487572143,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MjE0Mw==",
      "diff_hunk": "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_challenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_challenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de1a5d1bba13712a1c6dca11981203a6c628fc9d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"add signet chain and accompanying parameters\":\r\n\r\nThere doesn't seem to be a default signet test network challenge in this commit.",
      "created_at": "2020-09-13T20:12:59Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r487572143",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487572143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487590530",
      "pull_request_review_id": 487349076,
      "id": 487590530,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU5MDUzMA==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return invalid(); // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return invalid(); // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge",
      "path": "src/signet.cpp",
      "position": 98,
      "original_position": 98,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "404682b7cdb54494e7c98f0ba0cac8b51f379750",
      "in_reply_to_id": 487571772,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Your observation is accurate; it's not outdated per se, it was always just a non-exclusive list of things allowed... (this is why I don't write comments :)\r\n\r\nAnother interesting challenge is something like `DEPTH IF DROP ENDIF DEPTH IF DROP ENDIF DEPTH IF DROP ENDIF TRUE` which (ignoring magic) would follow the most work chain from any signet whose block solutions weren't witness based and contained 0-3 stack items.",
      "created_at": "2020-09-13T23:21:19Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r487590530",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487590530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487644510",
      "pull_request_review_id": 487407152,
      "id": 487644510,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY0NDUxMA==",
      "diff_hunk": "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_challenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_challenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de1a5d1bba13712a1c6dca11981203a6c628fc9d",
      "in_reply_to_id": 487572143,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Edit: I see what you're saying now. Yeah, it's chronologically problematic. If I end up rebasing I will tweak this to appear in the commit along with the defaults.",
      "created_at": "2020-09-14T04:26:04Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r487644510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487644510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487644961",
      "pull_request_review_id": 487407680,
      "id": 487644961,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY0NDk2MQ==",
      "diff_hunk": "@@ -1163,6 +1164,11 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    // Signet only: check block solution",
      "path": "src/validation.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "fba375689b4c2a84aeff5b91c16c02b6f8a7c924",
      "in_reply_to_id": 487568141,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That assumes that the signet validation has been done for all blocks that are written to disk, which may be the case now, but perhaps not always.",
      "created_at": "2020-09-14T04:28:09Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r487644961",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487644961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1167,
      "original_line": 1167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488814952",
      "pull_request_review_id": 488877289,
      "id": 488814952,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxNDk1Mg==",
      "diff_hunk": "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_challenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_challenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de1a5d1bba13712a1c6dca11981203a6c628fc9d",
      "in_reply_to_id": 487572143,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "BTW: this is the first command line argument with ` _`, or any kind of separator—for that matter— in it. We might want to discuss what we like to see here. Personally, I'd expect `-signet-challenge`. Or just `-signetchallenge` to be consistent with say, `-segwitheight`.",
      "created_at": "2020-09-15T16:49:54Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r488814952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488814952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488818585",
      "pull_request_review_id": 488882006,
      "id": 488818585,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxODU4NQ==",
      "diff_hunk": "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_challenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_challenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de1a5d1bba13712a1c6dca11981203a6c628fc9d",
      "in_reply_to_id": 487572143,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Very vaguely related, I just saw this: https://twitter.com/koenvervloesem/status/1305911670083067904",
      "created_at": "2020-09-15T16:55:57Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r488818585",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488818585"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489171178",
      "pull_request_review_id": 489284292,
      "id": 489171178,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MTE3OA==",
      "diff_hunk": "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_challenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_challenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de1a5d1bba13712a1c6dca11981203a6c628fc9d",
      "in_reply_to_id": 487572143,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't have a strong opinion on it, other than it feels like a good idea to clearly separate signet stuff from the rest. I believe we will have several more parameters in the future, e.g. for selecting soft forks or to define alternative challenges (opt-in reorg chain, if we end up going that route).",
      "created_at": "2020-09-16T05:26:51Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r489171178",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489171178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490477948",
      "pull_request_review_id": 490886317,
      "id": 490477948,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3Nzk0OA==",
      "diff_hunk": "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_challenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_challenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de1a5d1bba13712a1c6dca11981203a6c628fc9d",
      "in_reply_to_id": 487572143,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, agree on that, but starting the options with `signet` should already be enough to keep them separate from the rest.",
      "created_at": "2020-09-17T18:44:02Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r490477948",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490477948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490635685",
      "pull_request_review_id": 491075983,
      "id": 490635685,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYzNTY4NQ==",
      "diff_hunk": "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_challenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_challenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de1a5d1bba13712a1c6dca11981203a6c628fc9d",
      "in_reply_to_id": 487572143,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Switching to `-signet<suffix>`.",
      "created_at": "2020-09-18T00:37:26Z",
      "updated_at": "2020-09-18T01:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r490635685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490635685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490646738",
      "pull_request_review_id": 491088586,
      "id": 490646738,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY0NjczOA==",
      "diff_hunk": "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_challenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_challenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "path": "src/chainparamsbase.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "de1a5d1bba13712a1c6dca11981203a6c628fc9d",
      "in_reply_to_id": 487572143,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also addressed original note that there is no default signet at this point; this line is now modified in the \"hard coded default signet\" commit to add in the note about default network.",
      "created_at": "2020-09-18T01:20:58Z",
      "updated_at": "2020-09-18T01:20:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r490646738",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490646738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491150895",
      "pull_request_review_id": 491730396,
      "id": 491150895,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDg5NQ==",
      "diff_hunk": "@@ -250,13 +255,104 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signetchallenge\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+            if (signet_challenge.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(signet_challenge[0]);\n+\n+            LogPrintf(\"Signet with challenge %s\\n\", signet_challenge[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signetseednode\")) {\n+            vSeeds = args.GetArgs(\"-signetseednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00000377ae000000000000000000000000000000000000000000000000000000\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+        LogPrintf(\"Signet derived magic (message start): %s\\n\", HexStr({pchMessageStart, pchMessageStart + 4}));\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1598918400, 52613770, 0x1e0377ae, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";",
      "path": "src/chainparams.cpp",
      "position": 104,
      "original_position": 104,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "in_reply_to_id": null,
      "user": {
        "login": "dr-orlovsky",
        "id": 372034,
        "node_id": "MDQ6VXNlcjM3MjAzNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/372034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dr-orlovsky",
        "html_url": "https://github.com/dr-orlovsky",
        "followers_url": "https://api.github.com/users/dr-orlovsky/followers",
        "following_url": "https://api.github.com/users/dr-orlovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dr-orlovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dr-orlovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dr-orlovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/dr-orlovsky/orgs",
        "repos_url": "https://api.github.com/users/dr-orlovsky/repos",
        "events_url": "https://api.github.com/users/dr-orlovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dr-orlovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why we do use \"tb\" instead of \"sb\" here?\r\n\r\nIn c-lightning PR we had \"sb\" here: https://github.com/ElementsProject/lightning/pull/2816/files#diff-53092192708008b1de0d997128c58d37R54\r\n\r\nAnd BIP-325 and BIP-173 are being silent in this regard: not even a PR",
      "created_at": "2020-09-18T19:31:31Z",
      "updated_at": "2020-09-18T19:32:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491150895",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491150895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491335681",
      "pull_request_review_id": 491983719,
      "id": 491335681,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTMzNTY4MQ==",
      "diff_hunk": "@@ -250,13 +255,104 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signetchallenge\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+            if (signet_challenge.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(signet_challenge[0]);\n+\n+            LogPrintf(\"Signet with challenge %s\\n\", signet_challenge[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signetseednode\")) {\n+            vSeeds = args.GetArgs(\"-signetseednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00000377ae000000000000000000000000000000000000000000000000000000\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+        LogPrintf(\"Signet derived magic (message start): %s\\n\", HexStr({pchMessageStart, pchMessageStart + 4}));\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1598918400, 52613770, 0x1e0377ae, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";",
      "path": "src/chainparams.cpp",
      "position": 104,
      "original_position": 104,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "in_reply_to_id": 491150895,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "People thinks that the test networks should use the same prefixes so it was changed to match testnet.",
      "created_at": "2020-09-19T08:49:16Z",
      "updated_at": "2020-09-19T08:49:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491335681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491335681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491348734",
      "pull_request_review_id": 491986585,
      "id": 491348734,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTM0ODczNA==",
      "diff_hunk": "@@ -250,13 +255,104 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signetchallenge\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+            if (signet_challenge.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(signet_challenge[0]);\n+\n+            LogPrintf(\"Signet with challenge %s\\n\", signet_challenge[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signetseednode\")) {\n+            vSeeds = args.GetArgs(\"-signetseednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00000377ae000000000000000000000000000000000000000000000000000000\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+        LogPrintf(\"Signet derived magic (message start): %s\\n\", HexStr({pchMessageStart, pchMessageStart + 4}));\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1598918400, 52613770, 0x1e0377ae, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";",
      "path": "src/chainparams.cpp",
      "position": 104,
      "original_position": 104,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "in_reply_to_id": 491150895,
      "user": {
        "login": "dr-orlovsky",
        "id": 372034,
        "node_id": "MDQ6VXNlcjM3MjAzNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/372034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dr-orlovsky",
        "html_url": "https://github.com/dr-orlovsky",
        "followers_url": "https://api.github.com/users/dr-orlovsky/followers",
        "following_url": "https://api.github.com/users/dr-orlovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dr-orlovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dr-orlovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dr-orlovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/dr-orlovsky/orgs",
        "repos_url": "https://api.github.com/users/dr-orlovsky/repos",
        "events_url": "https://api.github.com/users/dr-orlovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dr-orlovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alright, probably we have another thing to update in c-lightning then, additionally to new nonce.\r\n\r\nAlso, noticed that BIP-235 still has outdated nonce info",
      "created_at": "2020-09-19T09:26:33Z",
      "updated_at": "2020-09-19T09:26:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491348734",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491348734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491680141",
      "pull_request_review_id": 492187976,
      "id": 491680141,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY4MDE0MQ==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return invalid(); // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return invalid(); // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            v >> tx_spending.vin[0].scriptWitness.stack;\n+            if (!v.empty()) return invalid(); // extraneous data encountered\n+        } catch (const std::exception&) {\n+            return invalid(); // parsing error\n+        }\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(modified_cb, block);\n+\n+    std::vector<uint8_t> block_data;\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, block_data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << block_data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending};\n+}\n+\n+// Signet block solution checker\n+bool CheckSignetBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    const CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    const SignetTxs signet_txs(block, challenge);\n+\n+    if (!signet_txs.m_valid) {",
      "path": "src/signet.cpp",
      "position": 134,
      "original_position": 134,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "404682b7cdb54494e7c98f0ba0cac8b51f379750",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "might be good to rename m_valid to has_txs or similar, since the sigcheck validation hasn't been run at this point, so it is unknown whether the txs are valid.",
      "created_at": "2020-09-20T11:03:29Z",
      "updated_at": "2020-09-20T11:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491680141",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491680141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 134,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491681013",
      "pull_request_review_id": 492187976,
      "id": 491681013,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY4MTAxMw==",
      "diff_hunk": "@@ -0,0 +1,34 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <signet.h>\n+#include <streams.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+void initialize()\n+{\n+    InitializeFuzzingContext(CBaseChainParams::SIGNET);\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const std::optional<CBlock> block = ConsumeDeserializable<CBlock>(fuzzed_data_provider);\n+    if (!block) {\n+        return;\n+    }\n+    (void)CheckSignetBlockSolution(*block, Params().GetConsensus());\n+    if (GetWitnessCommitmentIndex(*block) != NO_WITNESS_COMMITMENT) {",
      "path": "src/test/fuzz/signet.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "4c189abdc452f08dfa758564b5381bc78c42d481",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why is this check needed? This will limit coverage",
      "created_at": "2020-09-20T11:14:19Z",
      "updated_at": "2020-09-20T11:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491681013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491681013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491681205",
      "pull_request_review_id": 492187976,
      "id": 491681205,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY4MTIwNQ==",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '00000020f61eee3b63a380a477a063af32b2bbc97c9ff9f01f2c4225e973988108000000f575c83235984e7dc4afc1f30944c170462e84437ab6f2d52e16878a79e4678bd1914d5fae77031eccf4070001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a010000001600149243f727dd5343293eb83174324019ec16c2630f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205e423a8754336ca99dbe16509b877ef1bf98d008836c725005b3c787c41ebe46022047246e4467ad7cc7f1ad98662afcaf14c115e0095a227c7b05c5182591c23e7e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020533b53ded9bff4adc94101d32400a144c54edc5ed492a3b26c63b2d686000000b38fef50592017cfafbcab88eb3d9cf50b2c801711cad8299495d26df5e54812e7914d5fae77031ecfdd0b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000160014fd09839740f0e0b4fc6d5e2527e4022aa9b89dfa0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022031d64a1692cdad1fc0ced69838169fe19ae01be524d831b95fcf5ea4e6541c3c02204f9dea0801df8b4d0cd0857c62ab35c6c25cc47c930630dc7fe723531daa3e9b01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000202960f3752f0bfa8858a3e333294aedc7808025e868c9dc03e71d88bb320000007765fcd3d5b4966beb338bba2675dc2cf2ad28d4ad1d83bdb6f286e7e27ac1f807924d5fae77031e81d60b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a010000001600141e5fb426042692ae0e87c070e78c39307a5661c20000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205de93694763a42954865bcf1540cb82958bc62d0ec4eee02070fb7937cd037f4022067f333753bce47b10bc25eb6e1f311482e994c862a7e0b2d41ab1c8679fd1b1101000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020b06443a13ae1d3d50faef5ecad38c6818194dc46abca3e972e2aacdae800000069a5829097e80fee00ac49a56ea9f82d741a6af84d32b3bc455cf31871e2a8ac27924d5fae77031e9c91050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a0100000016001430db2f8225dcf7751361ab38735de08190318cb70000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402200936f5f9872f6df5dd242026ad52241a68423f7f682e79169a8d85a374eab9b802202cd2979c48b321b3453e65e8f92460db3fca93cbea8539b450c959f4fbe630c601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000207ed403758a4f228a1939418a155e2ebd4ae6b26e5ffd0ae433123f7694010000542e80b609c5bc58af5bdf492e26d4f60cd43a3966c2e063c50444c29b3757a636924d5fae77031ee8601d0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014edc207e014df34fa3885dff97d1129d356e1186a0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022021a3656609f85a66a2c5672ed9322c2158d57251040d2716ed202a1fe14f0c12022057d68bc6611f7a9424a7e00bbf3e27e6ae6b096f60bac624a094bc97a59aa1ff01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000205bea0a88d1422c3df08d766ad72df95084d0700e6f873b75dd4e986c7703000002b57516d33ed60c2bdd9f93d6d5614083324c837e68e5ba6e04287a7285633585924d5fae77031ed171960001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a010000001600143ae612599cf96f2442ce572633e0251116eaa52f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022059a7c54de76bfdbb1dd44c78ea2dbd2bb4e97f4abad38965f41e76433e56423c022054bf17f04fe17415c0141f60eebd2b839200f574d8ad8d55a0917b92b0eb913401000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020daf3b60d374b19476461f97540498dcfa2eb7016238ec6b1d022f82fb60100007a7ae65b53cb988c2ec92d2384996713821d5645ffe61c9acea60da75cd5edfa1a944d5fae77031e9dbb050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a01000000160014ef2dceae02e35f8137de76768ae3345d99ca68860000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202b3f946d6447f9bf17d00f3696cede7ee70b785495e5498274ee682a493befd5022045fc0bcf9332243168b5d35507175f9f374a8eba2336873885d12aada67ea5f601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020457cc5f3c2e1a5655bc20e20e48d33e1b7ea68786c614032b5c518f0b6000000541f36942d82c6e7248275ff15c8933487fbe1819c67a9ecc0f4b70bb7e6cf672a944d5fae77031e8f39860001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000016001472a27906947c06d034b38ba2fa13c6391a4832790000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202d62805ce60cbd60591f97f949b5ea5bd7e2307bcde343e6ea8394da92758e72022053a25370b0aa20da100189b7899a8f8675a0fdc60e38ece6b8a4f98edd94569e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a2eb61eb4f3831baa3a3363e1b42db4462663f756f07423e81ed30322102000077224de7dea0f8d0ec22b1d2e2e255f0a987b96fe7200e1a2e6373f48a2f5b7894954d5fae77031e36867e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a01000000160014aa0ad9f26801258382e0734dceec03a4a75f60240000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402206fa0d59990eed369bd7375767c9a6c9369fae209152b8674e520da270605528c0220749eed3b12dbe3f583f505d21803e4aef59c8e24c5831951eafa4f15a8f92c4e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a868e8514be5e46dabd6a122132f423f36a43b716a40c394e2a8d063e1010000f4c6c717e99d800c699c25a2006a75a0c5c09f432a936f385e6fce139cdbd1a5e9964d5fae77031e7d026e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a01000000160014aaa671c82b138e3b8f510cd801e5f2bd0aa305940000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022042309f4c3c7a1a2ac8c24f890f962df1c0086cec10be0868087cfc427520cb2702201dafee8911c269b7e786e242045bb57cef3f5b0f177010c6159abae42f646cc501000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signetchallenge=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signetchallenge=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+\n+        self.log.info('getmininginfo')\n+        mining_info = self.nodes[0].getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())",
      "path": "test/functional/feature_signet.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "e47ad375bf17557f805bd206e789b8db78c6338a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How is this different from just\r\n\r\n```suggestion\r\n        self.nodes[0].generate(1)\r\n```\r\n\r\nIdeally, we could run the tests without wallet",
      "created_at": "2020-09-20T11:16:45Z",
      "updated_at": "2020-09-20T11:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491681205",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491681205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491681291",
      "pull_request_review_id": 492187976,
      "id": 491681291,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY4MTI5MQ==",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '00000020f61eee3b63a380a477a063af32b2bbc97c9ff9f01f2c4225e973988108000000f575c83235984e7dc4afc1f30944c170462e84437ab6f2d52e16878a79e4678bd1914d5fae77031eccf4070001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a010000001600149243f727dd5343293eb83174324019ec16c2630f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205e423a8754336ca99dbe16509b877ef1bf98d008836c725005b3c787c41ebe46022047246e4467ad7cc7f1ad98662afcaf14c115e0095a227c7b05c5182591c23e7e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020533b53ded9bff4adc94101d32400a144c54edc5ed492a3b26c63b2d686000000b38fef50592017cfafbcab88eb3d9cf50b2c801711cad8299495d26df5e54812e7914d5fae77031ecfdd0b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000160014fd09839740f0e0b4fc6d5e2527e4022aa9b89dfa0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022031d64a1692cdad1fc0ced69838169fe19ae01be524d831b95fcf5ea4e6541c3c02204f9dea0801df8b4d0cd0857c62ab35c6c25cc47c930630dc7fe723531daa3e9b01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000202960f3752f0bfa8858a3e333294aedc7808025e868c9dc03e71d88bb320000007765fcd3d5b4966beb338bba2675dc2cf2ad28d4ad1d83bdb6f286e7e27ac1f807924d5fae77031e81d60b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a010000001600141e5fb426042692ae0e87c070e78c39307a5661c20000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205de93694763a42954865bcf1540cb82958bc62d0ec4eee02070fb7937cd037f4022067f333753bce47b10bc25eb6e1f311482e994c862a7e0b2d41ab1c8679fd1b1101000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020b06443a13ae1d3d50faef5ecad38c6818194dc46abca3e972e2aacdae800000069a5829097e80fee00ac49a56ea9f82d741a6af84d32b3bc455cf31871e2a8ac27924d5fae77031e9c91050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a0100000016001430db2f8225dcf7751361ab38735de08190318cb70000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402200936f5f9872f6df5dd242026ad52241a68423f7f682e79169a8d85a374eab9b802202cd2979c48b321b3453e65e8f92460db3fca93cbea8539b450c959f4fbe630c601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000207ed403758a4f228a1939418a155e2ebd4ae6b26e5ffd0ae433123f7694010000542e80b609c5bc58af5bdf492e26d4f60cd43a3966c2e063c50444c29b3757a636924d5fae77031ee8601d0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014edc207e014df34fa3885dff97d1129d356e1186a0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022021a3656609f85a66a2c5672ed9322c2158d57251040d2716ed202a1fe14f0c12022057d68bc6611f7a9424a7e00bbf3e27e6ae6b096f60bac624a094bc97a59aa1ff01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000205bea0a88d1422c3df08d766ad72df95084d0700e6f873b75dd4e986c7703000002b57516d33ed60c2bdd9f93d6d5614083324c837e68e5ba6e04287a7285633585924d5fae77031ed171960001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a010000001600143ae612599cf96f2442ce572633e0251116eaa52f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022059a7c54de76bfdbb1dd44c78ea2dbd2bb4e97f4abad38965f41e76433e56423c022054bf17f04fe17415c0141f60eebd2b839200f574d8ad8d55a0917b92b0eb913401000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020daf3b60d374b19476461f97540498dcfa2eb7016238ec6b1d022f82fb60100007a7ae65b53cb988c2ec92d2384996713821d5645ffe61c9acea60da75cd5edfa1a944d5fae77031e9dbb050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a01000000160014ef2dceae02e35f8137de76768ae3345d99ca68860000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202b3f946d6447f9bf17d00f3696cede7ee70b785495e5498274ee682a493befd5022045fc0bcf9332243168b5d35507175f9f374a8eba2336873885d12aada67ea5f601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020457cc5f3c2e1a5655bc20e20e48d33e1b7ea68786c614032b5c518f0b6000000541f36942d82c6e7248275ff15c8933487fbe1819c67a9ecc0f4b70bb7e6cf672a944d5fae77031e8f39860001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000016001472a27906947c06d034b38ba2fa13c6391a4832790000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202d62805ce60cbd60591f97f949b5ea5bd7e2307bcde343e6ea8394da92758e72022053a25370b0aa20da100189b7899a8f8675a0fdc60e38ece6b8a4f98edd94569e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a2eb61eb4f3831baa3a3363e1b42db4462663f756f07423e81ed30322102000077224de7dea0f8d0ec22b1d2e2e255f0a987b96fe7200e1a2e6373f48a2f5b7894954d5fae77031e36867e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a01000000160014aa0ad9f26801258382e0734dceec03a4a75f60240000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402206fa0d59990eed369bd7375767c9a6c9369fae209152b8674e520da270605528c0220749eed3b12dbe3f583f505d21803e4aef59c8e24c5831951eafa4f15a8f92c4e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a868e8514be5e46dabd6a122132f423f36a43b716a40c394e2a8d063e1010000f4c6c717e99d800c699c25a2006a75a0c5c09f432a936f385e6fce139cdbd1a5e9964d5fae77031e7d026e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a01000000160014aaa671c82b138e3b8f510cd801e5f2bd0aa305940000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022042309f4c3c7a1a2ac8c24f890f962df1c0086cec10be0868087cfc427520cb2702201dafee8911c269b7e786e242045bb57cef3f5b0f177010c6159abae42f646cc501000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signetchallenge=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signetchallenge=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+\n+        self.log.info('getmininginfo')\n+        mining_info = self.nodes[0].getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+\n+        self.log.info(\"pregenerated signet blocks check\")\n+\n+        height = 0\n+        for block in signet_blocks:\n+            assert_equal(self.nodes[2].submitblock(block), None)\n+            height = height + 1",
      "path": "test/functional/feature_signet.py",
      "position": 63,
      "original_position": 63,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "e47ad375bf17557f805bd206e789b8db78c6338a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit\r\n\r\n```suggestion\r\n            height += 1\r\n```",
      "created_at": "2020-09-20T11:17:58Z",
      "updated_at": "2020-09-20T11:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491681291",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491681291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491811682",
      "pull_request_review_id": 492300224,
      "id": 491811682,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTY4Mg==",
      "diff_hunk": "@@ -250,13 +255,104 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signetchallenge\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+            if (signet_challenge.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(signet_challenge[0]);\n+\n+            LogPrintf(\"Signet with challenge %s\\n\", signet_challenge[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signetseednode\")) {\n+            vSeeds = args.GetArgs(\"-signetseednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00000377ae000000000000000000000000000000000000000000000000000000\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+        LogPrintf(\"Signet derived magic (message start): %s\\n\", HexStr({pchMessageStart, pchMessageStart + 4}));\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1598918400, 52613770, 0x1e0377ae, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";",
      "path": "src/chainparams.cpp",
      "position": 104,
      "original_position": 104,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "in_reply_to_id": 491150895,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Filed https://github.com/bitcoin/bips/pull/1000 to update the bip for the genesis block. FWIW, #12314 has related discussion about reusing testnet addresses in regtest.",
      "created_at": "2020-09-21T06:17:03Z",
      "updated_at": "2020-09-21T06:17:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491811682",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491811682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491813670",
      "pull_request_review_id": 492302636,
      "id": 491813670,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMzY3MA==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return invalid(); // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return invalid(); // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            v >> tx_spending.vin[0].scriptWitness.stack;\n+            if (!v.empty()) return invalid(); // extraneous data encountered\n+        } catch (const std::exception&) {\n+            return invalid(); // parsing error\n+        }\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(modified_cb, block);\n+\n+    std::vector<uint8_t> block_data;\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, block_data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << block_data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending};\n+}\n+\n+// Signet block solution checker\n+bool CheckSignetBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    const CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    const SignetTxs signet_txs(block, challenge);\n+\n+    if (!signet_txs.m_valid) {",
      "path": "src/signet.cpp",
      "position": 134,
      "original_position": 134,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "404682b7cdb54494e7c98f0ba0cac8b51f379750",
      "in_reply_to_id": 491680141,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could invert it and call it `m_parse_failure`. Could even add `bool operator!() const { return m_parse_failure; }` so the test is just `if (!signet_txs)`. Seems very nit-y though.",
      "created_at": "2020-09-21T06:23:21Z",
      "updated_at": "2020-09-21T06:23:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491813670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491813670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 134,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491914906",
      "pull_request_review_id": 492433164,
      "id": 491914906,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkxNDkwNg==",
      "diff_hunk": "@@ -0,0 +1,34 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <signet.h>\n+#include <streams.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+void initialize()\n+{\n+    InitializeFuzzingContext(CBaseChainParams::SIGNET);\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const std::optional<CBlock> block = ConsumeDeserializable<CBlock>(fuzzed_data_provider);\n+    if (!block) {\n+        return;\n+    }\n+    (void)CheckSignetBlockSolution(*block, Params().GetConsensus());\n+    if (GetWitnessCommitmentIndex(*block) != NO_WITNESS_COMMITMENT) {",
      "path": "src/test/fuzz/signet.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "4c189abdc452f08dfa758564b5381bc78c42d481",
      "in_reply_to_id": 491681013,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@practicalswift ^",
      "created_at": "2020-09-21T09:46:33Z",
      "updated_at": "2020-09-21T09:46:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491914906",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491914906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491915528",
      "pull_request_review_id": 492433673,
      "id": 491915528,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkxNTUyOA==",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '00000020f61eee3b63a380a477a063af32b2bbc97c9ff9f01f2c4225e973988108000000f575c83235984e7dc4afc1f30944c170462e84437ab6f2d52e16878a79e4678bd1914d5fae77031eccf4070001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a010000001600149243f727dd5343293eb83174324019ec16c2630f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205e423a8754336ca99dbe16509b877ef1bf98d008836c725005b3c787c41ebe46022047246e4467ad7cc7f1ad98662afcaf14c115e0095a227c7b05c5182591c23e7e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020533b53ded9bff4adc94101d32400a144c54edc5ed492a3b26c63b2d686000000b38fef50592017cfafbcab88eb3d9cf50b2c801711cad8299495d26df5e54812e7914d5fae77031ecfdd0b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000160014fd09839740f0e0b4fc6d5e2527e4022aa9b89dfa0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022031d64a1692cdad1fc0ced69838169fe19ae01be524d831b95fcf5ea4e6541c3c02204f9dea0801df8b4d0cd0857c62ab35c6c25cc47c930630dc7fe723531daa3e9b01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000202960f3752f0bfa8858a3e333294aedc7808025e868c9dc03e71d88bb320000007765fcd3d5b4966beb338bba2675dc2cf2ad28d4ad1d83bdb6f286e7e27ac1f807924d5fae77031e81d60b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a010000001600141e5fb426042692ae0e87c070e78c39307a5661c20000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205de93694763a42954865bcf1540cb82958bc62d0ec4eee02070fb7937cd037f4022067f333753bce47b10bc25eb6e1f311482e994c862a7e0b2d41ab1c8679fd1b1101000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020b06443a13ae1d3d50faef5ecad38c6818194dc46abca3e972e2aacdae800000069a5829097e80fee00ac49a56ea9f82d741a6af84d32b3bc455cf31871e2a8ac27924d5fae77031e9c91050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a0100000016001430db2f8225dcf7751361ab38735de08190318cb70000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402200936f5f9872f6df5dd242026ad52241a68423f7f682e79169a8d85a374eab9b802202cd2979c48b321b3453e65e8f92460db3fca93cbea8539b450c959f4fbe630c601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000207ed403758a4f228a1939418a155e2ebd4ae6b26e5ffd0ae433123f7694010000542e80b609c5bc58af5bdf492e26d4f60cd43a3966c2e063c50444c29b3757a636924d5fae77031ee8601d0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014edc207e014df34fa3885dff97d1129d356e1186a0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022021a3656609f85a66a2c5672ed9322c2158d57251040d2716ed202a1fe14f0c12022057d68bc6611f7a9424a7e00bbf3e27e6ae6b096f60bac624a094bc97a59aa1ff01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000205bea0a88d1422c3df08d766ad72df95084d0700e6f873b75dd4e986c7703000002b57516d33ed60c2bdd9f93d6d5614083324c837e68e5ba6e04287a7285633585924d5fae77031ed171960001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a010000001600143ae612599cf96f2442ce572633e0251116eaa52f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022059a7c54de76bfdbb1dd44c78ea2dbd2bb4e97f4abad38965f41e76433e56423c022054bf17f04fe17415c0141f60eebd2b839200f574d8ad8d55a0917b92b0eb913401000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020daf3b60d374b19476461f97540498dcfa2eb7016238ec6b1d022f82fb60100007a7ae65b53cb988c2ec92d2384996713821d5645ffe61c9acea60da75cd5edfa1a944d5fae77031e9dbb050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a01000000160014ef2dceae02e35f8137de76768ae3345d99ca68860000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202b3f946d6447f9bf17d00f3696cede7ee70b785495e5498274ee682a493befd5022045fc0bcf9332243168b5d35507175f9f374a8eba2336873885d12aada67ea5f601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020457cc5f3c2e1a5655bc20e20e48d33e1b7ea68786c614032b5c518f0b6000000541f36942d82c6e7248275ff15c8933487fbe1819c67a9ecc0f4b70bb7e6cf672a944d5fae77031e8f39860001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000016001472a27906947c06d034b38ba2fa13c6391a4832790000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202d62805ce60cbd60591f97f949b5ea5bd7e2307bcde343e6ea8394da92758e72022053a25370b0aa20da100189b7899a8f8675a0fdc60e38ece6b8a4f98edd94569e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a2eb61eb4f3831baa3a3363e1b42db4462663f756f07423e81ed30322102000077224de7dea0f8d0ec22b1d2e2e255f0a987b96fe7200e1a2e6373f48a2f5b7894954d5fae77031e36867e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a01000000160014aa0ad9f26801258382e0734dceec03a4a75f60240000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402206fa0d59990eed369bd7375767c9a6c9369fae209152b8674e520da270605528c0220749eed3b12dbe3f583f505d21803e4aef59c8e24c5831951eafa4f15a8f92c4e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a868e8514be5e46dabd6a122132f423f36a43b716a40c394e2a8d063e1010000f4c6c717e99d800c699c25a2006a75a0c5c09f432a936f385e6fce139cdbd1a5e9964d5fae77031e7d026e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a01000000160014aaa671c82b138e3b8f510cd801e5f2bd0aa305940000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022042309f4c3c7a1a2ac8c24f890f962df1c0086cec10be0868087cfc427520cb2702201dafee8911c269b7e786e242045bb57cef3f5b0f177010c6159abae42f646cc501000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signetchallenge=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signetchallenge=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+\n+        self.log.info('getmininginfo')\n+        mining_info = self.nodes[0].getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())",
      "path": "test/functional/feature_signet.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "e47ad375bf17557f805bd206e789b8db78c6338a",
      "in_reply_to_id": 491681205,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this can wait until after merge, unless I need to rebase again.",
      "created_at": "2020-09-21T09:47:18Z",
      "updated_at": "2020-09-21T09:47:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491915528",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491915528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491915814",
      "pull_request_review_id": 492433862,
      "id": 491915814,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkxNTgxNA==",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '00000020f61eee3b63a380a477a063af32b2bbc97c9ff9f01f2c4225e973988108000000f575c83235984e7dc4afc1f30944c170462e84437ab6f2d52e16878a79e4678bd1914d5fae77031eccf4070001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a010000001600149243f727dd5343293eb83174324019ec16c2630f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205e423a8754336ca99dbe16509b877ef1bf98d008836c725005b3c787c41ebe46022047246e4467ad7cc7f1ad98662afcaf14c115e0095a227c7b05c5182591c23e7e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020533b53ded9bff4adc94101d32400a144c54edc5ed492a3b26c63b2d686000000b38fef50592017cfafbcab88eb3d9cf50b2c801711cad8299495d26df5e54812e7914d5fae77031ecfdd0b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000160014fd09839740f0e0b4fc6d5e2527e4022aa9b89dfa0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022031d64a1692cdad1fc0ced69838169fe19ae01be524d831b95fcf5ea4e6541c3c02204f9dea0801df8b4d0cd0857c62ab35c6c25cc47c930630dc7fe723531daa3e9b01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000202960f3752f0bfa8858a3e333294aedc7808025e868c9dc03e71d88bb320000007765fcd3d5b4966beb338bba2675dc2cf2ad28d4ad1d83bdb6f286e7e27ac1f807924d5fae77031e81d60b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a010000001600141e5fb426042692ae0e87c070e78c39307a5661c20000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205de93694763a42954865bcf1540cb82958bc62d0ec4eee02070fb7937cd037f4022067f333753bce47b10bc25eb6e1f311482e994c862a7e0b2d41ab1c8679fd1b1101000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020b06443a13ae1d3d50faef5ecad38c6818194dc46abca3e972e2aacdae800000069a5829097e80fee00ac49a56ea9f82d741a6af84d32b3bc455cf31871e2a8ac27924d5fae77031e9c91050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a0100000016001430db2f8225dcf7751361ab38735de08190318cb70000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402200936f5f9872f6df5dd242026ad52241a68423f7f682e79169a8d85a374eab9b802202cd2979c48b321b3453e65e8f92460db3fca93cbea8539b450c959f4fbe630c601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000207ed403758a4f228a1939418a155e2ebd4ae6b26e5ffd0ae433123f7694010000542e80b609c5bc58af5bdf492e26d4f60cd43a3966c2e063c50444c29b3757a636924d5fae77031ee8601d0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014edc207e014df34fa3885dff97d1129d356e1186a0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022021a3656609f85a66a2c5672ed9322c2158d57251040d2716ed202a1fe14f0c12022057d68bc6611f7a9424a7e00bbf3e27e6ae6b096f60bac624a094bc97a59aa1ff01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000205bea0a88d1422c3df08d766ad72df95084d0700e6f873b75dd4e986c7703000002b57516d33ed60c2bdd9f93d6d5614083324c837e68e5ba6e04287a7285633585924d5fae77031ed171960001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a010000001600143ae612599cf96f2442ce572633e0251116eaa52f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022059a7c54de76bfdbb1dd44c78ea2dbd2bb4e97f4abad38965f41e76433e56423c022054bf17f04fe17415c0141f60eebd2b839200f574d8ad8d55a0917b92b0eb913401000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020daf3b60d374b19476461f97540498dcfa2eb7016238ec6b1d022f82fb60100007a7ae65b53cb988c2ec92d2384996713821d5645ffe61c9acea60da75cd5edfa1a944d5fae77031e9dbb050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a01000000160014ef2dceae02e35f8137de76768ae3345d99ca68860000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202b3f946d6447f9bf17d00f3696cede7ee70b785495e5498274ee682a493befd5022045fc0bcf9332243168b5d35507175f9f374a8eba2336873885d12aada67ea5f601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020457cc5f3c2e1a5655bc20e20e48d33e1b7ea68786c614032b5c518f0b6000000541f36942d82c6e7248275ff15c8933487fbe1819c67a9ecc0f4b70bb7e6cf672a944d5fae77031e8f39860001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000016001472a27906947c06d034b38ba2fa13c6391a4832790000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202d62805ce60cbd60591f97f949b5ea5bd7e2307bcde343e6ea8394da92758e72022053a25370b0aa20da100189b7899a8f8675a0fdc60e38ece6b8a4f98edd94569e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a2eb61eb4f3831baa3a3363e1b42db4462663f756f07423e81ed30322102000077224de7dea0f8d0ec22b1d2e2e255f0a987b96fe7200e1a2e6373f48a2f5b7894954d5fae77031e36867e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a01000000160014aa0ad9f26801258382e0734dceec03a4a75f60240000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402206fa0d59990eed369bd7375767c9a6c9369fae209152b8674e520da270605528c0220749eed3b12dbe3f583f505d21803e4aef59c8e24c5831951eafa4f15a8f92c4e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a868e8514be5e46dabd6a122132f423f36a43b716a40c394e2a8d063e1010000f4c6c717e99d800c699c25a2006a75a0c5c09f432a936f385e6fce139cdbd1a5e9964d5fae77031e7d026e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a01000000160014aaa671c82b138e3b8f510cd801e5f2bd0aa305940000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022042309f4c3c7a1a2ac8c24f890f962df1c0086cec10be0868087cfc427520cb2702201dafee8911c269b7e786e242045bb57cef3f5b0f177010c6159abae42f646cc501000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signetchallenge=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signetchallenge=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+\n+        self.log.info('getmininginfo')\n+        mining_info = self.nodes[0].getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+\n+        self.log.info(\"pregenerated signet blocks check\")\n+\n+        height = 0\n+        for block in signet_blocks:\n+            assert_equal(self.nodes[2].submitblock(block), None)\n+            height = height + 1",
      "path": "test/functional/feature_signet.py",
      "position": 63,
      "original_position": 63,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "e47ad375bf17557f805bd206e789b8db78c6338a",
      "in_reply_to_id": 491681291,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this can wait too; will do if I end up requiring a rebase.",
      "created_at": "2020-09-21T09:47:33Z",
      "updated_at": "2020-09-21T09:47:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491915814",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491915814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491917224",
      "pull_request_review_id": 492435037,
      "id": 491917224,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkxNzIyNA==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return invalid(); // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return invalid(); // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            v >> tx_spending.vin[0].scriptWitness.stack;\n+            if (!v.empty()) return invalid(); // extraneous data encountered\n+        } catch (const std::exception&) {\n+            return invalid(); // parsing error\n+        }\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(modified_cb, block);\n+\n+    std::vector<uint8_t> block_data;\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, block_data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << block_data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending};\n+}\n+\n+// Signet block solution checker\n+bool CheckSignetBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    const CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    const SignetTxs signet_txs(block, challenge);\n+\n+    if (!signet_txs.m_valid) {",
      "path": "src/signet.cpp",
      "position": 134,
      "original_position": 134,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "404682b7cdb54494e7c98f0ba0cac8b51f379750",
      "in_reply_to_id": 491680141,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is nit-ty enough that it's worth leaving as is, if it means retaining tACKs.",
      "created_at": "2020-09-21T09:49:08Z",
      "updated_at": "2020-09-21T09:49:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491917224",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491917224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 134,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491918380",
      "pull_request_review_id": 492436562,
      "id": 491918380,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkxODM4MA==",
      "diff_hunk": "@@ -250,13 +255,104 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signetchallenge\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+            if (signet_challenge.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(signet_challenge[0]);\n+\n+            LogPrintf(\"Signet with challenge %s\\n\", signet_challenge[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signetseednode\")) {\n+            vSeeds = args.GetArgs(\"-signetseednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00000377ae000000000000000000000000000000000000000000000000000000\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+        LogPrintf(\"Signet derived magic (message start): %s\\n\", HexStr({pchMessageStart, pchMessageStart + 4}));\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1598918400, 52613770, 0x1e0377ae, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";",
      "path": "src/chainparams.cpp",
      "position": 104,
      "original_position": 104,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "in_reply_to_id": 491150895,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for pointing that out, @dr-orlovsky -- I thought I had already updated the BIP but I had apparently forgotten to actually make it into a pull request.",
      "created_at": "2020-09-21T09:51:09Z",
      "updated_at": "2020-09-21T09:51:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r491918380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491918380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492625296",
      "pull_request_review_id": 493316097,
      "id": 492625296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYyNTI5Ng==",
      "diff_hunk": "@@ -250,13 +255,104 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signetchallenge\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");",
      "path": "src/chainparams.cpp",
      "position": 44,
      "original_position": 44,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's a bit weird that this shows up as \"Loading addresses from DNS seed\", but that's out of scope for this PR.",
      "created_at": "2020-09-22T10:19:42Z",
      "updated_at": "2020-09-22T10:19:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r492625296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492625296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 272,
      "original_line": 272,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492760297",
      "pull_request_review_id": 493494463,
      "id": 492760297,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc2MDI5Nw==",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '00000020f61eee3b63a380a477a063af32b2bbc97c9ff9f01f2c4225e973988108000000f575c83235984e7dc4afc1f30944c170462e84437ab6f2d52e16878a79e4678bd1914d5fae77031eccf4070001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a010000001600149243f727dd5343293eb83174324019ec16c2630f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205e423a8754336ca99dbe16509b877ef1bf98d008836c725005b3c787c41ebe46022047246e4467ad7cc7f1ad98662afcaf14c115e0095a227c7b05c5182591c23e7e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020533b53ded9bff4adc94101d32400a144c54edc5ed492a3b26c63b2d686000000b38fef50592017cfafbcab88eb3d9cf50b2c801711cad8299495d26df5e54812e7914d5fae77031ecfdd0b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000160014fd09839740f0e0b4fc6d5e2527e4022aa9b89dfa0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022031d64a1692cdad1fc0ced69838169fe19ae01be524d831b95fcf5ea4e6541c3c02204f9dea0801df8b4d0cd0857c62ab35c6c25cc47c930630dc7fe723531daa3e9b01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000202960f3752f0bfa8858a3e333294aedc7808025e868c9dc03e71d88bb320000007765fcd3d5b4966beb338bba2675dc2cf2ad28d4ad1d83bdb6f286e7e27ac1f807924d5fae77031e81d60b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a010000001600141e5fb426042692ae0e87c070e78c39307a5661c20000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205de93694763a42954865bcf1540cb82958bc62d0ec4eee02070fb7937cd037f4022067f333753bce47b10bc25eb6e1f311482e994c862a7e0b2d41ab1c8679fd1b1101000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020b06443a13ae1d3d50faef5ecad38c6818194dc46abca3e972e2aacdae800000069a5829097e80fee00ac49a56ea9f82d741a6af84d32b3bc455cf31871e2a8ac27924d5fae77031e9c91050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a0100000016001430db2f8225dcf7751361ab38735de08190318cb70000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402200936f5f9872f6df5dd242026ad52241a68423f7f682e79169a8d85a374eab9b802202cd2979c48b321b3453e65e8f92460db3fca93cbea8539b450c959f4fbe630c601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000207ed403758a4f228a1939418a155e2ebd4ae6b26e5ffd0ae433123f7694010000542e80b609c5bc58af5bdf492e26d4f60cd43a3966c2e063c50444c29b3757a636924d5fae77031ee8601d0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014edc207e014df34fa3885dff97d1129d356e1186a0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022021a3656609f85a66a2c5672ed9322c2158d57251040d2716ed202a1fe14f0c12022057d68bc6611f7a9424a7e00bbf3e27e6ae6b096f60bac624a094bc97a59aa1ff01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000205bea0a88d1422c3df08d766ad72df95084d0700e6f873b75dd4e986c7703000002b57516d33ed60c2bdd9f93d6d5614083324c837e68e5ba6e04287a7285633585924d5fae77031ed171960001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a010000001600143ae612599cf96f2442ce572633e0251116eaa52f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022059a7c54de76bfdbb1dd44c78ea2dbd2bb4e97f4abad38965f41e76433e56423c022054bf17f04fe17415c0141f60eebd2b839200f574d8ad8d55a0917b92b0eb913401000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020daf3b60d374b19476461f97540498dcfa2eb7016238ec6b1d022f82fb60100007a7ae65b53cb988c2ec92d2384996713821d5645ffe61c9acea60da75cd5edfa1a944d5fae77031e9dbb050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a01000000160014ef2dceae02e35f8137de76768ae3345d99ca68860000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202b3f946d6447f9bf17d00f3696cede7ee70b785495e5498274ee682a493befd5022045fc0bcf9332243168b5d35507175f9f374a8eba2336873885d12aada67ea5f601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020457cc5f3c2e1a5655bc20e20e48d33e1b7ea68786c614032b5c518f0b6000000541f36942d82c6e7248275ff15c8933487fbe1819c67a9ecc0f4b70bb7e6cf672a944d5fae77031e8f39860001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000016001472a27906947c06d034b38ba2fa13c6391a4832790000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202d62805ce60cbd60591f97f949b5ea5bd7e2307bcde343e6ea8394da92758e72022053a25370b0aa20da100189b7899a8f8675a0fdc60e38ece6b8a4f98edd94569e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a2eb61eb4f3831baa3a3363e1b42db4462663f756f07423e81ed30322102000077224de7dea0f8d0ec22b1d2e2e255f0a987b96fe7200e1a2e6373f48a2f5b7894954d5fae77031e36867e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a01000000160014aa0ad9f26801258382e0734dceec03a4a75f60240000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402206fa0d59990eed369bd7375767c9a6c9369fae209152b8674e520da270605528c0220749eed3b12dbe3f583f505d21803e4aef59c8e24c5831951eafa4f15a8f92c4e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a868e8514be5e46dabd6a122132f423f36a43b716a40c394e2a8d063e1010000f4c6c717e99d800c699c25a2006a75a0c5c09f432a936f385e6fce139cdbd1a5e9964d5fae77031e7d026e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a01000000160014aaa671c82b138e3b8f510cd801e5f2bd0aa305940000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022042309f4c3c7a1a2ac8c24f890f962df1c0086cec10be0868087cfc427520cb2702201dafee8911c269b7e786e242045bb57cef3f5b0f177010c6159abae42f646cc501000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signetchallenge=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signetchallenge=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+\n+        self.log.info('getmininginfo')\n+        mining_info = self.nodes[0].getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+\n+        self.log.info(\"pregenerated signet blocks check\")\n+\n+        height = 0\n+        for block in signet_blocks:\n+            assert_equal(self.nodes[2].submitblock(block), None)\n+            height = height + 1",
      "path": "test/functional/feature_signet.py",
      "position": 63,
      "original_position": 63,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "e47ad375bf17557f805bd206e789b8db78c6338a",
      "in_reply_to_id": 491681291,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree the style nit was non-blocking. Fixed in #19993",
      "created_at": "2020-09-22T14:03:16Z",
      "updated_at": "2020-09-22T14:03:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r492760297",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492760297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492760524",
      "pull_request_review_id": 493494705,
      "id": 492760524,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc2MDUyNA==",
      "diff_hunk": "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test basic signet functionality\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+signet_blocks = [\n+    '00000020f61eee3b63a380a477a063af32b2bbc97c9ff9f01f2c4225e973988108000000f575c83235984e7dc4afc1f30944c170462e84437ab6f2d52e16878a79e4678bd1914d5fae77031eccf4070001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025151feffffff0200f2052a010000001600149243f727dd5343293eb83174324019ec16c2630f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205e423a8754336ca99dbe16509b877ef1bf98d008836c725005b3c787c41ebe46022047246e4467ad7cc7f1ad98662afcaf14c115e0095a227c7b05c5182591c23e7e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020533b53ded9bff4adc94101d32400a144c54edc5ed492a3b26c63b2d686000000b38fef50592017cfafbcab88eb3d9cf50b2c801711cad8299495d26df5e54812e7914d5fae77031ecfdd0b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025251feffffff0200f2052a01000000160014fd09839740f0e0b4fc6d5e2527e4022aa9b89dfa0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022031d64a1692cdad1fc0ced69838169fe19ae01be524d831b95fcf5ea4e6541c3c02204f9dea0801df8b4d0cd0857c62ab35c6c25cc47c930630dc7fe723531daa3e9b01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000202960f3752f0bfa8858a3e333294aedc7808025e868c9dc03e71d88bb320000007765fcd3d5b4966beb338bba2675dc2cf2ad28d4ad1d83bdb6f286e7e27ac1f807924d5fae77031e81d60b0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025351feffffff0200f2052a010000001600141e5fb426042692ae0e87c070e78c39307a5661c20000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402205de93694763a42954865bcf1540cb82958bc62d0ec4eee02070fb7937cd037f4022067f333753bce47b10bc25eb6e1f311482e994c862a7e0b2d41ab1c8679fd1b1101000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020b06443a13ae1d3d50faef5ecad38c6818194dc46abca3e972e2aacdae800000069a5829097e80fee00ac49a56ea9f82d741a6af84d32b3bc455cf31871e2a8ac27924d5fae77031e9c91050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025451feffffff0200f2052a0100000016001430db2f8225dcf7751361ab38735de08190318cb70000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402200936f5f9872f6df5dd242026ad52241a68423f7f682e79169a8d85a374eab9b802202cd2979c48b321b3453e65e8f92460db3fca93cbea8539b450c959f4fbe630c601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000207ed403758a4f228a1939418a155e2ebd4ae6b26e5ffd0ae433123f7694010000542e80b609c5bc58af5bdf492e26d4f60cd43a3966c2e063c50444c29b3757a636924d5fae77031ee8601d0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025551feffffff0200f2052a01000000160014edc207e014df34fa3885dff97d1129d356e1186a0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022021a3656609f85a66a2c5672ed9322c2158d57251040d2716ed202a1fe14f0c12022057d68bc6611f7a9424a7e00bbf3e27e6ae6b096f60bac624a094bc97a59aa1ff01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '000000205bea0a88d1422c3df08d766ad72df95084d0700e6f873b75dd4e986c7703000002b57516d33ed60c2bdd9f93d6d5614083324c837e68e5ba6e04287a7285633585924d5fae77031ed171960001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025651feffffff0200f2052a010000001600143ae612599cf96f2442ce572633e0251116eaa52f0000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022059a7c54de76bfdbb1dd44c78ea2dbd2bb4e97f4abad38965f41e76433e56423c022054bf17f04fe17415c0141f60eebd2b839200f574d8ad8d55a0917b92b0eb913401000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020daf3b60d374b19476461f97540498dcfa2eb7016238ec6b1d022f82fb60100007a7ae65b53cb988c2ec92d2384996713821d5645ffe61c9acea60da75cd5edfa1a944d5fae77031e9dbb050001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025751feffffff0200f2052a01000000160014ef2dceae02e35f8137de76768ae3345d99ca68860000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202b3f946d6447f9bf17d00f3696cede7ee70b785495e5498274ee682a493befd5022045fc0bcf9332243168b5d35507175f9f374a8eba2336873885d12aada67ea5f601000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020457cc5f3c2e1a5655bc20e20e48d33e1b7ea68786c614032b5c518f0b6000000541f36942d82c6e7248275ff15c8933487fbe1819c67a9ecc0f4b70bb7e6cf672a944d5fae77031e8f39860001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025851feffffff0200f2052a0100000016001472a27906947c06d034b38ba2fa13c6391a4832790000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402202d62805ce60cbd60591f97f949b5ea5bd7e2307bcde343e6ea8394da92758e72022053a25370b0aa20da100189b7899a8f8675a0fdc60e38ece6b8a4f98edd94569e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a2eb61eb4f3831baa3a3363e1b42db4462663f756f07423e81ed30322102000077224de7dea0f8d0ec22b1d2e2e255f0a987b96fe7200e1a2e6373f48a2f5b7894954d5fae77031e36867e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025951feffffff0200f2052a01000000160014aa0ad9f26801258382e0734dceec03a4a75f60240000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa2490047304402206fa0d59990eed369bd7375767c9a6c9369fae209152b8674e520da270605528c0220749eed3b12dbe3f583f505d21803e4aef59c8e24c5831951eafa4f15a8f92c4e01000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+    '00000020a868e8514be5e46dabd6a122132f423f36a43b716a40c394e2a8d063e1010000f4c6c717e99d800c699c25a2006a75a0c5c09f432a936f385e6fce139cdbd1a5e9964d5fae77031e7d026e0001010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff025a51feffffff0200f2052a01000000160014aaa671c82b138e3b8f510cd801e5f2bd0aa305940000000000000000776a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf94c4fecc7daa24900473044022042309f4c3c7a1a2ac8c24f890f962df1c0086cec10be0868087cfc427520cb2702201dafee8911c269b7e786e242045bb57cef3f5b0f177010c6159abae42f646cc501000120000000000000000000000000000000000000000000000000000000000000000000000000',\n+]\n+\n+class SignetBasicTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 6\n+        self.setup_clean_chain = True\n+        shared_args1 = [\"-signetchallenge=51\"] # OP_TRUE\n+        shared_args2 = []                         # default challenge\n+        # we use the exact same challenge except we do it as a 2-of-2, which means it should fail\n+        shared_args3 = [\"-signetchallenge=522103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\"]\n+\n+        self.extra_args = [\n+            shared_args1, shared_args1,\n+            shared_args2, shared_args2,\n+            shared_args3, shared_args3,\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"basic tests using OP_TRUE challenge\")\n+\n+        self.log.info('getmininginfo')\n+        mining_info = self.nodes[0].getmininginfo()\n+        assert_equal(mining_info['blocks'], 0)\n+        assert_equal(mining_info['chain'], 'signet')\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n+        assert_equal(mining_info['networkhashps'], Decimal('0'))\n+        assert_equal(mining_info['pooledtx'], 0)\n+\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())",
      "path": "test/functional/feature_signet.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "e47ad375bf17557f805bd206e789b8db78c6338a",
      "in_reply_to_id": 491681205,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree this was non-blocking. Fixed in #19993",
      "created_at": "2020-09-22T14:03:30Z",
      "updated_at": "2020-09-22T14:03:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r492760524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492760524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492760826",
      "pull_request_review_id": 493495099,
      "id": 492760826,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc2MDgyNg==",
      "diff_hunk": "@@ -0,0 +1,34 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <signet.h>\n+#include <streams.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <optional>\n+#include <vector>\n+\n+void initialize()\n+{\n+    InitializeFuzzingContext(CBaseChainParams::SIGNET);\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const std::optional<CBlock> block = ConsumeDeserializable<CBlock>(fuzzed_data_provider);\n+    if (!block) {\n+        return;\n+    }\n+    (void)CheckSignetBlockSolution(*block, Params().GetConsensus());\n+    if (GetWitnessCommitmentIndex(*block) != NO_WITNESS_COMMITMENT) {",
      "path": "src/test/fuzz/signet.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "4c189abdc452f08dfa758564b5381bc78c42d481",
      "in_reply_to_id": 491681013,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in #19993",
      "created_at": "2020-09-22T14:03:51Z",
      "updated_at": "2020-09-22T14:03:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r492760826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492760826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492760873",
      "pull_request_review_id": 493495180,
      "id": 492760873,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc2MDg3Mw==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <vector>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <span.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <uint256.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool FetchAndClearCommitmentSection(const Span<const uint8_t> header, CScript& witness_commitment, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found_header = false;\n+    result.clear();\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = witness_commitment.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (witness_commitment.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found_header && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found_header = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found_header) witness_commitment = replacement;\n+    return found_header;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    if (block.vtx.empty()) return invalid(); // no coinbase tx in block; invalid\n+    CMutableTransaction modified_cb(*block.vtx.at(0));\n+\n+    const int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return invalid(); // require a witness commitment\n+    }\n+\n+    CScript& witness_commitment = modified_cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> signet_solution;\n+    if (!FetchAndClearCommitmentSection(SIGNET_HEADER, witness_commitment, signet_solution)) {\n+        // no signet solution -- allow this to support OP_TRUE as trivial block challenge\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, signet_solution, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            v >> tx_spending.vin[0].scriptWitness.stack;\n+            if (!v.empty()) return invalid(); // extraneous data encountered\n+        } catch (const std::exception&) {\n+            return invalid(); // parsing error\n+        }\n+    }\n+    uint256 signet_merkle = ComputeModifiedMerkleRoot(modified_cb, block);\n+\n+    std::vector<uint8_t> block_data;\n+    CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, block_data, 0);\n+    writer << block.nVersion;\n+    writer << block.hashPrevBlock;\n+    writer << signet_merkle;\n+    writer << block.nTime;\n+    tx_to_spend.vin[0].scriptSig << block_data;\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending};\n+}\n+\n+// Signet block solution checker\n+bool CheckSignetBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    const CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    const SignetTxs signet_txs(block, challenge);\n+\n+    if (!signet_txs.m_valid) {",
      "path": "src/signet.cpp",
      "position": 134,
      "original_position": 134,
      "commit_id": "8258c4c0076bb5f27efdc117a04b27fcd6dd00b2",
      "original_commit_id": "404682b7cdb54494e7c98f0ba0cac8b51f379750",
      "in_reply_to_id": 491680141,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in #19993",
      "created_at": "2020-09-22T14:03:56Z",
      "updated_at": "2020-09-22T14:03:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r492760873",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492760873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 134,
      "original_line": 134,
      "side": "RIGHT"
    }
  ]
}