{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
    "id": 831304530,
    "node_id": "PR_kwDOABII584xjLNS",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24148",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24148.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24148.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
    "number": 24148,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Miniscript support in Output Descriptors",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This adds Miniscript support for Output Descriptors without any signing logic (yet). See the OP of #24147 for a description of Miniscript and a rationale of having it in Bitcoin Core.\r\nOn its own, this PR adds \"watchonly\" support for Miniscript descriptors in the descriptor wallet. A follow-up adds signing support.\r\n\r\nA minified corpus of Miniscript Descriptors for the `descriptor_parse` fuzz target is available at https://github.com/bitcoin-core/qa-assets/pull/92.\r\nThe Miniscript descriptors used in the unit tests here and in #24149 were cross-tested against the Rust implementation at https://github.com/rust-bitcoin/rust-miniscript.\r\n\r\nThis PR contains code and insights from Pieter Wuille.",
    "labels": [
      {
        "id": 61889416,
        "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 1482182044,
        "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
        "name": "Descriptors",
        "description": "",
        "color": "e9f76c",
        "default": false
      }
    ],
    "created_at": "2022-01-25T10:29:02Z",
    "updated_at": "2022-09-08T13:07:37Z",
    "closed_at": "2022-07-14T18:54:47Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-07-14T18:54:47Z",
    "merge_commit_sha": "85b601e04363664eae1b4b802cd8dde942761939",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "darosior:miniscript_wallet_watchonly",
      "ref": "miniscript_wallet_watchonly",
      "sha": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 168868367,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjg4NjgzNjc=",
        "name": "bitcoin",
        "full_name": "darosior/bitcoin",
        "owner": {
          "login": "darosior",
          "id": 22457751,
          "node_id": "MDQ6VXNlcjIyNDU3NzUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/darosior",
          "html_url": "https://github.com/darosior",
          "followers_url": "https://api.github.com/users/darosior/followers",
          "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
          "organizations_url": "https://api.github.com/users/darosior/orgs",
          "repos_url": "https://api.github.com/users/darosior/repos",
          "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/darosior/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/darosior/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/darosior/bitcoin",
        "archive_url": "https://api.github.com/repos/darosior/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/darosior/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/darosior/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/darosior/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/darosior/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/darosior/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/darosior/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/darosior/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/darosior/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/darosior/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/darosior/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/darosior/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/darosior/bitcoin/events",
        "forks_url": "https://api.github.com/repos/darosior/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/darosior/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/darosior/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/darosior/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/darosior/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/darosior/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/darosior/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/darosior/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/darosior/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/darosior/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/darosior/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/darosior/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/darosior/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/darosior/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/darosior/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/darosior/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:darosior/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/darosior/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/darosior/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/darosior/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/darosior/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/darosior/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/darosior/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/darosior/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/darosior/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/darosior/bitcoin/hooks",
        "svn_url": "https://github.com/darosior/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 216031,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-16T18:02:44Z",
        "created_at": "2019-02-02T19:20:27Z",
        "updated_at": "2023-05-05T11:25:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "062b9db0ccb6af8bfbaa2b29132408cda9991b40",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 401,
    "deletions": 36,
    "changed_files": 6,
    "commits": 5,
    "review_comments": 34,
    "comments": 23
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 5949297376,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAFimxLg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5949297376",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-25T11:54:39Z"
    },
    {
      "event": "labeled",
      "id": 5949415577,
      "node_id": "LE_lADOABII585CYc-9zwAAAAFinOCZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5949415577",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-25T12:15:22Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 5949415582,
      "node_id": "LE_lADOABII585CYc-9zwAAAAFinOCe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5949415582",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-25T12:15:22Z",
      "label": {
        "name": "Consensus",
        "color": "009800"
      }
    },
    {
      "event": "labeled",
      "id": 5949415585,
      "node_id": "LE_lADOABII585CYc-9zwAAAAFinOCh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5949415585",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-25T12:15:22Z",
      "label": {
        "name": "Descriptors",
        "color": "e9f76c"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5949806326,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAFiotb2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5949806326",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-25T13:21:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5951836137,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAFiwc_p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5951836137",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-25T18:02:52Z"
    },
    {
      "event": "commented",
      "id": 1021733605,
      "node_id": "IC_kwDOABII58485mrl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021733605",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-26T00:22:27Z",
      "updated_at": "2022-07-12T22:54:34Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25540](https://github.com/bitcoin/bitcoin/pull/25540) (miniscript: avoid wasteful computation, prevent memory blowup when fuzzing by darosior)\n* [#24361](https://github.com/bitcoin/bitcoin/pull/24361) (Descriptor unit tests and simplifications by sipa)\n* [#23480](https://github.com/bitcoin/bitcoin/pull/23480) (Add rawtr() descriptor for P2TR with specified (tweaked) output key by sipa)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1021733605",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "labeled",
      "id": 5954964405,
      "node_id": "LE_lADOABII585CYc-9zwAAAAFi8Yu1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5954964405",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-26T08:11:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 5965588926,
      "node_id": "UNLE_lADOABII585CYc-9zwAAAAFjk6m-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5965588926",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-27T17:31:04Z",
      "label": {
        "name": "Consensus",
        "color": "009800"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6050670850,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAFopekC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6050670850",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T11:45:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6050797557,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAFop9f1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6050797557",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T12:06:23Z"
    },
    {
      "event": "commented",
      "id": 1036147958,
      "node_id": "IC_kwDOABII5849wlz2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1036147958",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T12:06:28Z",
      "updated_at": "2022-02-11T12:06:28Z",
      "author_association": "MEMBER",
      "body": "Rebased.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1036147958",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "unlabeled",
      "id": 6051118838,
      "node_id": "UNLE_lADOABII585CYc-9zwAAAAForL72",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6051118838",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T13:00:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6112027806,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAFsTiSe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6112027806",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T14:28:23Z"
    },
    {
      "event": "labeled",
      "id": 6185181558,
      "node_id": "LE_lADOABII585CYc-9zwAAAAFwqmF2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6185181558",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T13:30:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6260716496,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAF1KvPQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6260716496",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-17T17:09:01Z"
    },
    {
      "event": "commented",
      "id": 1071101724,
      "node_id": "IC_kwDOABII584_17cc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1071101724",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-17T17:09:08Z",
      "updated_at": "2022-03-17T17:09:08Z",
      "author_association": "MEMBER",
      "body": "Rebased.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1071101724",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "unlabeled",
      "id": 6261109108,
      "node_id": "UNLE_lADOABII585CYc-9zwAAAAF1MPF0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6261109108",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-17T18:07:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6266337274,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAF1gLf6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6266337274",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-18T13:51:17Z"
    },
    {
      "event": "referenced",
      "id": 6370381428,
      "node_id": "REFE_lADOABII585CYc-9zwAAAAF7tE50",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6370381428",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d492dc1cdaabdc52b0766bf4cba4bd73178325d0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d492dc1cdaabdc52b0766bf4cba4bd73178325d0",
      "created_at": "2022-04-05T11:22:40Z"
    },
    {
      "event": "commented",
      "id": 1088728549,
      "node_id": "IC_kwDOABII585A5K3l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088728549",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T13:50:10Z",
      "updated_at": "2022-04-05T13:50:10Z",
      "author_association": "MEMBER",
      "body": "I (slightly) messed up the last rebase here, but there was some updates in the meantime so i'll push a fix along with those soon.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1088728549",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "commented",
      "id": 1103883337,
      "node_id": "IC_kwDOABII585By-xJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103883337",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T12:37:51Z",
      "updated_at": "2022-04-20T12:37:51Z",
      "author_association": "MEMBER",
      "body": "Rebased on top of #24860. I've made some cleanups and added more comments. I've also merged the unit tests of the Miniscript descriptors with the commit introducing the feature. I've changed the author of the commit to myself from Pieter as it was modified quite a lot from [his original one](https://github.com/bitcoin/bitcoin/pull/16800/commits/037e55adc005e9d8253d3d35e7a30b2e8521389c)  and i don't want to wrongly attribute him my own mistakes :p (of course, the co-author credits were switched accordingly).",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1103883337",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6462812903,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAGBNrLn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6462812903",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T12:38:10Z"
    },
    {
      "event": "commented",
      "id": 1127647494,
      "node_id": "IC_kwDOABII585DNokG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1127647494",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T13:05:05Z",
      "updated_at": "2022-05-16T13:05:05Z",
      "author_association": "MEMBER",
      "body": "Hmm, so the use of `uint32_t` as key types makes the check for duplicate keys void. I need to look into it.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1127647494",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "commented",
      "id": 1127664730,
      "node_id": "IC_kwDOABII585DNsxa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1127664730",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T13:19:29Z",
      "updated_at": "2022-05-16T13:19:29Z",
      "author_association": "MEMBER",
      "body": "@darosior Perhaps add an KeyCompare(Key, Key) function to contexts, and use that as set ordering in the duplicate check, rather than Key::operator< ?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1127664730",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "mentioned",
      "id": 6616092870,
      "node_id": "MEE_lADOABII585CYc-9zwAAAAGKWZDG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6616092870",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T13:19:30Z"
    },
    {
      "event": "subscribed",
      "id": 6616092886,
      "node_id": "SE_lADOABII585CYc-9zwAAAAGKWZDW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6616092886",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T13:19:30Z"
    },
    {
      "event": "reviewed",
      "id": 985172194,
      "node_id": "PRR_kwDOABII5846uIji",
      "url": null,
      "actor": null,
      "commit_id": "22b2171c48b5cbb1f293182f25e24ed5a3939bc1",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "OliverOffing",
        "id": 84942996,
        "node_id": "MDQ6VXNlcjg0OTQyOTk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/84942996?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/OliverOffing",
        "html_url": "https://github.com/OliverOffing",
        "followers_url": "https://api.github.com/users/OliverOffing/followers",
        "following_url": "https://api.github.com/users/OliverOffing/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/OliverOffing/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/OliverOffing/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/OliverOffing/subscriptions",
        "organizations_url": "https://api.github.com/users/OliverOffing/orgs",
        "repos_url": "https://api.github.com/users/OliverOffing/repos",
        "events_url": "https://api.github.com/users/OliverOffing/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/OliverOffing/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-985172194",
      "submitted_at": "2022-05-25T16:53:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "commented",
      "id": 1138418715,
      "node_id": "IC_kwDOABII585D2uQb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138418715",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-26T11:10:18Z",
      "updated_at": "2022-05-26T11:10:18Z",
      "author_association": "MEMBER",
      "body": "Rebased on top of #24860 to integrate the `IsSane` renaming and key duplicate check using a `KeyCompare` method. I added a unit test for duplicate key check when parsing a Miniscript descriptor and took the opportunity to rework a bit the error messages to make them consistent (Now always \"is not sane: [reason]\").",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1138418715",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6684838173,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAGOcokd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6684838173",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-26T11:15:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6686381748,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAGOiha0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6686381748",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-26T15:08:25Z"
    },
    {
      "event": "referenced",
      "id": 6742387801,
      "node_id": "REFE_lADOABII585CYc-9zwAAAAGR4KxZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6742387801",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "695ca641a4e3ae065121815a968c769198aa73de",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/695ca641a4e3ae065121815a968c769198aa73de",
      "created_at": "2022-06-04T19:54:33Z"
    },
    {
      "event": "labeled",
      "id": 6742418956,
      "node_id": "LE_lADOABII585CYc-9zwAAAAGR4SYM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6742418956",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-04T20:33:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 6749201136,
      "node_id": "REFE_lADOABII585CYc-9zwAAAAGSSKLw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6749201136",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "da822e008351349fb5db4b9c846a191d76afb559",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/da822e008351349fb5db4b9c846a191d76afb559",
      "created_at": "2022-06-05T20:15:33Z"
    },
    {
      "event": "commented",
      "id": 1147534116,
      "node_id": "IC_kwDOABII585EZfsk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147534116",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-06T14:49:28Z",
      "updated_at": "2022-06-06T14:49:28Z",
      "author_association": "MEMBER",
      "body": "@darosior Needs rebase! (wheeee)",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1147534116",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "mentioned",
      "id": 6753686456,
      "node_id": "MEE_lADOABII585CYc-9zwAAAAGSjRO4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6753686456",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-06T14:49:28Z"
    },
    {
      "event": "subscribed",
      "id": 6753686469,
      "node_id": "SE_lADOABII585CYc-9zwAAAAGSjRPF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6753686469",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-06T14:49:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6754333259,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAGSlvJL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6754333259",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-06T16:14:22Z"
    },
    {
      "event": "commented",
      "id": 1147634271,
      "node_id": "IC_kwDOABII585EZ4Jf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147634271",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-06T16:20:27Z",
      "updated_at": "2022-06-06T16:20:27Z",
      "author_association": "MEMBER",
      "body": "Rebased. :)",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1147634271",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "unlabeled",
      "id": 6755125574,
      "node_id": "UNLE_lADOABII585CYc-9zwAAAAGSowlG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6755125574",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-06T18:18:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1000039762,
      "node_id": "PRR_kwDOABII5847m2VS",
      "url": null,
      "actor": null,
      "commit_id": "a042854c0f97f9553155f37696040e8f2a491faf",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1000039762",
      "submitted_at": "2022-06-08T16:25:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6780309421,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAGUI0-t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6780309421",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-09T18:46:06Z"
    },
    {
      "event": "reviewed",
      "id": 1012714706,
      "node_id": "PRR_kwDOABII5848XMzS",
      "url": null,
      "actor": null,
      "commit_id": "faa6f2176e487f7992557a1620923ebfaf60f432",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "4665124eca32c654df55fccf314f74d8fb9731be \"miniscript: add a helper to find the deepest insane sub\" does not seem to find the deepest, just an insane sub that has no children?\r\n\r\nWhy not have `Key` be `PubkeyProvider` so that each miniscript node can handle its own keys?",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1012714706",
      "submitted_at": "2022-06-20T20:28:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "commented",
      "id": 1162100884,
      "node_id": "IC_kwDOABII585FRECU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162100884",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T17:53:24Z",
      "updated_at": "2022-06-21T17:53:24Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @achow101.\r\n\r\nRegarding `FindInsaneSub`, you are right. I should rename the commit. The intention here is to find the first insane sub that is closest to be a leaf.\r\n\r\n`Key` can't be a `PubkeyProvider` because we instanciate `Key`s. Neither can it be a `unique_ptr` since we may copy it. Following Pieter's comment last month (https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1127664730) i tried making it a `shared_ptr` in order to avoid adding a `KeyCompare` requirement on all contexts. Unfortunately it quickly becomes unmanageable.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1162100884",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "mentioned",
      "id": 6849637156,
      "node_id": "MEE_lADOABII585CYc-9zwAAAAGYRSsk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6849637156",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T17:53:24Z"
    },
    {
      "event": "subscribed",
      "id": 6849637164,
      "node_id": "SE_lADOABII585CYc-9zwAAAAGYRSss",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6849637164",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T17:53:24Z"
    },
    {
      "event": "commented",
      "id": 1164921615,
      "node_id": "IC_kwDOABII585Fb0sP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164921615",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-23T21:59:13Z",
      "updated_at": "2022-06-23T21:59:13Z",
      "author_association": "MEMBER",
      "body": "ACK faa6f2176e487f7992557a1620923ebfaf60f432",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1164921615",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "commented",
      "id": 1173820796,
      "node_id": "IC_kwDOABII585F9xV8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1173820796",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-04T13:25:39Z",
      "updated_at": "2022-07-04T13:25:39Z",
      "author_association": "MEMBER",
      "body": "@sipa: could you give this another look when you have a minute?",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1173820796",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "mentioned",
      "id": 6928088115,
      "node_id": "MEE_lADOABII585CYc-9zwAAAAGc8jwz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6928088115",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-04T13:25:39Z"
    },
    {
      "event": "subscribed",
      "id": 6928088128,
      "node_id": "SE_lADOABII585CYc-9zwAAAAGc8jxA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6928088128",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-04T13:25:39Z"
    },
    {
      "event": "commented",
      "id": 1174763670,
      "node_id": "IC_kwDOABII585GBXiW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1174763670",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T08:21:44Z",
      "updated_at": "2022-07-05T08:21:44Z",
      "author_association": "MEMBER",
      "body": "I've got a decent fuzzing coverage of this PR with the corpus at https://github.com/bitcoin-core/qa-assets/pull/92 (using this branch along with #25540 to avoid memory blowups). A coverage report is available [here](http://download.darosior.ninja/dump/coverage_descriptor_parse_miniscript_2205/src/script/index.html).",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1174763670",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "commented",
      "id": 1177640746,
      "node_id": "IC_kwDOABII585GMV8q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177640746",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-07T13:45:41Z",
      "updated_at": "2022-07-07T15:25:09Z",
      "author_association": "MEMBER",
      "body": "Can you add a test for `FindInsaneSub`?  Right now its only function is to produce better error messages, but who knows what people do with it later... Though I guess such tests would much overlap with the test vectors in descriptor_tests.cpp.\r\n\r\nAny particular reason why you're moving `InferPubkey` and `InferXOnlyPubkey` (no problem with `--color-moved=dimmed-zebra`) in e9cac52614d11e30d1f6fec33efce3d00953bd70?\r\n\r\nNit: `bool operator<(PubkeyProvider& other)` and the new `StringMaker` class could go in their own commits (with tests, which also make them easier to review).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1177640746",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "reviewed",
      "id": 1031776846,
      "node_id": "PRR_kwDOABII5849f6pO",
      "url": null,
      "actor": null,
      "commit_id": "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1031776846",
      "submitted_at": "2022-07-07T15:30:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6970246348,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAGfdYTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6970246348",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T14:47:12Z"
    },
    {
      "event": "commented",
      "id": 1180629992,
      "node_id": "IC_kwDOABII585GXvvo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1180629992",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T16:39:28Z",
      "updated_at": "2022-07-11T16:39:28Z",
      "author_association": "MEMBER",
      "body": "Indeed a test for `FindInsaneSub` is redundant with the descriptor parsing failure test vectors. But it's trivial so i added one. I also took this opportunity to rename the commit to not mention it's looking for the \"deepest\" insane sub, as noted by @achow101.\r\n\r\n`InferPubkey` is used in the `KeyParser` so it needs to be declared. I made `InferXOnlyPubkey` stick with the former for pure style/organisation reasons: it appeared to be \"righter\" and not harder to review (this just extends the moved patch from ~8 to ~16 lines which is trivially reviewable with `--color-moved` as you mentioned).\r\n\r\nAs for splitting the commit, i'd prefer to leave it like that if you don't feel too strongly about it (and since you marked it as nit). I think it would just make the commits less atomic, and the `StringMaker`/`ScriptMaker` are tested through the `MiniscriptDescriptor`.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1180629992",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "mentioned",
      "id": 6971124748,
      "node_id": "MEE_lADOABII585CYc-9zwAAAAGfguwM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6971124748",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T16:39:28Z"
    },
    {
      "event": "subscribed",
      "id": 6971124759,
      "node_id": "SE_lADOABII585CYc-9zwAAAAGfguwX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6971124759",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-11T16:39:28Z"
    },
    {
      "event": "mentioned",
      "id": 6986327122,
      "node_id": "MEE_lADOABII585CYc-9zwAAAAGgauRS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6986327122",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T14:04:13Z"
    },
    {
      "event": "subscribed",
      "id": 6986327136,
      "node_id": "SE_lADOABII585CYc-9zwAAAAGgauRg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6986327136",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T14:04:13Z"
    },
    {
      "event": "reviewed",
      "id": 1037552949,
      "node_id": "PRR_kwDOABII58491801",
      "url": null,
      "actor": null,
      "commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK 49ac002733157f5629303d1cf59fa3151fdf1e73\r\n\r\nI was able to import a miniscript descriptor into a watch-only wallet and send some signet coins to it. I'll continue testing after #24148 is rebased. \r\n\r\nNit: when you use an invalid miniscript fragment, like `or_v(…)` it says \"A function is needed within P2WSH\". It might be more clear to use `or_v(…) is invalid` here.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1037552949",
      "submitted_at": "2022-07-13T15:35:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "comment_deleted",
      "id": 6987189318,
      "node_id": "CDE_lADOABII585CYc-9zwAAAAGgeAxG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6987189318",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T15:45:56Z"
    },
    {
      "event": "commented",
      "id": 1183623495,
      "node_id": "IC_kwDOABII585GjKlH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1183623495",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T20:00:59Z",
      "updated_at": "2022-07-13T20:00:59Z",
      "author_association": "MEMBER",
      "body": "re-ACK 49ac002733157f5629303d1cf59fa3151fdf1e73",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1183623495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "review_requested",
      "id": 6988845473,
      "node_id": "RRE_lADOABII585CYc-9zwAAAAGgkVGh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6988845473",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T20:11:00Z",
      "requested_reviewer": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 6988864076,
      "node_id": "RRE_lADOABII585CYc-9zwAAAAGgkZpM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6988864076",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T20:14:20Z",
      "requested_reviewer": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1037933525,
      "node_id": "PRR_kwDOABII58493ZvV",
      "url": null,
      "actor": null,
      "commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1037933525",
      "submitted_at": "2022-07-13T20:30:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "reviewed",
      "id": 1038131136,
      "node_id": "PRR_kwDOABII58494J_A",
      "url": null,
      "actor": null,
      "commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK https://github.com/bitcoin/bitcoin/pull/24148/commits/49ac002733157f5629303d1cf59fa3151fdf1e73\r\n\r\nThe first commit (https://github.com/bitcoin/bitcoin/pull/24148/commits/d4b6f6842a5273afd1e7fe68d18d272566eb90c8) fails to run the miniscript unit test.\r\n\r\n```\r\n$ git reset --hard d4b6f6842a5273afd1e7fe68d18d272566eb90c8\r\n$ make\r\n$ src/test/test_bitcoin --run_test=miniscript_tests \r\nRunning 1 test case...\r\ntest/miniscript_tests.cpp(303): error: in \"miniscript_tests/fixed_tests\": check ms_ins && !ms_ins->IsSane() has failed\r\nunknown location(0): fatal error: in \"miniscript_tests/fixed_tests\": memory access violation at address: 0x00000038: no mapping at fault address\r\ntest/miniscript_tests.cpp(303): last checkpoint\r\n```\r\n\r\nThe second commit (https://github.com/bitcoin/bitcoin/pull/24148/commits/10b905fe98ccef3840e81664ea36fe11860f1d6d) fixes this error.\r\n\r\nMaybe they might be squashed or the test file changed in the second.\r\n\r\n",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1038131136",
      "submitted_at": "2022-07-14T01:24:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMzOGM3YzU4MTdiN2U3M2NmMGY3ODg4NTVjNGFiYTU5YzI4N2IwYWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c38c7c5817b7e73cf0f788855c4aba59c287b0ad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c38c7c5817b7e73cf0f788855c4aba59c287b0ad",
      "tree": {
        "sha": "8b02cb4ff30e9ec7d25221b19fc3940a93bca389",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b02cb4ff30e9ec7d25221b19fc3940a93bca389"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8b02cb4ff30e9ec7d25221b19fc3940a93bca389\nparent 327b7e9236e3b0cde750df72d5f75821e52e545c\nauthor Antoine Poinsot <darosior@protonmail.com> 1639144202 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1657793029 +0200\n\nminiscript: don't check for top level validity at parsing time\n\nLetting the caller perform the checks allows for finer-grained error\nreporting.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmLP6gUACgkQ4T/BRc0/\nQwR++gwAg3P2C5hlz+UQIswwDTFqU5EjEpbDy5riSBEI1k4a2Yk4rfUYDeyfPFeE\nlqCkB0zOzwqxdfoVRePeiKPknRRRb9pgVc6K6RcU5mYXPwKRX1UcXP/Fd7yax1nP\nJNtGCXpVgykHTe/0m7l6jj80wh9YLK16cuAklXbdOjXDHfSUsL379qickeffloRR\npyCkrxPR5u0/BXwTmrw1HOunmxJMiETkWEaG/pxxAjWrkxyhV+kuIr3U8gkj5tLg\n6zNMiwlR78QfFSZ9olenn/BnZUFE8/uE4tj1aP5epSLQCVICXpRGa3hYGXBuB+xr\n2PFlV5VOvNiVb/JuDkeSuZj5N4nTaJA0cCqLhGSn9euGVgIJLtTk0EyOT4Ofh/wS\nTcU/bWtUvI3DfLTbJMaOnk8jeejYXBNJhOc1Wzu1KeXlEfwJafLLICll8rq6Xsim\nqGBf10OxpYSkcrV2/h29o7G951zFSXbwwe7SVx6togtWEm4PJa7d48cEjNWnjOYb\nC76IaCSt\n=Fz3d\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/327b7e9236e3b0cde750df72d5f75821e52e545c",
          "sha": "327b7e9236e3b0cde750df72d5f75821e52e545c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/327b7e9236e3b0cde750df72d5f75821e52e545c"
        }
      ],
      "message": "miniscript: don't check for top level validity at parsing time\n\nLetting the caller perform the checks allows for finer-grained error\nreporting.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2022-07-14T10:03:49Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-12-10T13:50:02Z"
      },
      "sha": "c38c7c5817b7e73cf0f788855c4aba59c287b0ad"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQyNWQ1OGJmNWYzMDFkM2JiODY4M2JkNjdjODg0N2E0OTU3ZDhlOTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d25d58bf5f301d3bb8683bd67c8847a4957d8e97",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d25d58bf5f301d3bb8683bd67c8847a4957d8e97",
      "tree": {
        "sha": "1fa225479046e6499f48d4b5ed877d478a8a81bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1fa225479046e6499f48d4b5ed877d478a8a81bd"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1fa225479046e6499f48d4b5ed877d478a8a81bd\nparent c38c7c5817b7e73cf0f788855c4aba59c287b0ad\nauthor Antoine Poinsot <darosior@protonmail.com> 1633298880 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1657793029 +0200\n\nminiscript: add a helper to find the first insane sub with no child\n\nThis is helpful for finer grained descriptor parsing error: when there\nare multiple errors to report in a Miniscript descriptor start with the\n\"smallest\" fragments: the ones closer to be a leaf.\n\nCo-Authored-By: Pieter Wuille <pieter@wuille.net>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmLP6gUACgkQ4T/BRc0/\nQwS+SAv/R9tgvfMs98FPvS44Zzjb7CQ9RIszazyNPIndcF3GGIn0tGVIrmP6DlFO\nclXtNXf+KQJaeiSD7CBYyhW4WKnKdZZBTUkYWOJ8PCH9RQnwu2Gj+Wyau8HqiyJ8\nWOaz75b88warcAKk091jbHa+7woC6MEKxxeeO1N202nPsJusb3xKhA6/P1gxsYVC\nKbo26HAQKpFrKXNxH2CWA/gvD3F3R7a54G36qWmPYmYsws+o5YM6dffZ4YpZuLvT\nvuAwxW+ao+JsY3waMOliCIgJIHiaQFYdrqCi9SBIqwhkCx06GeYYf/WMjn6Ok15F\nB29pFrEDy1RCBXfHXDsCSnVPlhnsGxk5mIZ6971uT/TY5RnxIsyOTlbqI+QUETrU\nyF0zieswYgNp9gtndsEAMm+EQOGXiweNVG5iKlYiyV4XA/jV3xngWp9orAmjHdD7\nVNmnaXEHgyN9qb3OIHxanJNc8iJhHyL8Wigl9ImCB1vdXARYPyGVVvo77Pwol8CH\nxv3d/6pO\n=XWFk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c38c7c5817b7e73cf0f788855c4aba59c287b0ad",
          "sha": "c38c7c5817b7e73cf0f788855c4aba59c287b0ad",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c38c7c5817b7e73cf0f788855c4aba59c287b0ad"
        }
      ],
      "message": "miniscript: add a helper to find the first insane sub with no child\n\nThis is helpful for finer grained descriptor parsing error: when there\nare multiple errors to report in a Miniscript descriptor start with the\n\"smallest\" fragments: the ones closer to be a leaf.\n\nCo-Authored-By: Pieter Wuille <pieter@wuille.net>",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2022-07-14T10:03:49Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-10-03T22:08:00Z"
      },
      "sha": "d25d58bf5f301d3bb8683bd67c8847a4957d8e97"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRhMDgyODg3YmVlNzZhOTZkZWFkYTVkYmQ3Zjk5MWMyM2IzMDFjNTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a082887bee76a96deada5dbd7f991c23b301c54",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4a082887bee76a96deada5dbd7f991c23b301c54",
      "tree": {
        "sha": "4385abd2dc7a56d9727b4798f0c58a3321d7ead5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4385abd2dc7a56d9727b4798f0c58a3321d7ead5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4385abd2dc7a56d9727b4798f0c58a3321d7ead5\nparent d25d58bf5f301d3bb8683bd67c8847a4957d8e97\nauthor Antoine Poinsot <darosior@protonmail.com> 1633299488 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1657793030 +0200\n\nqa: better error reporting on descriptor parsing error\n\nA nit, but was helpful when writing unit tests for Miniscript parsing\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmLP6gYACgkQ4T/BRc0/\nQwRxwgv/SLLt97X/raukyhu5zsMg0a5A6LGzeuOakqq7gjOUsHJN59/PTTZfjhek\nEUqe7M4NlP5ueP8wfptLQcGisiKvwGFbf3XitsgH0jviH167zEMKJr9UMeqvvEIv\nDIEg0lTXrIUfR2vW7laYGk6IDNjgPvu0VfVlVcNf47Xu5Z8UOtkQTWqtuoB2SRs3\niZH9pMj7FmbnVNmL6HdaCm+P2ZuAwcfIttYujbBVSli6HUZXdnPtEQ9gRY6y5MF3\nvRoY+SZiOt053p4m1DFwX85MqWr5Lz99xA9GrmW/An0BTaHWlCGXVo/66Z7hKQ8d\nLJTovB5t1rvWa5Q76J//ek7S4rNzDDQEZ209JRlzdapfOEvWEUkmHVyvlGJ93KBX\n4VS3aalpGUwCOSZzR19iC3uS7HHoaGgtI5OusTnkwUHhWkw8q+6zJJCEWWJ4Bh06\nHzL7sh6nhKqux7MCGNBsHTmyurCtuN1EBYg0n5sls4Z12WdGKW07KBUGOM6GXoDc\nv4IKlrkt\n=lTCe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d25d58bf5f301d3bb8683bd67c8847a4957d8e97",
          "sha": "d25d58bf5f301d3bb8683bd67c8847a4957d8e97",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d25d58bf5f301d3bb8683bd67c8847a4957d8e97"
        }
      ],
      "message": "qa: better error reporting on descriptor parsing error\n\nA nit, but was helpful when writing unit tests for Miniscript parsing",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2022-07-14T10:03:50Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-10-03T22:18:08Z"
      },
      "sha": "4a082887bee76a96deada5dbd7f991c23b301c54"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6992890141,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAGgzwkd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6992890141",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T10:04:20Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJmYjAzNjc1NmFkNmUxODdmZDZkM2FiZmVmZTU4MDRiYjU0YTVjNzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bfb036756ad6e187fd6d3abfefe5804bb54a5c71",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bfb036756ad6e187fd6d3abfefe5804bb54a5c71",
      "tree": {
        "sha": "1c3bc6fe5815ffcf09114d140dfaa2b16557badf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c3bc6fe5815ffcf09114d140dfaa2b16557badf"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1c3bc6fe5815ffcf09114d140dfaa2b16557badf\nparent 4a082887bee76a96deada5dbd7f991c23b301c54\nauthor Antoine Poinsot <darosior@protonmail.com> 1649791117 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1657793504 +0200\n\nMiniscript support in output descriptors\n\nMiniscript descriptors are defined under P2WSH context (either `wsh()`\nor `sh(wsh())`).\nOnly sane Miniscripts are accepted, as insane ones (although valid by\ntype) can have surprising behaviour with regard to malleability\nguarantees and resources limitations.\nAs Miniscript descriptors are longer and more complex than \"legacy\"\ndescriptors, care was taken in error reporting to help a user determine\nfor what reason a provided Miniscript is insane.\n\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmLP6+AACgkQ4T/BRc0/\nQwQasQv/drmvr2QbpToQqR+aaGKWaIhQuhmCkeB8nPto7InIr5uLvZycLazHTfXP\nU+aHnQa+DLRkFeItp+h26iCXL4Bzl2UR8Y3n2HgCzMbwJH4KQ424LOnYRX6frg62\nBa3pMMvAhG0bj4a8m6iYFX95qiib6u1NExTmWHa0uAyISoBEiLFbBnoOlNr0PekK\nDBYW6wHGGLpnrSsCv2GrWJRGU2kUHw3xAqnuNbgcsqlnzItFDdaIHPPzCQl20Ysd\nN3PYjFsK0Wa9Y7xMSY5cTJB3dPlRVaIHGRNEtFTKRs/4VUaSopENZoipgYAtoDZK\ndH4NOTN02BVwvkMw1z2eF5N2s/+3fM1lJNuy3oIzTWuUWJQQ6UExrZg3I7EAQ0ML\nuE7MV/KIJOLb7B45gYETv7waE7nzQ5q6po3sFEVIX7oaSITTExG9l3ywMdAV0OAw\ni8iEt5Ue5uqnJYSLEp8vy2lFJRpdKSa/ZHSNSWByCkG7DYPLdfgMi7KbqI9HX/zk\nwPH5fqt4\n=ThjA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a082887bee76a96deada5dbd7f991c23b301c54",
          "sha": "4a082887bee76a96deada5dbd7f991c23b301c54",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4a082887bee76a96deada5dbd7f991c23b301c54"
        }
      ],
      "message": "Miniscript support in output descriptors\n\nMiniscript descriptors are defined under P2WSH context (either `wsh()`\nor `sh(wsh())`).\nOnly sane Miniscripts are accepted, as insane ones (although valid by\ntype) can have surprising behaviour with regard to malleability\nguarantees and resources limitations.\nAs Miniscript descriptors are longer and more complex than \"legacy\"\ndescriptors, care was taken in error reporting to help a user determine\nfor what reason a provided Miniscript is insane.\n\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2022-07-14T10:11:44Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2022-04-12T19:18:37Z"
      },
      "sha": "bfb036756ad6e187fd6d3abfefe5804bb54a5c71"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmYzc5YjhlNDkyYzZkZDEzNTJlNTI4ZmQ4MmU0NWQ4ZDI1ZWFhMDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "tree": {
        "sha": "59a03f01e0009fbb0c54d349388157961e068634",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59a03f01e0009fbb0c54d349388157961e068634"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 59a03f01e0009fbb0c54d349388157961e068634\nparent bfb036756ad6e187fd6d3abfefe5804bb54a5c71\nauthor Antoine Poinsot <darosior@protonmail.com> 1642166755 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1657793504 +0200\n\nqa: functional test Miniscript watchonly support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmLP6+AACgkQ4T/BRc0/\nQwQkuwwAvRGnrX5KHYcZqRbquRRvIG/veNs4/9m9pK8hYejaAGrONDU5bUUWfwUl\nYwD9gGVnpHjTZyjXtZ8uGGBQluU8pokK7b7zRUCGokfyUm/Zl9MIlCQm9O0WzXc1\nJDlx2uNfhsGn6uwgcXOnuQBvQOH8BqVi/CKqWk1HdF35sgB4+ImewtI2Q+miLVEr\nvZoQOv1AGgBspmVfnhWkKS2aRi56/TdK2EkDRiA+YuB04RX6NmRZrDIBHTQc6u1n\ng3CcNtAn268YFWMOS7Ctd2lklzxm8EDDxk+2C6ZUIMjb/9Xeutg1N0KseN1uMH8Q\ng6tJ08KdrsaRE4TeJ+2Y+PQQjriH9dUMFjgdPP7wMP17eYc5vQjaSTzxVHe2nlvY\nFN3OlInZlgxrFgTgmLYPZIcZ/yAr6rsmc2iZH+GBIun++94LpKKOswfx5q02tLAr\n4/4Tztw+A1R/Y+rDja2O0irNvO04dk/GN0wCYD5aBdNeN8z8xuuSi49zOcnHUv9H\n7eDUOpFs\n=MTHk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bfb036756ad6e187fd6d3abfefe5804bb54a5c71",
          "sha": "bfb036756ad6e187fd6d3abfefe5804bb54a5c71",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bfb036756ad6e187fd6d3abfefe5804bb54a5c71"
        }
      ],
      "message": "qa: functional test Miniscript watchonly support",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2022-07-14T10:11:44Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2022-01-14T13:25:55Z"
      },
      "sha": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6992946251,
      "node_id": "HRFPE_lADOABII585CYc-9zwAAAAGgz-RL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6992946251",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T10:12:23Z"
    },
    {
      "event": "commented",
      "id": 1184263500,
      "node_id": "IC_kwDOABII585Glm1M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1184263500",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T10:17:15Z",
      "updated_at": "2022-07-14T10:17:55Z",
      "author_association": "MEMBER",
      "body": "Thanks @w0xlt, good catch: it's the unit test for `FindInsaneSub` i just added that i had only tested on the tip of the branch. I've swapped the two first commits now and they all individually compile and pass the tests.\r\n\r\n@Sjors \r\n> interestingly even BOOST_CHECK(ms_ins); fails.\r\n\r\ni was missing an `a:` wrapper for the second `after`, i've added a check that the Miniscript is valid (which does not change the test since an invalid sub is necessarily insane):\r\n```diff\r\ndiff --git a/src/test/miniscript_tests.cpp b/src/test/miniscript_tests.cpp\r\nindex f5bea00e1e..bc5c49ef63 100644\r\n--- a/src/test/miniscript_tests.cpp\r\n+++ b/src/test/miniscript_tests.cpp\r\n@@ -299,10 +299,10 @@ BOOST_AUTO_TEST_CASE(fixed_tests)\r\n     // 2. It contains timelock mixes\r\n     // We'll report the timelock mix error, as it's \"deeper\" (closer to be a leaf node) than the \"no 's' property\"\r\n     // error is.\r\n-    const auto ms_ins = miniscript::FromString(\"or_i(and_b(after(1),after(10000000)),pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204))\", CONVERTER);\r\n-    BOOST_CHECK(ms_ins && !ms_ins->IsSane());\r\n+    const auto ms_ins = miniscript::FromString(\"or_i(and_b(after(1),a:after(1000000000)),pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204))\", CONVERTER);\r\n+    BOOST_CHECK(ms_ins && ms_ins->IsValid() && !ms_ins->IsSane());\r\n     const auto insane_sub = ms_ins->FindInsaneSub();\r\n-    BOOST_CHECK(insane_sub && *insane_sub->ToString(CONVERTER) == \"and_b(after(1),after(10000000))\");\r\n+    BOOST_CHECK(insane_sub && *insane_sub->ToString(CONVERTER) == \"and_b(after(1),a:after(1000000000))\");\r\n \r\n     // Timelock tests\r\n     Test(\"after(100)\", \"?\", TESTMODE_VALID | TESTMODE_NONMAL); // only heightlock\r\n```\r\n\r\nI also took the opportunity to fix the two nits @Sjors had previously.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1184263500",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "mentioned",
      "id": 6992978677,
      "node_id": "MEE_lADOABII585CYc-9zwAAAAGg0GL1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6992978677",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T10:17:15Z"
    },
    {
      "event": "subscribed",
      "id": 6992978687,
      "node_id": "SE_lADOABII585CYc-9zwAAAAGg0GL_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6992978687",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T10:17:16Z"
    },
    {
      "event": "mentioned",
      "id": 6992978698,
      "node_id": "MEE_lADOABII585CYc-9zwAAAAGg0GMK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6992978698",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T10:17:16Z"
    },
    {
      "event": "subscribed",
      "id": 6992978702,
      "node_id": "SE_lADOABII585CYc-9zwAAAAGg0GMO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6992978702",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T10:17:16Z"
    },
    {
      "event": "commented",
      "id": 1184371480,
      "node_id": "IC_kwDOABII585GmBMY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1184371480",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T12:10:43Z",
      "updated_at": "2022-07-14T12:10:43Z",
      "author_association": "MEMBER",
      "body": "It's still a bit weird that a `BOOST_CHECK` doesn't just fail but hits a \"no mapping at fault address\" when the miniscript can't be parsed. You're following the same pattern as other tests though.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1184371480",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "commented",
      "id": 1184376100,
      "node_id": "IC_kwDOABII585GmCUk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1184376100",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T12:16:03Z",
      "updated_at": "2022-07-14T12:17:02Z",
      "author_association": "MEMBER",
      "body": "re-utACK ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1184376100",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "reviewed",
      "id": 1038769703,
      "node_id": "PRR_kwDOABII58496l4n",
      "url": null,
      "actor": null,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/24148/commits/ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1038769703",
      "submitted_at": "2022-07-14T12:16:29Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "reviewed",
      "id": 1037947014,
      "node_id": "PRR_kwDOABII58493dCG",
      "url": null,
      "actor": null,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "only reviewed the tests and interface, non blocking nits only",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1037947014",
      "submitted_at": "2022-07-14T13:29:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "commented",
      "id": 1184772200,
      "node_id": "IC_kwDOABII585GnjBo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1184772200",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T18:33:50Z",
      "updated_at": "2022-07-14T18:33:50Z",
      "author_association": "MEMBER",
      "body": "ACK ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1184772200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "merged",
      "id": 6996671180,
      "node_id": "ME_lADOABII585CYc-9zwAAAAGhCLrM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6996671180",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "85b601e04363664eae1b4b802cd8dde942761939",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85b601e04363664eae1b4b802cd8dde942761939",
      "created_at": "2022-07-14T18:54:47Z"
    },
    {
      "event": "closed",
      "id": 6996671203,
      "node_id": "CE_lADOABII585CYc-9zwAAAAGhCLrj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6996671203",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-14T18:54:47Z"
    },
    {
      "event": "referenced",
      "id": 7005091945,
      "node_id": "REFE_lADOABII585CYc-9zwAAAAGhiThp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005091945",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "826fae6a0fe184518af625ebb6d1ef9e64631385",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/826fae6a0fe184518af625ebb6d1ef9e64631385",
      "created_at": "2022-07-15T22:25:48Z"
    },
    {
      "event": "reviewed",
      "id": 1042199002,
      "node_id": "PRR_kwDOABII584-HrHa",
      "url": null,
      "actor": null,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "post-merge ACK. Did not review the tests. I like the error reporting by looking for inner insane sub. ",
      "user": {
        "login": "sanket1729",
        "id": 6881849,
        "node_id": "MDQ6VXNlcjY4ODE4NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanket1729",
        "html_url": "https://github.com/sanket1729",
        "followers_url": "https://api.github.com/users/sanket1729/followers",
        "following_url": "https://api.github.com/users/sanket1729/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanket1729/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanket1729/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
        "organizations_url": "https://api.github.com/users/sanket1729/orgs",
        "repos_url": "https://api.github.com/users/sanket1729/repos",
        "events_url": "https://api.github.com/users/sanket1729/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanket1729/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1042199002",
      "submitted_at": "2022-07-18T17:06:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "referenced",
      "id": 7015105147,
      "node_id": "REFE_lADOABII585CYc-9zwAAAAGiIgJ7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7015105147",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2a8811a52a75cefbbc06f47ed00bca4a54d80532",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/2a8811a52a75cefbbc06f47ed00bca4a54d80532",
      "created_at": "2022-07-18T19:43:52Z"
    },
    {
      "event": "referenced",
      "id": 7015105204,
      "node_id": "REFE_lADOABII585CYc-9zwAAAAGiIgK0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7015105204",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2d6dd421d043f1bef831f5cd7914890db4752015",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/2d6dd421d043f1bef831f5cd7914890db4752015",
      "created_at": "2022-07-18T19:43:53Z"
    },
    {
      "event": "commented",
      "id": 1189415605,
      "node_id": "IC_kwDOABII585G5Qq1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189415605",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T18:23:36Z",
      "updated_at": "2022-07-19T18:23:36Z",
      "author_association": "MEMBER",
      "body": "Opening a miniscript-descriptor wallet in an older version of Bitcoin Core causes a crash. (How) did we handle backward compatibility for `tr()` descriptors? Do we want to set a flag each time? Of have some generic mechanism to abort loading a wallet that has unrecognised descriptor / miniscript fragment?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1189415605",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "reviewed",
      "id": 1043963753,
      "node_id": "PRR_kwDOABII584-OZ9p",
      "url": null,
      "actor": null,
      "commit_id": "bfb036756ad6e187fd6d3abfefe5804bb54a5c71",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#pullrequestreview-1043963753",
      "submitted_at": "2022-07-19T19:19:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
    },
    {
      "event": "comment_deleted",
      "id": 7027314246,
      "node_id": "CDE_lADOABII585CYc-9zwAAAAGi3E5G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7027314246",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T08:51:28Z"
    },
    {
      "event": "comment_deleted",
      "id": 7027396634,
      "node_id": "CDE_lADOABII585CYc-9zwAAAAGi3ZAa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7027396634",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T09:01:57Z"
    },
    {
      "event": "comment_deleted",
      "id": 7027397297,
      "node_id": "CDE_lADOABII585CYc-9zwAAAAGi3ZKx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7027397297",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T09:02:01Z"
    },
    {
      "event": "commented",
      "id": 1191151252,
      "node_id": "IC_kwDOABII585G_4aU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191151252",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T07:39:17Z",
      "updated_at": "2022-07-21T07:39:17Z",
      "author_association": "MEMBER",
      "body": "> Opening a miniscript-descriptor wallet in an older version of Bitcoin Core causes a crash. (How) did we handle backward compatibility for `tr()` descriptors? Do we want to set a flag each time? Of have some generic mechanism to abort loading a wallet that has unrecognised descriptor / miniscript fragment?\r\n\r\nNot sure how it was done with `tr()` descriptors. But before `CWallet::SetMinVersion` was used to handle wallet compatibility with various software versions.",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1191151252",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148"
    },
    {
      "event": "referenced",
      "id": 8539056860,
      "node_id": "REFE_lADOABII585CYc-9zwAAAAH896rc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8539056860",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2256a8855bfdb726d449214a53bab07fd60cb1f9",
      "commit_url": "https://api.github.com/repos/sipa/miniscript/commits/2256a8855bfdb726d449214a53bab07fd60cb1f9",
      "created_at": "2023-02-16T16:43:00Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881898835",
      "pull_request_review_id": 985172194,
      "id": 881898835,
      "node_id": "PRRC_kwDOABII5840kLVT",
      "diff_hunk": "@@ -298,6 +298,8 @@ struct Node {\n     const Type typ;\n     //! Cached script length (computed by CalcScriptLen).\n     const size_t scriptlen;\n+    //! Whether a public key appears more than once in this node.\n+    const bool duplicate_key;",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "22b2171c48b5cbb1f293182f25e24ed5a3939bc1",
      "in_reply_to_id": null,
      "user": {
        "login": "OliverOffing",
        "id": 84942996,
        "node_id": "MDQ6VXNlcjg0OTQyOTk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/84942996?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/OliverOffing",
        "html_url": "https://github.com/OliverOffing",
        "followers_url": "https://api.github.com/users/OliverOffing/followers",
        "following_url": "https://api.github.com/users/OliverOffing/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/OliverOffing/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/OliverOffing/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/OliverOffing/subscriptions",
        "organizations_url": "https://api.github.com/users/OliverOffing/orgs",
        "repos_url": "https://api.github.com/users/OliverOffing/repos",
        "events_url": "https://api.github.com/users/OliverOffing/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/OliverOffing/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Naming could be improved. The name `duplicate_key` might suggest that the variable holds the value or reference of the key that is duplicated, when in fact it can only hold either `true` or `false`—and there could be multiple duplicated keys. It'd be best to name this variable `has_duplicate_keys` instead, which would go nicely along the naming scheme of `IsNonMalleable` and `IsSane`.",
      "created_at": "2022-05-25T16:53:02Z",
      "updated_at": "2022-05-25T16:53:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r881898835",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881898835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882552673",
      "pull_request_review_id": 986051532,
      "id": 882552673,
      "node_id": "PRRC_kwDOABII5840mq9h",
      "diff_hunk": "@@ -298,6 +298,8 @@ struct Node {\n     const Type typ;\n     //! Cached script length (computed by CalcScriptLen).\n     const size_t scriptlen;\n+    //! Whether a public key appears more than once in this node.\n+    const bool duplicate_key;",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "22b2171c48b5cbb1f293182f25e24ed5a3939bc1",
      "in_reply_to_id": 881898835,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The name duplicate_key might suggest that the variable holds the value or reference of the key that is duplicated, when in fact it can only hold either true or false\r\n\r\nI don't think it's worth making the variable name even longer. The `bool` type should be enough for one to get that this value holds, well, a boolean and not a reference to the key.\r\nAlso note this commit is part of https://github.com/bitcoin/bitcoin/pull/24860 which features a `ContainsDuplicateKey()` public API in the same spirit as `IsNonMalleable` and `IsSane`.\r\n\r\n> and there could be multiple duplicated keys\r\n\r\nThe detection algorithm cuts through and wouldn't know that, it just knows that \"there exists one duplicate key\".",
      "created_at": "2022-05-26T10:56:52Z",
      "updated_at": "2022-05-26T10:56:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r882552673",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882552673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892575319",
      "pull_request_review_id": 1000039762,
      "id": 892575319,
      "node_id": "PRRC_kwDOABII5841M55X",
      "diff_hunk": "@@ -917,6 +918,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys) : m_keys(keys) {}",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Add LIFETIMEBOUND attribute to `keys`?",
      "created_at": "2022-06-08T16:07:05Z",
      "updated_at": "2022-06-08T16:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892575319",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892575319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 934,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892576514",
      "pull_request_review_id": 1000039762,
      "id": 892576514,
      "node_id": "PRRC_kwDOABII5841M6MC",
      "diff_hunk": "@@ -917,6 +918,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys) : m_keys(keys) {}\n+\n+    std::vector<unsigned char> ToPKBytes(uint32_t key) const {\n+        return {m_keys[key].begin(), m_keys[key].end()};\n+    }\n+\n+    std::vector<unsigned char> ToPKHBytes(uint32_t key) const {\n+        auto id = m_keys[key].GetID();\n+        return {id.begin(), id.end()};\n+    }\n+};\n+\n+/**\n+ * The context for converting a Miniscript descriptor to its textual form.\n+ */\n+class StringMaker {\n+    //! To convert private keys for private descriptors.\n+    const SigningProvider* m_arg;\n+    //! Keys contained in the Miniscript (a reference to DescriptorImpl::m_pubkey_args).\n+    const std::vector<std::unique_ptr<PubkeyProvider>>& m_pubkeys;\n+    //! Whether to serialize keys as private or public.\n+    bool m_private;\n+\n+public:\n+    StringMaker(const SigningProvider* arg, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys, bool priv)",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Add LIFETIMEBOUND attribute to `arg` and to `pubkeys`?",
      "created_at": "2022-06-08T16:08:17Z",
      "updated_at": "2022-06-08T16:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892576514",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892576514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 958,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892584175",
      "pull_request_review_id": 1000039762,
      "id": 892584175,
      "node_id": "PRRC_kwDOABII5841M8Dv",
      "diff_hunk": "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 164,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Add LIFETIMEBOUND here to `out` and `in` as well?",
      "created_at": "2022-06-08T16:15:10Z",
      "updated_at": "2022-06-08T16:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892584175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892584175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892587808",
      "pull_request_review_id": 1000039762,
      "id": 892587808,
      "node_id": "PRRC_kwDOABII5841M88g",
      "diff_hunk": "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return m_keys[a]->ToString() < m_keys[b]->ToString();",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 167,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That sounds pretty slow. Perhaps it's worth adding generic comparison operators to the PubkeyProvider classes? Could be left as a TODO.",
      "created_at": "2022-06-08T16:18:18Z",
      "updated_at": "2022-06-08T16:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892587808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892587808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892589520",
      "pull_request_review_id": 1000039762,
      "id": 892589520,
      "node_id": "PRRC_kwDOABII5841M9XQ",
      "diff_hunk": "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return m_keys[a]->ToString() < m_keys[b]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, Span<const char>(&*begin, &*end), ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 174,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `{&*begin, &*end}` can be used instead of `Span<const char>(&*begin, &*end)`.",
      "created_at": "2022-06-08T16:20:04Z",
      "updated_at": "2022-06-08T16:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892589520",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892589520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892590971",
      "pull_request_review_id": 1000039762,
      "id": 892590971,
      "node_id": "PRRC_kwDOABII5841M9t7",
      "diff_hunk": "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return m_keys[a]->ToString() < m_keys[b]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, Span<const char>(&*begin, &*end), ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);\n+        if (!pk) return {};\n+        m_keys.push_back(std::move(pk));\n+        return key;\n+    }\n+\n+    std::optional<std::string> ToString(const Key& key) const\n+    {\n+        return m_keys[key]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKBytes(I begin, I end) const\n+    {\n+        assert(m_in);\n+        CPubKey pubkey(begin, end);\n+        if (pubkey.IsValid()) {\n+            Key key = m_keys.size();\n+            m_keys.push_back(InferPubkey(pubkey, ParseScriptContext::P2WSH, *m_in));\n+            return key;\n+        }\n+        return {};\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKHBytes(I begin, I end) const\n+    {\n+        assert(end - begin == 20);\n+        assert(m_in);\n+        uint160 hash(std::vector<unsigned char>(begin, end));",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 201,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Constructing a vector just to turn it into a `uint160` sounds a bit inefficient. I think this works too:\r\n\r\n```c++\r\nuint160 hash;\r\nstd::copy(begin, end, hash.begin());\r\n```\r\n",
      "created_at": "2022-06-08T16:21:33Z",
      "updated_at": "2022-06-08T16:25:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892590971",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892590971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892593226",
      "pull_request_review_id": 1000039762,
      "id": 892593226,
      "node_id": "PRRC_kwDOABII5841M-RK",
      "diff_hunk": "@@ -1279,6 +1450,38 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         error = \"Can only have raw() at top level\";\n         return nullptr;\n     }\n+    // Process miniscript expressions.\n+    {\n+        KeyParser parser(&out, nullptr);\n+        auto node = miniscript::FromString(std::string(expr.begin(), expr.end()), parser);",
      "path": "src/script/descriptor.cpp",
      "position": 245,
      "original_position": 223,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps for a follow-up PR, but maybe we want to change the `FromString` methods (in miniscript code, but also descriptors in general) to take `std::string_view`s? That would avoid intermediary string objects like here.",
      "created_at": "2022-06-08T16:23:48Z",
      "updated_at": "2022-06-08T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892593226",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892593226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1471,
      "original_line": 1471,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892594100",
      "pull_request_review_id": 1000039762,
      "id": 892594100,
      "node_id": "PRRC_kwDOABII5841M-e0",
      "diff_hunk": "@@ -1279,6 +1450,38 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         error = \"Can only have raw() at top level\";\n         return nullptr;\n     }\n+    // Process miniscript expressions.\n+    {\n+        KeyParser parser(&out, nullptr);\n+        auto node = miniscript::FromString(std::string(expr.begin(), expr.end()), parser);\n+        if (node) {\n+            if (ctx != ParseScriptContext::P2WSH) {\n+                error = \"Miniscript expressions can only be used in wsh\";\n+                return nullptr;\n+            }\n+            if (parser.m_key_parsing_error != \"\") {\n+                error = std::move(parser.m_key_parsing_error);\n+                return nullptr;\n+            }\n+            if (!node->IsSane()) {\n+                // Try to find the first insane sub for better error reporting.\n+                auto insane_node = node.get();\n+                if (const auto sub = node->FindInsaneSub()) insane_node = sub;\n+                if (const auto str = insane_node->ToString(parser)) error = *str;\n+                if (!insane_node->IsValid()) { error += \" is invalid\";}\n+                else {\n+                    error += \" is not sane\";\n+                    if (!insane_node->IsNonMalleable()) error += \": malleable witnesses exist\";\n+                    else if (insane_node == node.get() && !insane_node->NeedsSignature()) error += \": witnesses without signature exist\";",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 242,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Use braces and separate lines, unless for single-line \"then\" statements without \"else\"s.",
      "created_at": "2022-06-08T16:24:43Z",
      "updated_at": "2022-06-08T16:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892594100",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892594100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1475,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893844202",
      "pull_request_review_id": 1001822948,
      "id": 893844202,
      "node_id": "PRRC_kwDOABII5841Rvrq",
      "diff_hunk": "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return m_keys[a]->ToString() < m_keys[b]->ToString();",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 167,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": 892587808,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it's also slightly incorrect. For instance if a user -for whatever reason- has a descriptor with 2 xpubs with the same key but different chaincodes, this would not detect them as duplicates (same with same key but diff origins). I wanted to revisit that but it slipped my mind.\r\n\r\nI added an `operator<` to `PubkeyProvider`:\r\n```patch\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex 94c9071999..66c4e1cba9 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -162,6 +162,20 @@ public:\r\n \r\n     virtual ~PubkeyProvider() = default;\r\n \r\n+    /** Compare two public keys represented by this provider.\r\n+     * Used by the Miniscript descriptors to check for duplicate keys in the script.\r\n+     */\r\n+    bool operator<(PubkeyProvider& other) const {\r\n+        CPubKey a, b;\r\n+        SigningProvider dummy;\r\n+        KeyOriginInfo dummy_info;\r\n+\r\n+        GetPubKey(0, dummy, a, dummy_info);\r\n+        other.GetPubKey(0, dummy, b, dummy_info);\r\n+\r\n+        return a < b;\r\n+    }\r\n+\r\n     /** Derive a public key.\r\n      *  read_cache is the cache to read keys from (if not nullptr)\r\n      *  write_cache is the cache to write keys to (if not nullptr)\r\n@@ -1183,7 +1197,7 @@ struct KeyParser {\r\n     KeyParser(FlatSigningProvider* out LIFETIMEBOUND, const SigningProvider* in LIFETIMEBOUND) : m_out(out), m_in(in) {}\r\n \r\n     bool KeyCompare(const Key& a, const Key& b) const {\r\n-        return m_keys[a]->ToString() < m_keys[b]->ToString();\r\n+        return *m_keys[a] < *m_keys[b];\r\n     }\r\n \r\n     template<typename I> std::optional<Key> FromString(I begin, I end) const\r\n```",
      "created_at": "2022-06-09T18:41:11Z",
      "updated_at": "2022-06-09T18:41:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r893844202",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893844202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893847338",
      "pull_request_review_id": 1001827549,
      "id": 893847338,
      "node_id": "PRRC_kwDOABII5841Rwcq",
      "diff_hunk": "@@ -1279,6 +1450,38 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         error = \"Can only have raw() at top level\";\n         return nullptr;\n     }\n+    // Process miniscript expressions.\n+    {\n+        KeyParser parser(&out, nullptr);\n+        auto node = miniscript::FromString(std::string(expr.begin(), expr.end()), parser);",
      "path": "src/script/descriptor.cpp",
      "position": 245,
      "original_position": 223,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "in_reply_to_id": 892593226,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since it's going to touch the Miniscript code again, i'd prefer to keep this as a follow-up if you don't mind.",
      "created_at": "2022-06-09T18:45:20Z",
      "updated_at": "2022-06-09T18:45:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r893847338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893847338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1471,
      "original_line": 1471,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901976005",
      "pull_request_review_id": 1012714706,
      "id": 901976005,
      "node_id": "PRRC_kwDOABII5841ww_F",
      "diff_hunk": "@@ -493,12 +508,12 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n /** Base class for all Descriptor implementations. */\n class DescriptorImpl : public Descriptor\n {\n-    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for Multisig).\n+protected:\n+    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for WSH and Multisig).\n     const std::vector<std::unique_ptr<PubkeyProvider>> m_pubkey_args;\n     //! The string name of the descriptor function.\n     const std::string m_name;",
      "path": "src/script/descriptor.cpp",
      "position": 38,
      "original_position": 38,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In e9cac52614d11e30d1f6fec33efce3d00953bd70 \"Miniscript support in output descriptors\"\r\n\r\nnit: `m_name` does not need to be `protected`.",
      "created_at": "2022-06-20T20:14:30Z",
      "updated_at": "2022-06-20T20:28:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r901976005",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901976005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 515,
      "original_line": 515,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902922083",
      "pull_request_review_id": 1014038644,
      "id": 902922083,
      "node_id": "PRRC_kwDOABII58410X9j",
      "diff_hunk": "@@ -493,12 +508,12 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n /** Base class for all Descriptor implementations. */\n class DescriptorImpl : public Descriptor\n {\n-    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for Multisig).\n+protected:\n+    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for WSH and Multisig).\n     const std::vector<std::unique_ptr<PubkeyProvider>> m_pubkey_args;\n     //! The string name of the descriptor function.\n     const std::string m_name;",
      "path": "src/script/descriptor.cpp",
      "position": 38,
      "original_position": 38,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "in_reply_to_id": 901976005,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, but \r\n```patch\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex 66c4e1cba9..b40e330f67 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -508,11 +508,12 @@ public:\r\n /** Base class for all Descriptor implementations. */\r\n class DescriptorImpl : public Descriptor\r\n {\r\n+    //! The string name of the descriptor function.\r\n+    const std::string m_name;\r\n+\r\n protected:\r\n     //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for WSH and Multisig).\r\n     const std::vector<std::unique_ptr<PubkeyProvider>> m_pubkey_args;\r\n-    //! The string name of the descriptor function.\r\n-    const std::string m_name;\r\n \r\n     //! The sub-descriptor arguments (empty for everything but SH and WSH).\r\n     //! In doc/descriptors.m this is referred to as SCRIPT expressions sh(SCRIPT)\r\n```\r\n\r\nWould make me reorder the initializer list of all classes heriting from `DescriptorImpl`, so i guess it's not so bad if it's just `protected` instead of `private`? Happy to change if you prefer, still. (This or doing `protectred:` then `private:` then `protected:` again.)",
      "created_at": "2022-06-21T18:08:57Z",
      "updated_at": "2022-06-21T18:08:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r902922083",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902922083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 515,
      "original_line": 515,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/916011953",
      "pull_request_review_id": 1031776846,
      "id": 916011953,
      "node_id": "PRRC_kwDOABII5842mTux",
      "diff_hunk": "@@ -917,6 +932,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys LIFETIMEBOUND) : m_keys(keys) {}\n+\n+    std::vector<unsigned char> ToPKBytes(uint32_t key) const {\n+        return {m_keys[key].begin(), m_keys[key].end()};\n+    }\n+\n+    std::vector<unsigned char> ToPKHBytes(uint32_t key) const {\n+        auto id = m_keys[key].GetID();\n+        return {id.begin(), id.end()};\n+    }\n+};\n+\n+/**\n+ * The context for converting a Miniscript descriptor to its textual form.\n+ */\n+class StringMaker {\n+    //! To convert private keys for private descriptors.\n+    const SigningProvider* m_arg;\n+    //! Keys contained in the Miniscript (a reference to DescriptorImpl::m_pubkey_args).\n+    const std::vector<std::unique_ptr<PubkeyProvider>>& m_pubkeys;\n+    //! Whether to serialize keys as private or public.\n+    bool m_private;\n+\n+public:\n+    StringMaker(const SigningProvider* arg LIFETIMEBOUND, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys LIFETIMEBOUND, bool priv)\n+        : m_arg(arg), m_pubkeys(pubkeys), m_private(priv) {}\n+\n+    std::optional<std::string> ToString(uint32_t key) const\n+    {\n+        std::string ret;\n+        if (m_private) {\n+            if (!m_pubkeys[key]->ToPrivateString(*m_arg, ret)) return {};",
      "path": "src/script/descriptor.cpp",
      "position": 101,
      "original_position": 101,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is supposed to happen here if we have a descriptor with 1 private key and otherwise only public keys?",
      "created_at": "2022-07-07T15:30:53Z",
      "updated_at": "2022-07-07T15:30:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r916011953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/916011953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 979,
      "original_line": 979,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/917821024",
      "pull_request_review_id": 1034182664,
      "id": 917821024,
      "node_id": "PRRC_kwDOABII5842tNZg",
      "diff_hunk": "@@ -917,6 +932,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys LIFETIMEBOUND) : m_keys(keys) {}\n+\n+    std::vector<unsigned char> ToPKBytes(uint32_t key) const {\n+        return {m_keys[key].begin(), m_keys[key].end()};\n+    }\n+\n+    std::vector<unsigned char> ToPKHBytes(uint32_t key) const {\n+        auto id = m_keys[key].GetID();\n+        return {id.begin(), id.end()};\n+    }\n+};\n+\n+/**\n+ * The context for converting a Miniscript descriptor to its textual form.\n+ */\n+class StringMaker {\n+    //! To convert private keys for private descriptors.\n+    const SigningProvider* m_arg;\n+    //! Keys contained in the Miniscript (a reference to DescriptorImpl::m_pubkey_args).\n+    const std::vector<std::unique_ptr<PubkeyProvider>>& m_pubkeys;\n+    //! Whether to serialize keys as private or public.\n+    bool m_private;\n+\n+public:\n+    StringMaker(const SigningProvider* arg LIFETIMEBOUND, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys LIFETIMEBOUND, bool priv)\n+        : m_arg(arg), m_pubkeys(pubkeys), m_private(priv) {}\n+\n+    std::optional<std::string> ToString(uint32_t key) const\n+    {\n+        std::string ret;\n+        if (m_private) {\n+            if (!m_pubkeys[key]->ToPrivateString(*m_arg, ret)) return {};",
      "path": "src/script/descriptor.cpp",
      "position": 101,
      "original_position": 101,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "in_reply_to_id": 916011953,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The same as for existing descriptors, a failure:\r\n```diff\r\ndiff --git a/src/test/descriptor_tests.cpp b/src/test/descriptor_tests.cpp\r\nindex a8c666079d..668cddfbba 100644\r\n--- a/src/test/descriptor_tests.cpp\r\n+++ b/src/test/descriptor_tests.cpp\r\n@@ -488,6 +488,13 @@ Check(\"sh(wsh(multi(20,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGN\r\n \r\n     // Miniscript tests\r\n \r\n+    FlatSigningProvider prov;\r\n+    std::string err, out;\r\n+    const auto multi_desc = Parse(\"wsh(multi(1,L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd,032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0))\", prov, err, false);\r\n+    assert(multi_desc && !multi_desc->ToPrivateString(prov, out));\r\n+    const auto ms_desc = Parse(\"wsh(or_i(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0)))\", prov, err, false);\r\n+    assert(ms_desc && !ms_desc->ToPrivateString(prov, out));\r\n+\r\n     // Invalid checksum\r\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\r\n     // Only p2wsh context is valid\r\n```\r\n\r\nIt is certainly suboptimal for certain usecases (like importing a partially private desc and calling `listdescriptors true`), but it's the existing behaviour and i don't think it should be fixed in this PR.",
      "created_at": "2022-07-11T11:22:46Z",
      "updated_at": "2022-07-11T11:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r917821024",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/917821024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 979,
      "original_line": 979,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920081407",
      "pull_request_review_id": 1037366519,
      "id": 920081407,
      "node_id": "PRRC_kwDOABII584211P_",
      "diff_hunk": "@@ -917,6 +932,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys LIFETIMEBOUND) : m_keys(keys) {}\n+\n+    std::vector<unsigned char> ToPKBytes(uint32_t key) const {\n+        return {m_keys[key].begin(), m_keys[key].end()};\n+    }\n+\n+    std::vector<unsigned char> ToPKHBytes(uint32_t key) const {\n+        auto id = m_keys[key].GetID();\n+        return {id.begin(), id.end()};\n+    }\n+};\n+\n+/**\n+ * The context for converting a Miniscript descriptor to its textual form.\n+ */\n+class StringMaker {\n+    //! To convert private keys for private descriptors.\n+    const SigningProvider* m_arg;\n+    //! Keys contained in the Miniscript (a reference to DescriptorImpl::m_pubkey_args).\n+    const std::vector<std::unique_ptr<PubkeyProvider>>& m_pubkeys;\n+    //! Whether to serialize keys as private or public.\n+    bool m_private;\n+\n+public:\n+    StringMaker(const SigningProvider* arg LIFETIMEBOUND, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys LIFETIMEBOUND, bool priv)\n+        : m_arg(arg), m_pubkeys(pubkeys), m_private(priv) {}\n+\n+    std::optional<std::string> ToString(uint32_t key) const\n+    {\n+        std::string ret;\n+        if (m_private) {\n+            if (!m_pubkeys[key]->ToPrivateString(*m_arg, ret)) return {};",
      "path": "src/script/descriptor.cpp",
      "position": 101,
      "original_position": 101,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "in_reply_to_id": 916011953,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, something we can address later.",
      "created_at": "2022-07-13T13:30:44Z",
      "updated_at": "2022-07-13T13:30:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920081407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920081407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 979,
      "original_line": 979,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920091023",
      "pull_request_review_id": 1037380381,
      "id": 920091023,
      "node_id": "PRRC_kwDOABII584213mP",
      "diff_hunk": "@@ -917,6 +932,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys LIFETIMEBOUND) : m_keys(keys) {}\n+\n+    std::vector<unsigned char> ToPKBytes(uint32_t key) const {\n+        return {m_keys[key].begin(), m_keys[key].end()};\n+    }\n+\n+    std::vector<unsigned char> ToPKHBytes(uint32_t key) const {\n+        auto id = m_keys[key].GetID();\n+        return {id.begin(), id.end()};\n+    }\n+};\n+\n+/**\n+ * The context for converting a Miniscript descriptor to its textual form.\n+ */\n+class StringMaker {\n+    //! To convert private keys for private descriptors.\n+    const SigningProvider* m_arg;\n+    //! Keys contained in the Miniscript (a reference to DescriptorImpl::m_pubkey_args).\n+    const std::vector<std::unique_ptr<PubkeyProvider>>& m_pubkeys;\n+    //! Whether to serialize keys as private or public.\n+    bool m_private;\n+\n+public:\n+    StringMaker(const SigningProvider* arg LIFETIMEBOUND, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys LIFETIMEBOUND, bool priv)\n+        : m_arg(arg), m_pubkeys(pubkeys), m_private(priv) {}\n+\n+    std::optional<std::string> ToString(uint32_t key) const\n+    {\n+        std::string ret;\n+        if (m_private) {\n+            if (!m_pubkeys[key]->ToPrivateString(*m_arg, ret)) return {};",
      "path": "src/script/descriptor.cpp",
      "position": 101,
      "original_position": 101,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "in_reply_to_id": 916011953,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See #24361",
      "created_at": "2022-07-13T13:39:20Z",
      "updated_at": "2022-07-13T13:39:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920091023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920091023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 979,
      "original_line": 979,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920210646",
      "pull_request_review_id": 1037552949,
      "id": 920210646,
      "node_id": "PRRC_kwDOABII58422UzW",
      "diff_hunk": "@@ -1058,6 +1156,94 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out LIFETIMEBOUND, const SigningProvider* in LIFETIMEBOUND) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return *m_keys[a] < *m_keys[b];",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 188,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "abd1c0444f44dc1c4b8ac91d9a0354e9912f1a2b",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe use `.at(a)` here, as well as in `ToString()`",
      "created_at": "2022-07-13T15:20:59Z",
      "updated_at": "2022-07-13T15:35:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920210646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920210646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920220890",
      "pull_request_review_id": 1037552949,
      "id": 920220890,
      "node_id": "PRRC_kwDOABII58422XTa",
      "diff_hunk": "@@ -1279,6 +1465,44 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         error = \"Can only have raw() at top level\";\n         return nullptr;\n     }\n+    // Process miniscript expressions.\n+    {\n+        KeyParser parser(&out, nullptr);\n+        auto node = miniscript::FromString(std::string(expr.begin(), expr.end()), parser);\n+        if (node) {\n+            if (ctx != ParseScriptContext::P2WSH) {\n+                error = \"Miniscript expressions can only be used in wsh\";\n+                return nullptr;\n+            }\n+            if (parser.m_key_parsing_error != \"\") {\n+                error = std::move(parser.m_key_parsing_error);\n+                return nullptr;\n+            }\n+            if (!node->IsSane()) {\n+                // Try to find the first insane sub for better error reporting.\n+                auto insane_node = node.get();\n+                if (const auto sub = node->FindInsaneSub()) insane_node = sub;\n+                if (const auto str = insane_node->ToString(parser)) error = *str;\n+                if (!insane_node->IsValid()) { error += \" is invalid\";}",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 260,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "abd1c0444f44dc1c4b8ac91d9a0354e9912f1a2b",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```cpp\r\nif (!insane_node->IsValid()) {\r\n  error += \" is invalid\";\r\n} else {\r\n```",
      "created_at": "2022-07-13T15:30:19Z",
      "updated_at": "2022-07-13T15:35:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920220890",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920220890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1486,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920477452",
      "pull_request_review_id": 1037933525,
      "id": 920477452,
      "node_id": "PRRC_kwDOABII58423V8M",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Miniscript descriptors integration in the wallet.\"\"\"\n+\n+from test_framework.descriptors import descsum_create\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+MINISCRIPTS = [\n+    # One of two keys\n+    \"or_b(pk(tpubD6NzVbkrYhZ4XRMcMFMMFvzVt6jaDAtjZhD7JLwdPdMm9xa76DnxYYP7w9TZGJDVFkek3ArwVsuacheqqPog8TH5iBCX1wuig8PLXim4n9a/*),s:pk(tpubD6NzVbkrYhZ4WsqRzDmkL82SWcu42JzUvKWzrJHQ8EC2vEHRHkXj1De93sD3biLrKd8XGnamXURGjMbYavbszVDXpjXV2cGUERucLJkE6cy/*))\",\n+    # A script similar (same spending policy) to BOLT3's offered HTLC (with anchor outputs)\n+    \"or_d(pk(tpubD6NzVbkrYhZ4XRMcMFMMFvzVt6jaDAtjZhD7JLwdPdMm9xa76DnxYYP7w9TZGJDVFkek3ArwVsuacheqqPog8TH5iBCX1wuig8PLXim4n9a/*),and_v(and_v(v:pk(tpubD6NzVbkrYhZ4WsqRzDmkL82SWcu42JzUvKWzrJHQ8EC2vEHRHkXj1De93sD3biLrKd8XGnamXURGjMbYavbszVDXpjXV2cGUERucLJkE6cy/*),or_c(pk(tpubD6NzVbkrYhZ4YNwtTWrKRJQzQX3PjPKeUQg1gYh1hiLMkk1cw8SRLgB1yb7JzE8bHKNt6EcZXkJ6AqpCZL1aaRSjnG36mLgbQvJZBNsjWnG/*),v:hash160(7f999c905d5e35cefd0a37673f746eb13fba3640))),older(1)))\",\n+    # A Revault Unvault policy with the older() replaced by an after()\n+    \"andor(multi(2,tpubD6NzVbkrYhZ4YMQC15JS7QcrsAyfGrGiykweqMmPxTkEVScu7vCZLNpPXW1XphHwzsgmqdHWDQAfucbM72EEB1ZEyfgZxYvkZjYVXx1xS9p/*,tpubD6NzVbkrYhZ4WkCyc7E3z6g6NkypHMiecnwc4DpWHTPqFdteRGkEKukdrSSyJGNnGrHNMfy4BCw2UXo5soYRCtCDDfy4q8pc8oyB7RgTFv8/*),and_v(v:multi(4,030f64b922aee2fd597f104bc6cb3b670f1ca2c6c49b1071a1a6c010575d94fe5a,02abe475b199ec3d62fa576faee16a334fdb86ffb26dce75becebaaedf328ac3fe,0314f3dc33595b0d016bb522f6fe3a67680723d842c1b9b8ae6b59fdd8ab5cccb4,025eba3305bd3c829e4e1551aac7358e4178832c739e4fc4729effe428de0398ab),after(424242)),thresh(4,pkh(tpubD6NzVbkrYhZ4YVrNggiT2ptVHwnFbLBqDkCtV5HkxR4WtcRLAQReKTkqZGNcV6GE7cQsmpBzzSzhk16DUwB1gn1L7ZPnJF2dnNePP1uMBCY/*),a:pkh(tpubD6NzVbkrYhZ4YU9vM1s53UhD75UyJatx8EMzMZ3VUjR2FciNfLLkAw6a4pWACChzobTseNqdWk4G7ZdBqRDLtLSACKykTScmqibb1ZrCvJu/*),a:pkh(tpubD6NzVbkrYhZ4YUHcFfuH9iEBLiH8CBRJTpS7X3qjHmh82m1KCNbzs6w9gyK8oWHSZmKHWcakAXCGfbKg6xoCvKzQCWAHyxaC7QcWfmzyBf4/*),a:pkh(tpubD6NzVbkrYhZ4XXEmQtS3sgxpJbMyMg4McqRR1Af6ULzyrTRnhwjyr1etPD7svap9oFtJf4MM72brUb5o7uvF2Jyszc5c1t836fJW7SX2e8D/*)))\",\n+    # Liquid-like federated pegin with emergency recovery keys\n+    \"or_i(and_b(pk(029ffbe722b147f3035c87cb1c60b9a5947dd49c774cc31e94773478711a929ac0),a:and_b(pk(025f05815e3a1a8a83bfbb03ce016c9a2ee31066b98f567f6227df1d76ec4bd143),a:and_b(pk(025625f41e4a065efc06d5019cbbd56fe8c07595af1231e7cbc03fafb87ebb71ec),a:and_b(pk(02a27c8b850a00f67da3499b60562673dcf5fdfb82b7e17652a7ac54416812aefd),s:pk(03e618ec5f384d6e19ca9ebdb8e2119e5bef978285076828ce054e55c4daf473e2))))),and_v(v:thresh(2,pkh(tpubD6NzVbkrYhZ4YK67cd5fDe4fBVmGB2waTDrAt1q4ey9HPq9veHjWkw3VpbaCHCcWozjkhgAkWpFrxuPMUrmXVrLHMfEJ9auoZA6AS1g3grC/*),a:pkh(033841045a531e1adf9910a6ec279589a90b3b8a904ee64ffd692bd08a8996c1aa),a:pkh(02aebf2d10b040eb936a6f02f44ee82f8b34f5c1ccb20ff3949c2b28206b7c1068)),older(4209713)))\",\n+]\n+\n+\n+class WalletMiniscriptTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def watchonly_test(self, ms):\n+        self.log.info(f\"Importing Miniscript '{ms}'\")\n+        desc = descsum_create(f\"wsh({ms})\")\n+        assert self.ms_wo_wallet.importdescriptors(\n+            [\n+                {\n+                    \"desc\": desc,\n+                    \"active\": True,\n+                    \"range\": 2,\n+                    \"next_index\": 0,\n+                    \"timestamp\": \"now\",\n+                }\n+            ]\n+        )[0][\"success\"]\n+\n+        self.log.info(\"Testing we derive new addresses for it\")\n+        assert_equal(\n+            self.ms_wo_wallet.getnewaddress(), self.funder.deriveaddresses(desc, 0)[0]\n+        )\n+        assert_equal(\n+            self.ms_wo_wallet.getnewaddress(), self.funder.deriveaddresses(desc, 1)[1]\n+        )\n+\n+        self.log.info(\"Testing we detect funds sent to one of them\")\n+        addr = self.ms_wo_wallet.getnewaddress()\n+        txid = self.funder.sendtoaddress(addr, 0.01)\n+        self.wait_until(\n+            lambda: len(self.ms_wo_wallet.listunspent(minconf=0, addresses=[addr])) == 1\n+        )\n+        utxo = self.ms_wo_wallet.listunspent(minconf=0, addresses=[addr])[0]\n+        assert utxo[\"txid\"] == txid and not utxo[\"solvable\"]  # No satisfaction logic (yet)\n+\n+    def run_test(self):\n+        self.log.info(\"Making a descriptor wallet\")\n+        self.funder = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\n+            wallet_name=\"ms_wo\", descriptors=True, disable_private_keys=True\n+        )\n+        self.ms_wo_wallet = self.nodes[0].get_wallet_rpc(\"ms_wo\")\n+\n+        # Sanity check we wouldn't let an insane Miniscript descriptor in",
      "path": "test/functional/wallet_miniscript.py",
      "position": 72,
      "original_position": 72,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "need to define insane(I don't know what that means)",
      "created_at": "2022-07-13T20:30:36Z",
      "updated_at": "2022-07-13T20:30:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920477452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920477452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920481462",
      "pull_request_review_id": 1037947014,
      "id": 920481462,
      "node_id": "PRRC_kwDOABII58423W62",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Miniscript descriptors integration in the wallet.\"\"\"\n+\n+from test_framework.descriptors import descsum_create\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+MINISCRIPTS = [\n+    # One of two keys\n+    \"or_b(pk(tpubD6NzVbkrYhZ4XRMcMFMMFvzVt6jaDAtjZhD7JLwdPdMm9xa76DnxYYP7w9TZGJDVFkek3ArwVsuacheqqPog8TH5iBCX1wuig8PLXim4n9a/*),s:pk(tpubD6NzVbkrYhZ4WsqRzDmkL82SWcu42JzUvKWzrJHQ8EC2vEHRHkXj1De93sD3biLrKd8XGnamXURGjMbYavbszVDXpjXV2cGUERucLJkE6cy/*))\",\n+    # A script similar (same spending policy) to BOLT3's offered HTLC (with anchor outputs)\n+    \"or_d(pk(tpubD6NzVbkrYhZ4XRMcMFMMFvzVt6jaDAtjZhD7JLwdPdMm9xa76DnxYYP7w9TZGJDVFkek3ArwVsuacheqqPog8TH5iBCX1wuig8PLXim4n9a/*),and_v(and_v(v:pk(tpubD6NzVbkrYhZ4WsqRzDmkL82SWcu42JzUvKWzrJHQ8EC2vEHRHkXj1De93sD3biLrKd8XGnamXURGjMbYavbszVDXpjXV2cGUERucLJkE6cy/*),or_c(pk(tpubD6NzVbkrYhZ4YNwtTWrKRJQzQX3PjPKeUQg1gYh1hiLMkk1cw8SRLgB1yb7JzE8bHKNt6EcZXkJ6AqpCZL1aaRSjnG36mLgbQvJZBNsjWnG/*),v:hash160(7f999c905d5e35cefd0a37673f746eb13fba3640))),older(1)))\",\n+    # A Revault Unvault policy with the older() replaced by an after()\n+    \"andor(multi(2,tpubD6NzVbkrYhZ4YMQC15JS7QcrsAyfGrGiykweqMmPxTkEVScu7vCZLNpPXW1XphHwzsgmqdHWDQAfucbM72EEB1ZEyfgZxYvkZjYVXx1xS9p/*,tpubD6NzVbkrYhZ4WkCyc7E3z6g6NkypHMiecnwc4DpWHTPqFdteRGkEKukdrSSyJGNnGrHNMfy4BCw2UXo5soYRCtCDDfy4q8pc8oyB7RgTFv8/*),and_v(v:multi(4,030f64b922aee2fd597f104bc6cb3b670f1ca2c6c49b1071a1a6c010575d94fe5a,02abe475b199ec3d62fa576faee16a334fdb86ffb26dce75becebaaedf328ac3fe,0314f3dc33595b0d016bb522f6fe3a67680723d842c1b9b8ae6b59fdd8ab5cccb4,025eba3305bd3c829e4e1551aac7358e4178832c739e4fc4729effe428de0398ab),after(424242)),thresh(4,pkh(tpubD6NzVbkrYhZ4YVrNggiT2ptVHwnFbLBqDkCtV5HkxR4WtcRLAQReKTkqZGNcV6GE7cQsmpBzzSzhk16DUwB1gn1L7ZPnJF2dnNePP1uMBCY/*),a:pkh(tpubD6NzVbkrYhZ4YU9vM1s53UhD75UyJatx8EMzMZ3VUjR2FciNfLLkAw6a4pWACChzobTseNqdWk4G7ZdBqRDLtLSACKykTScmqibb1ZrCvJu/*),a:pkh(tpubD6NzVbkrYhZ4YUHcFfuH9iEBLiH8CBRJTpS7X3qjHmh82m1KCNbzs6w9gyK8oWHSZmKHWcakAXCGfbKg6xoCvKzQCWAHyxaC7QcWfmzyBf4/*),a:pkh(tpubD6NzVbkrYhZ4XXEmQtS3sgxpJbMyMg4McqRR1Af6ULzyrTRnhwjyr1etPD7svap9oFtJf4MM72brUb5o7uvF2Jyszc5c1t836fJW7SX2e8D/*)))\",\n+    # Liquid-like federated pegin with emergency recovery keys\n+    \"or_i(and_b(pk(029ffbe722b147f3035c87cb1c60b9a5947dd49c774cc31e94773478711a929ac0),a:and_b(pk(025f05815e3a1a8a83bfbb03ce016c9a2ee31066b98f567f6227df1d76ec4bd143),a:and_b(pk(025625f41e4a065efc06d5019cbbd56fe8c07595af1231e7cbc03fafb87ebb71ec),a:and_b(pk(02a27c8b850a00f67da3499b60562673dcf5fdfb82b7e17652a7ac54416812aefd),s:pk(03e618ec5f384d6e19ca9ebdb8e2119e5bef978285076828ce054e55c4daf473e2))))),and_v(v:thresh(2,pkh(tpubD6NzVbkrYhZ4YK67cd5fDe4fBVmGB2waTDrAt1q4ey9HPq9veHjWkw3VpbaCHCcWozjkhgAkWpFrxuPMUrmXVrLHMfEJ9auoZA6AS1g3grC/*),a:pkh(033841045a531e1adf9910a6ec279589a90b3b8a904ee64ffd692bd08a8996c1aa),a:pkh(02aebf2d10b040eb936a6f02f44ee82f8b34f5c1ccb20ff3949c2b28206b7c1068)),older(4209713)))\",\n+]\n+\n+\n+class WalletMiniscriptTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def watchonly_test(self, ms):\n+        self.log.info(f\"Importing Miniscript '{ms}'\")\n+        desc = descsum_create(f\"wsh({ms})\")\n+        assert self.ms_wo_wallet.importdescriptors(\n+            [\n+                {\n+                    \"desc\": desc,\n+                    \"active\": True,\n+                    \"range\": 2,\n+                    \"next_index\": 0,\n+                    \"timestamp\": \"now\",\n+                }\n+            ]\n+        )[0][\"success\"]\n+\n+        self.log.info(\"Testing we derive new addresses for it\")\n+        assert_equal(\n+            self.ms_wo_wallet.getnewaddress(), self.funder.deriveaddresses(desc, 0)[0]\n+        )\n+        assert_equal(\n+            self.ms_wo_wallet.getnewaddress(), self.funder.deriveaddresses(desc, 1)[1]\n+        )\n+\n+        self.log.info(\"Testing we detect funds sent to one of them\")\n+        addr = self.ms_wo_wallet.getnewaddress()",
      "path": "test/functional/wallet_miniscript.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "imo makes more sense to do the rest of the test against an address we explicitly checked was derived correctly(instead of the 3rd one)",
      "created_at": "2022-07-13T20:35:45Z",
      "updated_at": "2022-07-14T13:29:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920481462",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920481462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920627531",
      "pull_request_review_id": 1038131136,
      "id": 920627531,
      "node_id": "PRRC_kwDOABII584236lL",
      "diff_hunk": "@@ -1058,6 +1156,94 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out LIFETIMEBOUND, const SigningProvider* in LIFETIMEBOUND) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return *m_keys[a] < *m_keys[b];\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, {&*begin, &*end}, ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);\n+        if (!pk) return {};\n+        m_keys.push_back(std::move(pk));\n+        return key;\n+    }\n+\n+    std::optional<std::string> ToString(const Key& key) const\n+    {\n+        return m_keys[key]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKBytes(I begin, I end) const",
      "path": "src/script/descriptor.cpp",
      "position": 206,
      "original_position": 206,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Maybe is `FromPublicKeyBytes()` clearer ?",
      "created_at": "2022-07-14T01:14:07Z",
      "updated_at": "2022-07-14T01:24:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920627531",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920627531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1218,
      "original_line": 1218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920627658",
      "pull_request_review_id": 1038131136,
      "id": 920627658,
      "node_id": "PRRC_kwDOABII584236nK",
      "diff_hunk": "@@ -1058,6 +1156,94 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out LIFETIMEBOUND, const SigningProvider* in LIFETIMEBOUND) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return *m_keys[a] < *m_keys[b];\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, {&*begin, &*end}, ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);\n+        if (!pk) return {};\n+        m_keys.push_back(std::move(pk));\n+        return key;\n+    }\n+\n+    std::optional<std::string> ToString(const Key& key) const\n+    {\n+        return m_keys[key]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKBytes(I begin, I end) const\n+    {\n+        assert(m_in);\n+        CPubKey pubkey(begin, end);\n+        if (pubkey.IsValid()) {\n+            Key key = m_keys.size();\n+            m_keys.push_back(InferPubkey(pubkey, ParseScriptContext::P2WSH, *m_in));\n+            return key;\n+        }\n+        return {};\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKHBytes(I begin, I end) const",
      "path": "src/script/descriptor.cpp",
      "position": 218,
      "original_position": 218,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Maybe is `FromPublicKeyHashBytes()` clearer ?",
      "created_at": "2022-07-14T01:14:28Z",
      "updated_at": "2022-07-14T01:24:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920627658",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920627658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1230,
      "original_line": 1230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920966866",
      "pull_request_review_id": 1038597002,
      "id": 920966866,
      "node_id": "PRRC_kwDOABII58425NbS",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Miniscript descriptors integration in the wallet.\"\"\"\n+\n+from test_framework.descriptors import descsum_create\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+MINISCRIPTS = [\n+    # One of two keys\n+    \"or_b(pk(tpubD6NzVbkrYhZ4XRMcMFMMFvzVt6jaDAtjZhD7JLwdPdMm9xa76DnxYYP7w9TZGJDVFkek3ArwVsuacheqqPog8TH5iBCX1wuig8PLXim4n9a/*),s:pk(tpubD6NzVbkrYhZ4WsqRzDmkL82SWcu42JzUvKWzrJHQ8EC2vEHRHkXj1De93sD3biLrKd8XGnamXURGjMbYavbszVDXpjXV2cGUERucLJkE6cy/*))\",\n+    # A script similar (same spending policy) to BOLT3's offered HTLC (with anchor outputs)\n+    \"or_d(pk(tpubD6NzVbkrYhZ4XRMcMFMMFvzVt6jaDAtjZhD7JLwdPdMm9xa76DnxYYP7w9TZGJDVFkek3ArwVsuacheqqPog8TH5iBCX1wuig8PLXim4n9a/*),and_v(and_v(v:pk(tpubD6NzVbkrYhZ4WsqRzDmkL82SWcu42JzUvKWzrJHQ8EC2vEHRHkXj1De93sD3biLrKd8XGnamXURGjMbYavbszVDXpjXV2cGUERucLJkE6cy/*),or_c(pk(tpubD6NzVbkrYhZ4YNwtTWrKRJQzQX3PjPKeUQg1gYh1hiLMkk1cw8SRLgB1yb7JzE8bHKNt6EcZXkJ6AqpCZL1aaRSjnG36mLgbQvJZBNsjWnG/*),v:hash160(7f999c905d5e35cefd0a37673f746eb13fba3640))),older(1)))\",\n+    # A Revault Unvault policy with the older() replaced by an after()\n+    \"andor(multi(2,tpubD6NzVbkrYhZ4YMQC15JS7QcrsAyfGrGiykweqMmPxTkEVScu7vCZLNpPXW1XphHwzsgmqdHWDQAfucbM72EEB1ZEyfgZxYvkZjYVXx1xS9p/*,tpubD6NzVbkrYhZ4WkCyc7E3z6g6NkypHMiecnwc4DpWHTPqFdteRGkEKukdrSSyJGNnGrHNMfy4BCw2UXo5soYRCtCDDfy4q8pc8oyB7RgTFv8/*),and_v(v:multi(4,030f64b922aee2fd597f104bc6cb3b670f1ca2c6c49b1071a1a6c010575d94fe5a,02abe475b199ec3d62fa576faee16a334fdb86ffb26dce75becebaaedf328ac3fe,0314f3dc33595b0d016bb522f6fe3a67680723d842c1b9b8ae6b59fdd8ab5cccb4,025eba3305bd3c829e4e1551aac7358e4178832c739e4fc4729effe428de0398ab),after(424242)),thresh(4,pkh(tpubD6NzVbkrYhZ4YVrNggiT2ptVHwnFbLBqDkCtV5HkxR4WtcRLAQReKTkqZGNcV6GE7cQsmpBzzSzhk16DUwB1gn1L7ZPnJF2dnNePP1uMBCY/*),a:pkh(tpubD6NzVbkrYhZ4YU9vM1s53UhD75UyJatx8EMzMZ3VUjR2FciNfLLkAw6a4pWACChzobTseNqdWk4G7ZdBqRDLtLSACKykTScmqibb1ZrCvJu/*),a:pkh(tpubD6NzVbkrYhZ4YUHcFfuH9iEBLiH8CBRJTpS7X3qjHmh82m1KCNbzs6w9gyK8oWHSZmKHWcakAXCGfbKg6xoCvKzQCWAHyxaC7QcWfmzyBf4/*),a:pkh(tpubD6NzVbkrYhZ4XXEmQtS3sgxpJbMyMg4McqRR1Af6ULzyrTRnhwjyr1etPD7svap9oFtJf4MM72brUb5o7uvF2Jyszc5c1t836fJW7SX2e8D/*)))\",\n+    # Liquid-like federated pegin with emergency recovery keys\n+    \"or_i(and_b(pk(029ffbe722b147f3035c87cb1c60b9a5947dd49c774cc31e94773478711a929ac0),a:and_b(pk(025f05815e3a1a8a83bfbb03ce016c9a2ee31066b98f567f6227df1d76ec4bd143),a:and_b(pk(025625f41e4a065efc06d5019cbbd56fe8c07595af1231e7cbc03fafb87ebb71ec),a:and_b(pk(02a27c8b850a00f67da3499b60562673dcf5fdfb82b7e17652a7ac54416812aefd),s:pk(03e618ec5f384d6e19ca9ebdb8e2119e5bef978285076828ce054e55c4daf473e2))))),and_v(v:thresh(2,pkh(tpubD6NzVbkrYhZ4YK67cd5fDe4fBVmGB2waTDrAt1q4ey9HPq9veHjWkw3VpbaCHCcWozjkhgAkWpFrxuPMUrmXVrLHMfEJ9auoZA6AS1g3grC/*),a:pkh(033841045a531e1adf9910a6ec279589a90b3b8a904ee64ffd692bd08a8996c1aa),a:pkh(02aebf2d10b040eb936a6f02f44ee82f8b34f5c1ccb20ff3949c2b28206b7c1068)),older(4209713)))\",\n+]\n+\n+\n+class WalletMiniscriptTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def watchonly_test(self, ms):\n+        self.log.info(f\"Importing Miniscript '{ms}'\")\n+        desc = descsum_create(f\"wsh({ms})\")\n+        assert self.ms_wo_wallet.importdescriptors(\n+            [\n+                {\n+                    \"desc\": desc,\n+                    \"active\": True,\n+                    \"range\": 2,\n+                    \"next_index\": 0,\n+                    \"timestamp\": \"now\",\n+                }\n+            ]\n+        )[0][\"success\"]\n+\n+        self.log.info(\"Testing we derive new addresses for it\")\n+        assert_equal(\n+            self.ms_wo_wallet.getnewaddress(), self.funder.deriveaddresses(desc, 0)[0]\n+        )\n+        assert_equal(\n+            self.ms_wo_wallet.getnewaddress(), self.funder.deriveaddresses(desc, 1)[1]\n+        )\n+\n+        self.log.info(\"Testing we detect funds sent to one of them\")\n+        addr = self.ms_wo_wallet.getnewaddress()\n+        txid = self.funder.sendtoaddress(addr, 0.01)\n+        self.wait_until(\n+            lambda: len(self.ms_wo_wallet.listunspent(minconf=0, addresses=[addr])) == 1\n+        )\n+        utxo = self.ms_wo_wallet.listunspent(minconf=0, addresses=[addr])[0]\n+        assert utxo[\"txid\"] == txid and not utxo[\"solvable\"]  # No satisfaction logic (yet)\n+\n+    def run_test(self):\n+        self.log.info(\"Making a descriptor wallet\")\n+        self.funder = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\n+            wallet_name=\"ms_wo\", descriptors=True, disable_private_keys=True\n+        )\n+        self.ms_wo_wallet = self.nodes[0].get_wallet_rpc(\"ms_wo\")\n+\n+        # Sanity check we wouldn't let an insane Miniscript descriptor in",
      "path": "test/functional/wallet_miniscript.py",
      "position": 72,
      "original_position": 72,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "in_reply_to_id": 920477452,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It was discussed in the OP of the Miniscript PR, #24147, and is defined in `src/script/miniscript.h`:\r\nhttps://github.com/bitcoin/bitcoin/blob/062b9db0ccb6af8bfbaa2b29132408cda9991b40/src/script/miniscript.h#L842-L846",
      "created_at": "2022-07-14T09:46:03Z",
      "updated_at": "2022-07-14T09:46:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920966866",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920966866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920988710",
      "pull_request_review_id": 1038627680,
      "id": 920988710,
      "node_id": "PRRC_kwDOABII58425Swm",
      "diff_hunk": "@@ -1058,6 +1156,94 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out LIFETIMEBOUND, const SigningProvider* in LIFETIMEBOUND) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return *m_keys[a] < *m_keys[b];\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, {&*begin, &*end}, ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);\n+        if (!pk) return {};\n+        m_keys.push_back(std::move(pk));\n+        return key;\n+    }\n+\n+    std::optional<std::string> ToString(const Key& key) const\n+    {\n+        return m_keys[key]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKBytes(I begin, I end) const",
      "path": "src/script/descriptor.cpp",
      "position": 206,
      "original_position": 206,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "in_reply_to_id": 920627531,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This interface was introduced in #24147, i'm not going to change it and all the callsites now. :)",
      "created_at": "2022-07-14T10:10:43Z",
      "updated_at": "2022-07-14T10:10:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920988710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920988710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1218,
      "original_line": 1218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920989283",
      "pull_request_review_id": 1038628504,
      "id": 920989283,
      "node_id": "PRRC_kwDOABII58425S5j",
      "diff_hunk": "@@ -1058,6 +1156,94 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out LIFETIMEBOUND, const SigningProvider* in LIFETIMEBOUND) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return *m_keys[a] < *m_keys[b];\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, {&*begin, &*end}, ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);\n+        if (!pk) return {};\n+        m_keys.push_back(std::move(pk));\n+        return key;\n+    }\n+\n+    std::optional<std::string> ToString(const Key& key) const\n+    {\n+        return m_keys[key]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKBytes(I begin, I end) const\n+    {\n+        assert(m_in);\n+        CPubKey pubkey(begin, end);\n+        if (pubkey.IsValid()) {\n+            Key key = m_keys.size();\n+            m_keys.push_back(InferPubkey(pubkey, ParseScriptContext::P2WSH, *m_in));\n+            return key;\n+        }\n+        return {};\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKHBytes(I begin, I end) const",
      "path": "src/script/descriptor.cpp",
      "position": 218,
      "original_position": 218,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "in_reply_to_id": 920627658,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here",
      "created_at": "2022-07-14T10:11:25Z",
      "updated_at": "2022-07-14T10:11:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r920989283",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920989283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1230,
      "original_line": 1230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/921149205",
      "pull_request_review_id": 1037947014,
      "id": 921149205,
      "node_id": "PRRC_kwDOABII5842558V",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Miniscript descriptors integration in the wallet.\"\"\"\n+\n+from test_framework.descriptors import descsum_create\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+MINISCRIPTS = [\n+    # One of two keys\n+    \"or_b(pk(tpubD6NzVbkrYhZ4XRMcMFMMFvzVt6jaDAtjZhD7JLwdPdMm9xa76DnxYYP7w9TZGJDVFkek3ArwVsuacheqqPog8TH5iBCX1wuig8PLXim4n9a/*),s:pk(tpubD6NzVbkrYhZ4WsqRzDmkL82SWcu42JzUvKWzrJHQ8EC2vEHRHkXj1De93sD3biLrKd8XGnamXURGjMbYavbszVDXpjXV2cGUERucLJkE6cy/*))\",\n+    # A script similar (same spending policy) to BOLT3's offered HTLC (with anchor outputs)\n+    \"or_d(pk(tpubD6NzVbkrYhZ4XRMcMFMMFvzVt6jaDAtjZhD7JLwdPdMm9xa76DnxYYP7w9TZGJDVFkek3ArwVsuacheqqPog8TH5iBCX1wuig8PLXim4n9a/*),and_v(and_v(v:pk(tpubD6NzVbkrYhZ4WsqRzDmkL82SWcu42JzUvKWzrJHQ8EC2vEHRHkXj1De93sD3biLrKd8XGnamXURGjMbYavbszVDXpjXV2cGUERucLJkE6cy/*),or_c(pk(tpubD6NzVbkrYhZ4YNwtTWrKRJQzQX3PjPKeUQg1gYh1hiLMkk1cw8SRLgB1yb7JzE8bHKNt6EcZXkJ6AqpCZL1aaRSjnG36mLgbQvJZBNsjWnG/*),v:hash160(7f999c905d5e35cefd0a37673f746eb13fba3640))),older(1)))\",\n+    # A Revault Unvault policy with the older() replaced by an after()\n+    \"andor(multi(2,tpubD6NzVbkrYhZ4YMQC15JS7QcrsAyfGrGiykweqMmPxTkEVScu7vCZLNpPXW1XphHwzsgmqdHWDQAfucbM72EEB1ZEyfgZxYvkZjYVXx1xS9p/*,tpubD6NzVbkrYhZ4WkCyc7E3z6g6NkypHMiecnwc4DpWHTPqFdteRGkEKukdrSSyJGNnGrHNMfy4BCw2UXo5soYRCtCDDfy4q8pc8oyB7RgTFv8/*),and_v(v:multi(4,030f64b922aee2fd597f104bc6cb3b670f1ca2c6c49b1071a1a6c010575d94fe5a,02abe475b199ec3d62fa576faee16a334fdb86ffb26dce75becebaaedf328ac3fe,0314f3dc33595b0d016bb522f6fe3a67680723d842c1b9b8ae6b59fdd8ab5cccb4,025eba3305bd3c829e4e1551aac7358e4178832c739e4fc4729effe428de0398ab),after(424242)),thresh(4,pkh(tpubD6NzVbkrYhZ4YVrNggiT2ptVHwnFbLBqDkCtV5HkxR4WtcRLAQReKTkqZGNcV6GE7cQsmpBzzSzhk16DUwB1gn1L7ZPnJF2dnNePP1uMBCY/*),a:pkh(tpubD6NzVbkrYhZ4YU9vM1s53UhD75UyJatx8EMzMZ3VUjR2FciNfLLkAw6a4pWACChzobTseNqdWk4G7ZdBqRDLtLSACKykTScmqibb1ZrCvJu/*),a:pkh(tpubD6NzVbkrYhZ4YUHcFfuH9iEBLiH8CBRJTpS7X3qjHmh82m1KCNbzs6w9gyK8oWHSZmKHWcakAXCGfbKg6xoCvKzQCWAHyxaC7QcWfmzyBf4/*),a:pkh(tpubD6NzVbkrYhZ4XXEmQtS3sgxpJbMyMg4McqRR1Af6ULzyrTRnhwjyr1etPD7svap9oFtJf4MM72brUb5o7uvF2Jyszc5c1t836fJW7SX2e8D/*)))\",\n+    # Liquid-like federated pegin with emergency recovery keys\n+    \"or_i(and_b(pk(029ffbe722b147f3035c87cb1c60b9a5947dd49c774cc31e94773478711a929ac0),a:and_b(pk(025f05815e3a1a8a83bfbb03ce016c9a2ee31066b98f567f6227df1d76ec4bd143),a:and_b(pk(025625f41e4a065efc06d5019cbbd56fe8c07595af1231e7cbc03fafb87ebb71ec),a:and_b(pk(02a27c8b850a00f67da3499b60562673dcf5fdfb82b7e17652a7ac54416812aefd),s:pk(03e618ec5f384d6e19ca9ebdb8e2119e5bef978285076828ce054e55c4daf473e2))))),and_v(v:thresh(2,pkh(tpubD6NzVbkrYhZ4YK67cd5fDe4fBVmGB2waTDrAt1q4ey9HPq9veHjWkw3VpbaCHCcWozjkhgAkWpFrxuPMUrmXVrLHMfEJ9auoZA6AS1g3grC/*),a:pkh(033841045a531e1adf9910a6ec279589a90b3b8a904ee64ffd692bd08a8996c1aa),a:pkh(02aebf2d10b040eb936a6f02f44ee82f8b34f5c1ccb20ff3949c2b28206b7c1068)),older(4209713)))\",\n+]\n+\n+\n+class WalletMiniscriptTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def watchonly_test(self, ms):\n+        self.log.info(f\"Importing Miniscript '{ms}'\")\n+        desc = descsum_create(f\"wsh({ms})\")\n+        assert self.ms_wo_wallet.importdescriptors(\n+            [\n+                {\n+                    \"desc\": desc,\n+                    \"active\": True,\n+                    \"range\": 2,\n+                    \"next_index\": 0,\n+                    \"timestamp\": \"now\",\n+                }\n+            ]\n+        )[0][\"success\"]\n+\n+        self.log.info(\"Testing we derive new addresses for it\")\n+        assert_equal(\n+            self.ms_wo_wallet.getnewaddress(), self.funder.deriveaddresses(desc, 0)[0]\n+        )\n+        assert_equal(\n+            self.ms_wo_wallet.getnewaddress(), self.funder.deriveaddresses(desc, 1)[1]\n+        )\n+\n+        self.log.info(\"Testing we detect funds sent to one of them\")\n+        addr = self.ms_wo_wallet.getnewaddress()\n+        txid = self.funder.sendtoaddress(addr, 0.01)\n+        self.wait_until(\n+            lambda: len(self.ms_wo_wallet.listunspent(minconf=0, addresses=[addr])) == 1\n+        )\n+        utxo = self.ms_wo_wallet.listunspent(minconf=0, addresses=[addr])[0]\n+        assert utxo[\"txid\"] == txid and not utxo[\"solvable\"]  # No satisfaction logic (yet)\n+\n+    def run_test(self):\n+        self.log.info(\"Making a descriptor wallet\")\n+        self.funder = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\n+            wallet_name=\"ms_wo\", descriptors=True, disable_private_keys=True\n+        )\n+        self.ms_wo_wallet = self.nodes[0].get_wallet_rpc(\"ms_wo\")\n+\n+        # Sanity check we wouldn't let an insane Miniscript descriptor in",
      "path": "test/functional/wallet_miniscript.py",
      "position": 72,
      "original_position": 72,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "49ac002733157f5629303d1cf59fa3151fdf1e73",
      "in_reply_to_id": 920477452,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sure, what I mean is \"assuming this is merged, as a reader of the test, what is this?\" i.e. should include link or self contained definition \r\n\r\n",
      "created_at": "2022-07-14T13:22:15Z",
      "updated_at": "2022-07-14T13:29:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r921149205",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/921149205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924876846",
      "pull_request_review_id": 1043963753,
      "id": 924876846,
      "node_id": "PRRC_kwDOABII5843IIAu",
      "diff_hunk": "@@ -1058,6 +1156,94 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out LIFETIMEBOUND, const SigningProvider* in LIFETIMEBOUND) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return *m_keys.at(a) < *m_keys.at(b);\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, {&*begin, &*end}, ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);\n+        if (!pk) return {};",
      "path": "src/script/descriptor.cpp",
      "position": 196,
      "original_position": 196,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "bfb036756ad6e187fd6d3abfefe5804bb54a5c71",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I get two compiler warnings on master from this, `gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0`:\r\n```\r\nscript/descriptor.cpp: In function ‘miniscript::NodeRef<Key> miniscript::internal::DecodeScript(I&, I, const Ctx&) [with Key = unsigned int; Ctx = {anonymous}::KeyParser; I = __gnu_cxx::__normal_iterator<std::pair<opcodetype, std::vector<unsigned char> >*, std::vector<std::pair<opcodetype, std::vector<unsigned char> > > >]’:\r\nscript/descriptor.cpp:1243:17: warning: ‘<anonymous>’ may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n 1243 |         return {};\r\n      |                 ^\r\nscript/descriptor.cpp: In function ‘miniscript::NodeRef<Key> miniscript::internal::Parse(Span<const char>, const Ctx&) [with Key = unsigned int; Ctx = {anonymous}::KeyParser]’:\r\nscript/descriptor.cpp:1208:26: warning: ‘<anonymous>’ may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n 1208 |         if (!pk) return {};\r\n```\r\n",
      "created_at": "2022-07-19T19:19:39Z",
      "updated_at": "2022-07-19T19:19:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r924876846",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924876846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1208,
      "original_line": 1208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924960870",
      "pull_request_review_id": 1044086481,
      "id": 924960870,
      "node_id": "PRRC_kwDOABII5843Ichm",
      "diff_hunk": "@@ -1058,6 +1156,94 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out LIFETIMEBOUND, const SigningProvider* in LIFETIMEBOUND) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return *m_keys.at(a) < *m_keys.at(b);\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, {&*begin, &*end}, ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);\n+        if (!pk) return {};",
      "path": "src/script/descriptor.cpp",
      "position": 196,
      "original_position": 196,
      "commit_id": "ffc79b8e492c6dd1352e528fd82e45d8d25eaa04",
      "original_commit_id": "bfb036756ad6e187fd6d3abfefe5804bb54a5c71",
      "in_reply_to_id": 924876846,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe that's a known false positive in certain GCC versions.",
      "created_at": "2022-07-19T21:11:38Z",
      "updated_at": "2022-07-19T21:11:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r924960870",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924960870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1208,
      "original_line": 1208,
      "side": "RIGHT"
    }
  ]
}