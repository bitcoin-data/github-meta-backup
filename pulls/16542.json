{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542",
    "id": 303958236,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAzOTU4MjM2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16542",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/16542.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/16542.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/787c9ec0c383cefb83a95433311a27f9c220dca0",
    "number": 16542,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Return more specific errors about invalid descriptors",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Because it's nigh impossible to figure out what is wrong with a descriptor otherwise.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 1482182044,
        "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
        "name": "Descriptors",
        "description": "",
        "color": "e9f76c",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-08-02T23:42:44Z",
    "updated_at": "2021-12-16T14:01:12Z",
    "closed_at": "2019-08-18T22:48:50Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-08-18T22:48:50Z",
    "merge_commit_sha": "787c9ec0c383cefb83a95433311a27f9c220dca0",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "achow101:descriptor-errors",
      "ref": "descriptor-errors",
      "sha": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 34,
        "watchers_count": 34,
        "size": 238743,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-02T17:43:24Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2023-05-16T00:18:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "7a960ba775a60ebcc2e830356693e3ed702b22f1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 207,
    "deletions": 83,
    "changed_files": 8,
    "commits": 4,
    "review_comments": 33,
    "comments": 14
  },
  "events": [
    {
      "event": "labeled",
      "id": 2531008479,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI1MzEwMDg0Nzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2531008479",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-02T23:44:36Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 517874631,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg3NDYzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517874631",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-02T23:53:54Z",
      "updated_at": "2019-08-02T23:53:54Z",
      "author_association": "MEMBER",
      "body": "Descriptors are hard to parse, they should be hard to write also.\r\n\r\nEh, I mean, big concept ACK.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-517874631",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "labeled",
      "id": 2531092768,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI1MzEwOTI3Njg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2531092768",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-03T02:12:11Z",
      "label": {
        "name": "Descriptors",
        "color": "e9f76c"
      }
    },
    {
      "event": "commented",
      "id": 517887329,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg4NzMyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517887329",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-03T02:29:19Z",
      "updated_at": "2019-08-17T01:58:44Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16570](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16570.html) (Make descriptor tests deterministic by davereikher)\n* [#15590](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15590.html) (Descriptor: add GetAddressType() and IsSegWit() by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-517887329",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "commented",
      "id": 517898864,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg5ODg2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517898864",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-03T06:19:29Z",
      "updated_at": "2019-08-03T06:19:29Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\n",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-517898864",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "commented",
      "id": 517916637,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzkxNjYzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517916637",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-03T11:12:02Z",
      "updated_at": "2019-08-03T11:12:02Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-517916637",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "reviewed",
      "id": 270466217,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjcwNDY2MjE3",
      "url": null,
      "actor": null,
      "commit_id": "dae2590f6d7a40f58b59e7f399068891981d5ae0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, nice to have a detailed error.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#pullrequestreview-270466217",
      "submitted_at": "2019-08-03T16:57:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
    },
    {
      "event": "commented",
      "id": 518359101,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxODM1OTEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518359101",
      "actor": {
        "login": "hugohn",
        "id": 4769925,
        "node_id": "MDQ6VXNlcjQ3Njk5MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4769925?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hugohn",
        "html_url": "https://github.com/hugohn",
        "followers_url": "https://api.github.com/users/hugohn/followers",
        "following_url": "https://api.github.com/users/hugohn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hugohn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hugohn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hugohn/subscriptions",
        "organizations_url": "https://api.github.com/users/hugohn/orgs",
        "repos_url": "https://api.github.com/users/hugohn/repos",
        "events_url": "https://api.github.com/users/hugohn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hugohn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-05T19:05:05Z",
      "updated_at": "2019-08-05T19:05:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK.",
      "user": {
        "login": "hugohn",
        "id": 4769925,
        "node_id": "MDQ6VXNlcjQ3Njk5MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4769925?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hugohn",
        "html_url": "https://github.com/hugohn",
        "followers_url": "https://api.github.com/users/hugohn/followers",
        "following_url": "https://api.github.com/users/hugohn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hugohn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hugohn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hugohn/subscriptions",
        "organizations_url": "https://api.github.com/users/hugohn/orgs",
        "repos_url": "https://api.github.com/users/hugohn/repos",
        "events_url": "https://api.github.com/users/hugohn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hugohn/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-518359101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "reviewed",
      "id": 271284181,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjcxMjg0MTgx",
      "url": null,
      "actor": null,
      "commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK dae2590\r\n\r\nThis introduces a fun little trick if you're too lazy to call `getdescriptorinfo` to obtain the checkum: you can instead set the checksum to `00000000`.\r\n```\r\n$ bitcoin-cli importmulti '[{\"desc\": \"sh(wpkh(03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556))#00000000\", \"timestamp\": \"now\"}]'\r\n[\r\n  {\r\n    \"success\": false,\r\n    \"error\": {\r\n      \"code\": -5,\r\n      \"message\": \"Descriptor is invalid, Provided checksum '00000000' does not match computed checksum 'qkrrc7je'\"\r\n    }\r\n  }\r\n]\r\n\r\n```",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#pullrequestreview-271284181",
      "submitted_at": "2019-08-06T11:46:49Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2537896877,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjUzNzg5Njg3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2537896877",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-06T19:38:05Z"
    },
    {
      "event": "reviewed",
      "id": 272422853,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjcyNDIyODUz",
      "url": null,
      "actor": null,
      "commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#pullrequestreview-272422853",
      "submitted_at": "2019-08-08T08:41:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
    },
    {
      "event": "mentioned",
      "id": 2542687781,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjU0MjY4Nzc4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2542687781",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-08T09:31:32Z"
    },
    {
      "event": "subscribed",
      "id": 2542687782,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1NDI2ODc3ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2542687782",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-08T09:31:32Z"
    },
    {
      "event": "reviewed",
      "id": 272438281,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjcyNDM4Mjgx",
      "url": null,
      "actor": null,
      "commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I think I've bookmarked all errors without a test - not saying you should add them here, I'm happy to improve in a follow up.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#pullrequestreview-272438281",
      "submitted_at": "2019-08-08T09:34:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2544566938,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjU0NDU2NjkzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2544566938",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-08T20:17:05Z"
    },
    {
      "event": "commented",
      "id": 519671667,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTY3MTY2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519671667",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-08T20:17:13Z",
      "updated_at": "2019-08-08T20:17:13Z",
      "author_association": "MEMBER",
      "body": "I've added more tests and also cleaned up a few typos in error messages.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-519671667",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "commented",
      "id": 520030750,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDAzMDc1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/520030750",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-09T19:06:35Z",
      "updated_at": "2019-08-09T19:06:35Z",
      "author_association": "MEMBER",
      "body": "reACK a1b47955838f1151fc1904d0ff3bc7751b9fa7ca",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-520030750",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "commented",
      "id": 520160503,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDE2MDUwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/520160503",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-10T16:08:36Z",
      "updated_at": "2019-08-10T16:08:36Z",
      "author_association": "MEMBER",
      "body": "Code Review ACK a1b47955838f1151fc1904d0ff3bc7751b9fa7ca",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-520160503",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "reviewed",
      "id": 274309238,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjc0MzA5MjM4",
      "url": null,
      "actor": null,
      "commit_id": "441d29d900c3c752907092ce303292efa92d9b4d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK\r\n\r\nthe errors I encountered during initial usage of descriptors are all caught here, and enough information to quickly figure out what I did wrong.\r\n\r\nf.e.\r\n\r\n```\r\ngetdescriptorinfo \"multi(1, 03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd,04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\"\r\nerror code: -5\r\nerror message:\r\nkey ' 03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd' is not valid\r\n```\r\n^ space after comma",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#pullrequestreview-274309238",
      "submitted_at": "2019-08-13T14:27:30Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
    },
    {
      "event": "commented",
      "id": 521280098,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTI4MDA5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521280098",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-14T14:52:17Z",
      "updated_at": "2019-08-14T14:52:17Z",
      "author_association": "MEMBER",
      "body": "If you need to make any changes, I suggest rebasing due to #14934 to be on the safe side. It still compiles and tests pass for me when I do that rebase locally though. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-521280098",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "commented",
      "id": 522166150,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjE2NjE1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522166150",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-16T22:07:25Z",
      "updated_at": "2019-08-16T22:07:25Z",
      "author_association": "MEMBER",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-522166150",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "labeled",
      "id": 2563532365,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI1NjM1MzIzNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2563532365",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-16T22:07:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 522166530,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjE2NjUzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522166530",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-16T22:09:15Z",
      "updated_at": "2019-08-16T22:09:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry about the rebase again due to #15986 \r\n\r\nOnce this is rebased I'll review and merge",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-522166530",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzI1ZjYxOWRkMDcxYjU0ODk5ODlmNjQ1ZTQyY2FjZThlYjIzZmI0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c325f619dd071b5489989f645e42cace8eb23fb4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c325f619dd071b5489989f645e42cace8eb23fb4",
      "tree": {
        "sha": "25177eef2a597ec4bdfff5abe7782c10be5daf2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25177eef2a597ec4bdfff5abe7782c10be5daf2f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a960ba775a60ebcc2e830356693e3ed702b22f1",
          "sha": "7a960ba775a60ebcc2e830356693e3ed702b22f1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7a960ba775a60ebcc2e830356693e3ed702b22f1"
        }
      ],
      "message": "Return an error from descriptor Parse that gives more information about what failed",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-16T23:34:01Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-02T22:04:02Z"
      },
      "sha": "c325f619dd071b5489989f645e42cace8eb23fb4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MjU1MzRkN2IxNDE3ZGE5MjZmMWNlZDYwMDg1NWVhODE4ZDZlMDFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/625534d7b1417da926f1ced600855ea818d6e01e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/625534d7b1417da926f1ced600855ea818d6e01e",
      "tree": {
        "sha": "b7ec5d310f4f2e169e57516c0032ff0c98156833",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7ec5d310f4f2e169e57516c0032ff0c98156833"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c325f619dd071b5489989f645e42cace8eb23fb4",
          "sha": "c325f619dd071b5489989f645e42cace8eb23fb4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c325f619dd071b5489989f645e42cace8eb23fb4"
        }
      ],
      "message": "Give more errors for specific failure conditions\n\nSome failure conditions implicitly fail by failing some other check.\nBut the error messages are more helpful if they say explicitly what\nactually caused the failure, so add those as failure conditions and\nerrors.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-16T23:34:01Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-02T23:19:53Z"
      },
      "sha": "625534d7b1417da926f1ced600855ea818d6e01e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTFhZTU4Mjk4YmMwMDY5Yjk1ZGZjZDUzMWM0OTNhMzgyNWJkZWQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e1ae58298bc0069b95dfcd531c493a3825bded7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6e1ae58298bc0069b95dfcd531c493a3825bded7",
      "tree": {
        "sha": "4e3cfa9bbc74066a1f74c579010eecc663006f82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e3cfa9bbc74066a1f74c579010eecc663006f82"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/625534d7b1417da926f1ced600855ea818d6e01e",
          "sha": "625534d7b1417da926f1ced600855ea818d6e01e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/625534d7b1417da926f1ced600855ea818d6e01e"
        }
      ],
      "message": "Check error messages in descriptor tests",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-16T23:34:01Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-02T23:21:15Z"
      },
      "sha": "6e1ae58298bc0069b95dfcd531c493a3825bded7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODdjOWVjMGMzODNjZWZiODNhOTU0MzMzMTFhMjdmOWMyMjBkY2Ew",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/787c9ec0c383cefb83a95433311a27f9c220dca0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/787c9ec0c383cefb83a95433311a27f9c220dca0",
      "tree": {
        "sha": "9051a6c9bdccbfe514e223a2984b3132e86bb2e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9051a6c9bdccbfe514e223a2984b3132e86bb2e6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e1ae58298bc0069b95dfcd531c493a3825bded7",
          "sha": "6e1ae58298bc0069b95dfcd531c493a3825bded7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6e1ae58298bc0069b95dfcd531c493a3825bded7"
        }
      ],
      "message": "Additional tests for other failure cases",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-16T23:34:01Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-08-08T20:16:06Z"
      },
      "sha": "787c9ec0c383cefb83a95433311a27f9c220dca0"
    },
    {
      "event": "commented",
      "id": 522186466,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjE4NjQ2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522186466",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-17T00:14:37Z",
      "updated_at": "2019-08-17T00:14:37Z",
      "author_association": "MEMBER",
      "body": "Rebased",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-522186466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2563670371,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjU2MzY3MDM3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2563670371",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-17T00:15:03Z"
    },
    {
      "event": "unlabeled",
      "id": 2563717853,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjU2MzcxNzg1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2563717853",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-17T01:43:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 276234242,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjc2MjM0MjQy",
      "url": null,
      "actor": null,
      "commit_id": "c325f619dd071b5489989f645e42cace8eb23fb4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Only the first commit changed in this rebase, but you lost a few of your recent fixes in the process.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#pullrequestreview-276234242",
      "submitted_at": "2019-08-17T11:36:57Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
    },
    {
      "event": "commented",
      "id": 522254238,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI1NDIzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522254238",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-17T17:07:13Z",
      "updated_at": "2019-08-17T17:07:13Z",
      "author_association": "MEMBER",
      "body": "> Only the first commit changed in this rebase, but you lost a few of your recent fixes in the process.\r\n\r\nNo??? Are you sure you're looking at the right commits? The latest diff includes everything that was commented on earlier.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-522254238",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "commented",
      "id": 522255246,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI1NTI0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522255246",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-17T17:20:48Z",
      "updated_at": "2019-08-17T17:20:48Z",
      "author_association": "MEMBER",
      "body": "Ah wait, I see these changes happen in 625534d7b1417da926f1ced600855ea818d6e01e.\r\n\r\nACK 787c9ec",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#issuecomment-522255246",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16542"
    },
    {
      "event": "reviewed",
      "id": 276270761,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjc2MjcwNzYx",
      "url": null,
      "actor": null,
      "commit_id": "c325f619dd071b5489989f645e42cace8eb23fb4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 787c9ec0c383cefb83a95433311a27f9c220dca0\r\n\r\nThis is a nice change, one tiny nit but it is pretty insignificant so I'll merge this tomorrow if you don't have time to fix it now",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#pullrequestreview-276270761",
      "submitted_at": "2019-08-18T10:21:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
    },
    {
      "event": "referenced",
      "id": 2564714906,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI1NjQ3MTQ5MDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2564714906",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e8a6d52724651e1a6d7c35165d5c6fe575a11b83",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8a6d52724651e1a6d7c35165d5c6fe575a11b83",
      "created_at": "2019-08-18T22:47:48Z"
    },
    {
      "event": "merged",
      "id": 2564715406,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjU2NDcxNTQwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2564715406",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/787c9ec0c383cefb83a95433311a27f9c220dca0",
      "created_at": "2019-08-18T22:48:50Z"
    },
    {
      "event": "closed",
      "id": 2564715409,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjU2NDcxNTQwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2564715409",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-18T22:48:50Z"
    },
    {
      "event": "referenced",
      "id": 2565172565,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI1NjUxNzI1NjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2565172565",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "723d8398423d83cfcf9664c8589185e5a486073c",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/723d8398423d83cfcf9664c8589185e5a486073c",
      "created_at": "2019-08-19T06:21:32Z"
    },
    {
      "event": "referenced",
      "id": 3503021431,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1MDMwMjE0MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3503021431",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2abb29db9d5b4efe4f9817c386fa9e5d1e73ea6b",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/2abb29db9d5b4efe4f9817c386fa9e5d1e73ea6b",
      "created_at": "2020-07-01T15:30:11Z"
    },
    {
      "event": "referenced",
      "id": 3503021435,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1MDMwMjE0MzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3503021435",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a2c1a34f16f87de87303517a601ae984a58557f1",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/a2c1a34f16f87de87303517a601ae984a58557f1",
      "created_at": "2020-07-01T15:30:11Z"
    },
    {
      "event": "referenced",
      "id": 3503021439,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1MDMwMjE0Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3503021439",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ed3d5a8dfe04755465e7422d7a852db9215e75c8",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/ed3d5a8dfe04755465e7422d7a852db9215e75c8",
      "created_at": "2020-07-01T15:30:11Z"
    },
    {
      "event": "referenced",
      "id": 3503021443,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1MDMwMjE0NDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3503021443",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "828b2e964361259a027d1254ca2278b9f8e155a6",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/828b2e964361259a027d1254ca2278b9f8e155a6",
      "created_at": "2020-07-01T15:30:12Z"
    },
    {
      "event": "referenced",
      "id": 5715313605,
      "node_id": "REFE_lADOABII584cZSRzzwAAAAFUqMPF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5715313605",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bb1395558c5712a69a31acde537e028b564642f2",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/bb1395558c5712a69a31acde537e028b564642f2",
      "created_at": "2021-12-04T06:08:30Z"
    },
    {
      "event": "referenced",
      "id": 5731759062,
      "node_id": "REFE_lADOABII584cZSRzzwAAAAFVo7PW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5731759062",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f581fa919d656e58bae80a4093bff4b51126bfeb",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/f581fa919d656e58bae80a4093bff4b51126bfeb",
      "created_at": "2021-12-08T06:31:48Z"
    },
    {
      "event": "referenced",
      "id": 5731775330,
      "node_id": "REFE_lADOABII584cZSRzzwAAAAFVo_Ni",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5731775330",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "889391b9dc749a83f3056004d2629642b9b96320",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/889391b9dc749a83f3056004d2629642b9b96320",
      "created_at": "2021-12-08T06:37:06Z"
    },
    {
      "event": "referenced",
      "id": 5752652021,
      "node_id": "REFE_lADOABII584cZSRzzwAAAAFW4oD1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5752652021",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4bf8b707a6f4ecbcc111d5cefb3b056bbe06c508",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/4bf8b707a6f4ecbcc111d5cefb3b056bbe06c508",
      "created_at": "2021-12-12T10:45:31Z"
    },
    {
      "event": "referenced",
      "id": 5752751618,
      "node_id": "REFE_lADOABII584cZSRzzwAAAAFW5AYC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5752751618",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a3facde466de9b851f1144164e8549761afe92d8",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/a3facde466de9b851f1144164e8549761afe92d8",
      "created_at": "2021-12-12T12:28:13Z"
    },
    {
      "event": "referenced",
      "id": 5752860633,
      "node_id": "REFE_lADOABII584cZSRzzwAAAAFW5a_Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5752860633",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "44f5cf5490dd1b0c6511b37c005e35b021fe8e0d",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/44f5cf5490dd1b0c6511b37c005e35b021fe8e0d",
      "created_at": "2021-12-12T14:14:25Z"
    },
    {
      "event": "referenced",
      "id": 5754168484,
      "node_id": "REFE_lADOABII584cZSRzzwAAAAFW-aSk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5754168484",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "55e7b91def15f0cbb17bfc22aa0cb45518352df1",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/55e7b91def15f0cbb17bfc22aa0cb45518352df1",
      "created_at": "2021-12-13T04:37:00Z"
    },
    {
      "event": "referenced",
      "id": 5754179978,
      "node_id": "REFE_lADOABII584cZSRzzwAAAAFW-dGK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5754179978",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d23e328064aa260c6d6f7a30be9c532df325d475",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/d23e328064aa260c6d6f7a30be9c532df325d475",
      "created_at": "2021-12-13T04:41:51Z"
    },
    {
      "event": "referenced",
      "id": 5754327290,
      "node_id": "REFE_lADOABII584cZSRzzwAAAAFW_BD6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5754327290",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bf2801798b3a744e7b725c9ba96b6954d02a98bb",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/bf2801798b3a744e7b725c9ba96b6954d02a98bb",
      "created_at": "2021-12-13T05:36:05Z"
    },
    {
      "event": "locked",
      "id": 5778552339,
      "node_id": "LOE_lADOABII584cZSRzzwAAAAFYbbYT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778552339",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:01:12Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311014773",
      "pull_request_review_id": 271284181,
      "id": 311014773,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTAxNDc3Mw==",
      "diff_hunk": "@@ -696,14 +696,17 @@ NODISCARD bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath&\n             hardened = true;\n         }\n         uint32_t p;\n-        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) return false;\n+        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) {\n+            error = strprintf(\"Key path value %u is out of range\", p);",
      "path": "src/script/descriptor.cpp",
      "position": 18,
      "original_position": 15,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: \"not valid\" instead of \"out of range\"? Or split the check?",
      "created_at": "2019-08-06T11:34:57Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311014773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311014773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 707,
      "original_line": 707,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311018361",
      "pull_request_review_id": 271284181,
      "id": 311018361,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTAxODM2MQ==",
      "diff_hunk": "@@ -552,7 +552,7 @@ def run_test(self):\n                                \"keys\": [key.privkey]},\n                               success=False,\n                               error_code=-5,\n-                              error_message=\"Descriptor is invalid\")\n+                              error_message=\"Descriptor is invalid, Missing checksum\")",
      "path": "test/functional/wallet_importmulti.py",
      "position": null,
      "original_position": 5,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: make descriptor errors start with lower case?",
      "created_at": "2019-08-06T11:46:23Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311018361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311018361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311236991",
      "pull_request_review_id": 271566386,
      "id": 311236991,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTIzNjk5MQ==",
      "diff_hunk": "@@ -552,7 +552,7 @@ def run_test(self):\n                                \"keys\": [key.privkey]},\n                               success=False,\n                               error_code=-5,\n-                              error_message=\"Descriptor is invalid\")\n+                              error_message=\"Descriptor is invalid, Missing checksum\")",
      "path": "test/functional/wallet_importmulti.py",
      "position": null,
      "original_position": 5,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": 311018361,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nah.",
      "created_at": "2019-08-06T19:30:45Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311236991",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311236991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311240004",
      "pull_request_review_id": 271570301,
      "id": 311240004,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTI0MDAwNA==",
      "diff_hunk": "@@ -696,14 +696,17 @@ NODISCARD bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath&\n             hardened = true;\n         }\n         uint32_t p;\n-        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) return false;\n+        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) {\n+            error = strprintf(\"Key path value %u is out of range\", p);",
      "path": "src/script/descriptor.cpp",
      "position": 18,
      "original_position": 15,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": 311014773,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've split the check",
      "created_at": "2019-08-06T19:39:01Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311240004",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311240004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 707,
      "original_line": 707,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311919483",
      "pull_request_review_id": 272422853,
      "id": 311919483,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkxOTQ4Mw==",
      "diff_hunk": "@@ -13,13 +13,15 @@\n \n namespace {\n \n-void CheckUnparsable(const std::string& prv, const std::string& pub)\n+void CheckUnparsable(const std::string& prv, const std::string& pub, std::string expected_error)",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `expected_error` could be const ref?",
      "created_at": "2019-08-08T08:41:43Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311919483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311919483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311931687",
      "pull_request_review_id": 272438281,
      "id": 311931687,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzMTY4Nw==",
      "diff_hunk": "@@ -696,33 +696,60 @@ NODISCARD bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath&\n             hardened = true;\n         }\n         uint32_t p;\n-        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) return false;\n+        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p)) {\n+            error = strprintf(\"Key path value '%s' is not a valid uint32\", std::string(elem.begin(), elem.end()).c_str());",
      "path": "src/script/descriptor.cpp",
      "position": 15,
      "original_position": 15,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:08:31Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311931687",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311931687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 704,
      "original_line": 704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311932348",
      "pull_request_review_id": 272438281,
      "id": 311932348,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzMjM0OA==",
      "diff_hunk": "@@ -696,33 +696,60 @@ NODISCARD bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath&\n             hardened = true;\n         }\n         uint32_t p;\n-        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) return false;\n+        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p)) {\n+            error = strprintf(\"Key path value '%s' is not a valid uint32\", std::string(elem.begin(), elem.end()).c_str());\n+            return false;\n+        } else if (p > 0x7FFFFFFFUL) {\n+            error = strprintf(\"Key path value %u is out of range\", p);\n+            return false;\n+        }\n         out.push_back(p | (((uint32_t)hardened) << 31));\n     }\n     return true;\n }\n \n /** Parse a public key that excludes origin information. */\n-std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto split = Split(sp, '/');\n     std::string str(split[0].begin(), split[0].end());\n+    if (str.size() == 0) {\n+        error = \"No key provided\";\n+        return nullptr;\n+    }\n     if (split.size() == 1) {\n         if (IsHex(str)) {\n             std::vector<unsigned char> data = ParseHex(str);\n             CPubKey pubkey(data);\n-            if (pubkey.IsFullyValid() && (permit_uncompressed || pubkey.IsCompressed())) return MakeUnique<ConstPubkeyProvider>(pubkey);\n+            if (pubkey.IsFullyValid()) {\n+                if (permit_uncompressed || pubkey.IsCompressed()) {\n+                    return MakeUnique<ConstPubkeyProvider>(pubkey);\n+                } else {\n+                    error = \"Uncompressed keys are not allowed\";\n+                    return nullptr;\n+                }\n+            }\n+            error = strprintf(\"Pubkey '%s' is invalid\", str);",
      "path": "src/script/descriptor.cpp",
      "position": 49,
      "original_position": 49,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:10:07Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311932348",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311932348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 736,
      "original_line": 736,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311936421",
      "pull_request_review_id": 272438281,
      "id": 311936421,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzNjQyMQ==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 104,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:19:40Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311936421",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311936421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 780,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311936744",
      "pull_request_review_id": 272438281,
      "id": 311936744,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzNjc0NA==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        return nullptr;\n+    }\n     auto slash_split = Split(origin_split[0].subspan(1), '/');\n-    if (slash_split[0].size() != 8) return nullptr;\n+    if (slash_split[0].size() != 8) {\n+        error = strprintf(\"Fingerprint is not 4 bytes (%u characters instead of 8 characters)\", slash_split[0].size());\n+        return nullptr;\n+    }\n     std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n-    if (!IsHex(fpr_hex)) return nullptr;\n+    if (!IsHex(fpr_hex)) {\n+        error = strprintf(\"Fingerprint '%s' is not hex\", fpr_hex);\n+        return nullptr;\n+    }\n     auto fpr_bytes = ParseHex(fpr_hex);\n     KeyOriginInfo info;\n     static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n-    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n     return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n+std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n {\n     auto expr = Expr(sp);\n     if (Func(\"pk\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKDescriptor>(std::move(pubkey));\n     }\n     if (Func(\"pkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKHDescriptor>(std::move(pubkey));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"combo\", expr)) {\n-        auto pubkey = ParsePubkey(expr, true, out);\n+        auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {\n+        error = \"Cannot have combo in non-top level\";\n+        return nullptr;\n     }\n     if (Func(\"multi\", expr)) {\n         auto threshold = Expr(expr);\n         uint32_t thres;\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n-        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) return nullptr;\n+        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) {\n+            error = strprintf(\"multi threshold %u out of range\", thres);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 164,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:20:35Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311936744",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311936744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 831,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311936968",
      "pull_request_review_id": 272438281,
      "id": 311936968,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzNjk2OA==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        return nullptr;\n+    }\n     auto slash_split = Split(origin_split[0].subspan(1), '/');\n-    if (slash_split[0].size() != 8) return nullptr;\n+    if (slash_split[0].size() != 8) {\n+        error = strprintf(\"Fingerprint is not 4 bytes (%u characters instead of 8 characters)\", slash_split[0].size());\n+        return nullptr;\n+    }\n     std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n-    if (!IsHex(fpr_hex)) return nullptr;\n+    if (!IsHex(fpr_hex)) {\n+        error = strprintf(\"Fingerprint '%s' is not hex\", fpr_hex);\n+        return nullptr;\n+    }\n     auto fpr_bytes = ParseHex(fpr_hex);\n     KeyOriginInfo info;\n     static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n-    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n     return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n+std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n {\n     auto expr = Expr(sp);\n     if (Func(\"pk\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKDescriptor>(std::move(pubkey));\n     }\n     if (Func(\"pkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKHDescriptor>(std::move(pubkey));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"combo\", expr)) {\n-        auto pubkey = ParsePubkey(expr, true, out);\n+        auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {\n+        error = \"Cannot have combo in non-top level\";\n+        return nullptr;\n     }\n     if (Func(\"multi\", expr)) {\n         auto threshold = Expr(expr);\n         uint32_t thres;\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n-        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) return nullptr;\n+        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) {\n+            error = strprintf(\"multi threshold %u out of range\", thres);\n+            return nullptr;\n+        }\n         size_t script_size = 0;\n         while (expr.size()) {\n-            if (!Const(\",\", expr)) return nullptr;\n+            if (!Const(\",\", expr)) {\n+                error = strprintf(\"multi: expected ',', got '%c'\", expr[0]);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 171,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:21:05Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311936968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311936968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 837,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311937893",
      "pull_request_review_id": 272438281,
      "id": 311937893,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzNzg5Mw==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        return nullptr;\n+    }\n     auto slash_split = Split(origin_split[0].subspan(1), '/');\n-    if (slash_split[0].size() != 8) return nullptr;\n+    if (slash_split[0].size() != 8) {\n+        error = strprintf(\"Fingerprint is not 4 bytes (%u characters instead of 8 characters)\", slash_split[0].size());\n+        return nullptr;\n+    }\n     std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n-    if (!IsHex(fpr_hex)) return nullptr;\n+    if (!IsHex(fpr_hex)) {\n+        error = strprintf(\"Fingerprint '%s' is not hex\", fpr_hex);\n+        return nullptr;\n+    }\n     auto fpr_bytes = ParseHex(fpr_hex);\n     KeyOriginInfo info;\n     static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n-    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n     return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n+std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n {\n     auto expr = Expr(sp);\n     if (Func(\"pk\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKDescriptor>(std::move(pubkey));\n     }\n     if (Func(\"pkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKHDescriptor>(std::move(pubkey));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"combo\", expr)) {\n-        auto pubkey = ParsePubkey(expr, true, out);\n+        auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {\n+        error = \"Cannot have combo in non-top level\";\n+        return nullptr;\n     }\n     if (Func(\"multi\", expr)) {\n         auto threshold = Expr(expr);\n         uint32_t thres;\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n-        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) return nullptr;\n+        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) {\n+            error = strprintf(\"multi threshold %u out of range\", thres);\n+            return nullptr;\n+        }\n         size_t script_size = 0;\n         while (expr.size()) {\n-            if (!Const(\",\", expr)) return nullptr;\n+            if (!Const(\",\", expr)) {\n+                error = strprintf(\"multi: expected ',', got '%c'\", expr[0]);\n+                return nullptr;\n+            }\n             auto arg = Expr(expr);\n-            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out);\n+            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out, error);\n             if (!pk) return nullptr;\n             script_size += pk->GetSize() + 1;\n             providers.emplace_back(std::move(pk));\n         }\n-        if (providers.size() < 1 || providers.size() > 16 || thres < 1 || thres > providers.size()) return nullptr;\n+        if (providers.size() < 1 || providers.size() > 16) {\n+            error = strprintf(\"Cannot have %u keys in multisig; must have between 1 and 16 keys, inclusive\", providers.size());",
      "path": "src/script/descriptor.cpp",
      "position": 183,
      "original_position": 183,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:23:25Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311937893",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311937893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 851,
      "original_line": 851,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938084",
      "pull_request_review_id": 272438281,
      "id": 311938084,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzODA4NA==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        return nullptr;\n+    }\n     auto slash_split = Split(origin_split[0].subspan(1), '/');\n-    if (slash_split[0].size() != 8) return nullptr;\n+    if (slash_split[0].size() != 8) {\n+        error = strprintf(\"Fingerprint is not 4 bytes (%u characters instead of 8 characters)\", slash_split[0].size());\n+        return nullptr;\n+    }\n     std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n-    if (!IsHex(fpr_hex)) return nullptr;\n+    if (!IsHex(fpr_hex)) {\n+        error = strprintf(\"Fingerprint '%s' is not hex\", fpr_hex);\n+        return nullptr;\n+    }\n     auto fpr_bytes = ParseHex(fpr_hex);\n     KeyOriginInfo info;\n     static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n-    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n     return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n+std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n {\n     auto expr = Expr(sp);\n     if (Func(\"pk\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKDescriptor>(std::move(pubkey));\n     }\n     if (Func(\"pkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKHDescriptor>(std::move(pubkey));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"combo\", expr)) {\n-        auto pubkey = ParsePubkey(expr, true, out);\n+        auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {\n+        error = \"Cannot have combo in non-top level\";\n+        return nullptr;\n     }\n     if (Func(\"multi\", expr)) {\n         auto threshold = Expr(expr);\n         uint32_t thres;\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n-        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) return nullptr;\n+        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) {\n+            error = strprintf(\"multi threshold %u out of range\", thres);\n+            return nullptr;\n+        }\n         size_t script_size = 0;\n         while (expr.size()) {\n-            if (!Const(\",\", expr)) return nullptr;\n+            if (!Const(\",\", expr)) {\n+                error = strprintf(\"multi: expected ',', got '%c'\", expr[0]);\n+                return nullptr;\n+            }\n             auto arg = Expr(expr);\n-            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out);\n+            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out, error);\n             if (!pk) return nullptr;\n             script_size += pk->GetSize() + 1;\n             providers.emplace_back(std::move(pk));\n         }\n-        if (providers.size() < 1 || providers.size() > 16 || thres < 1 || thres > providers.size()) return nullptr;\n+        if (providers.size() < 1 || providers.size() > 16) {\n+            error = strprintf(\"Cannot have %u keys in multisig; must have between 1 and 16 keys, inclusive\", providers.size());\n+            return nullptr;\n+        } else if (thres < 1) {\n+            error = strprintf(\"multisig threshold cannot be %d, must be at least 1\", thres);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 186,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:23:54Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311938084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 850,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938117",
      "pull_request_review_id": 272438281,
      "id": 311938117,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzODExNw==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        return nullptr;\n+    }\n     auto slash_split = Split(origin_split[0].subspan(1), '/');\n-    if (slash_split[0].size() != 8) return nullptr;\n+    if (slash_split[0].size() != 8) {\n+        error = strprintf(\"Fingerprint is not 4 bytes (%u characters instead of 8 characters)\", slash_split[0].size());\n+        return nullptr;\n+    }\n     std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n-    if (!IsHex(fpr_hex)) return nullptr;\n+    if (!IsHex(fpr_hex)) {\n+        error = strprintf(\"Fingerprint '%s' is not hex\", fpr_hex);\n+        return nullptr;\n+    }\n     auto fpr_bytes = ParseHex(fpr_hex);\n     KeyOriginInfo info;\n     static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n-    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n     return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n+std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n {\n     auto expr = Expr(sp);\n     if (Func(\"pk\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKDescriptor>(std::move(pubkey));\n     }\n     if (Func(\"pkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKHDescriptor>(std::move(pubkey));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"combo\", expr)) {\n-        auto pubkey = ParsePubkey(expr, true, out);\n+        auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {\n+        error = \"Cannot have combo in non-top level\";\n+        return nullptr;\n     }\n     if (Func(\"multi\", expr)) {\n         auto threshold = Expr(expr);\n         uint32_t thres;\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n-        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) return nullptr;\n+        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) {\n+            error = strprintf(\"multi threshold %u out of range\", thres);\n+            return nullptr;\n+        }\n         size_t script_size = 0;\n         while (expr.size()) {\n-            if (!Const(\",\", expr)) return nullptr;\n+            if (!Const(\",\", expr)) {\n+                error = strprintf(\"multi: expected ',', got '%c'\", expr[0]);\n+                return nullptr;\n+            }\n             auto arg = Expr(expr);\n-            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out);\n+            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out, error);\n             if (!pk) return nullptr;\n             script_size += pk->GetSize() + 1;\n             providers.emplace_back(std::move(pk));\n         }\n-        if (providers.size() < 1 || providers.size() > 16 || thres < 1 || thres > providers.size()) return nullptr;\n+        if (providers.size() < 1 || providers.size() > 16) {\n+            error = strprintf(\"Cannot have %u keys in multisig; must have between 1 and 16 keys, inclusive\", providers.size());\n+            return nullptr;\n+        } else if (thres < 1) {\n+            error = strprintf(\"multisig threshold cannot be %d, must be at least 1\", thres);\n+            return nullptr;\n+        } else if (thres > providers.size()) {\n+            error = strprintf(\"Multisig threshold cannot be larger than the number of keys; thoreshold is %d but only %u keys specified\", thres, providers.size());",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 189,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:23:59Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311938117",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938117"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 853,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938326",
      "pull_request_review_id": 272438281,
      "id": 311938326,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzODMyNg==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        return nullptr;\n+    }\n     auto slash_split = Split(origin_split[0].subspan(1), '/');\n-    if (slash_split[0].size() != 8) return nullptr;\n+    if (slash_split[0].size() != 8) {\n+        error = strprintf(\"Fingerprint is not 4 bytes (%u characters instead of 8 characters)\", slash_split[0].size());\n+        return nullptr;\n+    }\n     std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n-    if (!IsHex(fpr_hex)) return nullptr;\n+    if (!IsHex(fpr_hex)) {\n+        error = strprintf(\"Fingerprint '%s' is not hex\", fpr_hex);\n+        return nullptr;\n+    }\n     auto fpr_bytes = ParseHex(fpr_hex);\n     KeyOriginInfo info;\n     static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n-    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n     return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n+std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n {\n     auto expr = Expr(sp);\n     if (Func(\"pk\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKDescriptor>(std::move(pubkey));\n     }\n     if (Func(\"pkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKHDescriptor>(std::move(pubkey));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"combo\", expr)) {\n-        auto pubkey = ParsePubkey(expr, true, out);\n+        auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {\n+        error = \"Cannot have combo in non-top level\";\n+        return nullptr;\n     }\n     if (Func(\"multi\", expr)) {\n         auto threshold = Expr(expr);\n         uint32_t thres;\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n-        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) return nullptr;\n+        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) {\n+            error = strprintf(\"multi threshold %u out of range\", thres);\n+            return nullptr;\n+        }\n         size_t script_size = 0;\n         while (expr.size()) {\n-            if (!Const(\",\", expr)) return nullptr;\n+            if (!Const(\",\", expr)) {\n+                error = strprintf(\"multi: expected ',', got '%c'\", expr[0]);\n+                return nullptr;\n+            }\n             auto arg = Expr(expr);\n-            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out);\n+            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out, error);\n             if (!pk) return nullptr;\n             script_size += pk->GetSize() + 1;\n             providers.emplace_back(std::move(pk));\n         }\n-        if (providers.size() < 1 || providers.size() > 16 || thres < 1 || thres > providers.size()) return nullptr;\n+        if (providers.size() < 1 || providers.size() > 16) {\n+            error = strprintf(\"Cannot have %u keys in multisig; must have between 1 and 16 keys, inclusive\", providers.size());\n+            return nullptr;\n+        } else if (thres < 1) {\n+            error = strprintf(\"multisig threshold cannot be %d, must be at least 1\", thres);\n+            return nullptr;\n+        } else if (thres > providers.size()) {\n+            error = strprintf(\"Multisig threshold cannot be larger than the number of keys; thoreshold is %d but only %u keys specified\", thres, providers.size());\n+            return nullptr;\n+        }\n         if (ctx == ParseScriptContext::TOP) {\n-            if (providers.size() > 3) return nullptr; // Not more than 3 pubkeys for raw multisig\n+            if (providers.size() > 3) {\n+                error = strprintf(\"Cannot %u pubkeys in bare multisig; only at most 3 pubkeys\", providers.size());",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 195,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:24:28Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311938326",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938674",
      "pull_request_review_id": 272438281,
      "id": 311938674,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzODY3NA==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        return nullptr;\n+    }\n     auto slash_split = Split(origin_split[0].subspan(1), '/');\n-    if (slash_split[0].size() != 8) return nullptr;\n+    if (slash_split[0].size() != 8) {\n+        error = strprintf(\"Fingerprint is not 4 bytes (%u characters instead of 8 characters)\", slash_split[0].size());\n+        return nullptr;\n+    }\n     std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n-    if (!IsHex(fpr_hex)) return nullptr;\n+    if (!IsHex(fpr_hex)) {\n+        error = strprintf(\"Fingerprint '%s' is not hex\", fpr_hex);\n+        return nullptr;\n+    }\n     auto fpr_bytes = ParseHex(fpr_hex);\n     KeyOriginInfo info;\n     static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n-    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n     return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n+std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n {\n     auto expr = Expr(sp);\n     if (Func(\"pk\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKDescriptor>(std::move(pubkey));\n     }\n     if (Func(\"pkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKHDescriptor>(std::move(pubkey));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"combo\", expr)) {\n-        auto pubkey = ParsePubkey(expr, true, out);\n+        auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {\n+        error = \"Cannot have combo in non-top level\";\n+        return nullptr;\n     }\n     if (Func(\"multi\", expr)) {\n         auto threshold = Expr(expr);\n         uint32_t thres;\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n-        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) return nullptr;\n+        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) {\n+            error = strprintf(\"multi threshold %u out of range\", thres);\n+            return nullptr;\n+        }\n         size_t script_size = 0;\n         while (expr.size()) {\n-            if (!Const(\",\", expr)) return nullptr;\n+            if (!Const(\",\", expr)) {\n+                error = strprintf(\"multi: expected ',', got '%c'\", expr[0]);\n+                return nullptr;\n+            }\n             auto arg = Expr(expr);\n-            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out);\n+            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out, error);\n             if (!pk) return nullptr;\n             script_size += pk->GetSize() + 1;\n             providers.emplace_back(std::move(pk));\n         }\n-        if (providers.size() < 1 || providers.size() > 16 || thres < 1 || thres > providers.size()) return nullptr;\n+        if (providers.size() < 1 || providers.size() > 16) {\n+            error = strprintf(\"Cannot have %u keys in multisig; must have between 1 and 16 keys, inclusive\", providers.size());\n+            return nullptr;\n+        } else if (thres < 1) {\n+            error = strprintf(\"multisig threshold cannot be %d, must be at least 1\", thres);\n+            return nullptr;\n+        } else if (thres > providers.size()) {\n+            error = strprintf(\"Multisig threshold cannot be larger than the number of keys; thoreshold is %d but only %u keys specified\", thres, providers.size());\n+            return nullptr;\n+        }\n         if (ctx == ParseScriptContext::TOP) {\n-            if (providers.size() > 3) return nullptr; // Not more than 3 pubkeys for raw multisig\n+            if (providers.size() > 3) {\n+                error = strprintf(\"Cannot %u pubkeys in bare multisig; only at most 3 pubkeys\", providers.size());\n+                return nullptr;\n+            }\n         }\n         if (ctx == ParseScriptContext::P2SH) {\n-            if (script_size + 3 > 520) return nullptr; // Enforce P2SH script size limit\n+            if (script_size + 3 > 520) {\n+                error = strprintf(\"P2SH script is too large, %d bytes is larger than 520 bytes\", script_size + 3);\n+                return nullptr;\n+            }\n         }\n         return MakeUnique<MultisigDescriptor>(thres, std::move(providers));\n     }\n     if (ctx != ParseScriptContext::P2WSH && Func(\"wpkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, false, out);\n+        auto pubkey = ParsePubkey(expr, false, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<WPKHDescriptor>(std::move(pubkey));\n+    } else if (ctx == ParseScriptContext::P2WSH && Func(\"wpkh\", expr)) {\n+        error = \"Cannot have wpkh within wsh\";\n+        return nullptr;\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"sh\", expr)) {\n-        auto desc = ParseScript(expr, ParseScriptContext::P2SH, out);\n+        auto desc = ParseScript(expr, ParseScriptContext::P2SH, out, error);\n         if (!desc || expr.size()) return nullptr;\n         return MakeUnique<SHDescriptor>(std::move(desc));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"sh\", expr)) {\n+        error = \"Cannot have sh in non-top level\";\n+        return nullptr;\n     }\n     if (ctx != ParseScriptContext::P2WSH && Func(\"wsh\", expr)) {\n-        auto desc = ParseScript(expr, ParseScriptContext::P2WSH, out);\n+        auto desc = ParseScript(expr, ParseScriptContext::P2WSH, out, error);\n         if (!desc || expr.size()) return nullptr;\n         return MakeUnique<WSHDescriptor>(std::move(desc));\n+    } else if (ctx == ParseScriptContext::P2WSH && Func(\"wsh\", expr)) {\n+        error = \"Cannot have wsh within wsh\";\n+        return nullptr;\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"addr\", expr)) {\n         CTxDestination dest = DecodeDestination(std::string(expr.begin(), expr.end()));\n-        if (!IsValidDestination(dest)) return nullptr;\n+        if (!IsValidDestination(dest)) {\n+            error = \"Address is not valid\";",
      "path": "src/script/descriptor.cpp",
      "position": 239,
      "original_position": 239,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:25:15Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311938674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 901,
      "original_line": 901,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938803",
      "pull_request_review_id": 272438281,
      "id": 311938803,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzODgwMw==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        return nullptr;\n+    }\n     auto slash_split = Split(origin_split[0].subspan(1), '/');\n-    if (slash_split[0].size() != 8) return nullptr;\n+    if (slash_split[0].size() != 8) {\n+        error = strprintf(\"Fingerprint is not 4 bytes (%u characters instead of 8 characters)\", slash_split[0].size());\n+        return nullptr;\n+    }\n     std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n-    if (!IsHex(fpr_hex)) return nullptr;\n+    if (!IsHex(fpr_hex)) {\n+        error = strprintf(\"Fingerprint '%s' is not hex\", fpr_hex);\n+        return nullptr;\n+    }\n     auto fpr_bytes = ParseHex(fpr_hex);\n     KeyOriginInfo info;\n     static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n-    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n     return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n+std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n {\n     auto expr = Expr(sp);\n     if (Func(\"pk\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKDescriptor>(std::move(pubkey));\n     }\n     if (Func(\"pkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKHDescriptor>(std::move(pubkey));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"combo\", expr)) {\n-        auto pubkey = ParsePubkey(expr, true, out);\n+        auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {\n+        error = \"Cannot have combo in non-top level\";\n+        return nullptr;\n     }\n     if (Func(\"multi\", expr)) {\n         auto threshold = Expr(expr);\n         uint32_t thres;\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n-        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) return nullptr;\n+        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) {\n+            error = strprintf(\"multi threshold %u out of range\", thres);\n+            return nullptr;\n+        }\n         size_t script_size = 0;\n         while (expr.size()) {\n-            if (!Const(\",\", expr)) return nullptr;\n+            if (!Const(\",\", expr)) {\n+                error = strprintf(\"multi: expected ',', got '%c'\", expr[0]);\n+                return nullptr;\n+            }\n             auto arg = Expr(expr);\n-            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out);\n+            auto pk = ParsePubkey(arg, ctx != ParseScriptContext::P2WSH, out, error);\n             if (!pk) return nullptr;\n             script_size += pk->GetSize() + 1;\n             providers.emplace_back(std::move(pk));\n         }\n-        if (providers.size() < 1 || providers.size() > 16 || thres < 1 || thres > providers.size()) return nullptr;\n+        if (providers.size() < 1 || providers.size() > 16) {\n+            error = strprintf(\"Cannot have %u keys in multisig; must have between 1 and 16 keys, inclusive\", providers.size());\n+            return nullptr;\n+        } else if (thres < 1) {\n+            error = strprintf(\"multisig threshold cannot be %d, must be at least 1\", thres);\n+            return nullptr;\n+        } else if (thres > providers.size()) {\n+            error = strprintf(\"Multisig threshold cannot be larger than the number of keys; thoreshold is %d but only %u keys specified\", thres, providers.size());\n+            return nullptr;\n+        }\n         if (ctx == ParseScriptContext::TOP) {\n-            if (providers.size() > 3) return nullptr; // Not more than 3 pubkeys for raw multisig\n+            if (providers.size() > 3) {\n+                error = strprintf(\"Cannot %u pubkeys in bare multisig; only at most 3 pubkeys\", providers.size());\n+                return nullptr;\n+            }\n         }\n         if (ctx == ParseScriptContext::P2SH) {\n-            if (script_size + 3 > 520) return nullptr; // Enforce P2SH script size limit\n+            if (script_size + 3 > 520) {\n+                error = strprintf(\"P2SH script is too large, %d bytes is larger than 520 bytes\", script_size + 3);\n+                return nullptr;\n+            }\n         }\n         return MakeUnique<MultisigDescriptor>(thres, std::move(providers));\n     }\n     if (ctx != ParseScriptContext::P2WSH && Func(\"wpkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, false, out);\n+        auto pubkey = ParsePubkey(expr, false, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<WPKHDescriptor>(std::move(pubkey));\n+    } else if (ctx == ParseScriptContext::P2WSH && Func(\"wpkh\", expr)) {\n+        error = \"Cannot have wpkh within wsh\";\n+        return nullptr;\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"sh\", expr)) {\n-        auto desc = ParseScript(expr, ParseScriptContext::P2SH, out);\n+        auto desc = ParseScript(expr, ParseScriptContext::P2SH, out, error);\n         if (!desc || expr.size()) return nullptr;\n         return MakeUnique<SHDescriptor>(std::move(desc));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"sh\", expr)) {\n+        error = \"Cannot have sh in non-top level\";\n+        return nullptr;\n     }\n     if (ctx != ParseScriptContext::P2WSH && Func(\"wsh\", expr)) {\n-        auto desc = ParseScript(expr, ParseScriptContext::P2WSH, out);\n+        auto desc = ParseScript(expr, ParseScriptContext::P2WSH, out, error);\n         if (!desc || expr.size()) return nullptr;\n         return MakeUnique<WSHDescriptor>(std::move(desc));\n+    } else if (ctx == ParseScriptContext::P2WSH && Func(\"wsh\", expr)) {\n+        error = \"Cannot have wsh within wsh\";\n+        return nullptr;\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"addr\", expr)) {\n         CTxDestination dest = DecodeDestination(std::string(expr.begin(), expr.end()));\n-        if (!IsValidDestination(dest)) return nullptr;\n+        if (!IsValidDestination(dest)) {\n+            error = \"Address is not valid\";\n+            return nullptr;\n+        }\n         return MakeUnique<AddressDescriptor>(std::move(dest));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"raw\", expr)) {\n         std::string str(expr.begin(), expr.end());\n-        if (!IsHex(str)) return nullptr;\n+        if (!IsHex(str)) {\n+            error = \"Raw script is not hex\";",
      "path": "src/script/descriptor.cpp",
      "position": 248,
      "original_position": 248,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:25:31Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311938803",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311938803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 909,
      "original_line": 909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311939513",
      "pull_request_review_id": 272438281,
      "id": 311939513,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzOTUxMw==",
      "diff_hunk": "@@ -910,23 +996,38 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\n \n } // namespace\n \n-std::unique_ptr<Descriptor> Parse(const std::string& descriptor, FlatSigningProvider& out, bool require_checksum)\n+std::unique_ptr<Descriptor> Parse(const std::string& descriptor, FlatSigningProvider& out, std::string& error, bool require_checksum)\n {\n     Span<const char> sp(descriptor.data(), descriptor.size());\n \n     // Checksum checks\n     auto check_split = Split(sp, '#');\n-    if (check_split.size() > 2) return nullptr; // Multiple '#' symbols\n-    if (check_split.size() == 1 && require_checksum) return nullptr; // Missing checksum\n+    if (check_split.size() > 2) {\n+        error = \"Multiple '#' symbols\";",
      "path": "src/script/descriptor.cpp",
      "position": 276,
      "original_position": 279,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:27:06Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311939513",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311939513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1008,
      "original_line": 1008,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311939883",
      "pull_request_review_id": 272438281,
      "id": 311939883,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTkzOTg4Mw==",
      "diff_hunk": "@@ -910,23 +996,38 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\n \n } // namespace\n \n-std::unique_ptr<Descriptor> Parse(const std::string& descriptor, FlatSigningProvider& out, bool require_checksum)\n+std::unique_ptr<Descriptor> Parse(const std::string& descriptor, FlatSigningProvider& out, std::string& error, bool require_checksum)\n {\n     Span<const char> sp(descriptor.data(), descriptor.size());\n \n     // Checksum checks\n     auto check_split = Split(sp, '#');\n-    if (check_split.size() > 2) return nullptr; // Multiple '#' symbols\n-    if (check_split.size() == 1 && require_checksum) return nullptr; // Missing checksum\n+    if (check_split.size() > 2) {\n+        error = \"Multiple '#' symbols\";\n+        return nullptr;\n+    }\n+    if (check_split.size() == 1 && require_checksum){\n+        error = \"Missing checksum\";\n+        return nullptr;\n+    }\n     if (check_split.size() == 2) {\n-        if (check_split[1].size() != 8) return nullptr; // Unexpected length for checksum\n+        if (check_split[1].size() != 8) {\n+            error = strprintf(\"Expected 8 character checksum, not %u characters\", check_split[1].size());\n+            return nullptr;\n+        }\n         auto checksum = DescriptorChecksum(check_split[0]);\n-        if (checksum.empty()) return nullptr; // Invalid characters in payload\n-        if (!std::equal(checksum.begin(), checksum.end(), check_split[1].begin())) return nullptr; // Checksum mismatch\n+        if (checksum.empty()) {\n+            error = \"Invalid characters in payload\";",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 296,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test.",
      "created_at": "2019-08-08T09:27:53Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311939883",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311939883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1020,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311941468",
      "pull_request_review_id": 272438281,
      "id": 311941468,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTk0MTQ2OA==",
      "diff_hunk": "@@ -552,7 +552,7 @@ def run_test(self):\n                                \"keys\": [key.privkey]},\n                               success=False,\n                               error_code=-5,\n-                              error_message=\"Descriptor is invalid\")\n+                              error_message=\"Descriptor is invalid, Missing checksum\")",
      "path": "test/functional/wallet_importmulti.py",
      "position": null,
      "original_position": 5,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": 311018361,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with @Sjors, is there a reason to not do so? I was going to suggest to drop \"Descriptor is invalid, \" prefix.",
      "created_at": "2019-08-08T09:31:32Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r311941468",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311941468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312215752",
      "pull_request_review_id": 272802708,
      "id": 312215752,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjIxNTc1Mg==",
      "diff_hunk": "@@ -741,95 +768,154 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n }\n \n /** Parse a public key including origin information (if enabled). */\n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\n {\n     auto origin_split = Split(sp, ']');\n-    if (origin_split.size() > 2) return nullptr;\n-    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n-    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    if (origin_split.size() > 2) {\n+        error = \"Multiple ']' characters found for a single pubkey\";\n+        return nullptr;\n+    }\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n+        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        return nullptr;\n+    }\n     auto slash_split = Split(origin_split[0].subspan(1), '/');\n-    if (slash_split[0].size() != 8) return nullptr;\n+    if (slash_split[0].size() != 8) {\n+        error = strprintf(\"Fingerprint is not 4 bytes (%u characters instead of 8 characters)\", slash_split[0].size());\n+        return nullptr;\n+    }\n     std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n-    if (!IsHex(fpr_hex)) return nullptr;\n+    if (!IsHex(fpr_hex)) {\n+        error = strprintf(\"Fingerprint '%s' is not hex\", fpr_hex);\n+        return nullptr;\n+    }\n     auto fpr_bytes = ParseHex(fpr_hex);\n     KeyOriginInfo info;\n     static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n     assert(fpr_bytes.size() == 4);\n     std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n-    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n-    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!ParseKeyPath(slash_split, info.path, error)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out, error);\n     if (!provider) return nullptr;\n     return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n }\n \n /** Parse a script in a particular context. */\n-std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n+std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\n {\n     auto expr = Expr(sp);\n     if (Func(\"pk\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKDescriptor>(std::move(pubkey));\n     }\n     if (Func(\"pkh\", expr)) {\n-        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out);\n+        auto pubkey = ParsePubkey(expr, ctx != ParseScriptContext::P2WSH, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<PKHDescriptor>(std::move(pubkey));\n     }\n     if (ctx == ParseScriptContext::TOP && Func(\"combo\", expr)) {\n-        auto pubkey = ParsePubkey(expr, true, out);\n+        auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {\n+        error = \"Cannot have combo in non-top level\";\n+        return nullptr;\n     }\n     if (Func(\"multi\", expr)) {\n         auto threshold = Expr(expr);\n         uint32_t thres;\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n-        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) return nullptr;\n+        if (!ParseUInt32(std::string(threshold.begin(), threshold.end()), &thres)) {\n+            error = strprintf(\"multi threshold %u out of range\", thres);\n+            return nullptr;\n+        }\n         size_t script_size = 0;\n         while (expr.size()) {\n-            if (!Const(\",\", expr)) return nullptr;\n+            if (!Const(\",\", expr)) {\n+                error = strprintf(\"multi: expected ',', got '%c'\", expr[0]);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 171,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": 311936968,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this check is actually possible to hit due to how `Expr` parses things earlier.",
      "created_at": "2019-08-08T19:55:16Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r312215752",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312215752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 837,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312224081",
      "pull_request_review_id": 272813609,
      "id": 312224081,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjIyNDA4MQ==",
      "diff_hunk": "@@ -13,13 +13,15 @@\n \n namespace {\n \n-void CheckUnparsable(const std::string& prv, const std::string& pub)\n+void CheckUnparsable(const std::string& prv, const std::string& pub, std::string expected_error)",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "0d55f500cb9b77cfc93fcf16a5b8dfd71d1025f0",
      "in_reply_to_id": 311919483,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2019-08-08T20:17:21Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r312224081",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312224081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312224161",
      "pull_request_review_id": 272813720,
      "id": 312224161,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjIyNDE2MQ==",
      "diff_hunk": "@@ -552,7 +552,7 @@ def run_test(self):\n                                \"keys\": [key.privkey]},\n                               success=False,\n                               error_code=-5,\n-                              error_message=\"Descriptor is invalid\")\n+                              error_message=\"Descriptor is invalid, Missing checksum\")",
      "path": "test/functional/wallet_importmulti.py",
      "position": null,
      "original_position": 5,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": 311018361,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've just removed the prefixes.",
      "created_at": "2019-08-08T20:17:33Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r312224161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312224161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313417204",
      "pull_request_review_id": 274309238,
      "id": 313417204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzQxNzIwNA==",
      "diff_hunk": "@@ -710,17 +713,35 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n {\n     auto split = Split(sp, '/');\n     std::string str(split[0].begin(), split[0].end());\n+    if (str.size() == 0) {\n+        error = \"No key provided\";\n+        return nullptr;\n+    }\n     if (split.size() == 1) {\n         if (IsHex(str)) {\n             std::vector<unsigned char> data = ParseHex(str);\n             CPubKey pubkey(data);\n-            if (pubkey.IsFullyValid() && (permit_uncompressed || pubkey.IsCompressed())) return MakeUnique<ConstPubkeyProvider>(pubkey);\n+            if (pubkey.IsFullyValid()) {\n+                if (permit_uncompressed || pubkey.IsCompressed()) {\n+                    return MakeUnique<ConstPubkeyProvider>(pubkey);\n+                } else {\n+                    error = \"Uncompressed keys are not allowed\";\n+                    return nullptr;\n+                }\n+            }\n+            error = strprintf(\"Pubkey '%s' is invalid\", str);\n+            return nullptr;\n         }\n         CKey key = DecodeSecret(str);\n-        if (key.IsValid() && (permit_uncompressed || key.IsCompressed())) {\n-            CPubKey pubkey = key.GetPubKey();\n-            out.keys.emplace(pubkey.GetID(), key);\n-            return MakeUnique<ConstPubkeyProvider>(pubkey);\n+        if (key.IsValid()) {\n+            if (permit_uncompressed || key.IsCompressed()) {\n+                CPubKey pubkey = key.GetPubKey();\n+                out.keys.emplace(pubkey.GetID(), key);\n+                return MakeUnique<ConstPubkeyProvider>(pubkey);\n+            } else {\n+                error = \"Uncompressed keys are not allowed\";",
      "path": "src/script/descriptor.cpp",
      "position": 63,
      "original_position": 47,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "441d29d900c3c752907092ce303292efa92d9b4d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "where would this case be hit previously?",
      "created_at": "2019-08-13T14:08:42Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r313417204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313417204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 746,
      "original_line": 746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313417863",
      "pull_request_review_id": 274309238,
      "id": 313417863,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzQxNzg2Mw==",
      "diff_hunk": "@@ -798,19 +819,22 @@ std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptCon\n         auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {",
      "path": "src/script/descriptor.cpp",
      "position": 154,
      "original_position": 66,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "441d29d900c3c752907092ce303292efa92d9b4d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "where would this case be hit previously?",
      "created_at": "2019-08-13T14:09:59Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r313417863",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313417863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 826,
      "original_line": 826,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313421770",
      "pull_request_review_id": 274309238,
      "id": 313421770,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzQyMTc3MA==",
      "diff_hunk": "@@ -866,6 +908,13 @@ std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptCon\n         auto bytes = ParseHex(str);\n         return MakeUnique<RawDescriptor>(CScript(bytes.begin(), bytes.end()));\n     }\n+    if (ctx == ParseScriptContext::P2SH) {",
      "path": "src/script/descriptor.cpp",
      "position": 254,
      "original_position": 139,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "441d29d900c3c752907092ce303292efa92d9b4d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I'd prefer it also checks for `!Func` explicitly, since there are a number of combinations, and a generic error is preferable to a specific error that's an implementation mistake.",
      "created_at": "2019-08-13T14:16:52Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r313421770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313421770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 915,
      "original_line": 915,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313507591",
      "pull_request_review_id": 274423166,
      "id": 313507591,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzUwNzU5MQ==",
      "diff_hunk": "@@ -710,17 +713,35 @@ std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, boo\n {\n     auto split = Split(sp, '/');\n     std::string str(split[0].begin(), split[0].end());\n+    if (str.size() == 0) {\n+        error = \"No key provided\";\n+        return nullptr;\n+    }\n     if (split.size() == 1) {\n         if (IsHex(str)) {\n             std::vector<unsigned char> data = ParseHex(str);\n             CPubKey pubkey(data);\n-            if (pubkey.IsFullyValid() && (permit_uncompressed || pubkey.IsCompressed())) return MakeUnique<ConstPubkeyProvider>(pubkey);\n+            if (pubkey.IsFullyValid()) {\n+                if (permit_uncompressed || pubkey.IsCompressed()) {\n+                    return MakeUnique<ConstPubkeyProvider>(pubkey);\n+                } else {\n+                    error = \"Uncompressed keys are not allowed\";\n+                    return nullptr;\n+                }\n+            }\n+            error = strprintf(\"Pubkey '%s' is invalid\", str);\n+            return nullptr;\n         }\n         CKey key = DecodeSecret(str);\n-        if (key.IsValid() && (permit_uncompressed || key.IsCompressed())) {\n-            CPubKey pubkey = key.GetPubKey();\n-            out.keys.emplace(pubkey.GetID(), key);\n-            return MakeUnique<ConstPubkeyProvider>(pubkey);\n+        if (key.IsValid()) {\n+            if (permit_uncompressed || key.IsCompressed()) {\n+                CPubKey pubkey = key.GetPubKey();\n+                out.keys.emplace(pubkey.GetID(), key);\n+                return MakeUnique<ConstPubkeyProvider>(pubkey);\n+            } else {\n+                error = \"Uncompressed keys are not allowed\";",
      "path": "src/script/descriptor.cpp",
      "position": 63,
      "original_position": 47,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "441d29d900c3c752907092ce303292efa92d9b4d",
      "in_reply_to_id": 313417204,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would fail below at the extkey decoding stuff.",
      "created_at": "2019-08-13T16:59:33Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r313507591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313507591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 746,
      "original_line": 746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313508036",
      "pull_request_review_id": 274423725,
      "id": 313508036,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzUwODAzNg==",
      "diff_hunk": "@@ -798,19 +819,22 @@ std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptCon\n         auto pubkey = ParsePubkey(expr, true, out, error);\n         if (!pubkey) return nullptr;\n         return MakeUnique<ComboDescriptor>(std::move(pubkey));\n+    } else if (ctx != ParseScriptContext::TOP && Func(\"combo\", expr)) {",
      "path": "src/script/descriptor.cpp",
      "position": 154,
      "original_position": 66,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "441d29d900c3c752907092ce303292efa92d9b4d",
      "in_reply_to_id": 313417863,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would just get to the end of the function and hit `return nullptr`.",
      "created_at": "2019-08-13T17:00:35Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r313508036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/313508036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 826,
      "original_line": 826,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314001161",
      "pull_request_review_id": 275046439,
      "id": 314001161,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDAwMTE2MQ==",
      "diff_hunk": "@@ -866,6 +908,13 @@ std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptCon\n         auto bytes = ParseHex(str);\n         return MakeUnique<RawDescriptor>(CScript(bytes.begin(), bytes.end()));\n     }\n+    if (ctx == ParseScriptContext::P2SH) {",
      "path": "src/script/descriptor.cpp",
      "position": 254,
      "original_position": 139,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "441d29d900c3c752907092ce303292efa92d9b4d",
      "in_reply_to_id": 313421770,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think it can check that there is no function.",
      "created_at": "2019-08-14T17:44:52Z",
      "updated_at": "2019-08-17T00:15:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r314001161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314001161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 915,
      "original_line": 915,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314944345",
      "pull_request_review_id": 276234242,
      "id": 314944345,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk0NDM0NQ==",
      "diff_hunk": "@@ -696,14 +696,17 @@ NODISCARD bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath&\n             hardened = true;\n         }\n         uint32_t p;\n-        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) return false;\n+        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) {\n+            error = strprintf(\"Key path value %u is out of range\", p);",
      "path": "src/script/descriptor.cpp",
      "position": 18,
      "original_position": 15,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": 311014773,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now it's no longer split.",
      "created_at": "2019-08-17T11:35:44Z",
      "updated_at": "2019-08-17T11:36:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r314944345",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314944345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 707,
      "original_line": 707,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314944359",
      "pull_request_review_id": 276234242,
      "id": 314944359,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk0NDM1OQ==",
      "diff_hunk": "@@ -552,7 +552,7 @@ def run_test(self):\n                                \"keys\": [key.privkey]},\n                               success=False,\n                               error_code=-5,\n-                              error_message=\"Descriptor is invalid\")\n+                              error_message=\"Descriptor is invalid, Missing checksum\")",
      "path": "test/functional/wallet_importmulti.py",
      "position": null,
      "original_position": 5,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": 311018361,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "They're back",
      "created_at": "2019-08-17T11:36:24Z",
      "updated_at": "2019-08-17T11:36:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r314944359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314944359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314953543",
      "pull_request_review_id": 276244486,
      "id": 314953543,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk1MzU0Mw==",
      "diff_hunk": "@@ -552,7 +552,7 @@ def run_test(self):\n                                \"keys\": [key.privkey]},\n                               success=False,\n                               error_code=-5,\n-                              error_message=\"Descriptor is invalid\")\n+                              error_message=\"Descriptor is invalid, Missing checksum\")",
      "path": "test/functional/wallet_importmulti.py",
      "position": null,
      "original_position": 5,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": 311018361,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> They're back\r\n\r\nNo??",
      "created_at": "2019-08-17T17:07:49Z",
      "updated_at": "2019-08-17T17:07:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r314953543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314953543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314953552",
      "pull_request_review_id": 276244496,
      "id": 314953552,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk1MzU1Mg==",
      "diff_hunk": "@@ -696,14 +696,17 @@ NODISCARD bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath&\n             hardened = true;\n         }\n         uint32_t p;\n-        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) return false;\n+        if (!ParseUInt32(std::string(elem.begin(), elem.end()), &p) || p > 0x7FFFFFFFUL) {\n+            error = strprintf(\"Key path value %u is out of range\", p);",
      "path": "src/script/descriptor.cpp",
      "position": 18,
      "original_position": 15,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "735c1f04277cae3bbe24440403772b647b1ddab0",
      "in_reply_to_id": 311014773,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Now it's no longer split.\r\n\r\nNo??",
      "created_at": "2019-08-17T17:08:12Z",
      "updated_at": "2019-08-17T17:08:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r314953552",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314953552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 707,
      "original_line": 707,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978153",
      "pull_request_review_id": 276270761,
      "id": 314978153,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3ODE1Mw==",
      "diff_hunk": "@@ -760,7 +781,7 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     }\n     if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out, error);\n     if (origin_split[0].size() < 1 || origin_split[0][0] != '[') {\n-        error = strprintf(\"Key origin expected but not found, got '%s' instead\", std::string(origin_split[0].begin(), origin_split[0].end()));\n+        error = strprintf(\"Key origin start '[ character expected but not found, got '%c' instead\", origin_split[0][0]);",
      "path": "src/script/descriptor.cpp",
      "position": 104,
      "original_position": 58,
      "commit_id": "787c9ec0c383cefb83a95433311a27f9c220dca0",
      "original_commit_id": "625534d7b1417da926f1ced600855ea818d6e01e",
      "in_reply_to_id": null,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "mismatched `'` (also in the corresponding test case)",
      "created_at": "2019-08-18T10:16:02Z",
      "updated_at": "2019-08-18T10:21:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16542#discussion_r314978153",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16542"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 784,
      "original_line": 784,
      "side": "RIGHT"
    }
  ]
}