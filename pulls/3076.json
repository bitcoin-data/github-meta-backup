{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "id": 8996424,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODk5NjQyNA==",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/3076.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/3076.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "number": 3076,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": " Make util phexdigit array reusable",
    "user": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "class template base_uint had its own private lookup table.\nThis is saving 256 bytes per instantiation.\n\nThe result is not spectacular as bitcoin-qt has only shrinked of\nabout 1Kb but it is still valid improvement.\n\nAlso, I have replaced a for loop with a memset() call.\n\nA unit_test has been added to check the change.\n\nSigned-off-by: Olivier Langlois olivier@olivierlanglois.net\n",
    "labels": [],
    "active_lock_reason": "resolved",
    "created_at": "2013-10-10T16:45:32Z",
    "updated_at": "2021-09-08T10:25:36Z",
    "closed_at": "2013-11-04T13:55:37Z",
    "mergeable_state": "unknown",
    "merged_at": "2013-11-04T13:55:37Z",
    "merge_commit_sha": "6dd4752c055639d5ebdccb1b788302505c58f331",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "lano1106:uint256_util",
      "ref": "uint256_util",
      "sha": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "user": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "aa5822f9c3a71818231101b414bd90f5eb40f356",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 34,
    "deletions": 14,
    "changed_files": 5,
    "commits": 1,
    "review_comments": 12,
    "comments": 7
  },
  "events": [
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTAxMDUzNTQ6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 26091009,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDkxMDA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26091009",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-10T20:56:11Z",
      "updated_at": "2013-10-10T20:56:11Z",
      "author_association": "MEMBER",
      "body": "phexdigit is used in bignum.h too, this can share the same definition now\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-26091009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTAxMDUzNTY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 26114705,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTE0NzA1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26114705",
      "actor": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-11T04:56:54Z",
      "updated_at": "2013-10-11T04:56:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "if you like the idea of this pull request, I'll create a v2 that makes bignum use the same array.\n",
      "user": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-26114705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMTAxMDUzNTk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 26672133,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcyMTMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26672133",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-20T12:31:24Z",
      "updated_at": "2013-10-20T12:31:51Z",
      "author_association": "MEMBER",
      "body": "Some further comments then IMO this can be merged\n\nuint256.h:\n\n```\ninline signed char HexDigit(unsigned char c)\nextern const signed char p_util_hexdigit[256];\n```\n- this function and data structure declaration should be moved to `util.h`, because `util.c` is where the implementation is. Any reason you did this differently?\n- the argument can be a normal `char` instead of `signed char`, so the cast is done inside the function instead of on all call sites. Return type should  remain `signed char` as you said.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-26672133",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076"
    },
    {
      "event": "commented",
      "id": 26915390,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTE1Mzkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26915390",
      "actor": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-23T15:34:04Z",
      "updated_at": "2013-10-23T15:34:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Wladimir,\n\nI agree with changing input param type.\n\nHowever, the function cannot be moved in util.h Why? Because this would create a circular dependency.\n\nuint256.h would need to include util.h and util.h already include uint256.h. This is arguable that in that case, the array definition could then be moved into a new cpp file uint256.cpp which do not exists right now. I have decided to not go there but feel free to ask if you feel that this would be important.\n\nAnother option is to create 2 new files just for that:\n\nhexdigit.h/cpp\n",
      "user": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-26915390",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076"
    },
    {
      "event": "commented",
      "id": 27070656,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDcwNjU2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27070656",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-25T07:32:14Z",
      "updated_at": "2013-10-25T07:32:14Z",
      "author_association": "MEMBER",
      "body": "I understand... bitcoin has always been rife with circular dependencies and I wouldn't want to reintroduce one.\nCreating two new files is overkill, most of the core devs don't like to have many small header files (though it would be more modular, it would also be harder to remember where things are, and increase the file-to-file switching needed during development).\n\nACK after squashing into one commit\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-27070656",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTcxZWMwYzdkMDg0YjZiYjE2M2QxNDY2ZWRkODE0Y2Y0ZGNiYzkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "tree": {
        "sha": "cb0708afc624eeb68a0b0b5db0aca19e9cc58984",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb0708afc624eeb68a0b0b5db0aca19e9cc58984"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15b48ab03612952b355cdd411cc541668d147bfb",
          "sha": "15b48ab03612952b355cdd411cc541668d147bfb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/15b48ab03612952b355cdd411cc541668d147bfb"
        }
      ],
      "message": "Make util phexdigit array reusable\n\nclass template base_uint had its own private lookup table.\nThis is saving 256 bytes per instantiation.\n\nThe result is not spectacular as bitcoin-qt has only shrinked of\nabout 1Kb but it is still valid improvement.\n\nAlso, I have replaced a for loop with a memset() call.\n\nMade CBigNum::SetHex() use the new HexDigit() function.\n\nSigned-off-by: Olivier Langlois <olivier@olivierlanglois.net>",
      "committer": {
        "name": "Olivier Langlois",
        "email": "olivier@olivierlanglois.net",
        "date": "2013-10-28T03:04:52Z"
      },
      "author": {
        "name": "Olivier Langlois",
        "email": "olivier@olivierlanglois.net",
        "date": "2013-10-10T16:35:51Z"
      },
      "sha": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93"
    },
    {
      "event": "commented",
      "id": 27187377,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTg3Mzc3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27187377",
      "actor": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-28T03:12:18Z",
      "updated_at": "2013-10-28T03:12:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Wladimir,\n\nthanks for contributing to my git education. It has been my first commit squashing ever :-)\n",
      "user": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-27187377",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076"
    },
    {
      "event": "commented",
      "id": 27187848,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTg3ODQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27187848",
      "actor": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-10-28T03:35:34Z",
      "updated_at": "2013-10-28T03:35:34Z",
      "author_association": "NONE",
      "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f171ec0c7d084b6bb163d1466edd814cf4dcbc93 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "user": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-27187848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076"
    },
    {
      "event": "referenced",
      "id": 73828054,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDczODI4MDU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/73828054",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bac72640ee4fbf32c639901229dcd714defa1baa",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bac72640ee4fbf32c639901229dcd714defa1baa",
      "created_at": "2013-11-04T13:55:37Z"
    },
    {
      "event": "merged",
      "id": 73828055,
      "node_id": "MDExOk1lcmdlZEV2ZW50NzM4MjgwNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/73828055",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bac72640ee4fbf32c639901229dcd714defa1baa",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bac72640ee4fbf32c639901229dcd714defa1baa",
      "created_at": "2013-11-04T13:55:37Z"
    },
    {
      "event": "closed",
      "id": 73828056,
      "node_id": "MDExOkNsb3NlZEV2ZW50NzM4MjgwNTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/73828056",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-11-04T13:55:37Z"
    },
    {
      "event": "referenced",
      "id": 3213219538,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMTMyMTk1Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3213219538",
      "actor": {
        "login": "Bushstar",
        "id": 5293433,
        "node_id": "MDQ6VXNlcjUyOTM0MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5293433?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Bushstar",
        "html_url": "https://github.com/Bushstar",
        "followers_url": "https://api.github.com/users/Bushstar/followers",
        "following_url": "https://api.github.com/users/Bushstar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Bushstar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Bushstar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Bushstar/subscriptions",
        "organizations_url": "https://api.github.com/users/Bushstar/orgs",
        "repos_url": "https://api.github.com/users/Bushstar/repos",
        "events_url": "https://api.github.com/users/Bushstar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Bushstar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c22169d579205de656a0980960d25a29b76986a2",
      "commit_url": "https://api.github.com/repos/Bushstar/omnicore/commits/c22169d579205de656a0980960d25a29b76986a2",
      "created_at": "2020-04-08T09:10:34Z"
    },
    {
      "event": "locked",
      "id": 5271362085,
      "node_id": "LOE_lADOABII584BPa-HzwAAAAE6Mpol",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271362085",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:25:36Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6897600",
      "pull_request_review_id": null,
      "id": 6897600,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTc2MDA=",
      "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 42,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have a small concern about the return type (signed char) that is right shifted by 4 bits in relation to the sign bit.\nUnit test show that it is ok but I am not sure that this is fully portable.\n\nUnless language does an implicit integer promotion, maybe we could help by changing return type to int16 or just int.\n",
      "created_at": "2013-10-10T19:22:03Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6897600",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6897600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900464",
      "pull_request_review_id": null,
      "id": 6900464,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDA0NjQ=",
      "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 42,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, he is returning a _signed_ char from HexDigit, whereas unsigned chars are used in the rest of the logic. I think it's a typo?\n",
      "created_at": "2013-10-10T20:53:50Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6900464",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900625",
      "pull_request_review_id": null,
      "id": 6900625,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDA2MjU=",
      "diff_hunk": "@@ -14,7 +14,12 @@\n \n typedef long long  int64;\n typedef unsigned long long  uint64;\n+extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n \n+inline signed char HexDigit(unsigned char c)\n+{\n+    return p_util_hexdigit[c];",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 8,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This must return 0 when p_util_hexdigit[c] < 0, otherwise the functionality is changed.\n(the hexdigit in util.cpp has -1 for non-hex characters whereas hexdigit in uint256.h and bignum.h has zeros)\n",
      "created_at": "2013-10-10T20:58:28Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6900625",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907871",
      "pull_request_review_id": null,
      "id": 6907871,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDc4NzE=",
      "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 42,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No this is intentional. I have kept the original type from the util.cpp array type. It is signed and -1 as a special value to indicate not an hex char.\n\nLet me rephrase the concern. As soon as the sign bit of an integer is on after doing bit manips, you have a negative number that will turn on more bits to 1 if you store the value into a bigger int type. think about -1.\n\nCan't give a specific example of problem from that but I have the vague impression of having been bitten by that one in the past.\n\nBy having a signed char array, this let you use -1 as a reserved value (0 is valid) and minimize its size. By having the return type bigger (int16 or int) this protect you against having surprises from the sign bit when manipulating the result.\n\nright now it is all theorical as the code is tested and works as expected. just highlighting the risk and propose a simple way to mitigate it.\n",
      "created_at": "2013-10-11T04:50:05Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6907871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907927",
      "pull_request_review_id": null,
      "id": 6907927,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDc5Mjc=",
      "diff_hunk": "@@ -14,7 +14,12 @@\n \n typedef long long  int64;\n typedef unsigned long long  uint64;\n+extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n \n+inline signed char HexDigit(unsigned char c)\n+{\n+    return p_util_hexdigit[c];",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 8,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I prefer how it was done in util.cpp as it allows you to discriminate between the char '0' and an invalid hex char.\nNote that I have modified the uint256.h code in consequence when it search for the end of the number.\n",
      "created_at": "2013-10-11T04:55:33Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6907927",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908893",
      "pull_request_review_id": null,
      "id": 6908893,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDg4OTM=",
      "diff_hunk": "@@ -14,7 +14,12 @@\n \n typedef long long  int64;\n typedef unsigned long long  uint64;\n+extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n \n+inline signed char HexDigit(unsigned char c)\n+{\n+    return p_util_hexdigit[c];",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 8,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, I agree that is generally more useful, but if you intend on keeping it this way, you need to check for the -1 value at the caller site .\n\nIf you return a special error token can't just bitshift and or it into the target value without checking. If you return 0 you can because it's a no-op/ignore. And as SetHex has no way to return parsing errors the only way is to ignore parsing errors.\n",
      "created_at": "2013-10-11T07:01:06Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6908893",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908917",
      "pull_request_review_id": null,
      "id": 6908917,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDg5MTc=",
      "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 42,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, this is far from theoretical. Any invalid hex character will return -1 and thus cause things to go haywire.\nYou need to _either_ check for -1 here or make sure that HexDigit returns 0 in case of an invalid hexchar. See my comment below.\n",
      "created_at": "2013-10-11T07:03:11Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6908917",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908917"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6911941",
      "pull_request_review_id": null,
      "id": 6911941,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTE5NDE=",
      "diff_hunk": "@@ -305,8 +310,7 @@ class base_uint\n \n     void SetHex(const char* psz)\n     {\n-        for (int i = 0; i < WIDTH; i++)\n-            pn[i] = 0;\n+        memset(pn,0,sizeof(pn));",
      "path": "src/uint256.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "An optimizing compiler could just put this away, right? But I guess the same is true for the loop...\n",
      "created_at": "2013-10-11T10:24:46Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6911941",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6911941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 313,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6912533",
      "pull_request_review_id": null,
      "id": 6912533,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTI1MzM=",
      "diff_hunk": "@@ -305,8 +310,7 @@ class base_uint\n \n     void SetHex(const char* psz)\n     {\n-        for (int i = 0; i < WIDTH; i++)\n-            pn[i] = 0;\n+        memset(pn,0,sizeof(pn));",
      "path": "src/uint256.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "An optimizing compiler could remove the zeroing but only if it can prove that the rest of the function still does the same without it. It's not an issue here.\n",
      "created_at": "2013-10-11T11:03:50Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6912533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6912533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 313,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917505",
      "pull_request_review_id": null,
      "id": 6917505,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTc1MDU=",
      "diff_hunk": "@@ -14,7 +14,12 @@\n \n typedef long long  int64;\n typedef unsigned long long  uint64;\n+extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n \n+inline signed char HexDigit(unsigned char c)\n+{\n+    return p_util_hexdigit[c];",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 8,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "laanwj,\n\nI absolutle agree with you and it is done exactly as you say it should.\n\nin SetHex():\n1. while loop to find the end of the hex str by checking for first char that returns -1.\n2. Then when the string is processed backward to convert BE -> LE, there is no need to check again for -1 as it is impossible that a char that previously did not return -1 does otherwise in subsequent calls.\n\nAgree?\n",
      "created_at": "2013-10-11T15:08:21Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6917505",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917883",
      "pull_request_review_id": null,
      "id": 6917883,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTc4ODM=",
      "diff_hunk": "@@ -305,8 +310,7 @@ class base_uint\n \n     void SetHex(const char* psz)\n     {\n-        for (int i = 0; i < WIDTH; i++)\n-            pn[i] = 0;\n+        memset(pn,0,sizeof(pn));",
      "path": "src/uint256.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "lano1106",
        "id": 4829131,
        "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lano1106",
        "html_url": "https://github.com/lano1106",
        "followers_url": "https://api.github.com/users/lano1106/followers",
        "following_url": "https://api.github.com/users/lano1106/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lano1106/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lano1106/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
        "organizations_url": "https://api.github.com/users/lano1106/orgs",
        "repos_url": "https://api.github.com/users/lano1106/repos",
        "events_url": "https://api.github.com/users/lano1106/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lano1106/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Diapolo, you are right. with -O2 the for loop or the memset generates identical code.\n\nIt is then only a matter of taste. The memset has the merit of being more compact.\n\nTell me which way you want the code to be in order to accept the request. I'll do the change\n",
      "created_at": "2013-10-11T15:20:02Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6917883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 313,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6920479",
      "pull_request_review_id": null,
      "id": 6920479,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjA0Nzk=",
      "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 42,
      "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed. So any parse errors will have been caught on first pass. I hadn't noticed that.\n\nIn that case adding an explicit cast of the result to (unsigned char) should be enough to make sure the shift is correct.\n",
      "created_at": "2013-10-11T17:00:06Z",
      "updated_at": "2013-10-28T03:10:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6920479",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6920479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}