{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "id": 6092563,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjA5MjU2Mw==",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/2733.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/2733.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "number": 2733,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Significantly Improve Wallet Load times",
    "user": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Extremely large wallets take a very long time to load.\n\nAfter some testing I found that most of the time was spent in EC_KEY_check_key\n\nThe fix this I have merged two of the checks into using a single CECKey instance, replaced EC_KEY_check_key with a faster operation (thanks to sipa for helping me there), and appended a hash of the private key to \"key\" entries.\n\nOn my system loading one private key took approximately 1500 usec.\n\nCKey::Load reduced this to 900 usec\nreplacing EC_KEY_check_key reduced this to 500 usec\nchecking just the hash reduced this to 40 usec\n",
    "labels": [],
    "active_lock_reason": "resolved",
    "created_at": "2013-06-03T23:57:57Z",
    "updated_at": "2021-09-08T10:22:35Z",
    "closed_at": "2013-07-04T21:19:48Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "cd27dfb67aff0d8198c6c5222e6630bcb3f9e777",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "pstratem:keyfix",
      "ref": "keyfix",
      "sha": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c83d4d2170bf00863bd5c21c6eaea91b00390e72",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 97,
    "deletions": 9,
    "changed_files": 4,
    "commits": 2,
    "review_comments": 15,
    "comments": 4
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWJhNzdiNzdhYzdiMjg5ZGYyNDgxODE3ZWNjZGZlYmE5MzI0NzE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5ba77b77ac7b289df2481817eccdfeba9324718",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5ba77b77ac7b289df2481817eccdfeba9324718",
      "tree": {
        "sha": "83d14c6949e4ba44ce823bdff085a5f3e100e36b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83d14c6949e4ba44ce823bdff085a5f3e100e36b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d661110dae5fe62585ab753ef996f081a11855d",
          "sha": "3d661110dae5fe62585ab753ef996f081a11855d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3d661110dae5fe62585ab753ef996f081a11855d"
        }
      ],
      "message": "improve wallet load time by removing duplicated checks in EC_KEY_check_key and adding a hash for \"key\" entries in wallet.dat",
      "committer": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-06-03T23:35:03Z"
      },
      "author": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-06-03T23:35:03Z"
      },
      "sha": "b5ba77b77ac7b289df2481817eccdfeba9324718"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjEzOWM5NjRlMzJiM2VjNTI3OWVlYTBlNzQ5ZTBmZTRhMzFhMmRk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "tree": {
        "sha": "66dc3332c7293ffdf1c93fe9c6967f307e8f2196",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66dc3332c7293ffdf1c93fe9c6967f307e8f2196"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5ba77b77ac7b289df2481817eccdfeba9324718",
          "sha": "b5ba77b77ac7b289df2481817eccdfeba9324718",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b5ba77b77ac7b289df2481817eccdfeba9324718"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c83d4d2170bf00863bd5c21c6eaea91b00390e72",
          "sha": "c83d4d2170bf00863bd5c21c6eaea91b00390e72",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c83d4d2170bf00863bd5c21c6eaea91b00390e72"
        }
      ],
      "message": "Merge branch 'master' of git://github.com/bitcoin/bitcoin into keyfix",
      "committer": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-06-03T23:37:06Z"
      },
      "author": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-06-03T23:37:06Z"
      },
      "sha": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd"
    },
    {
      "event": "commented",
      "id": 18883041,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODgzMDQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18883041",
      "actor": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-06-04T00:50:22Z",
      "updated_at": "2013-06-04T00:50:22Z",
      "author_association": "NONE",
      "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ab139c964e32b3ec5279eea0e749e0fe4a31a2dd for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "user": {
        "login": "BitcoinPullTester",
        "id": 2110907,
        "node_id": "MDQ6VXNlcjIxMTA5MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BitcoinPullTester",
        "html_url": "https://github.com/BitcoinPullTester",
        "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
        "following_url": "https://api.github.com/users/BitcoinPullTester/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BitcoinPullTester/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BitcoinPullTester/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
        "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
        "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
        "events_url": "https://api.github.com/users/BitcoinPullTester/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#issuecomment-18883041",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkODkwOTI1MTp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkODkwOTI1ODp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 19498612,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDk4NjEy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19498612",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-06-15T15:55:08Z",
      "updated_at": "2013-06-15T15:55:08Z",
      "author_association": "MEMBER",
      "body": "Would you mind if I rewrote this a bit, by simultaneously changing how keys are stored in the wallet file (using a serialized CKey, instead of CPrivKey, and combining it with the new CKeyMeta)?\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#issuecomment-19498612",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733"
    },
    {
      "event": "commented",
      "id": 19502773,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTAyNzcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19502773",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-06-15T20:17:50Z",
      "updated_at": "2013-06-15T20:17:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "That sounds like a good idea.\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#issuecomment-19502773",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733"
    },
    {
      "event": "commented",
      "id": 20493830,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkzODMw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/20493830",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-07-04T21:19:47Z",
      "updated_at": "2013-07-04T21:19:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm closing this pull request.\n\nsipa's suggestion is a better long term solution.\n",
      "user": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#issuecomment-20493830",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733"
    },
    {
      "event": "closed",
      "id": 55309934,
      "node_id": "MDExOkNsb3NlZEV2ZW50NTUzMDk5MzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/55309934",
      "actor": {
        "login": "pstratem",
        "id": 620611,
        "node_id": "MDQ6VXNlcjYyMDYxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pstratem",
        "html_url": "https://github.com/pstratem",
        "followers_url": "https://api.github.com/users/pstratem/followers",
        "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
        "organizations_url": "https://api.github.com/users/pstratem/orgs",
        "repos_url": "https://api.github.com/users/pstratem/repos",
        "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pstratem/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2013-07-04T21:19:48Z"
    },
    {
      "event": "referenced",
      "id": 2255311118,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIyNTUzMTExMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2255311118",
      "actor": {
        "login": "Bushstar",
        "id": 5293433,
        "node_id": "MDQ6VXNlcjUyOTM0MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5293433?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Bushstar",
        "html_url": "https://github.com/Bushstar",
        "followers_url": "https://api.github.com/users/Bushstar/followers",
        "following_url": "https://api.github.com/users/Bushstar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Bushstar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Bushstar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Bushstar/subscriptions",
        "organizations_url": "https://api.github.com/users/Bushstar/orgs",
        "repos_url": "https://api.github.com/users/Bushstar/repos",
        "events_url": "https://api.github.com/users/Bushstar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Bushstar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9eb0ca7040b913cdf55208935c1a00670e527c92",
      "commit_url": "https://api.github.com/repos/Bushstar/omnicore/commits/9eb0ca7040b913cdf55208935c1a00670e527c92",
      "created_at": "2019-04-05T09:46:09Z"
    },
    {
      "event": "locked",
      "id": 5271344179,
      "node_id": "LOE_lADOABII584A5lg2zwAAAAE6MlQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271344179",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:22:35Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4515605",
      "pull_request_review_id": null,
      "id": 4515605,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU2MDU=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like ctx and point are memory leaked in the return true case...\n",
      "created_at": "2013-06-04T04:34:25Z",
      "updated_at": "2013-06-04T04:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4515605",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4515605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4517050",
      "pull_request_review_id": null,
      "id": 4517050,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNTA=",
      "diff_hunk": "@@ -278,14 +283,29 @@ void CWalletDB::ListAccountCreditDebit(const string& strAccount, list<CAccountin\n                 ssValue >> wkey;\n                 pkey = wkey.vchPrivKey;\n             }\n-            if (!key.SetPrivKey(pkey, vchPubKey.IsCompressed()))\n+            \n+            try\n             {\n-                strErr = \"Error reading wallet database: CPrivKey corrupt\";\n-                return false;\n+                ssValue >> hash;\n+            }\n+            catch(...){}\n+            \n+            bool fSkipCheck = false;\n+            \n+            if (hash != 0)\n+            {\n+                if (Hash(pkey.begin(), pkey.end()) != hash)",
      "path": "src/walletdb.cpp",
      "position": 46,
      "original_position": 46,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The hash should be calculated over both private and public key, as the reason for the test is guaranteeing that we have matching keypairs.\n",
      "created_at": "2013-06-04T07:41:05Z",
      "updated_at": "2013-06-04T07:41:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4517050",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4517050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 297,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4521470",
      "pull_request_review_id": null,
      "id": 4521470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0NzA=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "vinniefalco",
        "id": 1503976,
        "node_id": "MDQ6VXNlcjE1MDM5NzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vinniefalco",
        "html_url": "https://github.com/vinniefalco",
        "followers_url": "https://api.github.com/users/vinniefalco/followers",
        "following_url": "https://api.github.com/users/vinniefalco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vinniefalco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vinniefalco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
        "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
        "repos_url": "https://api.github.com/users/vinniefalco/repos",
        "events_url": "https://api.github.com/users/vinniefalco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do I need my glasses or is that a \"goto\" statement?\n",
      "created_at": "2013-06-04T12:53:01Z",
      "updated_at": "2013-06-04T12:53:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4521470",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4521470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522013",
      "pull_request_review_id": null,
      "id": 4522013,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIwMTM=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"goto\" use is just fine.  It is efficient for both the compiler and human eyes.\n",
      "created_at": "2013-06-04T13:25:11Z",
      "updated_at": "2013-06-04T13:25:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522013",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522049",
      "pull_request_review_id": null,
      "id": 4522049,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIwNDk=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "vinniefalco",
        "id": 1503976,
        "node_id": "MDQ6VXNlcjE1MDM5NzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vinniefalco",
        "html_url": "https://github.com/vinniefalco",
        "followers_url": "https://api.github.com/users/vinniefalco/followers",
        "following_url": "https://api.github.com/users/vinniefalco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vinniefalco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vinniefalco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
        "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
        "repos_url": "https://api.github.com/users/vinniefalco/repos",
        "events_url": "https://api.github.com/users/vinniefalco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, goto is not okay.\nhttp://stackoverflow.com/questions/46586/goto-still-considered-harmful\n\nIt's true that there are exceedingly rare cases where a goto is useful but this is not one of them. Especially this case, error handling.\n",
      "created_at": "2013-06-04T13:27:56Z",
      "updated_at": "2013-06-04T13:28:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522049",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522089",
      "pull_request_review_id": null,
      "id": 4522089,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIwODk=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is code that I assume was copied from the OpenSSL sources, which uses such error handling extensively. Without RAII-like features (as it was copied from C), I also know of no less contrived way of dealing with this.\n",
      "created_at": "2013-06-04T13:31:12Z",
      "updated_at": "2013-06-04T13:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522250",
      "pull_request_review_id": null,
      "id": 4522250,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIyNTA=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "vinniefalco",
        "id": 1503976,
        "node_id": "MDQ6VXNlcjE1MDM5NzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vinniefalco",
        "html_url": "https://github.com/vinniefalco",
        "followers_url": "https://api.github.com/users/vinniefalco/followers",
        "following_url": "https://api.github.com/users/vinniefalco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vinniefalco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vinniefalco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
        "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
        "repos_url": "https://api.github.com/users/vinniefalco/repos",
        "events_url": "https://api.github.com/users/vinniefalco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Then roll a quick RAII wrapper (don't add more dependence on boost). Here's one for you http://codepad.org/gr8M2LE6\n\nLook at how easy it was to introduce a memory leak. I know that you guys know better than this!\n",
      "created_at": "2013-06-04T13:39:14Z",
      "updated_at": "2013-06-04T13:39:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522250",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522441",
      "pull_request_review_id": null,
      "id": 4522441,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0NDE=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~90 LOC just to avoid a goto?\n\nI think that speaks for itself :)\n",
      "created_at": "2013-06-04T13:47:37Z",
      "updated_at": "2013-06-04T13:47:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522441",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522566",
      "pull_request_review_id": null,
      "id": 4522566,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1NjY=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "vinniefalco",
        "id": 1503976,
        "node_id": "MDQ6VXNlcjE1MDM5NzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vinniefalco",
        "html_url": "https://github.com/vinniefalco",
        "followers_url": "https://api.github.com/users/vinniefalco/followers",
        "following_url": "https://api.github.com/users/vinniefalco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vinniefalco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vinniefalco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
        "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
        "repos_url": "https://api.github.com/users/vinniefalco/repos",
        "events_url": "https://api.github.com/users/vinniefalco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "90 LOC to have the right tool. Note, you could use boost::auto_ptr or whatever RAII wrapper they have around dynamically created objects. I prefer not to create additional dependencies on boost. That Bitcoin source code is sloppy and breaks numerous \"best practices\" endorsed by luminaries of C++ should not even be up for debate - I know that you guys know better! The attitude needs to change or else it will remain a difficult to maintain mess, becoming progressively harder to implement changes without breaking things and tons of extra work.\n",
      "created_at": "2013-06-04T13:52:48Z",
      "updated_at": "2013-06-04T13:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522566",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523261",
      "pull_request_review_id": null,
      "id": 4523261,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjE=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "NAK that logic\n",
      "created_at": "2013-06-04T14:19:41Z",
      "updated_at": "2013-06-04T14:19:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4523261",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523428",
      "pull_request_review_id": null,
      "id": 4523428,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM0Mjg=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Goto is fine in C code (in many cases the only sane way to do error\nhandling with proper cleanup), but in C++ we can indeed do better with RAII.\nUsing boost would be preferable to rolling our own RAII wrappers.\n",
      "created_at": "2013-06-04T14:24:31Z",
      "updated_at": "2013-06-04T14:24:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4523428",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4681882",
      "pull_request_review_id": null,
      "id": 4681882,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE4ODI=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "ValleZ",
        "id": 905759,
        "node_id": "MDQ6VXNlcjkwNTc1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/905759?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ValleZ",
        "html_url": "https://github.com/ValleZ",
        "followers_url": "https://api.github.com/users/ValleZ/followers",
        "following_url": "https://api.github.com/users/ValleZ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ValleZ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ValleZ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ValleZ/subscriptions",
        "organizations_url": "https://api.github.com/users/ValleZ/orgs",
        "repos_url": "https://api.github.com/users/ValleZ/repos",
        "events_url": "https://api.github.com/users/ValleZ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ValleZ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not a c++ guy, but I believe there are RuntimeExceptions, right? And maybe they allows to pass description of error. It would be much better than to use goto.\n",
      "created_at": "2013-06-13T15:47:09Z",
      "updated_at": "2013-06-13T15:47:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4681882",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4681882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5003860",
      "pull_request_review_id": null,
      "id": 5003860,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4NjA=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "GilesBathgate",
        "id": 444143,
        "node_id": "MDQ6VXNlcjQ0NDE0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/444143?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GilesBathgate",
        "html_url": "https://github.com/GilesBathgate",
        "followers_url": "https://api.github.com/users/GilesBathgate/followers",
        "following_url": "https://api.github.com/users/GilesBathgate/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GilesBathgate/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GilesBathgate/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GilesBathgate/subscriptions",
        "organizations_url": "https://api.github.com/users/GilesBathgate/orgs",
        "repos_url": "https://api.github.com/users/GilesBathgate/repos",
        "events_url": "https://api.github.com/users/GilesBathgate/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GilesBathgate/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rather than creating 90 Lines of RAII wrappers, You could probably just rewrite it like this:\n\n``` c++\nbool SetPrivKeyCleanup(BN_CTX *ctx,EC_POINT *point)\n{\n if (ctx   != NULL)\n  BN_CTX_free(ctx);\n if (point != NULL)\n  EC_POINT_free(point);\n return false;\n}\n```\n\nThen just ammend:\n\n``` c++\n            if (!pkey || !group || !pub_key || !priv_key)\n                return SetPrivKeyCleanup(ctx,point);\n\n            order = BN_new();\n\n            if ((ctx = BN_CTX_new()) == NULL)\n                return SetPrivKeyCleanup(ctx,point);\n\n            if (!EC_GROUP_get_order(group, order, ctx))\n                return SetPrivKeyCleanup(ctx,point);\n\n            // check if generator * priv_key == pub_key \n            if (BN_cmp(priv_key, order) >= 0)\n                return SetPrivKeyCleanup(ctx,point);\n\n            if ((point = EC_POINT_new(group)) == NULL)\n                return SetPrivKeyCleanup(ctx,point);\n\n            if (!EC_POINT_mul(group, point, priv_key, NULL, NULL, ctx))\n                return SetPrivKeyCleanup(ctx,point);\n\n            if (EC_POINT_cmp(group, point, pub_key, ctx) != 0)\n                return SetPrivKeyCleanup(ctx,point);\n\n            return true;\n```\n\nSince I didn't test this there is probably a good reason why it wouldn't work, but you get the basic idea.\n",
      "created_at": "2013-07-03T08:14:04Z",
      "updated_at": "2013-07-03T08:15:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r5003860",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5003860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5004340",
      "pull_request_review_id": null,
      "id": 5004340,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNDA=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I still prefer RAII. Make the compiler do the work of making it leak proof.\nSafer _and_ more convenient.\n",
      "created_at": "2013-07-03T08:51:24Z",
      "updated_at": "2013-07-03T08:51:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r5004340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5004340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5005718",
      "pull_request_review_id": null,
      "id": 5005718,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU3MTg=",
      "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
      "path": "src/key.cpp",
      "position": 43,
      "original_position": 43,
      "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
      "in_reply_to_id": null,
      "user": {
        "login": "GilesBathgate",
        "id": 444143,
        "node_id": "MDQ6VXNlcjQ0NDE0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/444143?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GilesBathgate",
        "html_url": "https://github.com/GilesBathgate",
        "followers_url": "https://api.github.com/users/GilesBathgate/followers",
        "following_url": "https://api.github.com/users/GilesBathgate/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GilesBathgate/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GilesBathgate/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GilesBathgate/subscriptions",
        "organizations_url": "https://api.github.com/users/GilesBathgate/orgs",
        "repos_url": "https://api.github.com/users/GilesBathgate/repos",
        "events_url": "https://api.github.com/users/GilesBathgate/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GilesBathgate/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed making an EC_POINT class that implements EC_POINT_new in the constructor and EC_POINT_free in the destructor, as well as operator overloads for EC_POINT_mul and EC_POINT_cmp, is much more in the spirit of C++. I was really just addressing the comment:\n\n> Do I need my glasses or is that a \"goto\" statement?\n\nIts not really an issue worth making a fuss about really. Perhaps I should have kept quiet.\n",
      "created_at": "2013-07-03T10:17:16Z",
      "updated_at": "2013-07-03T10:17:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r5005718",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5005718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}