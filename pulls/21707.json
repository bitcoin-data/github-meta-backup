{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707",
    "id": 616987388,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE2OTg3Mzg4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21707",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21707.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21707.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21707",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21707/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a732ee353c1922a1f9ca082775884d190893e0e9",
    "number": 21707,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: Extend functional tests for addr relay",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This extends the functional test `p2p_addr_relay.py`.\r\nIt adds test coverage for address relay involving outbound peers, tests for both outgoing and incoming `GETADDR` requests and tests for `-blocksonly` mode.\r\n\r\nThe initial refactors and some of the new tests were taken from Amiti Uttarwar's PR #21528 - they are general test improvements not directly tied to the change proposed there.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2021-04-16T17:07:47Z",
    "updated_at": "2022-08-16T17:20:59Z",
    "closed_at": "2021-04-26T07:17:18Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-04-26T07:17:18Z",
    "merge_commit_sha": "0a0a95b9d6f97738fc48a975f3c2bf66cca854c7",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "mzumsande:202104_test_getaddr",
      "ref": "202104_test_getaddr",
      "sha": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 187673073,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODc2NzMwNzM=",
        "name": "bitcoin",
        "full_name": "mzumsande/bitcoin",
        "owner": {
          "login": "mzumsande",
          "id": 48763452,
          "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
          "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mzumsande",
          "html_url": "https://github.com/mzumsande",
          "followers_url": "https://api.github.com/users/mzumsande/followers",
          "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
          "organizations_url": "https://api.github.com/users/mzumsande/orgs",
          "repos_url": "https://api.github.com/users/mzumsande/repos",
          "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/mzumsande/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/mzumsande/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/mzumsande/bitcoin",
        "archive_url": "https://api.github.com/repos/mzumsande/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/mzumsande/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/mzumsande/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/mzumsande/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/mzumsande/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/mzumsande/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/mzumsande/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/mzumsande/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/mzumsande/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/mzumsande/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/mzumsande/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/mzumsande/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/mzumsande/bitcoin/events",
        "forks_url": "https://api.github.com/repos/mzumsande/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/mzumsande/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/mzumsande/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/mzumsande/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/mzumsande/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/mzumsande/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/mzumsande/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/mzumsande/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/mzumsande/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/mzumsande/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/mzumsande/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/mzumsande/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/mzumsande/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/mzumsande/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/mzumsande/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/mzumsande/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:mzumsande/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/mzumsande/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/mzumsande/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/mzumsande/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/mzumsande/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/mzumsande/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/mzumsande/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/mzumsande/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/mzumsande/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/mzumsande/bitcoin/hooks",
        "svn_url": "https://github.com/mzumsande/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 216760,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T17:01:53Z",
        "created_at": "2019-05-20T16:03:10Z",
        "updated_at": "2023-05-05T12:10:24Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e7776e20ed0ddf41d15b3d2df87a92ea6666226c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 151,
    "deletions": 22,
    "changed_files": 1,
    "commits": 5,
    "review_comments": 22,
    "comments": 2
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 4606090597,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYwNjA5MDU5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4606090597",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-16T17:34:39Z"
    },
    {
      "event": "labeled",
      "id": 4606092442,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2MDYwOTI0NDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4606092442",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-16T17:35:05Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 638858189,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4ODU4MTg5",
      "url": null,
      "actor": null,
      "commit_id": "11c79242d2c2a093d9f06036b8b0ddfc8b1c6000",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#pullrequestreview-638858189",
      "submitted_at": "2021-04-19T13:24:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
    },
    {
      "event": "reviewed",
      "id": 640497083,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwNDk3MDgz",
      "url": null,
      "actor": null,
      "commit_id": "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "thank you for working on this! glad to see this increased test coverage for addr handling. \r\n\r\noverall looks good to me, some small questions / wording suggestions. \r\n\r\nthe commit message for 604128088e says \"[test] Extract setting up addr message into a helper\", but it really extracts _sending_ addr message, with the previous commit extracting the set up. this was my fault, but I just noticed it now 😛 \r\n\r\nRE commit 6eb3024f14 adding coverage for the ignore-first-message-from-outbound-peer: since this is the current behavior, it seems reasonable to add coverage (and thanks for adding the explanation), but just want to mention that I find this bitcoin core behavior super weird and think we should consider changing it. Either bitcoin core should be consistent with itself and propagate those initial self announcements, or it shouldn't self announce at all. From researching the addr behavior of alternative clients for #21528,  I saw that a lot of nodes just do one early self-advertisement, so its unfortunate if bitcoin core nodes are just black-holing that as a side effect of getaddr logic. This is all out of scope of this PR but I'm mentioning since the test coverage highlights the behavior.\r\n\r\ntACK 11c79242d2, reviewed the code & ran tests on every commit. happy to re-ack if you edit based on review. ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#pullrequestreview-640497083",
      "submitted_at": "2021-04-21T02:19:32Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTkxOTQzMzk5NDkyNDkzMTc1N2FhN2VjMjc4YzUwNzQ0ZWRlMzVk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9919433994924931757aa7ec278c50744ede35d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c9919433994924931757aa7ec278c50744ede35d",
      "tree": {
        "sha": "4418434efe30362b90214532754d6733b4008eee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4418434efe30362b90214532754d6733b4008eee"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6c44e999b7d1d9a0de5d678ac8f1679aa271f65",
          "sha": "f6c44e999b7d1d9a0de5d678ac8f1679aa271f65",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f6c44e999b7d1d9a0de5d678ac8f1679aa271f65"
        }
      ],
      "message": "[test] Refactor the addr relay test to prepare for new tests\n\nMoves setting up the addr message into a repeatable function, and breaks up the\nexisting tests into separate functions for legibility.",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:14:16Z"
      },
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-03-29T22:19:37Z"
      },
      "sha": "c9919433994924931757aa7ec278c50744ede35d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmRiZmU2ZmYxODA2ZTUyNDgzOTliMjhhN2ExYTIyZGFiNzI2YzQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
      "tree": {
        "sha": "874ee134e3cdf3b3764792f2640fd16cfebd5cac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/874ee134e3cdf3b3764792f2640fd16cfebd5cac"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9919433994924931757aa7ec278c50744ede35d",
          "sha": "c9919433994924931757aa7ec278c50744ede35d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c9919433994924931757aa7ec278c50744ede35d"
        }
      ],
      "message": "[test] Extract sending an addr message into a helper\n\nAlso reduces mocktime to prevent idle disconnects\nCo-Authored-By: Martin Zumsande <mzumsande@gmail.com>",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:16:39Z"
      },
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-03-30T20:15:30Z"
      },
      "sha": "d2dbfe6ff1806e5248399b28a7a1a22dab726c40"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTg4Yjc3YzE3ZDc4YmY2MDhjYjQxOTc4ZGI0ZDBmNDZlOTFmN2Q4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8188b77c17d78bf608cb41978db4d0f46e91f7d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8188b77c17d78bf608cb41978db4d0f46e91f7d8",
      "tree": {
        "sha": "e66a6727963b4e5cdb056a0e384631aa06e9bf87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e66a6727963b4e5cdb056a0e384631aa06e9bf87"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
          "sha": "d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2dbfe6ff1806e5248399b28a7a1a22dab726c40"
        }
      ],
      "message": "[test] Add tests for getaddr behavior\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:16:39Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-16T14:49:01Z"
      },
      "sha": "8188b77c17d78bf608cb41978db4d0f46e91f7d8"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4627093885,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYyNzA5Mzg4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4627093885",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-21T20:19:26Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjY5NGVhZWQ4Zjg2YTZhZDc5Njg5YmJjYmZkYmVkNGQ3MzMyN2M5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
      "tree": {
        "sha": "82c97c708431f1e1d9b54347d6c1961f41e79bca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82c97c708431f1e1d9b54347d6c1961f41e79bca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8188b77c17d78bf608cb41978db4d0f46e91f7d8",
          "sha": "8188b77c17d78bf608cb41978db4d0f46e91f7d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8188b77c17d78bf608cb41978db4d0f46e91f7d8"
        }
      ],
      "message": "[test] Add address relay tests involving outbound peers\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:34:03Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-16T15:53:15Z"
      },
      "sha": "a6694eaed8f86a6ad79689bbcbfdbed4d73327c9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzMyZWUzNTNjMTkyMmExZjljYTA4Mjc3NTg4NGQxOTA4OTNlMGU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a732ee353c1922a1f9ca082775884d190893e0e9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a732ee353c1922a1f9ca082775884d190893e0e9",
      "tree": {
        "sha": "03ce73163113230e3bcd378ff78fafa319137d2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03ce73163113230e3bcd378ff78fafa319137d2b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
          "sha": "a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9"
        }
      ],
      "message": "[test] Add tests for addr relay in -blocksonly mode\n\nCo-Authored-By: Martin Zumsande <mzumsande@gmail.com>",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:34:10Z"
      },
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-04-15T21:09:40Z"
      },
      "sha": "a732ee353c1922a1f9ca082775884d190893e0e9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4627161895,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYyNzE2MTg5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4627161895",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-21T20:36:07Z"
    },
    {
      "event": "commented",
      "id": 824361280,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDM2MTI4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/824361280",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-21T21:13:08Z",
      "updated_at": "2021-04-21T21:13:08Z",
      "author_association": "MEMBER",
      "body": "@jonatack , @amitiuttarwar Thanks a lot for the reviews! I addressed all comments above.\r\n\r\n> the commit message for [6041280](https://github.com/bitcoin/bitcoin/commit/604128088ebf7ea0ce795c9683e32ee40daac7ed) says \"[test] Extract setting up addr message into a helper\", but it really extracts _sending_ addr message, with the previous commit extracting the set up. this was my fault, but I just noticed it now \r\n\r\nI changed the commit message and also added a note why mocktime is changed in this commit.\r\n \r\n> RE commit [6eb3024](https://github.com/bitcoin/bitcoin/commit/6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba) adding coverage for the ignore-first-message-from-outbound-peer: since this is the current behavior, it seems reasonable to add coverage (and thanks for adding the explanation), but just want to mention that I find this bitcoin core behavior super weird and think we should consider changing it. Either bitcoin core should be consistent with itself and propagate those initial self announcements, or it shouldn't self announce at all. From researching the addr behavior of alternative clients for #21528, I saw that a lot of nodes just do one early self-advertisement, so its unfortunate if bitcoin core nodes are just black-holing that as a side effect of getaddr logic. This is all out of scope of this PR but I'm mentioning since the test coverage highlights the behavior.\r\n\r\n I agree, the `fGetAddr` flag preventing this was initially meant to prevent relaying GETADDR responses - at some time the typical order of messages must have changed, and now it typically affects self-announcements. I discovered this unintended behavior during #19794, which would have removed it. \r\n\r\nI [closed](https://github.com/bitcoin/bitcoin/pull/19794#issuecomment-692916364) that PR and didn't open a follow-up as originally planned because after reading additional BIP155 discussion (especially [this](https://github.com/bitcoin/bips/pull/907#issuecomment-692894687) post by sipa) I realized that even addrs that are part extraordinarily small GETADDR responses <=10 wouldn't get relayed due to  the 10min recency limit anyway (and if they are recent enough, why not relay them?). The [suggestion](https://github.com/bitcoin/bitcoin/pull/19794#issuecomment-691184578) of keeping the flag around and making sure that it would apply to GETADDR responses again didn't really convince me anymore after that. (as opposed to just removing the flag and relying on the content of the addr messages themselves instead of timing)",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#issuecomment-824361280",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21707"
    },
    {
      "event": "mentioned",
      "id": 4627305803,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYyNzMwNTgwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4627305803",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-21T21:13:08Z"
    },
    {
      "event": "subscribed",
      "id": 4627305805,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MjczMDU4MDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4627305805",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-21T21:13:08Z"
    },
    {
      "event": "mentioned",
      "id": 4627305810,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDYyNzMwNTgxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4627305810",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-21T21:13:08Z"
    },
    {
      "event": "subscribed",
      "id": 4627305815,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MjczMDU4MTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4627305815",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-21T21:13:08Z"
    },
    {
      "event": "commented",
      "id": 825068897,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTA2ODg5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825068897",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T18:03:02Z",
      "updated_at": "2021-04-22T18:03:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK a732ee353c, small diff based on code review \r\n\r\n> I agree, the fGetAddr flag preventing this was ... \r\n\r\nthanks for that explanation, I'll take a closer look!",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#issuecomment-825068897",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21707"
    },
    {
      "event": "reviewed",
      "id": 642744089,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQyNzQ0MDg5",
      "url": null,
      "actor": null,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK and reviewed the code (seems good).\r\n\r\ntested it on MacOS 11.1, ran several times on every commit",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#pullrequestreview-642744089",
      "submitted_at": "2021-04-22T22:31:13Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
    },
    {
      "event": "reviewed",
      "id": 644331126,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ0MzMxMTI2",
      "url": null,
      "actor": null,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK a732ee353c1922a1f9ca082775884d190893e0e9 🌊\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nConcept ACK a732ee353c1922a1f9ca082775884d190893e0e9 🌊\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUinXAv/fV9qz2YWTlsh45kR8eeKCPJBEjTUqUAad/RtPpxDGxd43H0EilfP8VzG\r\n7SLZlK5N4uRuL9EaRqxwV7d+ByHiKf+ARdicmPd7gjNg+FDgyDs/hZk5g9XsGWUh\r\nvOrEC3MDHdgWtgYMnHAE9bBLYM/8HnxBy23FaAk4GORmIo1DImKXmh/ABFhftZ62\r\ngslGncJYt0m/QqCE85BspFtbwvR5nRrOlng1GkYKsKpOypH2xr4oZHttWQJSWDIE\r\noK8F6rXBWHX09Yh2uLpZ0reVXl44hKdUeoTzYxIh78zyPzMRFqQ+GWBNH7FvY8B3\r\nYCtDv6/YuHqf+iExqri2Rgm5wVwQu9wBNf1APcoSzxVVIN2lBVMAlxoDlj7Ne3VS\r\nbB4wZauKC4jFUmDGlFwrmX0iY7S4KouFAmM6F2JbW6QDYDIWWaLl4ti+uAtfaLCr\r\nUddKbFtrhb7B5bZM/7o2TBrswflVNFwkTC99IFKAGB5z606NSFYy9dbuGMEFDfZm\r\nJoLhOr8n\r\n=PXgI\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `799645bbc5af6a827e9e28310a9332d8c563094883569c68faf6c2f08baa24c2  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108799645bbc5af6a827e9e28310a9332d8c563094883569c68faf6c2f08baa24c2f010e70493bbc6179623c698e64edb294c5408fff0107001d1d251456a2c1904b608ba7f7b9b08f1200931a796e9adcbea9b117d5d1f332744678dd51b6978badec51b10fd8df12fdf08f10460865a62f00873df76b76200601b0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff0107f91898b4d87fd6f1b3464b81ff11d7b08f120b3486ff955e4a496357984f576ce067c3cedf700440528fe0b0e1be9e98b8b3508f1046086683ef008e90b7d782ab80f0c0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010d55e6c67470bead193da6ef90c51479008f1046086683df00868d0092e0a34f54e0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df010f62d4163383bbf6d2b75e9973783edfe08f1046086683ef0085efea72583cd042e0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#pullrequestreview-644331126",
      "submitted_at": "2021-04-26T07:14:20Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
    },
    {
      "event": "merged",
      "id": 4642869838,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDY0Mjg2OTgzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4642869838",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0a0a95b9d6f97738fc48a975f3c2bf66cca854c7",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a0a95b9d6f97738fc48a975f3c2bf66cca854c7",
      "created_at": "2021-04-26T07:17:18Z"
    },
    {
      "event": "closed",
      "id": 4642869858,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDY0Mjg2OTg1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4642869858",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-26T07:17:18Z"
    },
    {
      "event": "reviewed",
      "id": 644403028,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ0NDAzMDI4",
      "url": null,
      "actor": null,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK a732ee353c1922a1f9ca082775884d190893e0e9\r\n\r\nNice additions. Thank you!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#pullrequestreview-644403028",
      "submitted_at": "2021-04-26T08:35:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
    },
    {
      "event": "referenced",
      "id": 4644863889,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2NDQ4NjM4ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4644863889",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1b9b1750f127c73d33b9f228a7cf62ad30bb58fc",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/1b9b1750f127c73d33b9f228a7cf62ad30bb58fc",
      "created_at": "2021-04-26T13:25:43Z"
    },
    {
      "event": "reviewed",
      "id": 645657256,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ1NjU3MjU2",
      "url": null,
      "actor": null,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#pullrequestreview-645657256",
      "submitted_at": "2021-04-27T09:46:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
    },
    {
      "event": "referenced",
      "id": 5932172252,
      "node_id": "REFE_lADOABII584zQqPYzwAAAAFhlcPc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5932172252",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c8c86030071110678840436c3e9ea9f87cf9d4f8",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/c8c86030071110678840436c3e9ea9f87cf9d4f8",
      "created_at": "2022-01-21T13:35:48Z"
    },
    {
      "event": "referenced",
      "id": 6723196355,
      "node_id": "REFE_lADOABII584zQqPYzwAAAAGQu9XD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6723196355",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "11f8520ec2aceb4d4ca25a8a5ca5ac3048958386",
      "commit_url": "https://api.github.com/repos/ElementsProject/elements/commits/11f8520ec2aceb4d4ca25a8a5ca5ac3048958386",
      "created_at": "2022-06-01T21:22:13Z"
    },
    {
      "event": "locked",
      "id": 7199124647,
      "node_id": "LOE_lADOABII584zQqPYzwAAAAGtGeyn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199124647",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:20:59Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/615841194",
      "pull_request_review_id": 638858189,
      "id": 615841194,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTg0MTE5NA==",
      "diff_hunk": "@@ -82,6 +122,96 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 166,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "11c79242d2c2a093d9f06036b8b0ddfc8b1c6000",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit, here and line 202\r\n```suggestion\r\n        assert full_outbound_peer.getaddr_received\r\n```",
      "created_at": "2021-04-19T13:20:08Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r615841194",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/615841194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/615842564",
      "pull_request_review_id": 638858189,
      "id": 615842564,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTg0MjU2NA==",
      "diff_hunk": "@@ -82,6 +122,96 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = \"{}.{}.1.1\".format(first_octet, second_octet)",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 181,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "11c79242d2c2a093d9f06036b8b0ddfc8b1c6000",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We can now use Python f-strings for interpolation (here and e.g. line 70 above).\r\n```suggestion\r\n            a = f\"{first_octet}.{second_octet}.1.1\"\r\n```",
      "created_at": "2021-04-19T13:21:51Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r615842564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/615842564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617089977",
      "pull_request_review_id": 640497083,
      "id": 617089977,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA4OTk3Nw==",
      "diff_hunk": "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 44,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n\t\tself.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\r\n```",
      "created_at": "2021-04-20T23:04:24Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617089977",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617089977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617091871",
      "pull_request_review_id": 640497083,
      "id": 617091871,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA5MTg3MQ==",
      "diff_hunk": "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 49,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same as previous,\r\n\r\n```suggestion\r\n\t\tself.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\r\n```",
      "created_at": "2021-04-20T23:09:52Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617091871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617091871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617092786",
      "pull_request_review_id": 640497083,
      "id": 617092786,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA5Mjc4Ng==",
      "diff_hunk": "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = \"{}.{}.1.1\".format(first_octet, second_octet)\n+            self.nodes[0].addpeeraddress(a, 8333)",
      "path": "test/functional/p2p_addr_relay.py",
      "position": 181,
      "original_position": 62,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I didn't know about this endpoint, nice :) ",
      "created_at": "2021-04-20T23:12:12Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617092786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617092786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617093266",
      "pull_request_review_id": 640497083,
      "id": 617093266,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA5MzI2Ng==",
      "diff_hunk": "@@ -78,7 +78,7 @@ def setup_addr_msg(self, num):\n     def send_addr_msg(self, source, msg, receivers):\n         source.send_and_ping(msg)\n         # pop m_next_addr_send timer\n-        self.mocktime += 30 * 60",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 4,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this change from 30 min to 5 min makes more sense as part of the 2nd commit, \"[test] Extract setting up addr message into a helper\"",
      "created_at": "2021-04-20T23:13:45Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617093266",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617093266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617095257",
      "pull_request_review_id": 640497083,
      "id": 617095257,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA5NTI1Nw==",
      "diff_hunk": "@@ -122,6 +123,36 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 40,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is this `sync_with_ping()` necessary?  ",
      "created_at": "2021-04-20T23:19:24Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617095257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617095257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617150779",
      "pull_request_review_id": 640497083,
      "id": 617150779,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzE1MDc3OQ==",
      "diff_hunk": "@@ -122,6 +123,36 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 33,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/further/subsequent? later? \r\n\r\nmy brain keeps thinking \"further\" relates to how far the message propagates through network nodes. ",
      "created_at": "2021-04-21T02:07:26Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617150779",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617150779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617850478",
      "pull_request_review_id": 641489170,
      "id": 617850478,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MDQ3OA==",
      "diff_hunk": "@@ -82,6 +122,96 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 166,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "11c79242d2c2a093d9f06036b8b0ddfc8b1c6000",
      "in_reply_to_id": 615841194,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2021-04-21T20:20:44Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617850478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617850478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851426",
      "pull_request_review_id": 641490479,
      "id": 617851426,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MTQyNg==",
      "diff_hunk": "@@ -82,6 +122,96 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = \"{}.{}.1.1\".format(first_octet, second_octet)",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 181,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "11c79242d2c2a093d9f06036b8b0ddfc8b1c6000",
      "in_reply_to_id": 615842564,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TIL, nice. Changed the two occurrences where the line is touched anyway.",
      "created_at": "2021-04-21T20:22:30Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617851426",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851714",
      "pull_request_review_id": 641490869,
      "id": 617851714,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MTcxNA==",
      "diff_hunk": "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 44,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "in_reply_to_id": 617089977,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2021-04-21T20:23:03Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617851714",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851824",
      "pull_request_review_id": 641491025,
      "id": 617851824,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MTgyNA==",
      "diff_hunk": "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 49,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "in_reply_to_id": 617091871,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2021-04-21T20:23:16Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617851824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617851824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853447",
      "pull_request_review_id": 641493158,
      "id": 617853447,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MzQ0Nw==",
      "diff_hunk": "@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message to outbound-full-relay peers')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert(full_outbound_peer.getaddr_received)\n+\n+        self.log.info('Check that we do not send a getaddr message to block-relay-only peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = \"{}.{}.1.1\".format(first_octet, second_octet)\n+            self.nodes[0].addpeeraddress(a, 8333)",
      "path": "test/functional/p2p_addr_relay.py",
      "position": 181,
      "original_position": 62,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6697214ce7e73f17c9c0a0d562e5b40aef10b6a6",
      "in_reply_to_id": 617092786,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, I copied this block from `p2p_getaddr_caching.py` :smile:",
      "created_at": "2021-04-21T20:26:11Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617853447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853696",
      "pull_request_review_id": 641493494,
      "id": 617853696,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MzY5Ng==",
      "diff_hunk": "@@ -78,7 +78,7 @@ def setup_addr_msg(self, num):\n     def send_addr_msg(self, source, msg, receivers):\n         source.send_and_ping(msg)\n         # pop m_next_addr_send timer\n-        self.mocktime += 30 * 60",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 4,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "in_reply_to_id": 617093266,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done, I agree.",
      "created_at": "2021-04-21T20:26:39Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617853696",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853696"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853893",
      "pull_request_review_id": 641493742,
      "id": 617853893,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1Mzg5Mw==",
      "diff_hunk": "@@ -122,6 +123,36 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 33,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "in_reply_to_id": 617150779,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "changed the wording",
      "created_at": "2021-04-21T20:26:57Z",
      "updated_at": "2021-04-21T20:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617853893",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617853893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617859647",
      "pull_request_review_id": 641501203,
      "id": 617859647,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1OTY0Nw==",
      "diff_hunk": "@@ -122,6 +123,36 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that further addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()",
      "path": "test/functional/p2p_addr_relay.py",
      "position": null,
      "original_position": 40,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "6eb3024f142b88ac6cb73ea1ee28b60b7f2590ba",
      "in_reply_to_id": 617095257,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, the sync is done in `send_addr_msg` in the next line. Removed.",
      "created_at": "2021-04-21T20:36:54Z",
      "updated_at": "2021-04-21T20:36:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r617859647",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617859647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/620085210",
      "pull_request_review_id": 644403028,
      "id": 620085210,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDA4NTIxMA==",
      "diff_hunk": "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = f\"{first_octet}.{second_octet}.1.1\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        full_outbound_peer.send_and_ping(msg_getaddr())\n+        block_relay_peer.send_and_ping(msg_getaddr())\n+        inbound_peer.send_and_ping(msg_getaddr())\n+\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        inbound_peer.wait_until(inbound_peer.addr_received)\n+\n+        assert_equal(full_outbound_peer.num_ipv4_received, 0)\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+        assert inbound_peer.num_ipv4_received > 100\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def blocksonly_mode_tests(self):\n+        self.log.info('Test addr relay in -blocksonly mode')\n+        self.restart_node(0, [\"-blocksonly\"])\n+        self.mocktime = int(time.time())\n+\n+        self.log.info('Check that we send getaddr messages')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we relay address messages')\n+        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n+        msg = self.setup_addr_msg(2)\n+        addr_source.send_and_ping(msg)\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        full_outbound_peer.sync_with_ping()",
      "path": "test/functional/p2p_addr_relay.py",
      "position": 213,
      "original_position": 213,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason not to use the `send_addr_msg()` helper here?",
      "created_at": "2021-04-26T08:35:27Z",
      "updated_at": "2021-04-26T08:35:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r620085210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/620085210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": 206,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/620568642",
      "pull_request_review_id": 645018957,
      "id": 620568642,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMDU2ODY0Mg==",
      "diff_hunk": "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = f\"{first_octet}.{second_octet}.1.1\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        full_outbound_peer.send_and_ping(msg_getaddr())\n+        block_relay_peer.send_and_ping(msg_getaddr())\n+        inbound_peer.send_and_ping(msg_getaddr())\n+\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        inbound_peer.wait_until(inbound_peer.addr_received)\n+\n+        assert_equal(full_outbound_peer.num_ipv4_received, 0)\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+        assert inbound_peer.num_ipv4_received > 100\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def blocksonly_mode_tests(self):\n+        self.log.info('Test addr relay in -blocksonly mode')\n+        self.restart_node(0, [\"-blocksonly\"])\n+        self.mocktime = int(time.time())\n+\n+        self.log.info('Check that we send getaddr messages')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we relay address messages')\n+        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n+        msg = self.setup_addr_msg(2)\n+        addr_source.send_and_ping(msg)\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        full_outbound_peer.sync_with_ping()",
      "path": "test/functional/p2p_addr_relay.py",
      "position": 213,
      "original_position": 213,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "in_reply_to_id": 620085210,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I missed this when combining test commits from different branches. \r\n@amitiuttarwar would you like to apply this refactor in  #21528 when you touch the test again?",
      "created_at": "2021-04-26T18:59:51Z",
      "updated_at": "2021-04-26T18:59:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r620568642",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/620568642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": 206,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621048952",
      "pull_request_review_id": 645657256,
      "id": 621048952,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTA0ODk1Mg==",
      "diff_hunk": "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)",
      "path": "test/functional/p2p_addr_relay.py",
      "position": 146,
      "original_position": 146,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This fails:\r\n\r\n* https://cirrus-ci.com/task/4959397244829696?logs=ci#L6318",
      "created_at": "2021-04-27T09:46:35Z",
      "updated_at": "2021-04-27T09:46:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r621048952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621048952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 142,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621078686",
      "pull_request_review_id": 645693787,
      "id": 621078686,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTA3ODY4Ng==",
      "diff_hunk": "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)",
      "path": "test/functional/p2p_addr_relay.py",
      "position": 146,
      "original_position": 146,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "in_reply_to_id": 621048952,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The expected addr message is sent directly after the assert has failed, so it looks like a timing issue:\r\n` node0 2021-04-27T06:55:10.562357Z (mocktime: 2021-04-27T07:10:08Z) [net.cpp:2967] [PushMessage] sending addr (61 bytes) peer=9 ` (https://cirrus-ci.com/task/4959397244829696?logs=ci#L6320)\r\nWith `AVG_ADDRESS_BROADCAST_INTERVAL=30s`, I thought that a mocktime of 5 mins should be plenty to prevent Poisson timer fails - I think it's not that.\r\nPossibly, there needs to be an additional wait after the mocktime to give the node more time to actually send out the addr message?\r\n\r\nI'll look into this more closely later today!",
      "created_at": "2021-04-27T10:28:08Z",
      "updated_at": "2021-04-27T10:28:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r621078686",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621078686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 142,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621110409",
      "pull_request_review_id": 645732146,
      "id": 621110409,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTExMDQwOQ==",
      "diff_hunk": "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)",
      "path": "test/functional/p2p_addr_relay.py",
      "position": 146,
      "original_position": 146,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "in_reply_to_id": 621048952,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed in #21785",
      "created_at": "2021-04-27T11:16:30Z",
      "updated_at": "2021-04-27T11:16:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r621110409",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/621110409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 142,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622778884",
      "pull_request_review_id": 647864153,
      "id": 622778884,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc3ODg4NA==",
      "diff_hunk": "@@ -82,6 +122,95 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = f\"{first_octet}.{second_octet}.1.1\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        full_outbound_peer.send_and_ping(msg_getaddr())\n+        block_relay_peer.send_and_ping(msg_getaddr())\n+        inbound_peer.send_and_ping(msg_getaddr())\n+\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        inbound_peer.wait_until(inbound_peer.addr_received)\n+\n+        assert_equal(full_outbound_peer.num_ipv4_received, 0)\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+        assert inbound_peer.num_ipv4_received > 100\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def blocksonly_mode_tests(self):\n+        self.log.info('Test addr relay in -blocksonly mode')\n+        self.restart_node(0, [\"-blocksonly\"])\n+        self.mocktime = int(time.time())\n+\n+        self.log.info('Check that we send getaddr messages')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we relay address messages')\n+        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n+        msg = self.setup_addr_msg(2)\n+        addr_source.send_and_ping(msg)\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        full_outbound_peer.sync_with_ping()",
      "path": "test/functional/p2p_addr_relay.py",
      "position": 213,
      "original_position": 213,
      "commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "original_commit_id": "a732ee353c1922a1f9ca082775884d190893e0e9",
      "in_reply_to_id": 620085210,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in #21785",
      "created_at": "2021-04-29T06:54:39Z",
      "updated_at": "2021-04-29T06:54:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21707#discussion_r622778884",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622778884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21707"
        }
      },
      "start_line": 206,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    }
  ]
}