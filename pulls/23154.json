{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154",
    "id": 747668956,
    "node_id": "PR_kwDOABII584skIXc",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23154",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/23154.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/23154.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23154",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23154/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/9ab440199d5c888363a42c957433d0e46cd0d2ff",
    "number": 23154,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "doc: add assumeutxo notes",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is part of the [assumeutxo project](https://github.com/bitcoin/bitcoin/projects/11) (parent PR: #15606) \r\n\r\n---\r\n\r\nAdds some notes on assumeutxo design.\r\n\r\nRelated: https://github.com/bitcoin/bitcoin/pull/21526#discussion_r715558994",
    "labels": [
      {
        "id": 148216,
        "node_id": "MDU6TGFiZWwxNDgyMTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
        "name": "Docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "created_at": "2021-10-01T14:25:34Z",
    "updated_at": "2022-11-03T17:17:57Z",
    "closed_at": "2021-11-03T12:03:28Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-11-03T12:03:28Z",
    "merge_commit_sha": "23ae7931be50376fa6bda692c641a3d2538556ee",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jamesob:2021-10-assumeutxo-doc",
      "ref": "2021-10-assumeutxo-doc",
      "sha": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 42077031,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MjA3NzAzMQ==",
        "name": "bitcoin",
        "full_name": "jamesob/bitcoin",
        "owner": {
          "login": "jamesob",
          "id": 73197,
          "node_id": "MDQ6VXNlcjczMTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jamesob",
          "html_url": "https://github.com/jamesob",
          "followers_url": "https://api.github.com/users/jamesob/followers",
          "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
          "organizations_url": "https://api.github.com/users/jamesob/orgs",
          "repos_url": "https://api.github.com/users/jamesob/repos",
          "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jamesob/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jamesob/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jamesob/bitcoin",
        "archive_url": "https://api.github.com/repos/jamesob/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jamesob/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jamesob/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jamesob/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jamesob/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jamesob/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jamesob/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jamesob/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jamesob/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jamesob/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jamesob/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jamesob/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jamesob/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jamesob/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jamesob/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jamesob/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jamesob/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jamesob/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jamesob/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jamesob/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jamesob/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jamesob/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jamesob/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jamesob/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jamesob/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jamesob/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jamesob/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jamesob/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jamesob/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jamesob/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jamesob/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jamesob/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jamesob/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jamesob/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jamesob/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jamesob/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jamesob/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jamesob/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jamesob/bitcoin/hooks",
        "svn_url": "https://github.com/jamesob/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 252891,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T19:20:56Z",
        "created_at": "2015-09-07T22:18:03Z",
        "updated_at": "2023-05-05T06:31:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "42fedb4acd3cfa813059fcc3f96b2a41f78d9074",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 139,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 13,
    "comments": 5
  },
  "events": [
    {
      "event": "labeled",
      "id": 5395126437,
      "node_id": "LE_lADOABII5848Z3q-zwAAAAFBkxil",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5395126437",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-01T15:16:59Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "reviewed",
      "id": 769614599,
      "node_id": "PRR_kwDOABII584t32MH",
      "url": null,
      "actor": null,
      "commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "SGTM overall, when the `assumeutxo` code is already present, I checked that the description is matching the doc.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#pullrequestreview-769614599",
      "submitted_at": "2021-10-03T18:45:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
    },
    {
      "event": "reviewed",
      "id": 770142961,
      "node_id": "PRR_kwDOABII584t53Lx",
      "url": null,
      "actor": null,
      "commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#pullrequestreview-770142961",
      "submitted_at": "2021-10-04T10:54:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlhYjQ0MDE5OWQ1Yzg4ODM2M2E0MmM5NTc0MzNkMGU0NmNkMGQyZmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "tree": {
        "sha": "eea3e5985325ce6b3940dde7264f0e6ee77695f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eea3e5985325ce6b3940dde7264f0e6ee77695f1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree eea3e5985325ce6b3940dde7264f0e6ee77695f1\nparent 9013f23b0a6e0e450c4603f9d0f050ff10d552f6\nauthor James O'Beirne <james.obeirne@pm.me> 1633098207 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1633380000 -0400\n\ndoc: add assumeutxo notes\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFbZqIACgkQepNdrbLE\nTwW+DA/+KcFEUy7U5V48VMo5r/3D19c1hrWcMfyFIlhqYM6ayRvRqx+X1a/Xo91M\nbxsXp3L6UzFVVHehCGWjEABk0a38ITUhulIs0Jx3vbDViIPalfaIDkjKjsjc/bMh\noephI8C+zcFis+7VFUSXkDr8NMx8mkBrsd83P3dONxNojDvwbPf9FVTqqkDtDQ+G\nZaYudbg2qvWtZZ8QnNtBtNg+OVTmfRouIa6F2kcyL5qOS+hSbM26/kjJPzm6xhw0\nz+Lk/asicSgdzppBD8bbxJkUFd6JmTzwfxLt6VQKWEhfNtOfXkovnD2NarUUDjqQ\nLM4SdOhi7u4TkIRL6clE14Ipz+7B9tpCjv/rYUBK7uenAH3QXyNcmobnnTFAwY/P\nZlRZgsBIV1O1B56Y2CnRRluu7O9Xjs+VLolatc+EXWlVMHnvjew3+3VBgEadFmY0\nRPshLTQmsDaggHJ7T64DDfLM8TZ6Z8fjReCEGFqbP+zrxFZjuyS/qolHLskbO3R6\nS798vOFd7LGIrD6FwHkMZnCAl47A53MGaa47BrDHa5TwWJqSWGhdi9Hi5by7kDns\nVgCH0MivQWHE9A1gA30LIK7Sgn58Qm/KgZVfEgqRsNq+2RXsEWzB3SwkvZrFP3Mp\nSXAhd93/WZi7+IGJ9DbT5jKaWE+w36vEg8LhV0UBrvG1dr97VhQ=\n=Yils\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9013f23b0a6e0e450c4603f9d0f050ff10d552f6",
          "sha": "9013f23b0a6e0e450c4603f9d0f050ff10d552f6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9013f23b0a6e0e450c4603f9d0f050ff10d552f6"
        }
      ],
      "message": "doc: add assumeutxo notes",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-04T20:40:00Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-01T14:23:27Z"
      },
      "sha": "9ab440199d5c888363a42c957433d0e46cd0d2ff"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5406563535,
      "node_id": "HRFPE_lADOABII5848Z3q-zwAAAAFCQZzP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5406563535",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-04T20:40:15Z"
    },
    {
      "event": "added_to_project",
      "id": 5440328211,
      "node_id": "ATPE_lADOABII5848Z3q-zwAAAAFERNIT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5440328211",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-11T02:15:57Z",
      "project_card": {
        "id": 70520882,
        "url": "https://api.github.com/projects/columns/cards/70520882",
        "project_id": 2564674,
        "project_url": "https://api.github.com/projects/2564674",
        "column_name": "In progress"
      }
    },
    {
      "event": "commented",
      "id": 951379201,
      "node_id": "IC_kwDOABII5844tOUB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/951379201",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-25T22:22:59Z",
      "updated_at": "2021-10-25T22:22:59Z",
      "author_association": "MEMBER",
      "body": "ACK 9ab4401",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#issuecomment-951379201",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23154"
    },
    {
      "event": "commented",
      "id": 951663883,
      "node_id": "IC_kwDOABII5844uT0L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/951663883",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T08:03:31Z",
      "updated_at": "2021-10-26T08:03:31Z",
      "author_association": "MEMBER",
      "body": "ACK 9ab4401",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#issuecomment-951663883",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23154"
    },
    {
      "event": "commented",
      "id": 954764775,
      "node_id": "IC_kwDOABII58446I3n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954764775",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-29T13:55:28Z",
      "updated_at": "2021-10-29T13:55:28Z",
      "author_association": "MEMBER",
      "body": "Anything left to do here? Seems like a pretty low-risk merge given it's just doc.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#issuecomment-954764775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23154"
    },
    {
      "event": "commented",
      "id": 954792624,
      "node_id": "IC_kwDOABII58446Pqw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954792624",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-29T14:31:11Z",
      "updated_at": "2021-10-29T14:44:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 9ab440199d5c888363a42c957433d0e46cd0d2ff\r\n\r\nAgree this is a low risk merge. To be really finicky maybe a new standalone doc for any project should only be merged once the project is completed (fully merged) and functional. But it can obviously be easily be reverted if for some reason the project wasn't completed/fully merged.\r\n\r\nedit: I do think docs and future GUI changes will be important for AssumeUTXO on completion (assuming it is fully merged). How it should be used, what is encouraged, what warnings are displayed to the user etc. We do (imo) want to do everything that we can to ensure the user does full IBD from genesis in the background rather than skipping it and is aware of the risks of sending or receiving funds before full IBD has completed. But that discussion is for later.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#issuecomment-954792624",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23154"
    },
    {
      "event": "reviewed",
      "id": 795884772,
      "node_id": "PRR_kwDOABII584vcDzk",
      "url": null,
      "actor": null,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 9ab440199d5c888363a42c957433d0e46cd0d2ff\r\n\r\nI think this will be very helpful for reviewers new to the project.\r\n\r\nSuggested improvements can be left for future changes as this doc will need to be kept up to date as the project progresses anyway.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#pullrequestreview-795884772",
      "submitted_at": "2021-11-02T21:49:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
    },
    {
      "event": "reviewed",
      "id": 796183974,
      "node_id": "PRR_kwDOABII584vdM2m",
      "url": null,
      "actor": null,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "While this might be fine to merge, I disagree with the sentiment that this should be merged because it \"is just documentation and nothing can go wrong\". Anything can go wrong if the documentation is wrong. For example, loss of privacy with the wrong settings or loss of funds with the wrong wallet handling documentation.\r\n\r\nAlso, I am wondering about the audience of this doc.\r\n\r\nOur current `doc/` folder is a mess, mixing dev docs with user docs, without any structure. Surely having documentation is important, but I suspect that unstructured documentation is potentially worse than no documentation at all.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#pullrequestreview-796183974",
      "submitted_at": "2021-11-03T07:46:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
    },
    {
      "event": "merged",
      "id": 5561409769,
      "node_id": "ME_lADOABII5848Z3q-zwAAAAFLfGDp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5561409769",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "23ae7931be50376fa6bda692c641a3d2538556ee",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23ae7931be50376fa6bda692c641a3d2538556ee",
      "created_at": "2021-11-03T12:03:28Z"
    },
    {
      "event": "closed",
      "id": 5561409814,
      "node_id": "CE_lADOABII5848Z3q-zwAAAAFLfGEW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5561409814",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T12:03:28Z"
    },
    {
      "event": "commented",
      "id": 958974768,
      "node_id": "IC_kwDOABII5845KMsw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958974768",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T12:15:39Z",
      "updated_at": "2021-11-03T12:15:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think @MarcoFalke and @ryanofsky have some good points above on docs generally so added their comments to #20132. This doc and the docs generally are definitely a work in progress with lots of scope for improvement. I agree with this being merged though as James' first attempt at a doc for Assume UTXO as there are no inaccuracies or clear sources of confusion (as far as I can tell) and follow up PRs can improve it (e.g. target it directly at developers or users).",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#issuecomment-958974768",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23154"
    },
    {
      "event": "mentioned",
      "id": 5561477706,
      "node_id": "MEE_lADOABII5848Z3q-zwAAAAFLfWpK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5561477706",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T12:15:39Z"
    },
    {
      "event": "subscribed",
      "id": 5561477711,
      "node_id": "SE_lADOABII5848Z3q-zwAAAAFLfWpP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5561477711",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T12:15:40Z"
    },
    {
      "event": "mentioned",
      "id": 5561477720,
      "node_id": "MEE_lADOABII5848Z3q-zwAAAAFLfWpY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5561477720",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T12:15:40Z"
    },
    {
      "event": "subscribed",
      "id": 5561477729,
      "node_id": "SE_lADOABII5848Z3q-zwAAAAFLfWph",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5561477729",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T12:15:40Z"
    },
    {
      "event": "referenced",
      "id": 5562104958,
      "node_id": "REFE_lADOABII5848Z3q-zwAAAAFLhvx-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5562104958",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e1ca4d1318494ab2585b4461cdd252660a76b596",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/e1ca4d1318494ab2585b4461cdd252660a76b596",
      "created_at": "2021-11-03T13:53:59Z"
    },
    {
      "event": "moved_columns_in_project",
      "id": 5588526005,
      "node_id": "MCIPE_lADOABII5848Z3q-zwAAAAFNGiO1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5588526005",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-09T09:56:38Z",
      "project_card": {
        "id": 70520882,
        "url": "https://api.github.com/projects/columns/cards/70520882",
        "project_id": 2564674,
        "project_url": "https://api.github.com/projects/2564674",
        "column_name": "Done",
        "previous_column_name": "In progress"
      }
    },
    {
      "event": "locked",
      "id": 7734405744,
      "node_id": "LOE_lADOABII5848Z3q-zwAAAAHNAapw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7734405744",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T17:17:56Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720868458",
      "pull_request_review_id": 769614599,
      "id": 720868458,
      "node_id": "PRRC_kwDOABII584q95Rq",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a\n+  chainstate running asynchronously in the background. We also use this flag to control\n+  which index entries are added to setBlockIndexCandidates during LoadBlockIndex().\n+\n+- Indexing implementations via BaseIndex can no longer assume that indexation happens\n+  sequentially, since background validation chainstates can submit BlockConnected\n+  events out of order with the active chain.\n+\n+- The concept of UTXO snapshots is treated as an implementation detail that lives\n+  behind the ChainstateManager interface. The external presentation of the changes\n+  required to facilitate the use of UTXO snapshots is the understanding that there are\n+  now certain regions of the chain that can be temporarily assumed to be valid (using\n+  the nStatus flag mentioned above). In certain cases, e.g. wallet rescanning, this is\n+  very similar to dealing with a pruned chain.\n+\n+  Logic outside ChainstateManager should try not to know about snapshots, instead\n+  preferring to work in terms of more general states like assumed-valid.\n+\n+\n+## Chainstate phases\n+\n+Chainstate within the system goes through a number of phases when UTXO snapshots are\n+used, as managed by `ChainstateManager`. At various points there can be multiple\n+`CChainState` objects in existence to facilitate both maintaining the network tip and\n+performing historical validation of the assumed-valid chain.\n+\n+It is worth noting that though there are multiple separate chainstates, those\n+chainstates share use of a common block index (i.e. they hold the same `BlockManager`\n+reference).\n+\n+The subheadings below outline the phases and the corresponding changes to chainstate\n+data.\n+\n+### \"Normal\" operation via initial block download\n+\n+`ChainstateManager` manages a single CChainState object, for which\n+`m_snapshot_blockhash` is null. This chainstate is (maybe obviously)\n+considered active. This is the \"traditional\" mode of operation for bitcoind.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 1 |\n+| active chainstate | ibd |\n+\n+### User loads a UTXO snapshot via `loadtxoutset` RPC\n+\n+`ChainstateManager` initializes a new chainstate to load the snapshot contents into.",
      "path": "doc/assumeutxo.md",
      "position": null,
      "original_position": 67,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"see `ActivateSnapshot()`\" ?",
      "created_at": "2021-10-03T18:32:05Z",
      "updated_at": "2021-10-03T18:45:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r720868458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720868458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720868523",
      "pull_request_review_id": 769614599,
      "id": 720868523,
      "node_id": "PRRC_kwDOABII584q95Sr",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a\n+  chainstate running asynchronously in the background. We also use this flag to control\n+  which index entries are added to setBlockIndexCandidates during LoadBlockIndex().\n+\n+- Indexing implementations via BaseIndex can no longer assume that indexation happens\n+  sequentially, since background validation chainstates can submit BlockConnected\n+  events out of order with the active chain.\n+\n+- The concept of UTXO snapshots is treated as an implementation detail that lives\n+  behind the ChainstateManager interface. The external presentation of the changes\n+  required to facilitate the use of UTXO snapshots is the understanding that there are\n+  now certain regions of the chain that can be temporarily assumed to be valid (using\n+  the nStatus flag mentioned above). In certain cases, e.g. wallet rescanning, this is\n+  very similar to dealing with a pruned chain.\n+\n+  Logic outside ChainstateManager should try not to know about snapshots, instead\n+  preferring to work in terms of more general states like assumed-valid.\n+\n+\n+## Chainstate phases\n+\n+Chainstate within the system goes through a number of phases when UTXO snapshots are\n+used, as managed by `ChainstateManager`. At various points there can be multiple\n+`CChainState` objects in existence to facilitate both maintaining the network tip and\n+performing historical validation of the assumed-valid chain.\n+\n+It is worth noting that though there are multiple separate chainstates, those\n+chainstates share use of a common block index (i.e. they hold the same `BlockManager`\n+reference).\n+\n+The subheadings below outline the phases and the corresponding changes to chainstate\n+data.\n+\n+### \"Normal\" operation via initial block download\n+\n+`ChainstateManager` manages a single CChainState object, for which\n+`m_snapshot_blockhash` is null. This chainstate is (maybe obviously)\n+considered active. This is the \"traditional\" mode of operation for bitcoind.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 1 |\n+| active chainstate | ibd |\n+\n+### User loads a UTXO snapshot via `loadtxoutset` RPC\n+\n+`ChainstateManager` initializes a new chainstate to load the snapshot contents into.\n+During snapshot load and validation (see `PopulateAndValidateSnapshot()`), the\n+new chainstate is not considered active and\n+the original chainstate remains in use as active.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | ibd |\n+\n+Once the snapshot chainstate is loaded and validated, it is promoted to active\n+chainstate and a sync to tip begins. A new chainstate directory is created in the\n+datadir for the snapshot chainstate called\n+`chainstate_[SHA256 blockhash of snapshot base block]`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | snapshot |\n+\n+The snapshot begins to sync to tip from its base block, technically in parallel with\n+the original chainstate, but it is given priority during block download and is\n+allocated most of the cache as our chief consideration is getting to network tip.",
      "path": "doc/assumeutxo.md",
      "position": null,
      "original_position": 89,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"see `MaybeRebalanceCaches`\" ? ?",
      "created_at": "2021-10-03T18:32:43Z",
      "updated_at": "2021-10-03T18:45:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r720868523",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720868523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720869222",
      "pull_request_review_id": 769614599,
      "id": 720869222,
      "node_id": "PRRC_kwDOABII584q95dm",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a\n+  chainstate running asynchronously in the background. We also use this flag to control\n+  which index entries are added to setBlockIndexCandidates during LoadBlockIndex().\n+\n+- Indexing implementations via BaseIndex can no longer assume that indexation happens\n+  sequentially, since background validation chainstates can submit BlockConnected\n+  events out of order with the active chain.\n+\n+- The concept of UTXO snapshots is treated as an implementation detail that lives\n+  behind the ChainstateManager interface. The external presentation of the changes\n+  required to facilitate the use of UTXO snapshots is the understanding that there are\n+  now certain regions of the chain that can be temporarily assumed to be valid (using\n+  the nStatus flag mentioned above). In certain cases, e.g. wallet rescanning, this is\n+  very similar to dealing with a pruned chain.\n+\n+  Logic outside ChainstateManager should try not to know about snapshots, instead\n+  preferring to work in terms of more general states like assumed-valid.\n+\n+\n+## Chainstate phases\n+\n+Chainstate within the system goes through a number of phases when UTXO snapshots are\n+used, as managed by `ChainstateManager`. At various points there can be multiple\n+`CChainState` objects in existence to facilitate both maintaining the network tip and\n+performing historical validation of the assumed-valid chain.\n+\n+It is worth noting that though there are multiple separate chainstates, those\n+chainstates share use of a common block index (i.e. they hold the same `BlockManager`\n+reference).\n+\n+The subheadings below outline the phases and the corresponding changes to chainstate\n+data.\n+\n+### \"Normal\" operation via initial block download\n+\n+`ChainstateManager` manages a single CChainState object, for which\n+`m_snapshot_blockhash` is null. This chainstate is (maybe obviously)\n+considered active. This is the \"traditional\" mode of operation for bitcoind.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 1 |\n+| active chainstate | ibd |\n+\n+### User loads a UTXO snapshot via `loadtxoutset` RPC\n+\n+`ChainstateManager` initializes a new chainstate to load the snapshot contents into.\n+During snapshot load and validation (see `PopulateAndValidateSnapshot()`), the\n+new chainstate is not considered active and\n+the original chainstate remains in use as active.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | ibd |\n+\n+Once the snapshot chainstate is loaded and validated, it is promoted to active\n+chainstate and a sync to tip begins. A new chainstate directory is created in the\n+datadir for the snapshot chainstate called\n+`chainstate_[SHA256 blockhash of snapshot base block]`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | snapshot |\n+\n+The snapshot begins to sync to tip from its base block, technically in parallel with\n+the original chainstate, but it is given priority during block download and is\n+allocated most of the cache as our chief consideration is getting to network tip.\n+\n+**Failure consideration:** if shutdown happens at any point during this phase, both\n+chainstates will be detected during the next init and the process will resume.\n+\n+### Snapshot chainstate hits network tip\n+\n+Once the snapshot chainstate leaves IBD, caches are rebalanced\n+(via `MaybeRebalanceCaches()` in `ActivateBestChain()`) and more cache is given\n+to the background chainstate, which is responsible for doing full validation of the\n+assumed-valid parts of the chain.\n+\n+**Note:** at this point, ValidationInterface callbacks will be coming in from both\n+chainstates. Considerations here must be made for indexing, which may no longer be happening\n+sequentially.",
      "path": "doc/assumeutxo.md",
      "position": 104,
      "original_position": 103,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do you have a Big Comment(tm) warning users of ValidationInterface callbacks of this subtlety ? Grepping quickly `src/validationinterface.h`, I don't see a mention of background/snapshot chainstate. Could be nice to be added at somepoint.",
      "created_at": "2021-10-03T18:38:09Z",
      "updated_at": "2021-10-03T18:45:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r720869222",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720869222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720869709",
      "pull_request_review_id": 769614599,
      "id": 720869709,
      "node_id": "PRRC_kwDOABII584q95lN",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a\n+  chainstate running asynchronously in the background. We also use this flag to control\n+  which index entries are added to setBlockIndexCandidates during LoadBlockIndex().\n+\n+- Indexing implementations via BaseIndex can no longer assume that indexation happens\n+  sequentially, since background validation chainstates can submit BlockConnected\n+  events out of order with the active chain.\n+\n+- The concept of UTXO snapshots is treated as an implementation detail that lives\n+  behind the ChainstateManager interface. The external presentation of the changes\n+  required to facilitate the use of UTXO snapshots is the understanding that there are\n+  now certain regions of the chain that can be temporarily assumed to be valid (using\n+  the nStatus flag mentioned above). In certain cases, e.g. wallet rescanning, this is\n+  very similar to dealing with a pruned chain.\n+\n+  Logic outside ChainstateManager should try not to know about snapshots, instead\n+  preferring to work in terms of more general states like assumed-valid.\n+\n+\n+## Chainstate phases\n+\n+Chainstate within the system goes through a number of phases when UTXO snapshots are\n+used, as managed by `ChainstateManager`. At various points there can be multiple\n+`CChainState` objects in existence to facilitate both maintaining the network tip and\n+performing historical validation of the assumed-valid chain.\n+\n+It is worth noting that though there are multiple separate chainstates, those\n+chainstates share use of a common block index (i.e. they hold the same `BlockManager`\n+reference).\n+\n+The subheadings below outline the phases and the corresponding changes to chainstate\n+data.\n+\n+### \"Normal\" operation via initial block download\n+\n+`ChainstateManager` manages a single CChainState object, for which\n+`m_snapshot_blockhash` is null. This chainstate is (maybe obviously)\n+considered active. This is the \"traditional\" mode of operation for bitcoind.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 1 |\n+| active chainstate | ibd |\n+\n+### User loads a UTXO snapshot via `loadtxoutset` RPC\n+\n+`ChainstateManager` initializes a new chainstate to load the snapshot contents into.\n+During snapshot load and validation (see `PopulateAndValidateSnapshot()`), the\n+new chainstate is not considered active and\n+the original chainstate remains in use as active.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | ibd |\n+\n+Once the snapshot chainstate is loaded and validated, it is promoted to active\n+chainstate and a sync to tip begins. A new chainstate directory is created in the\n+datadir for the snapshot chainstate called\n+`chainstate_[SHA256 blockhash of snapshot base block]`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | snapshot |\n+\n+The snapshot begins to sync to tip from its base block, technically in parallel with\n+the original chainstate, but it is given priority during block download and is\n+allocated most of the cache as our chief consideration is getting to network tip.\n+\n+**Failure consideration:** if shutdown happens at any point during this phase, both\n+chainstates will be detected during the next init and the process will resume.\n+\n+### Snapshot chainstate hits network tip\n+\n+Once the snapshot chainstate leaves IBD, caches are rebalanced\n+(via `MaybeRebalanceCaches()` in `ActivateBestChain()`) and more cache is given\n+to the background chainstate, which is responsible for doing full validation of the\n+assumed-valid parts of the chain.\n+\n+**Note:** at this point, ValidationInterface callbacks will be coming in from both\n+chainstates. Considerations here must be made for indexing, which may no longer be happening\n+sequentially.\n+\n+### Background chainstate hits snapshot base block\n+\n+Once the tip of the background chainstate hits the base block of the snapshot\n+chainstate, we stop use of the background chainstate (by setting `m_stop_use` in",
      "path": "doc/assumeutxo.md",
      "position": null,
      "original_position": 108,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `m_stop_use` isn't yet landed. Maybe add a \"//XXX:\" pointing to the downstream branch where it's present ? Like docs isn't matching yet the code.",
      "created_at": "2021-10-03T18:41:34Z",
      "updated_at": "2021-10-03T18:45:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r720869709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720869709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720869990",
      "pull_request_review_id": 769614599,
      "id": 720869990,
      "node_id": "PRRC_kwDOABII584q95pm",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a\n+  chainstate running asynchronously in the background. We also use this flag to control\n+  which index entries are added to setBlockIndexCandidates during LoadBlockIndex().\n+\n+- Indexing implementations via BaseIndex can no longer assume that indexation happens\n+  sequentially, since background validation chainstates can submit BlockConnected\n+  events out of order with the active chain.\n+\n+- The concept of UTXO snapshots is treated as an implementation detail that lives\n+  behind the ChainstateManager interface. The external presentation of the changes\n+  required to facilitate the use of UTXO snapshots is the understanding that there are\n+  now certain regions of the chain that can be temporarily assumed to be valid (using\n+  the nStatus flag mentioned above). In certain cases, e.g. wallet rescanning, this is\n+  very similar to dealing with a pruned chain.\n+\n+  Logic outside ChainstateManager should try not to know about snapshots, instead\n+  preferring to work in terms of more general states like assumed-valid.\n+\n+\n+## Chainstate phases\n+\n+Chainstate within the system goes through a number of phases when UTXO snapshots are\n+used, as managed by `ChainstateManager`. At various points there can be multiple\n+`CChainState` objects in existence to facilitate both maintaining the network tip and\n+performing historical validation of the assumed-valid chain.\n+\n+It is worth noting that though there are multiple separate chainstates, those\n+chainstates share use of a common block index (i.e. they hold the same `BlockManager`\n+reference).\n+\n+The subheadings below outline the phases and the corresponding changes to chainstate\n+data.\n+\n+### \"Normal\" operation via initial block download\n+\n+`ChainstateManager` manages a single CChainState object, for which\n+`m_snapshot_blockhash` is null. This chainstate is (maybe obviously)\n+considered active. This is the \"traditional\" mode of operation for bitcoind.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 1 |\n+| active chainstate | ibd |\n+\n+### User loads a UTXO snapshot via `loadtxoutset` RPC\n+\n+`ChainstateManager` initializes a new chainstate to load the snapshot contents into.\n+During snapshot load and validation (see `PopulateAndValidateSnapshot()`), the\n+new chainstate is not considered active and\n+the original chainstate remains in use as active.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | ibd |\n+\n+Once the snapshot chainstate is loaded and validated, it is promoted to active\n+chainstate and a sync to tip begins. A new chainstate directory is created in the\n+datadir for the snapshot chainstate called\n+`chainstate_[SHA256 blockhash of snapshot base block]`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | snapshot |\n+\n+The snapshot begins to sync to tip from its base block, technically in parallel with\n+the original chainstate, but it is given priority during block download and is\n+allocated most of the cache as our chief consideration is getting to network tip.\n+\n+**Failure consideration:** if shutdown happens at any point during this phase, both\n+chainstates will be detected during the next init and the process will resume.\n+\n+### Snapshot chainstate hits network tip\n+\n+Once the snapshot chainstate leaves IBD, caches are rebalanced\n+(via `MaybeRebalanceCaches()` in `ActivateBestChain()`) and more cache is given\n+to the background chainstate, which is responsible for doing full validation of the\n+assumed-valid parts of the chain.\n+\n+**Note:** at this point, ValidationInterface callbacks will be coming in from both\n+chainstates. Considerations here must be made for indexing, which may no longer be happening\n+sequentially.\n+\n+### Background chainstate hits snapshot base block\n+\n+Once the tip of the background chainstate hits the base block of the snapshot\n+chainstate, we stop use of the background chainstate (by setting `m_stop_use` in\n+`CompleteSnapshotValidation()`, which is checked in `ActivateBestChain()`). We hash the\n+background chainstate's UTXO set contents and ensure it matches the compiled\n+value in `CMainParams::m_assumeutxo_data`.\n+\n+The background chainstate data lingers on disk until shutdown, when in\n+`ChainstateManager::Reset()`, the background chainstate is cleaned up with\n+`ValidatedSnapshotShutdownCleanup()`, which renames the `chainstate_[hash]` datadir as\n+`chainstate`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 (ibd has `m_stop_use=true`) |\n+| active chainstate | snapshot |\n+\n+**Failure consideration:** if bitcoind unexpectedly halts after `m_stop_use` is set on\n+the background chainstate but before `CompleteSnapshotValidation()` can finish, the\n+need to complete snapshot validation will be detected on subsequent init by\n+`ChainstateManager::CheckForUncleanShutdown()`.\n+\n+### Bitcoind restarts sometime after snapshot validation has completed\n+\n+When the bitcoind initializes again, what began as the snapshot chainstate is now\n+indistinguishable from a chainstate that has been built from the traditional IBD\n+process, and will be initialized as such.",
      "path": "doc/assumeutxo.md",
      "position": 133,
      "original_position": 132,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From a user, observing the chainstate from RPC calls, do you have any difference with the above \"Normal\" operation\" at that stage or they're fully similar ?",
      "created_at": "2021-10-03T18:44:35Z",
      "updated_at": "2021-10-03T18:45:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r720869990",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720869990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721252232",
      "pull_request_review_id": 770142961,
      "id": 721252232,
      "node_id": "PRRC_kwDOABII584q_W-I",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a\n+  chainstate running asynchronously in the background. We also use this flag to control\n+  which index entries are added to setBlockIndexCandidates during LoadBlockIndex().\n+\n+- Indexing implementations via BaseIndex can no longer assume that indexation happens\n+  sequentially, since background validation chainstates can submit BlockConnected\n+  events out of order with the active chain.\n+\n+- The concept of UTXO snapshots is treated as an implementation detail that lives\n+  behind the ChainstateManager interface. The external presentation of the changes\n+  required to facilitate the use of UTXO snapshots is the understanding that there are\n+  now certain regions of the chain that can be temporarily assumed to be valid (using\n+  the nStatus flag mentioned above). In certain cases, e.g. wallet rescanning, this is\n+  very similar to dealing with a pruned chain.\n+\n+  Logic outside ChainstateManager should try not to know about snapshots, instead\n+  preferring to work in terms of more general states like assumed-valid.\n+\n+\n+## Chainstate phases\n+\n+Chainstate within the system goes through a number of phases when UTXO snapshots are\n+used, as managed by `ChainstateManager`. At various points there can be multiple\n+`CChainState` objects in existence to facilitate both maintaining the network tip and\n+performing historical validation of the assumed-valid chain.\n+\n+It is worth noting that though there are multiple separate chainstates, those\n+chainstates share use of a common block index (i.e. they hold the same `BlockManager`\n+reference).\n+\n+The subheadings below outline the phases and the corresponding changes to chainstate\n+data.\n+\n+### \"Normal\" operation via initial block download\n+\n+`ChainstateManager` manages a single CChainState object, for which\n+`m_snapshot_blockhash` is null. This chainstate is (maybe obviously)\n+considered active. This is the \"traditional\" mode of operation for bitcoind.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 1 |\n+| active chainstate | ibd |\n+\n+### User loads a UTXO snapshot via `loadtxoutset` RPC\n+\n+`ChainstateManager` initializes a new chainstate to load the snapshot contents into.\n+During snapshot load and validation (see `PopulateAndValidateSnapshot()`), the\n+new chainstate is not considered active and\n+the original chainstate remains in use as active.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | ibd |\n+\n+Once the snapshot chainstate is loaded and validated, it is promoted to active\n+chainstate and a sync to tip begins. A new chainstate directory is created in the\n+datadir for the snapshot chainstate called\n+`chainstate_[SHA256 blockhash of snapshot base block]`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | snapshot |\n+\n+The snapshot begins to sync to tip from its base block, technically in parallel with\n+the original chainstate, but it is given priority during block download and is\n+allocated most of the cache as our chief consideration is getting to network tip.\n+\n+**Failure consideration:** if shutdown happens at any point during this phase, both\n+chainstates will be detected during the next init and the process will resume.\n+\n+### Snapshot chainstate hits network tip\n+\n+Once the snapshot chainstate leaves IBD, caches are rebalanced\n+(via `MaybeRebalanceCaches()` in `ActivateBestChain()`) and more cache is given\n+to the background chainstate, which is responsible for doing full validation of the\n+assumed-valid parts of the chain.\n+\n+**Note:** at this point, ValidationInterface callbacks will be coming in from both\n+chainstates. Considerations here must be made for indexing, which may no longer be happening\n+sequentially.\n+\n+### Background chainstate hits snapshot base block",
      "path": "doc/assumeutxo.md",
      "position": 106,
      "original_position": 105,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps you could call this ibd chainstate, and not background? Or anything not background, because at some point background also refers to the snapshot as well",
      "created_at": "2021-10-04T10:54:40Z",
      "updated_at": "2021-10-04T10:54:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r721252232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721252232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721432465",
      "pull_request_review_id": 770389939,
      "id": 721432465,
      "node_id": "PRRC_kwDOABII584rAC-R",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a\n+  chainstate running asynchronously in the background. We also use this flag to control\n+  which index entries are added to setBlockIndexCandidates during LoadBlockIndex().\n+\n+- Indexing implementations via BaseIndex can no longer assume that indexation happens\n+  sequentially, since background validation chainstates can submit BlockConnected\n+  events out of order with the active chain.\n+\n+- The concept of UTXO snapshots is treated as an implementation detail that lives\n+  behind the ChainstateManager interface. The external presentation of the changes\n+  required to facilitate the use of UTXO snapshots is the understanding that there are\n+  now certain regions of the chain that can be temporarily assumed to be valid (using\n+  the nStatus flag mentioned above). In certain cases, e.g. wallet rescanning, this is\n+  very similar to dealing with a pruned chain.\n+\n+  Logic outside ChainstateManager should try not to know about snapshots, instead\n+  preferring to work in terms of more general states like assumed-valid.\n+\n+\n+## Chainstate phases\n+\n+Chainstate within the system goes through a number of phases when UTXO snapshots are\n+used, as managed by `ChainstateManager`. At various points there can be multiple\n+`CChainState` objects in existence to facilitate both maintaining the network tip and\n+performing historical validation of the assumed-valid chain.\n+\n+It is worth noting that though there are multiple separate chainstates, those\n+chainstates share use of a common block index (i.e. they hold the same `BlockManager`\n+reference).\n+\n+The subheadings below outline the phases and the corresponding changes to chainstate\n+data.\n+\n+### \"Normal\" operation via initial block download\n+\n+`ChainstateManager` manages a single CChainState object, for which\n+`m_snapshot_blockhash` is null. This chainstate is (maybe obviously)\n+considered active. This is the \"traditional\" mode of operation for bitcoind.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 1 |\n+| active chainstate | ibd |\n+\n+### User loads a UTXO snapshot via `loadtxoutset` RPC\n+\n+`ChainstateManager` initializes a new chainstate to load the snapshot contents into.\n+During snapshot load and validation (see `PopulateAndValidateSnapshot()`), the\n+new chainstate is not considered active and\n+the original chainstate remains in use as active.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | ibd |\n+\n+Once the snapshot chainstate is loaded and validated, it is promoted to active\n+chainstate and a sync to tip begins. A new chainstate directory is created in the\n+datadir for the snapshot chainstate called\n+`chainstate_[SHA256 blockhash of snapshot base block]`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | snapshot |\n+\n+The snapshot begins to sync to tip from its base block, technically in parallel with\n+the original chainstate, but it is given priority during block download and is\n+allocated most of the cache as our chief consideration is getting to network tip.\n+\n+**Failure consideration:** if shutdown happens at any point during this phase, both\n+chainstates will be detected during the next init and the process will resume.\n+\n+### Snapshot chainstate hits network tip\n+\n+Once the snapshot chainstate leaves IBD, caches are rebalanced\n+(via `MaybeRebalanceCaches()` in `ActivateBestChain()`) and more cache is given\n+to the background chainstate, which is responsible for doing full validation of the\n+assumed-valid parts of the chain.\n+\n+**Note:** at this point, ValidationInterface callbacks will be coming in from both\n+chainstates. Considerations here must be made for indexing, which may no longer be happening\n+sequentially.\n+\n+### Background chainstate hits snapshot base block",
      "path": "doc/assumeutxo.md",
      "position": 106,
      "original_position": 105,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "in_reply_to_id": 721252232,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I had been calling it IBD chainstate, but eventually standardized on background chainstate to cut down on jargon (see https://github.com/bitcoin/bitcoin/pull/15606#pullrequestreview-692965905). ",
      "created_at": "2021-10-04T14:40:24Z",
      "updated_at": "2021-10-04T14:40:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r721432465",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721432465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721701221",
      "pull_request_review_id": 770751212,
      "id": 721701221,
      "node_id": "PRRC_kwDOABII584rBEll",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a\n+  chainstate running asynchronously in the background. We also use this flag to control\n+  which index entries are added to setBlockIndexCandidates during LoadBlockIndex().\n+\n+- Indexing implementations via BaseIndex can no longer assume that indexation happens\n+  sequentially, since background validation chainstates can submit BlockConnected\n+  events out of order with the active chain.\n+\n+- The concept of UTXO snapshots is treated as an implementation detail that lives\n+  behind the ChainstateManager interface. The external presentation of the changes\n+  required to facilitate the use of UTXO snapshots is the understanding that there are\n+  now certain regions of the chain that can be temporarily assumed to be valid (using\n+  the nStatus flag mentioned above). In certain cases, e.g. wallet rescanning, this is\n+  very similar to dealing with a pruned chain.\n+\n+  Logic outside ChainstateManager should try not to know about snapshots, instead\n+  preferring to work in terms of more general states like assumed-valid.\n+\n+\n+## Chainstate phases\n+\n+Chainstate within the system goes through a number of phases when UTXO snapshots are\n+used, as managed by `ChainstateManager`. At various points there can be multiple\n+`CChainState` objects in existence to facilitate both maintaining the network tip and\n+performing historical validation of the assumed-valid chain.\n+\n+It is worth noting that though there are multiple separate chainstates, those\n+chainstates share use of a common block index (i.e. they hold the same `BlockManager`\n+reference).\n+\n+The subheadings below outline the phases and the corresponding changes to chainstate\n+data.\n+\n+### \"Normal\" operation via initial block download\n+\n+`ChainstateManager` manages a single CChainState object, for which\n+`m_snapshot_blockhash` is null. This chainstate is (maybe obviously)\n+considered active. This is the \"traditional\" mode of operation for bitcoind.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 1 |\n+| active chainstate | ibd |\n+\n+### User loads a UTXO snapshot via `loadtxoutset` RPC\n+\n+`ChainstateManager` initializes a new chainstate to load the snapshot contents into.\n+During snapshot load and validation (see `PopulateAndValidateSnapshot()`), the\n+new chainstate is not considered active and\n+the original chainstate remains in use as active.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | ibd |\n+\n+Once the snapshot chainstate is loaded and validated, it is promoted to active\n+chainstate and a sync to tip begins. A new chainstate directory is created in the\n+datadir for the snapshot chainstate called\n+`chainstate_[SHA256 blockhash of snapshot base block]`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | snapshot |\n+\n+The snapshot begins to sync to tip from its base block, technically in parallel with\n+the original chainstate, but it is given priority during block download and is\n+allocated most of the cache as our chief consideration is getting to network tip.\n+\n+**Failure consideration:** if shutdown happens at any point during this phase, both\n+chainstates will be detected during the next init and the process will resume.\n+\n+### Snapshot chainstate hits network tip\n+\n+Once the snapshot chainstate leaves IBD, caches are rebalanced\n+(via `MaybeRebalanceCaches()` in `ActivateBestChain()`) and more cache is given\n+to the background chainstate, which is responsible for doing full validation of the\n+assumed-valid parts of the chain.\n+\n+**Note:** at this point, ValidationInterface callbacks will be coming in from both\n+chainstates. Considerations here must be made for indexing, which may no longer be happening\n+sequentially.\n+\n+### Background chainstate hits snapshot base block\n+\n+Once the tip of the background chainstate hits the base block of the snapshot\n+chainstate, we stop use of the background chainstate (by setting `m_stop_use` in\n+`CompleteSnapshotValidation()`, which is checked in `ActivateBestChain()`). We hash the\n+background chainstate's UTXO set contents and ensure it matches the compiled\n+value in `CMainParams::m_assumeutxo_data`.\n+\n+The background chainstate data lingers on disk until shutdown, when in\n+`ChainstateManager::Reset()`, the background chainstate is cleaned up with\n+`ValidatedSnapshotShutdownCleanup()`, which renames the `chainstate_[hash]` datadir as\n+`chainstate`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 (ibd has `m_stop_use=true`) |\n+| active chainstate | snapshot |\n+\n+**Failure consideration:** if bitcoind unexpectedly halts after `m_stop_use` is set on\n+the background chainstate but before `CompleteSnapshotValidation()` can finish, the\n+need to complete snapshot validation will be detected on subsequent init by\n+`ChainstateManager::CheckForUncleanShutdown()`.\n+\n+### Bitcoind restarts sometime after snapshot validation has completed\n+\n+When the bitcoind initializes again, what began as the snapshot chainstate is now\n+indistinguishable from a chainstate that has been built from the traditional IBD\n+process, and will be initialized as such.",
      "path": "doc/assumeutxo.md",
      "position": 133,
      "original_position": 132,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "in_reply_to_id": 720869990,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At the stage they're fully similar, but we could probably leave behind some indication that a snapshot was used if that's preferable for some reason. But at the moment I don't think there are any artifacts in the block index that could be used to indicate this.",
      "created_at": "2021-10-04T20:39:42Z",
      "updated_at": "2021-10-04T20:39:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r721701221",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721701221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721710261",
      "pull_request_review_id": 770762939,
      "id": 721710261,
      "node_id": "PRRC_kwDOABII584rBGy1",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a\n+  chainstate running asynchronously in the background. We also use this flag to control\n+  which index entries are added to setBlockIndexCandidates during LoadBlockIndex().\n+\n+- Indexing implementations via BaseIndex can no longer assume that indexation happens\n+  sequentially, since background validation chainstates can submit BlockConnected\n+  events out of order with the active chain.\n+\n+- The concept of UTXO snapshots is treated as an implementation detail that lives\n+  behind the ChainstateManager interface. The external presentation of the changes\n+  required to facilitate the use of UTXO snapshots is the understanding that there are\n+  now certain regions of the chain that can be temporarily assumed to be valid (using\n+  the nStatus flag mentioned above). In certain cases, e.g. wallet rescanning, this is\n+  very similar to dealing with a pruned chain.\n+\n+  Logic outside ChainstateManager should try not to know about snapshots, instead\n+  preferring to work in terms of more general states like assumed-valid.\n+\n+\n+## Chainstate phases\n+\n+Chainstate within the system goes through a number of phases when UTXO snapshots are\n+used, as managed by `ChainstateManager`. At various points there can be multiple\n+`CChainState` objects in existence to facilitate both maintaining the network tip and\n+performing historical validation of the assumed-valid chain.\n+\n+It is worth noting that though there are multiple separate chainstates, those\n+chainstates share use of a common block index (i.e. they hold the same `BlockManager`\n+reference).\n+\n+The subheadings below outline the phases and the corresponding changes to chainstate\n+data.\n+\n+### \"Normal\" operation via initial block download\n+\n+`ChainstateManager` manages a single CChainState object, for which\n+`m_snapshot_blockhash` is null. This chainstate is (maybe obviously)\n+considered active. This is the \"traditional\" mode of operation for bitcoind.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 1 |\n+| active chainstate | ibd |\n+\n+### User loads a UTXO snapshot via `loadtxoutset` RPC\n+\n+`ChainstateManager` initializes a new chainstate to load the snapshot contents into.\n+During snapshot load and validation (see `PopulateAndValidateSnapshot()`), the\n+new chainstate is not considered active and\n+the original chainstate remains in use as active.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | ibd |\n+\n+Once the snapshot chainstate is loaded and validated, it is promoted to active\n+chainstate and a sync to tip begins. A new chainstate directory is created in the\n+datadir for the snapshot chainstate called\n+`chainstate_[SHA256 blockhash of snapshot base block]`.\n+\n+|    |    |\n+| ---------- | ----------- |\n+| number of chainstates | 2 |\n+| active chainstate | snapshot |\n+\n+The snapshot begins to sync to tip from its base block, technically in parallel with\n+the original chainstate, but it is given priority during block download and is\n+allocated most of the cache as our chief consideration is getting to network tip.\n+\n+**Failure consideration:** if shutdown happens at any point during this phase, both\n+chainstates will be detected during the next init and the process will resume.\n+\n+### Snapshot chainstate hits network tip\n+\n+Once the snapshot chainstate leaves IBD, caches are rebalanced\n+(via `MaybeRebalanceCaches()` in `ActivateBestChain()`) and more cache is given\n+to the background chainstate, which is responsible for doing full validation of the\n+assumed-valid parts of the chain.\n+\n+**Note:** at this point, ValidationInterface callbacks will be coming in from both\n+chainstates. Considerations here must be made for indexing, which may no longer be happening\n+sequentially.",
      "path": "doc/assumeutxo.md",
      "position": 104,
      "original_position": 103,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "4c29459b44f70d264466dd5e23aa456d9c1b62c8",
      "in_reply_to_id": 720869222,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point - I'll verify that I'm making a note somewhere in comments about this.",
      "created_at": "2021-10-04T20:54:00Z",
      "updated_at": "2021-10-04T20:54:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r721710261",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/721710261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741439020",
      "pull_request_review_id": 795884772,
      "id": 741439020,
      "node_id": "PRRC_kwDOABII584sMXYs",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.",
      "path": "doc/assumeutxo.md",
      "position": 8,
      "original_position": 8,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be good to tell the reader for what it is of use: \r\n\"[...]may be of use to create or validate historic snapshots.\"",
      "created_at": "2021-11-02T20:28:09Z",
      "updated_at": "2021-11-02T21:49:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r741439020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741439020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741440102",
      "pull_request_review_id": 795884772,
      "id": 741440102,
      "node_id": "PRRC_kwDOABII584sMXpm",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block\n+  index entries that are required to be assumed-valid by a chainstate created\n+  from a UTXO snapshot. This flag is mostly used as a way to modify certain\n+  CheckBlockIndex() logic to account for index entries that are pending validation by a",
      "path": "doc/assumeutxo.md",
      "position": 21,
      "original_position": 21,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would like some backticks at least for the functions: `CheckBlockIndex()` and `LoadBlockIndex()` below.",
      "created_at": "2021-11-02T20:29:51Z",
      "updated_at": "2021-11-02T21:49:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r741440102",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741440102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741673855",
      "pull_request_review_id": 796183974,
      "id": 741673855,
      "node_id": "PRRC_kwDOABII584sNQt_",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block",
      "path": "doc/assumeutxo.md",
      "position": 18,
      "original_position": 18,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am wondering who is the audience of this document?\r\n\r\nIf it is a developer, it might be better to put the documentation in the source code. Otherwise it will be hard for developers to find it and it will more easily get out of date.\r\n\r\nIf the target audience is a user, I am wondering why internal implementation details are mentioned and why they are relevant to the user.\r\n\r\nIf the target audience is a reviewer of your pull request, I am wondering why this needs a doc at all in the source tree. Wouldn't a pull request description or so be a better place?",
      "created_at": "2021-11-03T07:41:19Z",
      "updated_at": "2021-11-03T07:46:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r741673855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741673855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741855503",
      "pull_request_review_id": 796424913,
      "id": 741855503,
      "node_id": "PRRC_kwDOABII584sN9EP",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+# assumeutxo\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance with a very similar security model to assumevalid.\n+\n+The RPC commands `dumptxoutset` and `loadtxoutset` are used to respectively generate\n+and load UTXO snapshots. The utility script `./contrib/devtools/utxo_snapshot.sh` may\n+be of use.\n+\n+## General background\n+\n+- [assumeutxo proposal](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal)\n+- [Github issue](https://github.com/bitcoin/bitcoin/issues/15605)\n+- [draft PR](https://github.com/bitcoin/bitcoin/pull/15606)\n+\n+## Design notes\n+\n+- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block",
      "path": "doc/assumeutxo.md",
      "position": 18,
      "original_position": 18,
      "commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "original_commit_id": "9ab440199d5c888363a42c957433d0e46cd0d2ff",
      "in_reply_to_id": 741673855,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/23154#discussion_r741673855\r\n\r\n> I am wondering who is the audience of this document? [...]\r\n\r\nI think the concerns here go a little beyond scope of this PR. Some of the files in the doc/ folder are clearly targeted at developers and not helpful to users like https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md. Some files like https://github.com/bitcoin/bitcoin/blob/master/doc/JSON-RPC-interface.md and the release notes are mostly useful for end users, and definitely intended to be read by them. I think ideally someone would go through the doc folder, keeping the files that are intended to be read by users but moving the other ones that are intended for developers/testers/contributors somewhere else like `doc/devel`,`doc/internal`, `doc/contrib`, `doc/design`.\r\n\r\nThis document is a basically a design document (other examples: [golang](https://go.googlesource.com/proposal/+/master/design), [chromium](https://www.chromium.org/developers/design-documents)) intended to by read by developers. It should be useful not just to people reviewing the PR, but also anybody going forward who want to understand how this feature which touches different parts of the source code is implemented and what some of design considerations are.\r\n\r\nAt the top of this file, there is a small amount of information that could be useful to users, but it is brief and basically just linking to RPCs and a script. If bitcoin had a user manual like [many other projects](https://www.gnu.org/manual/manual.en.html) do, this section could be copied there. But bitcoin doesn't have a user manual so, 🤷\r\n\r\n> If it is a developer, it might be better to put the documentation in the source code. Otherwise it will be hard for developers to find it and it will more easily get out of date.\r\n\r\nI think this could be addressed by organizing the doc directory a little better and linking to the document from the source code so it is easier to find.\r\n\r\n> If the target audience is a user, I am wondering why internal implementation details are mentioned and why they are relevant to the user.\r\n\r\nUsers are not target audience here, AFAICT.\r\n\r\n> If the target audience is a reviewer of your pull request, I am wondering why this needs a doc at all in the source tree. Wouldn't a pull request description or so be a better place?\r\n\r\nI think this is a false dichotomy. If I am reviewing a pull request that includes end-user release notes, those release notes are usually more helpful to me for understanding behavior of the PR than any of the weedsy implementation details in the PR description or other parts of the diff.\r\n\r\nPR descriptions do tend to be better places than design documents for certain information, like describing details or drawbacks of previous code, but design documents are useful _both_ for current developers reviewing changes, and for future developers want to understand how a feature works. It is not an either/or.",
      "created_at": "2021-11-03T11:42:05Z",
      "updated_at": "2021-11-03T11:42:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23154#discussion_r741855503",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741855503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23154"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    }
  ]
}