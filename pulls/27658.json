{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27658",
    "id": 1350368449,
    "node_id": "PR_kwDOABII585QfPzB",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27658",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27658.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27658.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27658",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27658/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27658/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27658/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d2cac68810b2f347b6412ac36e215fabf859ba5b",
    "number": 27658,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "test: Drop `deadlock:libdb` TSan suppression",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not able to reproduce the TSan's \"lock-order-inversion (potential deadlock)\" warning for `libdb` for `24.x`, `25.x` and master branches neither in CI nor in different local environments (Ubuntu, Fedora).\r\n\r\nIf Tsan complains again, we can obtain a call stack from TSan, and this change can be easily reverted back.\r\n\r\nNoticed while reviewing https://github.com/bitcoin/bitcoin/pull/27556.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-05-15T08:45:16Z",
    "updated_at": "2023-05-15T12:29:25Z",
    "closed_at": "2023-05-15T12:13:50Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "6e780e209c352051ce751ae3c3ebd1be1ce4b8f4",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "hebasto:230515-deadlock",
      "ref": "230515-deadlock",
      "sha": "d2cac68810b2f347b6412ac36e215fabf859ba5b",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143212778,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMyMTI3Nzg=",
        "name": "bitcoin",
        "full_name": "hebasto/bitcoin",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hebasto/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/bitcoin",
        "archive_url": "https://api.github.com/repos/hebasto/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hebasto/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hebasto/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hebasto/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hebasto/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hebasto/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hebasto/bitcoin/hooks",
        "svn_url": "https://github.com/hebasto/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 13,
        "watchers_count": 13,
        "size": 248693,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [
          "bitcoin-core"
        ],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:20:02Z",
        "created_at": "2018-08-01T21:59:57Z",
        "updated_at": "2023-03-29T06:21:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "29c36f070618ea5148cd4b2da3732ee4d37af66b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 626,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:29:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T07:34:31Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27658"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 0,
    "deletions": 1,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 0,
    "comments": 5
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQyY2FjNjg4MTBiMmYzNDdiNjQxMmFjMzZlMjE1ZmFiZjg1OWJhNWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2cac68810b2f347b6412ac36e215fabf859ba5b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d2cac68810b2f347b6412ac36e215fabf859ba5b",
      "tree": {
        "sha": "85117b715f5331393905172919a10eaaf1816459",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85117b715f5331393905172919a10eaaf1816459"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 85117b715f5331393905172919a10eaaf1816459\nparent 29c36f070618ea5148cd4b2da3732ee4d37af66b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1684139731 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1684139731 +0100\n\ntest: Drop `deadlock:libdb` TSan suppression\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmRh7tMACgkQQQEIES5+\nqB/Fog//cGy7P6tzLtnqTmweTCKZlCNOOtovuTn8uVl4PS9+nGqWsWBNSOurOc+D\nZHpAvlA3AyjT9E4vjztEyvRAhZak4dQkMup/kdHZj6gRWpUuZ1/8AACHwSPneGQb\nR0uPlwseTOxX+tueCQCOwu5kqCR7bNwI9CGpFs1qIWcVog0eUGirwaaZ4JbLo4kM\nt/lOLhe9VZu2dQboQ2lu7Tt1X3/mVv47BiZ3ZfjcsbmQB4k4Jche+iC25LJdJqT0\nSY+Yw3uiiKY7VrJXlidX4/d/IDuBpquROGSQrX/B8V/dm3iA1yikqpjlAsJmcPvc\n2ceul+B1EYTY0PWOwTu4IprsRmI3EjgExZSk62HSi9b1ai1hfmxZ+wsjSNMERnIq\n9nJze+1I5sxSFcK8PlSTr6ziIF8Qa7qrSRqyO8EsMnVSYr4Hjr0ZP7M0gp/OShQn\nhE2AzEPHovRQh44gtBroGJ8N+5/NCMUOizSaVpPj3knCVC/xbxkp9QpZ4IlzT12a\nS4p60kkIK2ddF8sJ5h31IPV8m8xAaKwCJBofOjyAUZLvQ5UTEmz0CQWo04Kb3Z05\nyf6GZY4PqiK34TsZUWXtVI21VFikWeEht0QjequfRq/k/caP5oiHqSujhz7b/yJV\n+zBULcLDArBAX0syqnIU69Y5hj4b43UPj/uRVJbPAAXLmNDECl8=\n=DTJp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29c36f070618ea5148cd4b2da3732ee4d37af66b",
          "sha": "29c36f070618ea5148cd4b2da3732ee4d37af66b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29c36f070618ea5148cd4b2da3732ee4d37af66b"
        }
      ],
      "message": "test: Drop `deadlock:libdb` TSan suppression",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-05-15T08:35:31Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2023-05-15T08:35:31Z"
      },
      "sha": "d2cac68810b2f347b6412ac36e215fabf859ba5b"
    },
    {
      "event": "commented",
      "id": 1547438588,
      "node_id": "IC_kwDOABII585cPAn8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1547438588",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T08:45:21Z",
      "updated_at": "2023-05-15T11:01:08Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [fanquake](https://github.com/bitcoin/bitcoin/pull/27658#issuecomment-1547642636) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27658#issuecomment-1547438588",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27658"
    },
    {
      "event": "labeled",
      "id": 9243849083,
      "node_id": "LE_lADOABII585l5qFQzwAAAAIm-fF7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9243849083",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T08:45:22Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 9244798317,
      "node_id": "LE_lADOABII585l5qFQzwAAAAInCG1t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9244798317",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T10:17:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1547639621,
      "node_id": "IC_kwDOABII585cPxtF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1547639621",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T10:59:08Z",
      "updated_at": "2023-05-15T10:59:08Z",
      "author_association": "MEMBER",
      "body": "Steps to reproduce on a fresh install of OpenSuse Tumbleweed (`registry.opensuse.org/opensuse/tumbleweed:latest`):\r\n\r\n\r\n```\r\nzypper in -y libevent-devel boost-devel sqlite3-devel libqt5-qttools-devel libqt5-qtbase-devel libdb-4_8-devel      find bison gcc-c++ libtool make autoconf automake python3 clang llvm lbzip2 patch xz      curl wget htop git vim ccache  && git clone https://github.com/bitcoin/bitcoin.git  --depth=1 ./bitcoin-core && cd bitcoin-core &&    ./autogen.sh &&  ./configure CC=clang CXX=clang++ --disable-tests --disable-bench --with-sanitizers=thread  && make -j $(nproc)\r\ngit fetch origin d2cac68810b2f347b6412ac36e215fabf859ba5b\r\ngit show d2cac68810b2f347b6412ac36e215fabf859ba5b |git  apply\r\nexport TSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1:second_deadlock_stack=1\"\r\n./test/functional/test_runner.py -j $(nproc)\r\n```\r\n\r\n```\r\n node0 2023-05-15T10:55:57.402243Z [httpworker.2] [noui.cpp:56] [noui_InitMessage] init message: Loading wallet… \r\n test  2023-05-15T10:55:57.908000Z TestFramework (ERROR): Unexpected exception caught during testing \r\n                                   Traceback (most recent call last):\r\n                                     File \"/bitcoin-core/test/functional/test_framework/test_framework.py\", line 131, in main\r\n                                       self.setup()\r\n                                     File \"/bitcoin-core/test/functional/test_framework/test_framework.py\", line 298, in setup\r\n                                       self.setup_network()\r\n                                     File \"/bitcoin-core/test/functional/test_framework/test_framework.py\", line 392, in setup_network\r\n                                       self.setup_nodes()\r\n                                     File \"/bitcoin-core/test/functional/test_framework/test_framework.py\", line 416, in setup_nodes\r\n                                       self.import_deterministic_coinbase_privkeys()\r\n                                     File \"/bitcoin-core/test/functional/test_framework/test_framework.py\", line 433, in import_deterministic_coinbase_privkeys\r\n                                       self.init_wallet(node=i)\r\n                                     File \"/bitcoin-core/test/functional/test_framework/test_framework.py\", line 440, in init_wallet\r\n                                       n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\r\n                                     File \"/bitcoin-core/test/functional/test_framework/test_node.py\", line 778, in createwallet\r\n                                       return self.__getattr__('createwallet')(wallet_name, disable_private_keys, blank, passphrase, avoid_reuse, descriptors, load_on_startup, external_signer)\r\n                                     File \"/bitcoin-core/test/functional/test_framework/coverage.py\", line 49, in __call__\r\n                                       return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n                                     File \"/bitcoin-core/test/functional/test_framework/authproxy.py\", line 124, in __call__\r\n                                       response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n                                     File \"/bitcoin-core/test/functional/test_framework/authproxy.py\", line 103, in _request\r\n                                       return self._get_response()\r\n                                     File \"/bitcoin-core/test/functional/test_framework/authproxy.py\", line 148, in _get_response\r\n                                       http_response = self.__conn.getresponse()\r\n                                     File \"/usr/lib64/python3.10/http/client.py\", line 1374, in getresponse\r\n                                       response.begin()\r\n                                     File \"/usr/lib64/python3.10/http/client.py\", line 318, in begin\r\n                                       version, status, reason = self._read_status()\r\n                                     File \"/usr/lib64/python3.10/http/client.py\", line 287, in _read_status\r\n                                       raise RemoteDisconnected(\"Remote end closed connection without\"\r\n                                   http.client.RemoteDisconnected: Remote end closed connection without response\r\n test  2023-05-15T10:55:57.910000Z TestFramework (DEBUG): Closing down network thread \r\n test  2023-05-15T10:55:57.960000Z TestFramework (INFO): Stopping nodes \r\n test  2023-05-15T10:55:57.961000Z TestFramework.node0 (DEBUG): Stopping node \r\n\r\n node0 stderr ==================\r\nWARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=25729)\r\n  Cycle in lock order graph: M0 (0x7f5ad5b6f380) => M1 (0x7f5ad5b73670) => M2 (0x7f5ad5b73808) => M0\r\n\r\n  Mutex M1 acquired here while holding mutex M0 in thread T12:\r\n    #0 pthread_rwlock_wrlock /home/abuild/rpmbuild/BUILD/llvm-16.0.3.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1532:3 (bitcoind+0xc17fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #1 __db_pthread_mutex_lock <null> (libdb_cxx-4.8.so+0x424aa) (BuildId: 78015441865958bf80e112ff259ff60c0eae5adf)\r\n    #2 wallet::BerkeleyBatch::BerkeleyBatch(wallet::BerkeleyDatabase&, bool, bool) src/wallet/bdb.cpp:325:14 (bitcoind+0x838dcf) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #3 std::__detail::_MakeUniq<wallet::BerkeleyBatch>::__single_object std::make_unique<wallet::BerkeleyBatch, wallet::BerkeleyDatabase&, bool, bool&>(wallet::BerkeleyDatabase&, bool&&, bool&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/unique_ptr.h:1070:34 (bitcoind+0x8419f7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #4 wallet::BerkeleyDatabase::MakeBatch(bool) src/wallet/bdb.cpp:863:12 (bitcoind+0x8419f7)\r\n    #5 wallet::WalletBatch::WalletBatch(wallet::WalletDatabase&, bool) src/./wallet/walletdb.h:220:26 (bitcoind+0x7b559c) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #6 wallet::CWallet::LoadWallet() src/wallet/wallet.cpp:2321:31 (bitcoind+0x7b559c)\r\n    #7 wallet::CWallet::Create(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::unique_ptr<wallet::WalletDatabase, std::default_delete<wallet::WalletDatabase>>, unsigned long, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:2885:47 (bitcoind+0x796cca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #8 wallet::CreateWallet(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:380:39 (bitcoind+0x7938ca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #9 wallet::createwallet()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:423:45 (bitcoind+0x712da1) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #10 UniValue std::__invoke_impl<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(std::__invoke_other, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x712da1)\r\n    #11 std::enable_if<is_invocable_r_v<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>, UniValue>::type std::__invoke_r<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x712da1)\r\n    #12 std::_Function_handler<UniValue (RPCHelpMan const&, JSONRPCRequest const&), wallet::createwallet()::$_0>::_M_invoke(std::_Any_data const&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x712da1)\r\n    #13 std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0xa7f205) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #14 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:570:20 (bitcoind+0xa7f205)\r\n    #15 CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x3ab4b7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #16 bool std::__invoke_impl<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x3ab377) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #17 std::enable_if<is_invocable_r_v<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x3ab377)\r\n    #18 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x3ab377)\r\n    #19 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x6cd7fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #20 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:580:24 (bitcoind+0x6cd7fb)\r\n    #21 bool std::__invoke_impl<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x6cd7fb)\r\n    #22 std::enable_if<is_invocable_r_v<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x6cd7fb)\r\n    #23 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x6cd7fb)\r\n    #24 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x2ee80a) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #25 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:473:24 (bitcoind+0x2ee80a)\r\n    #26 bool std::__invoke_impl<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2ee80a)\r\n    #27 std::enable_if<is_invocable_r_v<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x2ee80a)\r\n    #28 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2ee80a)\r\n    #29 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x4fc028) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #30 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:507:20 (bitcoind+0x4fc028)\r\n    #31 ExecuteCommands(std::vector<CRPCCommand const*, std::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:472:13 (bitcoind+0x4fc028)\r\n    #32 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:492:13 (bitcoind+0x4fbbd6) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #33 HTTPReq_JSONRPC(std::any const&, HTTPRequest*) src/httprpc.cpp:202:40 (bitcoind+0x665e05) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #34 StartHTTPRPC(std::any const&)::$_0::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const src/httprpc.cpp:301:80 (bitcoind+0x665e05)\r\n    #35 bool std::__invoke_impl<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(std::__invoke_other, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x665e05)\r\n    #36 std::enable_if<is_invocable_r_v<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>, bool>::type std::__invoke_r<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x665e05)\r\n    #37 std::_Function_handler<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&), StartHTTPRPC(std::any const&)::$_0>::_M_invoke(std::_Any_data const&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x665e05)\r\n    #38 std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x67a84d) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #39 HTTPWorkItem::operator()() src/httpserver.cpp:60:9 (bitcoind+0x67a84d)\r\n    #40 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:115:13 (bitcoind+0x67b9f2) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #41 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:358:12 (bitcoind+0x672c07) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #42 void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x67c6c7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #43 std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x67c6c7)\r\n    #44 void std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x67c6c7)\r\n    #45 std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::operator()() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x67c6c7)\r\n    #46 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>>::_M_run() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x67c6c7)\r\n    #47 <null> <null> (libstdc++.so.6+0xe89b2) (BuildId: 35053d77606acdc55c2e290e966db2e83980b43c)\r\n\r\n  Mutex M0 previously acquired by the same thread here:\r\n    #0 pthread_rwlock_wrlock /home/abuild/rpmbuild/BUILD/llvm-16.0.3.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1532:3 (bitcoind+0xc17fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #1 __db_pthread_mutex_lock <null> (libdb_cxx-4.8.so+0x424aa) (BuildId: 78015441865958bf80e112ff259ff60c0eae5adf)\r\n    #2 wallet::BerkeleyBatch::BerkeleyBatch(wallet::BerkeleyDatabase&, bool, bool) src/wallet/bdb.cpp:325:14 (bitcoind+0x838dcf) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #3 std::__detail::_MakeUniq<wallet::BerkeleyBatch>::__single_object std::make_unique<wallet::BerkeleyBatch, wallet::BerkeleyDatabase&, bool, bool&>(wallet::BerkeleyDatabase&, bool&&, bool&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/unique_ptr.h:1070:34 (bitcoind+0x8419f7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #4 wallet::BerkeleyDatabase::MakeBatch(bool) src/wallet/bdb.cpp:863:12 (bitcoind+0x8419f7)\r\n    #5 wallet::WalletBatch::WalletBatch(wallet::WalletDatabase&, bool) src/./wallet/walletdb.h:220:26 (bitcoind+0x7b559c) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #6 wallet::CWallet::LoadWallet() src/wallet/wallet.cpp:2321:31 (bitcoind+0x7b559c)\r\n    #7 wallet::CWallet::Create(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::unique_ptr<wallet::WalletDatabase, std::default_delete<wallet::WalletDatabase>>, unsigned long, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:2885:47 (bitcoind+0x796cca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #8 wallet::CreateWallet(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:380:39 (bitcoind+0x7938ca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #9 wallet::createwallet()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:423:45 (bitcoind+0x712da1) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #10 UniValue std::__invoke_impl<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(std::__invoke_other, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x712da1)\r\n    #11 std::enable_if<is_invocable_r_v<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>, UniValue>::type std::__invoke_r<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x712da1)\r\n    #12 std::_Function_handler<UniValue (RPCHelpMan const&, JSONRPCRequest const&), wallet::createwallet()::$_0>::_M_invoke(std::_Any_data const&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x712da1)\r\n    #13 std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0xa7f205) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #14 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:570:20 (bitcoind+0xa7f205)\r\n    #15 CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x3ab4b7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #16 bool std::__invoke_impl<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x3ab377) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #17 std::enable_if<is_invocable_r_v<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x3ab377)\r\n    #18 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x3ab377)\r\n    #19 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x6cd7fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #20 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:580:24 (bitcoind+0x6cd7fb)\r\n    #21 bool std::__invoke_impl<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x6cd7fb)\r\n    #22 std::enable_if<is_invocable_r_v<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x6cd7fb)\r\n    #23 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x6cd7fb)\r\n    #24 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x2ee80a) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #25 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:473:24 (bitcoind+0x2ee80a)\r\n    #26 bool std::__invoke_impl<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2ee80a)\r\n    #27 std::enable_if<is_invocable_r_v<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x2ee80a)\r\n    #28 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2ee80a)\r\n    #29 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x4fc028) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #30 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:507:20 (bitcoind+0x4fc028)\r\n    #31 ExecuteCommands(std::vector<CRPCCommand const*, std::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:472:13 (bitcoind+0x4fc028)\r\n    #32 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:492:13 (bitcoind+0x4fbbd6) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #33 HTTPReq_JSONRPC(std::any const&, HTTPRequest*) src/httprpc.cpp:202:40 (bitcoind+0x665e05) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #34 StartHTTPRPC(std::any const&)::$_0::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const src/httprpc.cpp:301:80 (bitcoind+0x665e05)\r\n    #35 bool std::__invoke_impl<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(std::__invoke_other, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x665e05)\r\n    #36 std::enable_if<is_invocable_r_v<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>, bool>::type std::__invoke_r<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x665e05)\r\n    #37 std::_Function_handler<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&), StartHTTPRPC(std::any const&)::$_0>::_M_invoke(std::_Any_data const&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x665e05)\r\n    #38 std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x67a84d) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #39 HTTPWorkItem::operator()() src/httpserver.cpp:60:9 (bitcoind+0x67a84d)\r\n    #40 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:115:13 (bitcoind+0x67b9f2) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #41 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:358:12 (bitcoind+0x672c07) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #42 void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x67c6c7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #43 std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x67c6c7)\r\n    #44 void std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x67c6c7)\r\n    #45 std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::operator()() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x67c6c7)\r\n    #46 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>>::_M_run() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x67c6c7)\r\n    #47 <null> <null> (libstdc++.so.6+0xe89b2) (BuildId: 35053d77606acdc55c2e290e966db2e83980b43c)\r\n\r\n  Mutex M2 acquired here while holding mutex M1 in thread T12:\r\n    #0 pthread_rwlock_wrlock /home/abuild/rpmbuild/BUILD/llvm-16.0.3.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1532:3 (bitcoind+0xc17fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #1 __db_pthread_mutex_lock <null> (libdb_cxx-4.8.so+0x424aa) (BuildId: 78015441865958bf80e112ff259ff60c0eae5adf)\r\n    #2 wallet::BerkeleyBatch::BerkeleyBatch(wallet::BerkeleyDatabase&, bool, bool) src/wallet/bdb.cpp:325:14 (bitcoind+0x838dcf) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #3 std::__detail::_MakeUniq<wallet::BerkeleyBatch>::__single_object std::make_unique<wallet::BerkeleyBatch, wallet::BerkeleyDatabase&, bool, bool&>(wallet::BerkeleyDatabase&, bool&&, bool&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/unique_ptr.h:1070:34 (bitcoind+0x8419f7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #4 wallet::BerkeleyDatabase::MakeBatch(bool) src/wallet/bdb.cpp:863:12 (bitcoind+0x8419f7)\r\n    #5 wallet::WalletBatch::WalletBatch(wallet::WalletDatabase&, bool) src/./wallet/walletdb.h:220:26 (bitcoind+0x7b559c) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #6 wallet::CWallet::LoadWallet() src/wallet/wallet.cpp:2321:31 (bitcoind+0x7b559c)\r\n    #7 wallet::CWallet::Create(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::unique_ptr<wallet::WalletDatabase, std::default_delete<wallet::WalletDatabase>>, unsigned long, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:2885:47 (bitcoind+0x796cca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #8 wallet::CreateWallet(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:380:39 (bitcoind+0x7938ca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #9 wallet::createwallet()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:423:45 (bitcoind+0x712da1) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #10 UniValue std::__invoke_impl<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(std::__invoke_other, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x712da1)\r\n    #11 std::enable_if<is_invocable_r_v<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>, UniValue>::type std::__invoke_r<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x712da1)\r\n    #12 std::_Function_handler<UniValue (RPCHelpMan const&, JSONRPCRequest const&), wallet::createwallet()::$_0>::_M_invoke(std::_Any_data const&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x712da1)\r\n    #13 std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0xa7f205) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #14 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:570:20 (bitcoind+0xa7f205)\r\n    #15 CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x3ab4b7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #16 bool std::__invoke_impl<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x3ab377) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #17 std::enable_if<is_invocable_r_v<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x3ab377)\r\n    #18 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x3ab377)\r\n    #19 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x6cd7fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #20 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:580:24 (bitcoind+0x6cd7fb)\r\n    #21 bool std::__invoke_impl<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x6cd7fb)\r\n    #22 std::enable_if<is_invocable_r_v<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x6cd7fb)\r\n    #23 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x6cd7fb)\r\n    #24 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x2ee80a) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #25 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:473:24 (bitcoind+0x2ee80a)\r\n    #26 bool std::__invoke_impl<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2ee80a)\r\n    #27 std::enable_if<is_invocable_r_v<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x2ee80a)\r\n    #28 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2ee80a)\r\n    #29 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x4fc028) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #30 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:507:20 (bitcoind+0x4fc028)\r\n    #31 ExecuteCommands(std::vector<CRPCCommand const*, std::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:472:13 (bitcoind+0x4fc028)\r\n    #32 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:492:13 (bitcoind+0x4fbbd6) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #33 HTTPReq_JSONRPC(std::any const&, HTTPRequest*) src/httprpc.cpp:202:40 (bitcoind+0x665e05) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #34 StartHTTPRPC(std::any const&)::$_0::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const src/httprpc.cpp:301:80 (bitcoind+0x665e05)\r\n    #35 bool std::__invoke_impl<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(std::__invoke_other, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x665e05)\r\n    #36 std::enable_if<is_invocable_r_v<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>, bool>::type std::__invoke_r<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x665e05)\r\n    #37 std::_Function_handler<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&), StartHTTPRPC(std::any const&)::$_0>::_M_invoke(std::_Any_data const&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x665e05)\r\n    #38 std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x67a84d) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #39 HTTPWorkItem::operator()() src/httpserver.cpp:60:9 (bitcoind+0x67a84d)\r\n    #40 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:115:13 (bitcoind+0x67b9f2) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #41 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:358:12 (bitcoind+0x672c07) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #42 void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x67c6c7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #43 std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x67c6c7)\r\n    #44 void std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x67c6c7)\r\n    #45 std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::operator()() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x67c6c7)\r\n    #46 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>>::_M_run() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x67c6c7)\r\n    #47 <null> <null> (libstdc++.so.6+0xe89b2) (BuildId: 35053d77606acdc55c2e290e966db2e83980b43c)\r\n\r\n  Mutex M1 previously acquired by the same thread here:\r\n    #0 pthread_rwlock_wrlock /home/abuild/rpmbuild/BUILD/llvm-16.0.3.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1532:3 (bitcoind+0xc17fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #1 __db_pthread_mutex_lock <null> (libdb_cxx-4.8.so+0x424aa) (BuildId: 78015441865958bf80e112ff259ff60c0eae5adf)\r\n    #2 wallet::BerkeleyBatch::BerkeleyBatch(wallet::BerkeleyDatabase&, bool, bool) src/wallet/bdb.cpp:325:14 (bitcoind+0x838dcf) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #3 std::__detail::_MakeUniq<wallet::BerkeleyBatch>::__single_object std::make_unique<wallet::BerkeleyBatch, wallet::BerkeleyDatabase&, bool, bool&>(wallet::BerkeleyDatabase&, bool&&, bool&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/unique_ptr.h:1070:34 (bitcoind+0x8419f7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #4 wallet::BerkeleyDatabase::MakeBatch(bool) src/wallet/bdb.cpp:863:12 (bitcoind+0x8419f7)\r\n    #5 wallet::WalletBatch::WalletBatch(wallet::WalletDatabase&, bool) src/./wallet/walletdb.h:220:26 (bitcoind+0x7b559c) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #6 wallet::CWallet::LoadWallet() src/wallet/wallet.cpp:2321:31 (bitcoind+0x7b559c)\r\n    #7 wallet::CWallet::Create(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::unique_ptr<wallet::WalletDatabase, std::default_delete<wallet::WalletDatabase>>, unsigned long, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:2885:47 (bitcoind+0x796cca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #8 wallet::CreateWallet(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:380:39 (bitcoind+0x7938ca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #9 wallet::createwallet()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:423:45 (bitcoind+0x712da1) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #10 UniValue std::__invoke_impl<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(std::__invoke_other, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x712da1)\r\n    #11 std::enable_if<is_invocable_r_v<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>, UniValue>::type std::__invoke_r<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x712da1)\r\n    #12 std::_Function_handler<UniValue (RPCHelpMan const&, JSONRPCRequest const&), wallet::createwallet()::$_0>::_M_invoke(std::_Any_data const&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x712da1)\r\n    #13 std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0xa7f205) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #14 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:570:20 (bitcoind+0xa7f205)\r\n    #15 CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x3ab4b7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #16 bool std::__invoke_impl<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x3ab377) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #17 std::enable_if<is_invocable_r_v<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x3ab377)\r\n    #18 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x3ab377)\r\n    #19 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x6cd7fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #20 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:580:24 (bitcoind+0x6cd7fb)\r\n    #21 bool std::__invoke_impl<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x6cd7fb)\r\n    #22 std::enable_if<is_invocable_r_v<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x6cd7fb)\r\n    #23 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x6cd7fb)\r\n    #24 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x2ee80a) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #25 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:473:24 (bitcoind+0x2ee80a)\r\n    #26 bool std::__invoke_impl<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2ee80a)\r\n    #27 std::enable_if<is_invocable_r_v<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x2ee80a)\r\n    #28 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2ee80a)\r\n    #29 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x4fc028) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #30 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:507:20 (bitcoind+0x4fc028)\r\n    #31 ExecuteCommands(std::vector<CRPCCommand const*, std::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:472:13 (bitcoind+0x4fc028)\r\n    #32 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:492:13 (bitcoind+0x4fbbd6) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #33 HTTPReq_JSONRPC(std::any const&, HTTPRequest*) src/httprpc.cpp:202:40 (bitcoind+0x665e05) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #34 StartHTTPRPC(std::any const&)::$_0::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const src/httprpc.cpp:301:80 (bitcoind+0x665e05)\r\n    #35 bool std::__invoke_impl<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(std::__invoke_other, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x665e05)\r\n    #36 std::enable_if<is_invocable_r_v<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>, bool>::type std::__invoke_r<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x665e05)\r\n    #37 std::_Function_handler<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&), StartHTTPRPC(std::any const&)::$_0>::_M_invoke(std::_Any_data const&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x665e05)\r\n    #38 std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x67a84d) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #39 HTTPWorkItem::operator()() src/httpserver.cpp:60:9 (bitcoind+0x67a84d)\r\n    #40 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:115:13 (bitcoind+0x67b9f2) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #41 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:358:12 (bitcoind+0x672c07) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #42 void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x67c6c7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #43 std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x67c6c7)\r\n    #44 void std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x67c6c7)\r\n    #45 std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::operator()() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x67c6c7)\r\n    #46 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>>::_M_run() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x67c6c7)\r\n    #47 <null> <null> (libstdc++.so.6+0xe89b2) (BuildId: 35053d77606acdc55c2e290e966db2e83980b43c)\r\n\r\n  Mutex M0 acquired here while holding mutex M2 in thread T12:\r\n    #0 pthread_rwlock_rdlock /home/abuild/rpmbuild/BUILD/llvm-16.0.3.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1502:3 (bitcoind+0xc135b) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #1 __db_pthread_mutex_readlock <null> (libdb_cxx-4.8.so+0x423ba) (BuildId: 78015441865958bf80e112ff259ff60c0eae5adf)\r\n    #2 wallet::BerkeleyBatch::BerkeleyBatch(wallet::BerkeleyDatabase&, bool, bool) src/wallet/bdb.cpp:325:14 (bitcoind+0x838dcf) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #3 std::__detail::_MakeUniq<wallet::BerkeleyBatch>::__single_object std::make_unique<wallet::BerkeleyBatch, wallet::BerkeleyDatabase&, bool, bool&>(wallet::BerkeleyDatabase&, bool&&, bool&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/unique_ptr.h:1070:34 (bitcoind+0x8419f7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #4 wallet::BerkeleyDatabase::MakeBatch(bool) src/wallet/bdb.cpp:863:12 (bitcoind+0x8419f7)\r\n    #5 wallet::WalletBatch::WalletBatch(wallet::WalletDatabase&, bool) src/./wallet/walletdb.h:220:26 (bitcoind+0x7b559c) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #6 wallet::CWallet::LoadWallet() src/wallet/wallet.cpp:2321:31 (bitcoind+0x7b559c)\r\n    #7 wallet::CWallet::Create(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::unique_ptr<wallet::WalletDatabase, std::default_delete<wallet::WalletDatabase>>, unsigned long, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:2885:47 (bitcoind+0x796cca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #8 wallet::CreateWallet(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:380:39 (bitcoind+0x7938ca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #9 wallet::createwallet()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:423:45 (bitcoind+0x712da1) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #10 UniValue std::__invoke_impl<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(std::__invoke_other, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x712da1)\r\n    #11 std::enable_if<is_invocable_r_v<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>, UniValue>::type std::__invoke_r<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x712da1)\r\n    #12 std::_Function_handler<UniValue (RPCHelpMan const&, JSONRPCRequest const&), wallet::createwallet()::$_0>::_M_invoke(std::_Any_data const&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x712da1)\r\n    #13 std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0xa7f205) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #14 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:570:20 (bitcoind+0xa7f205)\r\n    #15 CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x3ab4b7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #16 bool std::__invoke_impl<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x3ab377) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #17 std::enable_if<is_invocable_r_v<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x3ab377)\r\n    #18 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x3ab377)\r\n    #19 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x6cd7fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #20 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:580:24 (bitcoind+0x6cd7fb)\r\n    #21 bool std::__invoke_impl<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x6cd7fb)\r\n    #22 std::enable_if<is_invocable_r_v<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x6cd7fb)\r\n    #23 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x6cd7fb)\r\n    #24 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x2ee80a) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #25 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:473:24 (bitcoind+0x2ee80a)\r\n    #26 bool std::__invoke_impl<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2ee80a)\r\n    #27 std::enable_if<is_invocable_r_v<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x2ee80a)\r\n    #28 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2ee80a)\r\n    #29 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x4fc028) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #30 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:507:20 (bitcoind+0x4fc028)\r\n    #31 ExecuteCommands(std::vector<CRPCCommand const*, std::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:472:13 (bitcoind+0x4fc028)\r\n    #32 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:492:13 (bitcoind+0x4fbbd6) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #33 HTTPReq_JSONRPC(std::any const&, HTTPRequest*) src/httprpc.cpp:202:40 (bitcoind+0x665e05) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #34 StartHTTPRPC(std::any const&)::$_0::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const src/httprpc.cpp:301:80 (bitcoind+0x665e05)\r\n    #35 bool std::__invoke_impl<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(std::__invoke_other, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x665e05)\r\n    #36 std::enable_if<is_invocable_r_v<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>, bool>::type std::__invoke_r<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x665e05)\r\n    #37 std::_Function_handler<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&), StartHTTPRPC(std::any const&)::$_0>::_M_invoke(std::_Any_data const&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x665e05)\r\n    #38 std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x67a84d) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #39 HTTPWorkItem::operator()() src/httpserver.cpp:60:9 (bitcoind+0x67a84d)\r\n    #40 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:115:13 (bitcoind+0x67b9f2) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #41 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:358:12 (bitcoind+0x672c07) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #42 void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x67c6c7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #43 std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x67c6c7)\r\n    #44 void std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x67c6c7)\r\n    #45 std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::operator()() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x67c6c7)\r\n    #46 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>>::_M_run() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x67c6c7)\r\n    #47 <null> <null> (libstdc++.so.6+0xe89b2) (BuildId: 35053d77606acdc55c2e290e966db2e83980b43c)\r\n\r\n  Mutex M2 previously acquired by the same thread here:\r\n    #0 pthread_rwlock_rdlock /home/abuild/rpmbuild/BUILD/llvm-16.0.3.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1502:3 (bitcoind+0xc135b) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #1 __db_pthread_mutex_readlock <null> (libdb_cxx-4.8.so+0x423ba) (BuildId: 78015441865958bf80e112ff259ff60c0eae5adf)\r\n    #2 wallet::BerkeleyBatch::BerkeleyBatch(wallet::BerkeleyDatabase&, bool, bool) src/wallet/bdb.cpp:325:14 (bitcoind+0x838dcf) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #3 std::__detail::_MakeUniq<wallet::BerkeleyBatch>::__single_object std::make_unique<wallet::BerkeleyBatch, wallet::BerkeleyDatabase&, bool, bool&>(wallet::BerkeleyDatabase&, bool&&, bool&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/unique_ptr.h:1070:34 (bitcoind+0x8419f7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #4 wallet::BerkeleyDatabase::MakeBatch(bool) src/wallet/bdb.cpp:863:12 (bitcoind+0x8419f7)\r\n    #5 wallet::WalletBatch::WalletBatch(wallet::WalletDatabase&, bool) src/./wallet/walletdb.h:220:26 (bitcoind+0x7b559c) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #6 wallet::CWallet::LoadWallet() src/wallet/wallet.cpp:2321:31 (bitcoind+0x7b559c)\r\n    #7 wallet::CWallet::Create(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::unique_ptr<wallet::WalletDatabase, std::default_delete<wallet::WalletDatabase>>, unsigned long, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:2885:47 (bitcoind+0x796cca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #8 wallet::CreateWallet(wallet::WalletContext&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::vector<bilingual_str, std::allocator<bilingual_str>>&) src/wallet/wallet.cpp:380:39 (bitcoind+0x7938ca) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #9 wallet::createwallet()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:423:45 (bitcoind+0x712da1) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #10 UniValue std::__invoke_impl<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(std::__invoke_other, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x712da1)\r\n    #11 std::enable_if<is_invocable_r_v<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>, UniValue>::type std::__invoke_r<UniValue, wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x712da1)\r\n    #12 std::_Function_handler<UniValue (RPCHelpMan const&, JSONRPCRequest const&), wallet::createwallet()::$_0>::_M_invoke(std::_Any_data const&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x712da1)\r\n    #13 std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0xa7f205) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #14 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:570:20 (bitcoind+0xa7f205)\r\n    #15 CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x3ab4b7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #16 bool std::__invoke_impl<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x3ab377) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #17 std::enable_if<is_invocable_r_v<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x3ab377)\r\n    #18 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x3ab377)\r\n    #19 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x6cd7fb) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #20 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:580:24 (bitcoind+0x6cd7fb)\r\n    #21 bool std::__invoke_impl<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x6cd7fb)\r\n    #22 std::enable_if<is_invocable_r_v<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x6cd7fb)\r\n    #23 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x6cd7fb)\r\n    #24 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x2ee80a) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #25 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:473:24 (bitcoind+0x2ee80a)\r\n    #26 bool std::__invoke_impl<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(std::__invoke_other, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x2ee80a)\r\n    #27 std::enable_if<is_invocable_r_v<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>, bool>::type std::__invoke_r<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x2ee80a)\r\n    #28 std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x2ee80a)\r\n    #29 std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x4fc028) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #30 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:507:20 (bitcoind+0x4fc028)\r\n    #31 ExecuteCommands(std::vector<CRPCCommand const*, std::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:472:13 (bitcoind+0x4fc028)\r\n    #32 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:492:13 (bitcoind+0x4fbbd6) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #33 HTTPReq_JSONRPC(std::any const&, HTTPRequest*) src/httprpc.cpp:202:40 (bitcoind+0x665e05) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #34 StartHTTPRPC(std::any const&)::$_0::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const src/httprpc.cpp:301:80 (bitcoind+0x665e05)\r\n    #35 bool std::__invoke_impl<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(std::__invoke_other, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x665e05)\r\n    #36 std::enable_if<is_invocable_r_v<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>, bool>::type std::__invoke_r<bool, StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&>(StartHTTPRPC(std::any const&)::$_0&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:114:9 (bitcoind+0x665e05)\r\n    #37 std::_Function_handler<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&), StartHTTPRPC(std::any const&)::$_0>::_M_invoke(std::_Any_data const&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:290:9 (bitcoind+0x665e05)\r\n    #38 std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_function.h:591:9 (bitcoind+0x67a84d) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #39 HTTPWorkItem::operator()() src/httpserver.cpp:60:9 (bitcoind+0x67a84d)\r\n    #40 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:115:13 (bitcoind+0x67b9f2) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #41 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:358:12 (bitcoind+0x672c07) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #42 void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:61:14 (bitcoind+0x67c6c7) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #43 std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/invoke.h:96:14 (bitcoind+0x67c6c7)\r\n    #44 void std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:292:13 (bitcoind+0x67c6c7)\r\n    #45 std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>::operator()() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:299:11 (bitcoind+0x67c6c7)\r\n    #46 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>>::_M_run() /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/std_thread.h:244:13 (bitcoind+0x67c6c7)\r\n    #47 <null> <null> (libstdc++.so.6+0xe89b2) (BuildId: 35053d77606acdc55c2e290e966db2e83980b43c)\r\n\r\n  Thread T12 'b-httpworker.2' (tid=25877, running) created by main thread at:\r\n    #0 pthread_create /home/abuild/rpmbuild/BUILD/llvm-16.0.3.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1048:3 (bitcoind+0xbe53b) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State>>, void (*)()) <null> (libstdc++.so.6+0xe8a88) (BuildId: 35053d77606acdc55c2e290e966db2e83980b43c)\r\n    #2 std::thread& std::vector<std::thread, std::allocator<std::thread>>::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/bin/../lib64/gcc/x86_64-suse-linux/13/../../../../include/c++/13/bits/vector.tcc:123:4 (bitcoind+0x67823b) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #3 StartHTTPServer() src/httpserver.cpp:448:31 (bitcoind+0x6727a0) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #4 AppInitServers(node::NodeContext&) src/init.cpp:672:5 (bitcoind+0x173ada) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #5 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1193:14 (bitcoind+0x169432) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #6 AppInit(node::NodeContext&, int, char**) src/bitcoind.cpp:223:43 (bitcoind+0x148db0) (BuildId: 7003c15a42808be3f6980232870eef80bf18ee0b)\r\n    #7 main src/bitcoind.cpp:267:13 (bitcoind+0x148db0)\r\n\r\nSUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/lib64/libdb_cxx-4.8.so+0x424aa) (BuildId: 78015441865958bf80e112ff259ff60c0eae5adf) in __db_pthread_mutex_lock\r\n================== \r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27658#issuecomment-1547639621",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27658"
    },
    {
      "event": "commented",
      "id": 1547642636,
      "node_id": "IC_kwDOABII585cPycM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1547642636",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T11:01:06Z",
      "updated_at": "2023-05-15T11:01:06Z",
      "author_association": "MEMBER",
      "body": "Concept NACK given the above.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27658#issuecomment-1547642636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27658"
    },
    {
      "event": "closed",
      "id": 9245930061,
      "node_id": "CE_lADOABII585l5qFQzwAAAAInGbJN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9245930061",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T12:13:50Z"
    },
    {
      "event": "commented",
      "id": 1547767101,
      "node_id": "IC_kwDOABII585cQQ09",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1547767101",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T12:24:28Z",
      "updated_at": "2023-05-15T12:24:28Z",
      "author_association": "MEMBER",
      "body": "Could add a link with steps to reproduce as doc?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27658#issuecomment-1547767101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27658"
    },
    {
      "event": "commented",
      "id": 1547773651,
      "node_id": "IC_kwDOABII585cQSbT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1547773651",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T12:29:25Z",
      "updated_at": "2023-05-15T12:29:25Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke \r\n> Could add a link with steps to reproduce as doc?\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/27661",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27658#issuecomment-1547773651",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27658"
    },
    {
      "event": "mentioned",
      "id": 9246082282,
      "node_id": "MEE_lADOABII585l5qFQzwAAAAInHATq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9246082282",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T12:29:26Z"
    },
    {
      "event": "subscribed",
      "id": 9246082310,
      "node_id": "SE_lADOABII585l5qFQzwAAAAInHAUG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9246082310",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T12:29:26Z"
    },
    {
      "event": "referenced",
      "id": 9246343286,
      "node_id": "REFE_lADOABII585l5qFQzwAAAAInIAB2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9246343286",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d7700d3a26478d9b1648463c188648c7047b1c60",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/d7700d3a26478d9b1648463c188648c7047b1c60",
      "created_at": "2023-05-15T12:56:20Z"
    },
    {
      "event": "referenced",
      "id": 9249428946,
      "node_id": "REFE_lADOABII585l5qFQzwAAAAInTxXS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9249428946",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c7e01d55ee72f52e7f16330f0d0ef848b9e1a246",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/c7e01d55ee72f52e7f16330f0d0ef848b9e1a246",
      "created_at": "2023-05-15T17:51:46Z"
    }
  ],
  "comments": []
}