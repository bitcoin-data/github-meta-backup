{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688",
    "id": 310162463,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwMTYyNDYz",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16688",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/16688.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/16688.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
    "number": 16688,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "log: Add validation interface logging",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add logging of `CValidationInterface` callbacks using a new `VALIDATION` log flag (see #12994). A separate flag is desirable as the logging can be noisy and thus may need to be disabled without affecting other logging.\r\n\r\nThis could help debug issues where there may be race conditions at play, such as #12978.",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      },
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-08-22T22:08:34Z",
    "updated_at": "2022-02-15T10:57:32Z",
    "closed_at": "2020-01-09T20:06:30Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-01-09T20:06:30Z",
    "merge_commit_sha": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jkczyz:2019-08-validation-logging",
      "ref": "2019-08-validation-logging",
      "sha": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 190090893,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTAwOTA4OTM=",
        "name": "bitcoin",
        "full_name": "jkczyz/bitcoin",
        "owner": {
          "login": "jkczyz",
          "id": 4015903,
          "node_id": "MDQ6VXNlcjQwMTU5MDM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jkczyz",
          "html_url": "https://github.com/jkczyz",
          "followers_url": "https://api.github.com/users/jkczyz/followers",
          "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
          "organizations_url": "https://api.github.com/users/jkczyz/orgs",
          "repos_url": "https://api.github.com/users/jkczyz/repos",
          "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jkczyz/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jkczyz/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jkczyz/bitcoin",
        "archive_url": "https://api.github.com/repos/jkczyz/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jkczyz/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jkczyz/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jkczyz/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jkczyz/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jkczyz/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jkczyz/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jkczyz/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jkczyz/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jkczyz/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jkczyz/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jkczyz/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jkczyz/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jkczyz/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jkczyz/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jkczyz/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jkczyz/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jkczyz/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jkczyz/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jkczyz/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jkczyz/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jkczyz/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jkczyz/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jkczyz/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jkczyz/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jkczyz/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jkczyz/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jkczyz/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jkczyz/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jkczyz/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jkczyz/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jkczyz/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jkczyz/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jkczyz/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jkczyz/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jkczyz/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jkczyz/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jkczyz/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jkczyz/bitcoin/hooks",
        "svn_url": "https://github.com/jkczyz/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 144094,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2020-06-05T18:35:50Z",
        "created_at": "2019-06-03T22:27:36Z",
        "updated_at": "2020-06-05T18:36:06Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "17e14ac92fced92457945859463eda5d435bdd49",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 67,
    "deletions": 16,
    "changed_files": 5,
    "commits": 4,
    "review_comments": 59,
    "comments": 39
  },
  "events": [
    {
      "event": "labeled",
      "id": 2578008978,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI1NzgwMDg5Nzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2578008978",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-22T22:16:07Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 2578008980,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI1NzgwMDg5ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2578008980",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-22T22:16:07Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "commented",
      "id": 524131064,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDEzMTA2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524131064",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-23T00:52:02Z",
      "updated_at": "2020-01-04T03:18:20Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17562](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17562.html) (WIP: Validation: Remove ConnectTrace and PerBlockConnectTrace by jnewbery)\n* [#17477](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17477.html) (Remove the mempool's NotifyEntryAdded and NotifyEntryRemoved signals by jnewbery)\n* [#17399](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17399.html) (validation: Templatize ValidationState instead of subclassing by jkczyz)\n* [#16365](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16365.html) (Log RPC parameters (arguments) if -debug=rpcparams by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-524131064",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "reviewed",
      "id": 278747465,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjc4NzQ3NDY1",
      "url": null,
      "actor": null,
      "commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested validationinterface log flag with both cli option and logging RPC. Worked as expected.\r\n\r\nNice to have more logging around the validation callbacks, order of events may be so confusing!",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-278747465",
      "submitted_at": "2019-08-23T01:21:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "commented",
      "id": 524569491,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDU2OTQ5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524569491",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-08-24T17:56:10Z",
      "updated_at": "2019-08-24T17:56:10Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-524569491",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2604493199,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjYwNDQ5MzE5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2604493199",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-09-03T18:02:01Z"
    },
    {
      "event": "commented",
      "id": 527575841,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzU3NTg0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/527575841",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-09-03T18:14:03Z",
      "updated_at": "2019-09-03T18:14:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addressed all comments and add correct formatting for valid `CValidationState` in b303865.\r\n\r\nAlso updated `CValidationState` accessors in 3ff8755 to return strings by constant reference to avoid copying. Although this means the references are only valid for the lifetime of the object, which should be okay.",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-527575841",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "reviewed",
      "id": 299046396,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk5MDQ2Mzk2",
      "url": null,
      "actor": null,
      "commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I've partially reviewed and left a few comments inline. I intend to finish review and test this week.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-299046396",
      "submitted_at": "2019-10-08T21:39:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "commented",
      "id": 540222219,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDIyMjIxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540222219",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-09T22:03:26Z",
      "updated_at": "2019-10-09T22:03:26Z",
      "author_association": "MEMBER",
      "body": "I did some light testing and this looks good. If you wanted to add automated tests, take a look at `assert_debug_log()` in the `TestNode` object. That allows you to test that specific strings have been written to the debug log.\r\n\r\n> updated CValidationState accessors in 3ff8755 to return strings by constant reference to avoid copying.\r\n\r\nWas this required for the PR? Those accessors aren't used very much, so performance isn't critical. I'd suggest not changing them in this PR.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-540222219",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2722310669,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjcyMjMxMDY2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2722310669",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-17T18:25:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2722401027,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjcyMjQwMTAyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2722401027",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-17T18:56:49Z"
    },
    {
      "event": "commented",
      "id": 543330180,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzMzMDE4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543330180",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-17T19:40:23Z",
      "updated_at": "2019-10-17T19:40:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I did some light testing and this looks good. If you wanted to add automated tests, take a look at `assert_debug_log()` in the `TestNode` object. That allows you to test that specific strings have been written to the debug log.\r\n> \r\n\r\nI would be hesitant to add a functional test only to check for informational logging. Is there an existing a test where all these events are exercised? Not sure if it is worth adding regardless.\r\n\r\n> > updated CValidationState accessors in [3ff8755](https://github.com/bitcoin/bitcoin/commit/3ff875575563bf88ea94ec63b892fe8237b5e0f7) to return strings by constant reference to avoid copying.\r\n> \r\n> Was this required for the PR? Those accessors aren't used very much, so performance isn't critical. I'd suggest not changing them in this PR.\r\n\r\nYeah, commit 72c6e50 calls those methods in such a way that not returning references would have incurred excessive copies. Would it be better if the two commits were merged?",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-543330180",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2722913224,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjcyMjkxMzIyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2722913224",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-17T22:08:26Z"
    },
    {
      "event": "commented",
      "id": 543388763,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzM4ODc2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543388763",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-17T22:33:23Z",
      "updated_at": "2019-10-17T22:33:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jnewbery I have some concerns about this additional logging. Since #14209 was merged, all log function arguments are evaluated regardless of whether logging is enabled for the given category. This was not the case prior to that PR since a macro was used for logging.\r\n\r\nGiven the heavy amount of logging added in this PR, should the function vs macro approach for logging be revisited? Typically, the use of macros in logging libraries is to avoid such argument evaluation if I understand correctly.",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-543388763",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "mentioned",
      "id": 2722963042,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjcyMjk2MzA0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2722963042",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-17T22:33:23Z"
    },
    {
      "event": "subscribed",
      "id": 2722963043,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3MjI5NjMwNDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2722963043",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-17T22:33:23Z"
    },
    {
      "event": "commented",
      "id": 543733154,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzczMzE1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543733154",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-18T13:03:52Z",
      "updated_at": "2019-10-18T13:03:52Z",
      "author_association": "MEMBER",
      "body": "> Since #14209 was merged, all log function arguments are evaluated regardless of whether logging is enabled for the given category.\r\n\r\nHuh? They were passed to `strprintf` before and after that change, but `strprintf` was only called when logging was enabled. I don't see how that pull changed anything.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-543733154",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 543826931,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzgyNjkzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543826931",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-18T16:36:59Z",
      "updated_at": "2019-10-18T16:36:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Since #14209 was merged, all log function arguments are evaluated regardless of whether logging is enabled for the given category.\r\n> \r\n> Huh? They were passed to `strprintf` before and after that change, but `strprintf` was only called when logging was enabled. I don't see how that pull changed anything.\r\n\r\nBy evaluation I mean at the call site of `LogPrint`. While this doesn't make a difference when passing variables, it does matter when the arguments are calls to other functions. Prior to #14209, the latter would be textually included when used and thus not evaluated if logging was not enabled for the given category.",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-543826931",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 543835460,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzgzNTQ2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543835460",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-18T16:57:12Z",
      "updated_at": "2019-10-18T16:57:12Z",
      "author_association": "MEMBER",
      "body": "Ah, right",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-543835460",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "reviewed",
      "id": 304219538,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MjE5NTM4",
      "url": null,
      "actor": null,
      "commit_id": "515e3ee7fa4bb83277136742f3b3f1a8ea9e3a56",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-304219538",
      "submitted_at": "2019-10-19T15:56:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "mentioned",
      "id": 2727225924,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjcyNzIyNTkyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2727225924",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-19T18:08:38Z"
    },
    {
      "event": "subscribed",
      "id": 2727225925,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3MjcyMjU5MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2727225925",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-19T18:08:38Z"
    },
    {
      "event": "reviewed",
      "id": 304266930,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0MjY2OTMw",
      "url": null,
      "actor": null,
      "commit_id": "deb243ef8798e7b400da9748a2f2dffe02617cc1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "IMO, 6c730c3926d1871d8ce4c63eb6752808d7c3484a commit is outside the original PR goal.\r\nAlso `string` (i.e., `basic_string<char>`) offers move semantics; so it can be efficiently return by value.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-304266930",
      "submitted_at": "2019-10-20T17:25:29Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2727915759,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjcyNzkxNTc1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2727915759",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-20T21:24:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2727920124,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjcyNzkyMDEyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2727920124",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-20T21:32:38Z"
    },
    {
      "event": "commented",
      "id": 544295197,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDI5NTE5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544295197",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-20T21:35:54Z",
      "updated_at": "2019-10-20T21:35:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> IMO, [6c730c3](https://github.com/bitcoin/bitcoin/commit/6c730c3926d1871d8ce4c63eb6752808d7c3484a) commit is outside the original PR goal.\r\n> Also `string` (i.e., `basic_string<char>`) offers move semantics; so it can be efficiently return by value.\r\n\r\nI removed the commit. But I don't believe move semantics apply here as the function is returning a member variable.",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-544295197",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 544641770,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDY0MTc3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544641770",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-21T18:18:44Z",
      "updated_at": "2019-10-21T18:18:44Z",
      "author_association": "MEMBER",
      "body": "> I removed the commit. (https://github.com/bitcoin/bitcoin/commit/6c730c3926d1871d8ce4c63eb6752808d7c3484a)\r\n\r\nThanks!\r\n\r\nI've tested this and it works great. I think we need to resolve this question: https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-543388763 before merging this PR. It seems reasonable to me to change logging back to using a macro for the reasons you suggest. Adding a `GetHash()` call to every validation interface call, even when logging is disabled, seems a shame. I'd be happy to review a PR that does that.\r\n\r\n_Rename CMainSignals::MempoolEntryRemoved to TransactionRemovedFromMempool_ and _Format CValidationState properly in all cases_ could be pulled out into their own PR while we're waiting for that, although note that _Format CValidationState properly in all cases_ conflicts with https://github.com/bitcoin/bitcoin/pull/17004/commits/0053e16714323c1694c834fdca74f064a1a33529.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-544641770",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 544756845,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDc1Njg0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544756845",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-22T00:01:16Z",
      "updated_at": "2019-10-22T00:01:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I've tested this and it works great. I think we need to resolve this question: [#16688 (comment)](https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-543388763) before merging this PR. It seems reasonable to me to change logging back to using a macro for the reasons you suggest. Adding a `GetHash()` call to every validation interface call, even when logging is disabled, seems a shame. I'd be happy to review a PR that does that.\r\n\r\n@jnewbery Will do.\r\n\r\n@MarcoFalke I'm not sure I follow the part about \"unnecessary branches are not analyzed\" in #14209. If I were to make `LogPrint` (but not `LogPrintf`) a macro again, will I need to define it conditionally based on `USE_COVERAGE` as was done in c8914b9?",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-544756845",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "mentioned",
      "id": 2731623733,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjczMTYyMzczMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2731623733",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-22T00:01:16Z"
    },
    {
      "event": "subscribed",
      "id": 2731623736,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3MzE2MjM3MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2731623736",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-22T00:01:16Z"
    },
    {
      "event": "mentioned",
      "id": 2731623737,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjczMTYyMzczNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2731623737",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-22T00:01:16Z"
    },
    {
      "event": "subscribed",
      "id": 2731623738,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3MzE2MjM3Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2731623738",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-22T00:01:16Z"
    },
    {
      "event": "commented",
      "id": 544945041,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDk0NTA0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544945041",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-22T12:47:27Z",
      "updated_at": "2019-10-22T12:47:27Z",
      "author_association": "MEMBER",
      "body": "If you revert #14209, please make it as slim as possible (without the USE_COVERAGE guard, which mostly did only harm)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-544945041",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 544996828,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDk5NjgyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544996828",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-22T14:42:25Z",
      "updated_at": "2019-10-22T14:42:25Z",
      "author_association": "MEMBER",
      "body": "> I would be hesitant to add a functional test only to check for informational logging. Is there an existing a test where all these events are exercised? Not sure if it is worth adding regardless.\r\n\r\nYeah, I agree that this isn't necessary.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-544996828",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "referenced",
      "id": 2734307044,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI3MzQzMDcwNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2734307044",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "93e8f7a833a03a0add51612d1fcac557af51359c",
      "commit_url": "https://api.github.com/repos/jkczyz/bitcoin/commits/93e8f7a833a03a0add51612d1fcac557af51359c",
      "created_at": "2019-10-22T18:13:04Z"
    },
    {
      "event": "referenced",
      "id": 2734757554,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI3MzQ3NTc1NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2734757554",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "commit_url": "https://api.github.com/repos/jkczyz/bitcoin/commits/8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "created_at": "2019-10-22T20:45:38Z"
    },
    {
      "event": "labeled",
      "id": 2740057265,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3NDAwNTcyNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2740057265",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-24T09:36:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2758122262,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc1ODEyMjI2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2758122262",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-31T01:04:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2758264494,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc1ODI2NDQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2758264494",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-31T02:39:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2758279796,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc1ODI3OTc5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2758279796",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-31T02:49:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2758512335,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc1ODUxMjMzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2758512335",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-31T05:36:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2758533673,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc1ODUzMzY3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2758533673",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-31T05:50:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2758607586,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc1ODYwNzU4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2758607586",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-31T06:36:08Z"
    },
    {
      "event": "unlabeled",
      "id": 2758631698,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjc1ODYzMTY5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2758631698",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-31T06:49:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 548510011,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODUxMDAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548510011",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-31T18:29:54Z",
      "updated_at": "2019-10-31T18:29:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> _Rename CMainSignals::MempoolEntryRemoved to TransactionRemovedFromMempool_ and _Format CValidationState properly in all cases_ could be pulled out into their own PR while we're waiting for that, although note that _Format CValidationState properly in all cases_ conflicts with [0053e16](https://github.com/bitcoin/bitcoin/commit/0053e16714323c1694c834fdca74f064a1a33529).\r\n\r\nI've rebased and resolved the conflict now that your change has been merged. The PR should be ready for any last comments. Also, will need reviews of #17218. :)",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-548510011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "referenced",
      "id": 2763333967,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI3NjMzMzM5Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2763333967",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "90a2341713fbef59aef3a9a3be5c7fba2cc87d22",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90a2341713fbef59aef3a9a3be5c7fba2cc87d22",
      "created_at": "2019-11-01T14:17:23Z"
    },
    {
      "event": "referenced",
      "id": 2763469316,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI3NjM0NjkzMTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2763469316",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "30e410619b3c66d944b5685d1db1c64d082999fd",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/30e410619b3c66d944b5685d1db1c64d082999fd",
      "created_at": "2019-11-01T14:58:55Z"
    },
    {
      "event": "commented",
      "id": 548825215,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODgyNTIxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548825215",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-01T15:12:28Z",
      "updated_at": "2019-11-01T15:12:28Z",
      "author_association": "MEMBER",
      "body": "It appears that the function name isn't being captured properly:\r\n\r\n```\r\n2019-11-01T15:06:44.834237Z [loadblk] Enqueuing BlockConnected: block hash=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206 block height=0\r\n2019-11-01T15:06:44.834255Z [loadblk] Enqueuing UpdatedBlockTip: new block hash=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206 fork block hash=null (in IBD=1)\r\n2019-11-01T15:06:44.834276Z [init] block tree size = 1\r\n2019-11-01T15:06:44.834283Z [init] nBestHeight = 0\r\n2019-11-01T15:06:44.834338Z [init] Bound to 127.0.0.1:11625\r\n2019-11-01T15:06:44.834350Z [init] init message: Loading P2P addresses...\r\n2019-11-01T15:06:44.834367Z [init] ERROR: DeserializeFileDB: Failed to open file /tmp/user/1000/bitcoin_func_test_if8trhon/node0/regtest/peers.dat\r\n2019-11-01T15:06:44.834438Z [init] Invalid or missing peers.dat; recreating\r\n2019-11-01T15:06:44.834758Z [scheduler] operator(): block hash=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206 block height=0\r\n2019-11-01T15:06:44.834919Z [scheduler] operator(): new block hash=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206 fork block hash=null (in IBD=1)\r\n```\r\n\r\nThose last two lines should show `BlockConnected` and `UpdatedBlockTip`",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-548825215",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2764402527,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc2NDQwMjUyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2764402527",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-01T20:30:39Z"
    },
    {
      "event": "commented",
      "id": 548940603,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODk0MDYwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548940603",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-01T20:32:29Z",
      "updated_at": "2019-11-01T20:32:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It appears that the function name isn't being captured properly:\r\n\r\nFixed in 9eb373c.",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-548940603",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "reviewed",
      "id": 310692707,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEwNjkyNzA3",
      "url": null,
      "actor": null,
      "commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-310692707",
      "submitted_at": "2019-11-01T20:58:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "reviewed",
      "id": 311334330,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzExMzM0MzMw",
      "url": null,
      "actor": null,
      "commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested ACK 9eb373c07ad78448ea78eee97d1ee9b9b409b4b9\r\n\r\nOne personal-style-preference nit, which you should feel free to ignore.\r\n\r\nI've run several functional tests with this and manually tested it with a regtest node. It's really illuminating to see where the CValidationInterface callbacks are being enqueued and then called.\r\n\r\nReally great stuff @jkczyz . Thanks for persisting with this!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-311334330",
      "submitted_at": "2019-11-04T20:49:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2772484407,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc3MjQ4NDQwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2772484407",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T18:30:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2772494795,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc3MjQ5NDc5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2772494795",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T18:34:00Z"
    },
    {
      "event": "commented",
      "id": 549961497,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk2MTQ5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549961497",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T18:41:38Z",
      "updated_at": "2019-11-05T18:41:38Z",
      "author_association": "MEMBER",
      "body": "Tested ACK f871e272a1e4bd2b1c8b474416ee8eb065ef4e2c",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-549961497",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "reviewed",
      "id": 312080356,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEyMDgwMzU2",
      "url": null,
      "actor": null,
      "commit_id": "454caa12c2267f01ae6aa3d5d0a8525e2d457c50",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested with `-debug=validationinterface` set, print messages as expected. Holding my ACK on answer on the macro question.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-312080356",
      "submitted_at": "2019-11-05T22:35:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "commented",
      "id": 550064918,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA2NDkxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550064918",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T23:09:16Z",
      "updated_at": "2019-11-05T23:09:16Z",
      "author_association": "MEMBER",
      "body": "Tested ACK f871e27",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-550064918",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "labeled",
      "id": 2782530289,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3ODI1MzAyODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2782530289",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-08T11:05:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 551984040,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk4NDA0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551984040",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-08T20:47:16Z",
      "updated_at": "2019-11-08T20:47:16Z",
      "author_association": "MEMBER",
      "body": "Rebased on master and added height logging to `BlockDisconnected` here: https://github.com/jnewbery/bitcoin/tree/pr16688.1 . Feel free to take it!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-551984040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2784768400,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc4NDc2ODQwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2784768400",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-08T22:49:32Z"
    },
    {
      "event": "commented",
      "id": 552029949,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjAyOTk0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552029949",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-08T23:25:02Z",
      "updated_at": "2019-11-08T23:25:02Z",
      "author_association": "MEMBER",
      "body": "Tested ACK 741cab0a7dcfe07860db8ad73678fbfde7eb6ada\r\n\r\nYour latest push has different emails for the Author and Committer in the commits. I'm not sure if that was intentional or you want to change it back.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-552029949",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "unlabeled",
      "id": 2784833082,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjc4NDgzMzA4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2784833082",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-08T23:29:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 2785911330,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3ODU5MTEzMzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2785911330",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-10T10:28:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2789308771,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc4OTMwODc3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2789308771",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-11T21:04:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2789348376,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc4OTM0ODM3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2789348376",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-11T21:19:00Z"
    },
    {
      "event": "commented",
      "id": 552621471,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjYyMTQ3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552621471",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-11T21:21:07Z",
      "updated_at": "2019-11-11T21:21:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Tested ACK [741cab0](https://github.com/bitcoin/bitcoin/commit/741cab0a7dcfe07860db8ad73678fbfde7eb6ada)\r\n> \r\n> Your latest push has different emails for the Author and Committer in the commits. I'm not sure if that was intentional or you want to change it back.\r\n\r\nUpdated and rebased.",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-552621471",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "unlabeled",
      "id": 2789380534,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjc4OTM4MDUzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2789380534",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-11T21:29:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 552640474,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjY0MDQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552640474",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-11T22:12:55Z",
      "updated_at": "2019-11-11T22:12:55Z",
      "author_association": "MEMBER",
      "body": "ACK cd6bf9970fdebc878cfc2d3b80bfc6cd4d39ffd7",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-552640474",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 553972937,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1Mzk3MjkzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/553972937",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-14T16:42:34Z",
      "updated_at": "2019-11-14T16:42:34Z",
      "author_association": "MEMBER",
      "body": "ACK cd6bf99. Change since last time is block height in `BlockDisconnected` log.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-553972937",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "labeled",
      "id": 2823714623,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4MjM3MTQ2MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2823714623",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T15:54:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2824423242,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjgyNDQyMzI0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824423242",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T20:00:37Z"
    },
    {
      "event": "unlabeled",
      "id": 2824430328,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjgyNDQzMDMyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824430328",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T20:03:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 557676990,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzY3Njk5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557676990",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T20:11:14Z",
      "updated_at": "2019-11-22T20:11:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and resolved merge conflicts. The commits for formatting `MemPoolRemovalReason` and renaming `CMainSignals::MempoolEntryRemoved` have been removed since #14384 made them obsolete. But just realized @jnewbery asked to have the reason added in this PR if the #14384 was merged first.",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-557676990",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "mentioned",
      "id": 2824450308,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjgyNDQ1MDMwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824450308",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T20:11:14Z"
    },
    {
      "event": "subscribed",
      "id": 2824450322,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4MjQ0NTAzMjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824450322",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T20:11:14Z"
    },
    {
      "event": "commented",
      "id": 557685952,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzY4NTk1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557685952",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T20:40:08Z",
      "updated_at": "2019-11-22T20:40:08Z",
      "author_association": "MEMBER",
      "body": "> @jnewbery asked to have the reason added in this PR\r\n\r\nIt's not essential but I think logging the reason is definitely a nice-to-have. None of the clients need access to the reason (yet) so it could just be logged and dropped in the validationinterface.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-557685952",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "mentioned",
      "id": 2824520601,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjgyNDUyMDYwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824520601",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T20:40:08Z"
    },
    {
      "event": "subscribed",
      "id": 2824520611,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4MjQ1MjA2MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824520611",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T20:40:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2824583582,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjgyNDU4MzU4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824583582",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T21:06:00Z"
    },
    {
      "event": "commented",
      "id": 557700110,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzcwMDExMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557700110",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T21:24:57Z",
      "updated_at": "2019-11-22T21:24:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It's not essential but I think logging the reason is definitely a nice-to-have. None of the clients need access to the reason (yet) so it could just be logged and dropped in the validationinterface.\r\n\r\nDone in 34d6486.",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-557700110",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 557705599,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzcwNTU5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557705599",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T21:43:41Z",
      "updated_at": "2019-11-22T21:43:41Z",
      "author_association": "MEMBER",
      "body": "Tested ACK 34d6486de309d24d040a900fe3492582dc6bbb45",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-557705599",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 557707056,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzcwNzA1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557707056",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T21:48:31Z",
      "updated_at": "2019-11-22T21:48:31Z",
      "author_association": "MEMBER",
      "body": "I'd love to see this merged soon. Once you've had validationinterface logging for test debugging, you don't want to go back!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-557707056",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 557751161,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzc1MTE2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557751161",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-23T01:23:34Z",
      "updated_at": "2019-11-23T01:34:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "The linter says 34d6486 introduced a circular dependency:\r\n\r\n```\r\nA new circular dependency in the form of \"txmempool -> validationinterface -> txmempool\" appears to have been introduced.\r\n```\r\n\r\nTo break this, I'd have to move both `MemPoolRemovalReason` and `MemPoolRemovalReasonString` elsewhere. Thoughts?",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-557751161",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 557760416,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzc2MDQxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557760416",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-23T03:09:13Z",
      "updated_at": "2019-11-23T03:09:13Z",
      "author_association": "MEMBER",
      "body": "> To break this, I'd have to move both MemPoolRemovalReason and MemPoolRemovalReasonString elsewhere. Thoughts?\r\n\r\nJust remove that commit. No need to make this PR more complex just to log the removal reason. It can be done in a follow-up.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-557760416",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2825151172,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjgyNTE1MTE3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2825151172",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-23T05:47:11Z"
    },
    {
      "event": "commented",
      "id": 558206079,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODIwNjA3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558206079",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T15:28:31Z",
      "updated_at": "2019-11-25T15:28:31Z",
      "author_association": "MEMBER",
      "body": "Tested ACK 0cadb123b",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-558206079",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 558303961,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODMwMzk2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558303961",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T19:26:41Z",
      "updated_at": "2019-11-25T19:26:57Z",
      "author_association": "MEMBER",
      "body": "ACK 0cadb12, only changes are dropping commits/removing arg following #14384 merge",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-558303961",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 568212213,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODIxMjIxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568212213",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-21T21:10:03Z",
      "updated_at": "2019-12-21T21:10:03Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Will test.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-568212213",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 568243356,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODI0MzM1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568243356",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-22T08:50:13Z",
      "updated_at": "2019-12-22T08:50:13Z",
      "author_association": "MEMBER",
      "body": "There are some code organization concerns.\r\n\r\nI believe that headers and forward class declaration should not be touched in the \"_Format CValidationState properly in all cases_\" commit (ee4d66a38c5c09161f8a3e63047db6b6908687f4).\r\n\r\nInstead, `<consensus/validation.h>` should be included to `validationinterface.cpp` in the \"_Add logging for CValidationInterface events_\" commit (0cadb123bad37a2c224834a3d98bed474c661c21).",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-568243356",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "reviewed",
      "id": 335643709,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM1NjQzNzA5",
      "url": null,
      "actor": null,
      "commit_id": "0cadb123bad37a2c224834a3d98bed474c661c21",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested on Linux Mint 19.3. It works as expected.\r\n\r\nThe only suggestion: https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-568243356",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-335643709",
      "submitted_at": "2019-12-22T10:57:54Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "reviewed",
      "id": 336624585,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2NjI0NTg1",
      "url": null,
      "actor": null,
      "commit_id": "389d423a252e43d0b08871f8ae5b66a84a8a217c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 0cadb123bad37a2c224834a3d98bed474c661c21. Nice change! I left some suggestions, but feel free to ignore them.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-336624585",
      "submitted_at": "2019-12-26T22:38:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjhhYzcwMDk1MjUzMjI1ZjY0NDYyZWUxNWM1OTU2NDQ3NDdmMzc2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/428ac70095253225f64462ee15c595644747f376",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/428ac70095253225f64462ee15c595644747f376",
      "tree": {
        "sha": "6a1d87325639ddc58954e10b9603de251d04788b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a1d87325639ddc58954e10b9603de251d04788b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb862d7864cc4889285e1a3713e3864d667cf30a",
          "sha": "bb862d7864cc4889285e1a3713e3864d667cf30a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bb862d7864cc4889285e1a3713e3864d667cf30a"
        }
      ],
      "message": "Add VALIDATION to BCLog::LogFlags\n\nThis flag is for logging from within CValidationInterface (see #12994).\nA separate flag is desirable as the logging can be noisy and thus may\nneed to be disabled without affecting other logging.",
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T18:59:06Z"
      },
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-08-21T23:19:51Z"
      },
      "sha": "428ac70095253225f64462ee15c595644747f376"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmYzMjI3YzgzODEwOTM2ZTdhMzM0MzA0ZTVmZDdjNmRhYjhlOTFi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72f3227c83810936e7a334304e5fd7c6dab8e91b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/72f3227c83810936e7a334304e5fd7c6dab8e91b",
      "tree": {
        "sha": "a8602fb4ba8ad989b38189b42e78b6eec7c1cfe1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8602fb4ba8ad989b38189b42e78b6eec7c1cfe1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/428ac70095253225f64462ee15c595644747f376",
          "sha": "428ac70095253225f64462ee15c595644747f376",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/428ac70095253225f64462ee15c595644747f376"
        }
      ],
      "message": "Format CValidationState properly in all cases\n\nFormatStateMessage does not properly handle the case where\nCValidationState::IsValid() returns true. Use \"Valid\" for the state in\nthis case.",
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:37:26Z"
      },
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:32:22Z"
      },
      "sha": "72f3227c83810936e7a334304e5fd7c6dab8e91b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZWRlYmFjYjIxOTEzNzNlNzZkNzlhNDk3MmQ2MTkyMzAwOTc2MDk2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6edebacb2191373e76d79a4972d6192300976096",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6edebacb2191373e76d79a4972d6192300976096",
      "tree": {
        "sha": "e2c49ba8ead3a5689ac266aa7849ecf5f5e03e13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2c49ba8ead3a5689ac266aa7849ecf5f5e03e13"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72f3227c83810936e7a334304e5fd7c6dab8e91b",
          "sha": "72f3227c83810936e7a334304e5fd7c6dab8e91b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/72f3227c83810936e7a334304e5fd7c6dab8e91b"
        }
      ],
      "message": "Refactor FormatStateMessage for clarity\n\nAll cases of CValidationState were condensed into one strprintf call.\nThis is no longer suitable as more cases are added (e.g., IsValid).",
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:38:44Z"
      },
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:38:44Z"
      },
      "sha": "6edebacb2191373e76d79a4972d6192300976096"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOWFiZjRhYjZkM2QzZTRkNGI3ZTkwNzIzMDIwYjU0MjJhMTQxYTZm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "tree": {
        "sha": "48a95956f7ead9e5f0d5051582aa8c5c60b564cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48a95956f7ead9e5f0d5051582aa8c5c60b564cb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6edebacb2191373e76d79a4972d6192300976096",
          "sha": "6edebacb2191373e76d79a4972d6192300976096",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6edebacb2191373e76d79a4972d6192300976096"
        }
      ],
      "message": "Add logging for CValidationInterface events\n\nThis could help debug issues where there may be race conditions at play,\nsuch as #12978.\n\nFixes #12994.",
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:49:21Z"
      },
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-08-22T00:48:52Z"
      },
      "sha": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2921126364,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjkyMTEyNjM2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2921126364",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T20:13:44Z"
    },
    {
      "event": "commented",
      "id": 570686368,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDY4NjM2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570686368",
      "actor": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T20:17:43Z",
      "updated_at": "2020-01-03T20:17:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "@hebasto @ryanofsky Thanks for the review! I've addressed all comments.",
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-570686368",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "mentioned",
      "id": 2921134468,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjkyMTEzNDQ2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2921134468",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T20:17:43Z"
    },
    {
      "event": "subscribed",
      "id": 2921134473,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5MjExMzQ0NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2921134473",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T20:17:43Z"
    },
    {
      "event": "mentioned",
      "id": 2921134480,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjkyMTEzNDQ4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2921134480",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T20:17:43Z"
    },
    {
      "event": "subscribed",
      "id": 2921134482,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5MjExMzQ0ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2921134482",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T20:17:43Z"
    },
    {
      "event": "commented",
      "id": 570698525,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDY5ODUyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570698525",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T21:07:38Z",
      "updated_at": "2020-01-03T21:07:38Z",
      "author_association": "MEMBER",
      "body": "ACK f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-570698525",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 570712502,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDcxMjUwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570712502",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T22:06:11Z",
      "updated_at": "2020-01-03T22:06:11Z",
      "author_association": "MEMBER",
      "body": "ACK f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-570712502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "commented",
      "id": 570725502,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDcyNTUwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570725502",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-03T23:10:38Z",
      "updated_at": "2020-01-03T23:11:15Z",
      "author_association": "MEMBER",
      "body": "ACK f9abf4a, only changes since 0cadb12 are replacing log indication `VALIDATIONINTERFACE` by `VALIDATION` and avoiding a forward declaration with a new include",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-570725502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16688"
    },
    {
      "event": "reviewed",
      "id": 340153911,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMTUzOTEx",
      "url": null,
      "actor": null,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f. Just suggested changes since last review (thanks!)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-340153911",
      "submitted_at": "2020-01-08T21:23:51Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "referenced",
      "id": 2936282040,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MzYyODIwNDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2936282040",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e7f84503571c171a7e6728cd2d77dd4103bd7a6f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7f84503571c171a7e6728cd2d77dd4103bd7a6f",
      "created_at": "2020-01-09T20:05:54Z"
    },
    {
      "event": "merged",
      "id": 2936283914,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjkzNjI4MzkxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2936283914",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "created_at": "2020-01-09T20:06:30Z"
    },
    {
      "event": "closed",
      "id": 2936283932,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjkzNjI4MzkzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2936283932",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-09T20:06:30Z"
    },
    {
      "event": "referenced",
      "id": 2936446199,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MzY0NDYxOTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2936446199",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9d38d10d6e9a1a0889ea9ddb4e902e20d254ad82",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/9d38d10d6e9a1a0889ea9ddb4e902e20d254ad82",
      "created_at": "2020-01-09T21:02:00Z"
    },
    {
      "event": "reviewed",
      "id": 340880712,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwODgwNzEy",
      "url": null,
      "actor": null,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK e7f84503571c171a7e6728cd2d77dd4103bd7a6f  posthumous code review and manual tests.\r\n\r\nUsage listed here for visitor convenience (the PR description was not updated from validationinterface to validation):\r\n\r\n- `bitcoind -help | grep -B6 \", validation\"`\r\n```\r\n  -debug=<category>\r\n       Output debugging information (default: -nodebug, supplying <category> is\r\n       optional). If <category> is not supplied or if <category> = 1,\r\n       output all debugging information. <category> can be: net, tor,\r\n       mempool, http, bench, zmq, walletdb, rpc, estimatefee, addrman,\r\n       selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\r\n       libevent, coindb, qt, leveldb, validation.\r\n```\r\n- `bitcoind -debug=validation` (launch bitcoind with validation logging)\r\n- `bitcoin-cli help logging`\r\n- `bitcoin-cli logging [] '[\"validation\"]'` (toggle validation logging off)\r\n- `bitcoin-cli logging '[\"validation\"]'` (toggle validation logging on)\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-340880712",
      "submitted_at": "2020-01-09T23:34:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
    },
    {
      "event": "referenced",
      "id": 2941573431,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDE1NzM0MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2941573431",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4dd2f82dad7507fdf5f9a8a00b0da0be7bf5a0ac",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/4dd2f82dad7507fdf5f9a8a00b0da0be7bf5a0ac",
      "created_at": "2020-01-12T23:06:49Z"
    },
    {
      "event": "referenced",
      "id": 3020345473,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMwMjAzNDU0NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3020345473",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "28a17585d48d40e2b79ccd1b400dd5bbed64edfc",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/28a17585d48d40e2b79ccd1b400dd5bbed64edfc",
      "created_at": "2020-02-09T04:57:53Z"
    },
    {
      "event": "referenced",
      "id": 3463852997,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NjM4NTI5OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3463852997",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "04394f92dce5fedbf62e7e1ff9c8bc3d96898830",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/04394f92dce5fedbf62e7e1ff9c8bc3d96898830",
      "created_at": "2020-06-19T20:50:08Z"
    },
    {
      "event": "referenced",
      "id": 3545959237,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1NDU5NTkyMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3545959237",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c3bbc613c4b6d17dbf17c29eeb8105c223a17218",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/c3bbc613c4b6d17dbf17c29eeb8105c223a17218",
      "created_at": "2020-07-14T21:15:10Z"
    },
    {
      "event": "referenced",
      "id": 3980857093,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5ODA4NTcwOTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980857093",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "98e750b015071b959722fdc3ffea7d2a0a54931f",
      "commit_url": "https://api.github.com/repos/syscoin-core/syscoin/commits/98e750b015071b959722fdc3ffea7d2a0a54931f",
      "created_at": "2020-11-10T20:39:27Z"
    },
    {
      "event": "referenced",
      "id": 3980858360,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5ODA4NTgzNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980858360",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "496411c6bc7c4ff5414716c2c65c24671140dd55",
      "commit_url": "https://api.github.com/repos/syscoin-core/syscoin/commits/496411c6bc7c4ff5414716c2c65c24671140dd55",
      "created_at": "2020-11-10T20:39:44Z"
    },
    {
      "event": "referenced",
      "id": 5287111003,
      "node_id": "REFE_lADOABII584c3OiIzwAAAAE7Iulb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5287111003",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d15f179eebf1cadf704cce6712ab3fb9ee8e3456",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/d15f179eebf1cadf704cce6712ab3fb9ee8e3456",
      "created_at": "2021-09-11T02:50:21Z"
    },
    {
      "event": "referenced",
      "id": 5287124259,
      "node_id": "REFE_lADOABII584c3OiIzwAAAAE7Ix0j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5287124259",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "940ae481be5bcbdb90aa64a1d0bdebbb6e78098f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/940ae481be5bcbdb90aa64a1d0bdebbb6e78098f",
      "created_at": "2021-09-11T03:06:13Z"
    },
    {
      "event": "referenced",
      "id": 5289506832,
      "node_id": "REFE_lADOABII584c3OiIzwAAAAE7R3gQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5289506832",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4055086f1743871390b516801af3aeb3ff2a4c83",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/4055086f1743871390b516801af3aeb3ff2a4c83",
      "created_at": "2021-09-12T19:11:17Z"
    },
    {
      "event": "referenced",
      "id": 5289507748,
      "node_id": "REFE_lADOABII584c3OiIzwAAAAE7R3uk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5289507748",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0aff2b2c01f97b07e556e7fafdb4ff3a7cef7706",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/0aff2b2c01f97b07e556e7fafdb4ff3a7cef7706",
      "created_at": "2021-09-12T19:12:19Z"
    },
    {
      "event": "referenced",
      "id": 5289538728,
      "node_id": "REFE_lADOABII584c3OiIzwAAAAE7R_So",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5289538728",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c511977b120330ef4602be4c6681835ec6249aa3",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/c511977b120330ef4602be4c6681835ec6249aa3",
      "created_at": "2021-09-12T19:50:03Z"
    },
    {
      "event": "referenced",
      "id": 5300990889,
      "node_id": "REFE_lADOABII584c3OiIzwAAAAE79rOp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5300990889",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8d3bee5e71a1b3871780d311d3b6c02e6cc3781c",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/8d3bee5e71a1b3871780d311d3b6c02e6cc3781c",
      "created_at": "2021-09-14T16:59:41Z"
    },
    {
      "event": "referenced",
      "id": 5301357428,
      "node_id": "REFE_lADOABII584c3OiIzwAAAAE7_Et0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5301357428",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eb9c94185b4475daafef722c94d7018eb29e15f3",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/eb9c94185b4475daafef722c94d7018eb29e15f3",
      "created_at": "2021-09-14T18:12:19Z"
    },
    {
      "event": "referenced",
      "id": 5307627061,
      "node_id": "REFE_lADOABII584c3OiIzwAAAAE8W_Y1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5307627061",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "06583cc33ba09df67d9ba42d882579fa18c65674",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/06583cc33ba09df67d9ba42d882579fa18c65674",
      "created_at": "2021-09-15T17:55:19Z"
    },
    {
      "event": "referenced",
      "id": 5352131833,
      "node_id": "REFE_lADOABII584c3OiIzwAAAAE_Awz5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5352131833",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2f161620101742b18ab174cd893db6821f35bc4a",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/2f161620101742b18ab174cd893db6821f35bc4a",
      "created_at": "2021-09-23T19:58:20Z"
    },
    {
      "event": "locked",
      "id": 6073969502,
      "node_id": "LOE_lADOABII584c3OiIzwAAAAFqCWte",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073969502",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:57:32Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316934773",
      "pull_request_review_id": 278747465,
      "id": 316934773,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjkzNDc3Mw==",
      "diff_hunk": "@@ -5,9 +5,13 @@\n \n #include <validationinterface.h>\n \n+#include <chain.h>\n+#include <logging.h>\n #include <primitives/block.h>\n+#include <primitives/transaction.h>",
      "path": "src/validationinterface.cpp",
      "position": 8,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Compiling without including transaction header (already included in txmempool.h)",
      "created_at": "2019-08-23T00:21:43Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316934773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316934773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316940139",
      "pull_request_review_id": 278747465,
      "id": 316940139,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MDEzOQ==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the rational defining func instead of directly as LogPrint arg ?",
      "created_at": "2019-08-23T00:56:46Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316940139",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316940139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316940553",
      "pull_request_review_id": 278747465,
      "id": 316940553,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MDU1Mw==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you use a ternary to check pindexFork instead of two call to LogPrint? Also fInitialDownload could be logged",
      "created_at": "2019-08-23T00:59:03Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316940553",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316940553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316941180",
      "pull_request_review_id": 278747465,
      "id": 316941180,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MTE4MA==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s\\n\", func, pindexNew->GetBlockHash().ToString());\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n         m_internals->TransactionAddedToMempool(ptx);\n     });\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto func = __func__;\n+        m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+            LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n             m_internals->TransactionRemovedFromMempool(ptx);\n         });\n     }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pblock, pindex, pvtxConflicted, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, pblock->GetHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks to pindex, maybe log the height too",
      "created_at": "2019-08-23T01:03:00Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316941180",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316941180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316942251",
      "pull_request_review_id": 278747465,
      "id": 316942251,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MjI1MQ==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s\\n\", func, pindexNew->GetBlockHash().ToString());\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n         m_internals->TransactionAddedToMempool(ptx);\n     });\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto func = __func__;\n+        m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+            LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n             m_internals->TransactionRemovedFromMempool(ptx);\n         });\n     }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pblock, pindex, pvtxConflicted, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, pblock->GetHash().ToString());\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n     });\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock> &pblock) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pblock, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, pblock->GetHash().ToString());\n         m_internals->BlockDisconnected(pblock);\n     });\n }\n \n void CMainSignals::ChainStateFlushed(const CBlockLocator &locator) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([locator, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, locator, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, locator.IsNull() ? \"null\" : locator.vHave.front().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: maybe \"top block hash %s bottom block hash\"",
      "created_at": "2019-08-23T01:09:35Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316942251",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316942251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316942492",
      "pull_request_review_id": 278747465,
      "id": 316942492,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MjQ5Mg==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s\\n\", func, pindexNew->GetBlockHash().ToString());\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n         m_internals->TransactionAddedToMempool(ptx);\n     });\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto func = __func__;\n+        m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+            LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You may add MemPoolRemovalReasonString somewhere, like TransactionErrorString in util/error.cp. IMO that's an interesting info to log",
      "created_at": "2019-08-23T01:11:03Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316942492",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316942492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317000871",
      "pull_request_review_id": 278830194,
      "id": 317000871,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzAwMDg3MQ==",
      "diff_hunk": "@@ -5,9 +5,13 @@\n \n #include <validationinterface.h>\n \n+#include <chain.h>\n+#include <logging.h>\n #include <primitives/block.h>\n+#include <primitives/transaction.h>",
      "path": "src/validationinterface.cpp",
      "position": 8,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": 316934773,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From the [Developer Notes - Source code organization](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#source-code-organization):\r\n> - Every `.cpp` and `.h` file should `#include` every header file it directly uses classes, functions or other definitions from, even if those headers are already included indirectly through other headers.\r\n>    -  _Rationale_: Excluding headers because they are already indirectly included results in compilation failures when those indirect dependencies change. Furthermore, it obscures what the real code dependencies are.",
      "created_at": "2019-08-23T07:12:56Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r317000871",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317000871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317143843",
      "pull_request_review_id": 279015148,
      "id": 317143843,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzE0Mzg0Mw==",
      "diff_hunk": "@@ -5,9 +5,13 @@\n \n #include <validationinterface.h>\n \n+#include <chain.h>\n+#include <logging.h>\n #include <primitives/block.h>\n+#include <primitives/transaction.h>",
      "path": "src/validationinterface.cpp",
      "position": 8,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": 316934773,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah thanks, didn't know it!",
      "created_at": "2019-08-23T13:56:48Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r317143843",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317143843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317672379",
      "pull_request_review_id": 279678717,
      "id": 317672379,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzY3MjM3OQ==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": 316940139,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Using it directly will give the name of the lambda, i.e. `operator()`, which is not desirable.\r\n\r\nIdeally, I could use `__func__` in the lambda capture. However, this is not allowed because it has static storage duration. With C++14, we could use capture initializers instead.",
      "created_at": "2019-08-26T15:58:14Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r317672379",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/317672379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318809816",
      "pull_request_review_id": 281124970,
      "id": 318809816,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxODgwOTgxNg==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s\\n\", func, pindexNew->GetBlockHash().ToString());\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n         m_internals->TransactionAddedToMempool(ptx);\n     });\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto func = __func__;\n+        m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+            LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n             m_internals->TransactionRemovedFromMempool(ptx);\n         });\n     }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pblock, pindex, pvtxConflicted, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, pblock->GetHash().ToString());\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n     });\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock> &pblock) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pblock, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, pblock->GetHash().ToString());\n         m_internals->BlockDisconnected(pblock);\n     });\n }\n \n void CMainSignals::ChainStateFlushed(const CBlockLocator &locator) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([locator, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, locator, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, locator.IsNull() ? \"null\" : locator.vHave.front().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": 316942251,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe the bottom block hash will always be the genesis block hash, so logging it probably won't be very useful. Plus it may be a little confusing given only the top block is being flushed.",
      "created_at": "2019-08-28T21:55:34Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r318809816",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/318809816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/320406870",
      "pull_request_review_id": 283169608,
      "id": 320406870,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMDQwNjg3MA==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": 316940553,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good call! I had misinterpreted the frequency of this being non-null. Fixed in 4bacb54.",
      "created_at": "2019-09-03T18:07:11Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r320406870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/320406870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/320406900",
      "pull_request_review_id": 283169647,
      "id": 320406900,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMDQwNjkwMA==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s\\n\", func, pindexNew->GetBlockHash().ToString());\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n         m_internals->TransactionAddedToMempool(ptx);\n     });\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto func = __func__;\n+        m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+            LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n             m_internals->TransactionRemovedFromMempool(ptx);\n         });\n     }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pblock, pindex, pvtxConflicted, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, pblock->GetHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": 316941180,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added in 4bacb54.",
      "created_at": "2019-09-03T18:07:16Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r320406900",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/320406900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/320406935",
      "pull_request_review_id": 283169687,
      "id": 320406935,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMDQwNjkzNQ==",
      "diff_hunk": "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s\\n\", func, pindexNew->GetBlockHash().ToString());\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n         m_internals->TransactionAddedToMempool(ptx);\n     });\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto func = __func__;\n+        m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+            LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "in_reply_to_id": 316942492,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 504d009.",
      "created_at": "2019-09-03T18:07:19Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r320406935",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/320406935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332730670",
      "pull_request_review_id": 299046396,
      "id": 332730670,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjczMDY3MA==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s fork block hash=%s initial download=%d\\n\", func,",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Refer to this as \"IBD\" or \"Initial Block Download\" rather than \"initial download\". I suggest: `\"%s: new block hash=%s fork block hash=%s (In IBD=%d)\\n\"` or similar.\r\n\r\n(These are low-level logs. Anyone reading them should understand what IBD means.",
      "created_at": "2019-10-08T20:59:48Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r332730670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332730670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332733417",
      "pull_request_review_id": 299046396,
      "id": 332733417,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjczMzQxNw==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s fork block hash=%s initial download=%d\\n\", func,\n+                 pindexNew->GetBlockHash().ToString(),\n+                 pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                 fInitialDownload);\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: call this the 'txid' instead of 'tx hash', and also log the wtxid (use `GetWitnessHash()`)",
      "created_at": "2019-10-08T21:06:15Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r332733417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332733417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332735487",
      "pull_request_review_id": 299046396,
      "id": 332735487,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjczNTQ4Nw==",
      "diff_hunk": "@@ -1098,3 +1100,22 @@ void CTxMemPool::SetIsLoaded(bool loaded)\n }\n \n SaltedTxidHasher::SaltedTxidHasher() : k0(GetRand(std::numeric_limits<uint64_t>::max())), k1(GetRand(std::numeric_limits<uint64_t>::max())) {}\n+\n+std::string MemPoolRemovalReasonString(const MemPoolRemovalReason reason)\n+{\n+    switch (reason) {\n+    case MemPoolRemovalReason::EXPIRY:\n+        return \"Expired from mempool\";",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I think these strings could just be `EXPIRY`, `SIZELIMIT`, etc. These strings are for logs only, so will only be read by engineers.\r\n\r\nTrying to make these strings more generally accessible obscures some of the nuance. For example `MemPoolRemovalReason::REORG` means that a transaction was removed during a re-org because it spent a coinbase transaction that is no longer mature, or because it is no longer final, or because mempool policy changed since it first entered the mempool so it can no longer be added or because the re-org was too large and we dropped transactions to avoid memory exhaustion.",
      "created_at": "2019-10-08T21:11:25Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r332735487",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332735487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332745377",
      "pull_request_review_id": 299046396,
      "id": 332745377,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjc0NTM3Nw==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For all of these async validationinterface callbacks, I think it'd be useful to log both when the event is enqueued and dequeued, with some kind of counter to correlate the two logs. Thoughts?",
      "created_at": "2019-10-08T21:37:39Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r332745377",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332745377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335228213",
      "pull_request_review_id": 302260704,
      "id": 335228213,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTIyODIxMw==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The scheduler client guarantees these callbacks are executed serially in the order in which they were enqueued. Unless there is a need to correlate the enqueuing with the execution of `BlockChecked` and `NewPowValidBlock`, I'm hesitant to add more complexity to the code.\r\n\r\nIs there a specific case where you think the additional logging would be useful? If so, would correlation using data from the log message be sufficient rather than adding a counter?",
      "created_at": "2019-10-16T00:01:31Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r335228213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335228213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335552731",
      "pull_request_review_id": 302675991,
      "id": 335552731,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTU1MjczMQ==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this: https://github.com/bitcoin/bitcoin/issues/12978#issuecomment-381265760 would have been easier to spot with logging when the callbacks were enqueued, and it would have been easier to correlate those enqueue events with the thread that was running.\r\n\r\nYou're probably right that there's no need for a counter and that the data from the log message is enough to correlate the enqueue/dequeue events.",
      "created_at": "2019-10-16T15:35:52Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r335552731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335552731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336179659",
      "pull_request_review_id": 303483828,
      "id": 336179659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjE3OTY1OQ==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done. In order to avoid duplicating the logging code, I added some private template methods declared in the header and defined in the implementation file. The linker seems ok with this though let me know if there is a better way. Defining the helpers in the header would have required moving `MainSignalsInstance` into the header.",
      "created_at": "2019-10-17T19:11:44Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336179659",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336179659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336249532",
      "pull_request_review_id": 303575890,
      "id": 336249532,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjI0OTUzMg==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "FYI, I had to make some minor changes to placate the linter. It was giving the following failures:\r\n\r\n```\r\nsrc/validationinterface.cpp: Expected 0 argument(s) after format string but found 1 argument(s): LogPrint(BCLog::VALIDATIONINTERFACE, fmt, args...)\r\n^---- failure generated from test/lint/lint-format-strings.sh\r\nAll calls to LogPrintf() and LogPrint() should be terminated with \\n\r\nsrc/validationinterface.cpp:    LogPrint(BCLog::VALIDATIONINTERFACE, fmt, args...);\r\n^---- failure generated from test/lint/lint-logs.sh\r\n```\r\n\r\nhttps://travis-ci.org/bitcoin/bitcoin/jobs/599302990",
      "created_at": "2019-10-17T22:11:09Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336249532",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336249532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336703301",
      "pull_request_review_id": 304172679,
      "id": 336703301,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjcwMzMwMQ==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> In order to avoid duplicating the logging code, I added some private template methods declared in the header and defined in the implementation file. The linker seems ok with this(...)\r\n\r\nThis could lead to portability issues, see e.g. https://stackoverflow.com/questions/495021/why-can-templates-only-be-implemented-in-the-header-file. I tried something similar recently in another PR, and the linker in one of the Travis runs did complain, so I am also interested to know if there are better solutions than moving stuff into the header.",
      "created_at": "2019-10-18T23:06:26Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336703301",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336703301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336713974",
      "pull_request_review_id": 304185715,
      "id": 336713974,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjcxMzk3NA==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, that could very well be the case. That said, if we want to avoid argument evaluation when the logging category is not enabled, I would need to turn these into macros. See discussion starting in https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-543388763. Then I could remove those template method declarations from the header.",
      "created_at": "2019-10-19T00:38:19Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336713974",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336713974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336742750",
      "pull_request_review_id": 304219538,
      "id": 336742750,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc0Mjc1MA==",
      "diff_hunk": "@@ -137,8 +137,8 @@ class CValidationState {\n     }\n     ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n-    std::string GetRejectReason() const { return strRejectReason; }\n-    std::string GetDebugMessage() const { return strDebugMessage; }\n+    const std::string& GetRejectReason() const { return strRejectReason; }\n+    const std::string& GetDebugMessage() const { return strDebugMessage; }",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "515e3ee7fa4bb83277136742f3b3f1a8ea9e3a56",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why this change? :)",
      "created_at": "2019-10-19T15:56:32Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336742750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336742750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336747711",
      "pull_request_review_id": 304224916,
      "id": 336747711,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc0NzcxMQ==",
      "diff_hunk": "@@ -137,8 +137,8 @@ class CValidationState {\n     }\n     ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n-    std::string GetRejectReason() const { return strRejectReason; }\n-    std::string GetDebugMessage() const { return strDebugMessage; }\n+    const std::string& GetRejectReason() const { return strRejectReason; }\n+    const std::string& GetDebugMessage() const { return strDebugMessage; }",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "515e3ee7fa4bb83277136742f3b3f1a8ea9e3a56",
      "in_reply_to_id": 336742750,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-543330180.\r\n\r\n@jnewbery Regarding my previous comment, I'm also happy to remove this commit if that's preferred. Seems I had not read your comment closely enough about it not being performance critical. Though note my concerns about macro vs function logging.",
      "created_at": "2019-10-19T18:08:38Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336747711",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336747711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336748680",
      "pull_request_review_id": 304225926,
      "id": 336748680,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc0ODY4MA==",
      "diff_hunk": "@@ -137,8 +137,8 @@ class CValidationState {\n     }\n     ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n-    std::string GetRejectReason() const { return strRejectReason; }\n-    std::string GetDebugMessage() const { return strDebugMessage; }\n+    const std::string& GetRejectReason() const { return strRejectReason; }\n+    const std::string& GetDebugMessage() const { return strDebugMessage; }",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "515e3ee7fa4bb83277136742f3b3f1a8ea9e3a56",
      "in_reply_to_id": 336742750,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the object lifetime of `strRejectReason` and `strDebugMessage`?\r\n\r\nAre they guaranteed to outlive the callers of `GetRejectReason` or `GetDebugMessage`?",
      "created_at": "2019-10-19T18:34:39Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336748680",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336748680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336759875",
      "pull_request_review_id": 304238102,
      "id": 336759875,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc1OTg3NQ==",
      "diff_hunk": "@@ -137,8 +137,8 @@ class CValidationState {\n     }\n     ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n-    std::string GetRejectReason() const { return strRejectReason; }\n-    std::string GetDebugMessage() const { return strDebugMessage; }\n+    const std::string& GetRejectReason() const { return strRejectReason; }\n+    const std::string& GetDebugMessage() const { return strDebugMessage; }",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "515e3ee7fa4bb83277136742f3b3f1a8ea9e3a56",
      "in_reply_to_id": 336742750,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Their lifetimes are that of the corresponding `CValidationState` as mentioned in https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-527575841. All current uses are guaranteed to outlive the callers as they either make a copy or are passed by const reference to other functions that do something similar. There's no such guarantee for future callers though.",
      "created_at": "2019-10-20T01:45:18Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336759875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336759875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336780553",
      "pull_request_review_id": 304260708,
      "id": 336780553,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc4MDU1Mw==",
      "diff_hunk": "@@ -137,8 +137,8 @@ class CValidationState {\n     }\n     ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n-    std::string GetRejectReason() const { return strRejectReason; }\n-    std::string GetDebugMessage() const { return strDebugMessage; }\n+    const std::string& GetRejectReason() const { return strRejectReason; }\n+    const std::string& GetDebugMessage() const { return strDebugMessage; }",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "515e3ee7fa4bb83277136742f3b3f1a8ea9e3a56",
      "in_reply_to_id": 336742750,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think 6c730c3926d1871d8ce4c63eb6752808d7c3484a is a good idea: it introduces a very sharp edge in consensus critical code which is not offset by any measurable gain AFAICT.\r\n\r\nWe should always err on the side of caution when touching consensus critical code: if there is a trade-off between safety (current or future) and speed, then safety is generally much more important. In the cases where speed is critical for some reasons we should always measure before optimising :)\r\n\r\nSomewhat related: https://www.youtube.com/watch?v=3MB2iiCkGxg&t=870",
      "created_at": "2019-10-20T14:12:10Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336780553",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336780553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336786215",
      "pull_request_review_id": 304266930,
      "id": 336786215,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc4NjIxNQ==",
      "diff_hunk": "@@ -1098,3 +1100,22 @@ void CTxMemPool::SetIsLoaded(bool loaded)\n }\n \n SaltedTxidHasher::SaltedTxidHasher() : k0(GetRand(std::numeric_limits<uint64_t>::max())), k1(GetRand(std::numeric_limits<uint64_t>::max())) {}\n+\n+std::string MemPoolRemovalReasonString(const MemPoolRemovalReason reason)\n+{\n+    switch (reason) {\n+    case MemPoolRemovalReason::EXPIRY:\n+        return \"EXPIRY\";\n+    case MemPoolRemovalReason::SIZELIMIT:\n+        return \"SIZELIMIT\";\n+    case MemPoolRemovalReason::REORG:\n+        return \"REORG\";\n+    case MemPoolRemovalReason::BLOCK:\n+        return \"BLOCK\";\n+    case MemPoolRemovalReason::CONFLICT:\n+        return \"CONFLICT\";\n+    case MemPoolRemovalReason::REPLACED:\n+        return \"REPLACED\";\n+    }",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "deb243ef8798e7b400da9748a2f2dffe02617cc1",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    } // no default case, so the compiler can warn about missing cas\r\n```\r\n\r\nSee: [Developer Notes - `switch` statement on an enumeration example](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures)",
      "created_at": "2019-10-20T16:40:13Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336786215",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336786215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336787375",
      "pull_request_review_id": 304266930,
      "id": 336787375,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc4NzM3NQ==",
      "diff_hunk": "@@ -133,47 +138,88 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%d)\", __func__,\n+                       pindexNew->GetBlockHash().ToString(),\n+                       pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                       fInitialDownload);\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionAddedToMempool(ptx);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                       ptx->GetHash().ToString(),\n+                       ptx->GetWitnessHash().ToString());\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto event = [ptx, this] {\n             m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n+        };\n+        EnqueueAndLogEvent(event, \"%s: txid=%s wtxid=%s reason=%s\", __func__,\n+                           ptx->GetHash().ToString(),\n+                           ptx->GetWitnessHash().ToString(),\n+                           MemPoolRemovalReasonString(reason));\n     }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto event = [pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: block hash=%s block height=%d\", __func__,\n+                       pblock->GetHash().ToString(),\n+                       pindex->nHeight);\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock> &pblock) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, this] {\n+    auto event = [pblock, this] {\n         m_internals->BlockDisconnected(pblock);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: block hash=%s\", __func__,\n+                       pblock->GetHash().ToString());\n }\n \n void CMainSignals::ChainStateFlushed(const CBlockLocator &locator) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([locator, this] {\n+    auto event = [locator, this] {\n         m_internals->ChainStateFlushed(locator);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: block hash=%s\", __func__,\n+                       locator.IsNull() ? \"null\" : locator.vHave.front().ToString());\n }\n \n void CMainSignals::BlockChecked(const CBlock& block, const CValidationState& state) {\n+    LogEvent(\"%s: block hash=%s state=%s\", __func__,\n+             block.GetHash().ToString(), FormatStateMessage(state));\n     m_internals->BlockChecked(block, state);\n }\n \n void CMainSignals::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock> &block) {\n+    LogEvent(\"%s: block hash=%s\", __func__, block->GetHash().ToString());\n     m_internals->NewPoWValidBlock(pindex, block);\n }\n+\n+template <typename... Args>\n+void CMainSignals::EnqueueAndLogEvent(std::function<void ()> event, const char* fmt, const Args&... args) {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 98,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b6bc83628fed0f734887d0442df901b795d3ea33",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could `event` parameter be a const reference?",
      "created_at": "2019-10-20T17:09:15Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336787375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336787375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336798395",
      "pull_request_review_id": 304280055,
      "id": 336798395,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc5ODM5NQ==",
      "diff_hunk": "@@ -137,8 +137,8 @@ class CValidationState {\n     }\n     ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n-    std::string GetRejectReason() const { return strRejectReason; }\n-    std::string GetDebugMessage() const { return strDebugMessage; }\n+    const std::string& GetRejectReason() const { return strRejectReason; }\n+    const std::string& GetDebugMessage() const { return strDebugMessage; }",
      "path": "src/consensus/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "515e3ee7fa4bb83277136742f3b3f1a8ea9e3a56",
      "in_reply_to_id": 336742750,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fair enough. I've removed 6c730c3.",
      "created_at": "2019-10-20T21:27:00Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r336798395",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336798395"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337159481",
      "pull_request_review_id": 304746198,
      "id": 337159481,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzE1OTQ4MQ==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This does indeed seem to have caused a build failure: https://travis-ci.org/bitcoin/bitcoin/jobs/600461225",
      "created_at": "2019-10-21T18:02:17Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r337159481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337159481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337177094",
      "pull_request_review_id": 304769046,
      "id": 337177094,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzE3NzA5NA==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed. It seems variadic arguments within lambda captures are not supported by that compilation environment. At least that's what I've gleaned from a similar issue (https://github.com/Ultimaker/CuraEngine/issues/426#issuecomment-269451925). However, this shouldn't be a problem if I change it into a macro.",
      "created_at": "2019-10-21T18:40:19Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r337177094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337177094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340900721",
      "pull_request_review_id": 309574899,
      "id": 340900721,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDkwMDcyMQ==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Turns out changing `EnqueueAndLogEvent` into a macro has some implications that are making this infeasible. Consider:\r\n\r\n```c++\r\n#define ENQUEUE_AND_LOG_EVENT(event, fmt, ...)                                             \\\r\n    do {                                                                                   \\\r\n        LOG_EVENT(\"Enqueuing \" fmt, __VA_ARGS__);                                          \\\r\n        m_internals->m_schedulerClient.AddToProcessQueue([event, fmt, __VA_ARGS__, this] { \\\r\n            LOG_EVENT(fmt, __VA_ARGS__);                                                   \\\r\n            event();                                                                       \\\r\n        });                                                                                \\\r\n    } while (0)\r\n\r\n#define LOG_EVENT(fmt, ...) \\\r\n    LogPrint(BCLog::VALIDATIONINTERFACE, fmt \"\\n\", __VA_ARGS__);\r\n```\r\n\r\nThe problem is that the capture list is expecting variables but the call sites are providing expressions. So unfortunately this won't compile. Presumably, if this did work, the expressions in the lambda would be evaluated thus defeating the purpose.\r\n\r\nUnless there is a creative solution that I'm unaware of, the only alternative I can think of is to forgo the macro and duplicate the `LogPrint` for the enqueuing in each method. Thoughts?",
      "created_at": "2019-10-30T23:14:06Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r340900721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340900721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340917763",
      "pull_request_review_id": 309595296,
      "id": 340917763,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDkxNzc2Mw==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, it looks like using a default capture instead of `__VA_ARGS__` will do what I need!",
      "created_at": "2019-10-31T00:30:11Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r340917763",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340917763"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341299111",
      "pull_request_review_id": 310092896,
      "id": 341299111,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTI5OTExMQ==",
      "diff_hunk": "@@ -128,52 +132,69 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n-\n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b303865bc68f2bfecd6bd3b8c7baf2c836f30549",
      "in_reply_to_id": 332745377,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Implemented as a macro in 6ab424c.",
      "created_at": "2019-10-31T18:23:15Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r341299111",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341299111"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341299386",
      "pull_request_review_id": 310093254,
      "id": 341299386,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTI5OTM4Ng==",
      "diff_hunk": "@@ -133,47 +138,88 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%d)\", __func__,\n+                       pindexNew->GetBlockHash().ToString(),\n+                       pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                       fInitialDownload);\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionAddedToMempool(ptx);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                       ptx->GetHash().ToString(),\n+                       ptx->GetWitnessHash().ToString());\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto event = [ptx, this] {\n             m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n+        };\n+        EnqueueAndLogEvent(event, \"%s: txid=%s wtxid=%s reason=%s\", __func__,\n+                           ptx->GetHash().ToString(),\n+                           ptx->GetWitnessHash().ToString(),\n+                           MemPoolRemovalReasonString(reason));\n     }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto event = [pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: block hash=%s block height=%d\", __func__,\n+                       pblock->GetHash().ToString(),\n+                       pindex->nHeight);\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock> &pblock) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, this] {\n+    auto event = [pblock, this] {\n         m_internals->BlockDisconnected(pblock);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: block hash=%s\", __func__,\n+                       pblock->GetHash().ToString());\n }\n \n void CMainSignals::ChainStateFlushed(const CBlockLocator &locator) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([locator, this] {\n+    auto event = [locator, this] {\n         m_internals->ChainStateFlushed(locator);\n-    });\n+    };\n+    EnqueueAndLogEvent(event, \"%s: block hash=%s\", __func__,\n+                       locator.IsNull() ? \"null\" : locator.vHave.front().ToString());\n }\n \n void CMainSignals::BlockChecked(const CBlock& block, const CValidationState& state) {\n+    LogEvent(\"%s: block hash=%s state=%s\", __func__,\n+             block.GetHash().ToString(), FormatStateMessage(state));\n     m_internals->BlockChecked(block, state);\n }\n \n void CMainSignals::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock> &block) {\n+    LogEvent(\"%s: block hash=%s\", __func__, block->GetHash().ToString());\n     m_internals->NewPoWValidBlock(pindex, block);\n }\n+\n+template <typename... Args>\n+void CMainSignals::EnqueueAndLogEvent(std::function<void ()> event, const char* fmt, const Args&... args) {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 98,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "b6bc83628fed0f734887d0442df901b795d3ea33",
      "in_reply_to_id": 336787375,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No longer applicable as this is now a macros in 6ab424c.",
      "created_at": "2019-10-31T18:23:53Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r341299386",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341299386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341748783",
      "pull_request_review_id": 310692707,
      "id": 341748783,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc0ODc4Mw==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\",
      "path": "src/validationinterface.cpp",
      "position": 24,
      "original_position": 41,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At this point, it might just be easier to hard-code the function name into the log strings, or do you see a down-side to that?",
      "created_at": "2019-11-01T20:58:02Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r341748783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341748783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 124,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341767912",
      "pull_request_review_id": 310717851,
      "id": 341767912,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTc2NzkxMg==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\",
      "path": "src/validationinterface.cpp",
      "position": 24,
      "original_position": 41,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "in_reply_to_id": 341748783,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The downside is that the logging can go out of sync if the method is renamed (like in dd2855d) and that the format string is longer.\r\n\r\nNote this implementation was used in an earlier version of the PR: https://github.com/bitcoin/bitcoin/pull/16688#pullrequestreview-278747465 (see second outdated comment). It was no longer needed when I added a helper method but needed again once I switched to a macro.",
      "created_at": "2019-11-01T22:09:23Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r341767912",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/341767912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 124,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342251600",
      "pull_request_review_id": 311334330,
      "id": 342251600,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjI1MTYwMA==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\\n+        LOG_EVENT(\"Enqueuing \" fmt, local_name, __VA_ARGS__);  \\\n+        m_internals->m_schedulerClient.AddToProcessQueue([=] { \\\n+            LOG_EVENT(fmt, local_name, __VA_ARGS__);           \\\n+            event();                                           \\\n+        });                                                    \\\n+    } while (0)\n+\n+#define LOG_EVENT(fmt, ...) \\\n+    LogPrint(BCLog::VALIDATIONINTERFACE, fmt \"\\n\", __VA_ARGS__)\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%d)\", __func__,\n+                          pindexNew->GetBlockHash().ToString(),\n+                          pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                          fInitialDownload);",
      "path": "src/validationinterface.cpp",
      "position": 48,
      "original_position": 65,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `fInitialDownload ? 'true' : 'false'`",
      "created_at": "2019-11-04T20:21:36Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342251600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342251600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342255685",
      "pull_request_review_id": 311334330,
      "id": 342255685,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjI1NTY4NQ==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\\n+        LOG_EVENT(\"Enqueuing \" fmt, local_name, __VA_ARGS__);  \\\n+        m_internals->m_schedulerClient.AddToProcessQueue([=] { \\\n+            LOG_EVENT(fmt, local_name, __VA_ARGS__);           \\\n+            event();                                           \\\n+        });                                                    \\\n+    } while (0)\n+\n+#define LOG_EVENT(fmt, ...) \\\n+    LogPrint(BCLog::VALIDATIONINTERFACE, fmt \"\\n\", __VA_ARGS__)\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%d)\", __func__,\n+                          pindexNew->GetBlockHash().ToString(),\n+                          pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                          fInitialDownload);\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionAddedToMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n+}\n+\n+void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n+    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n+        auto event = [ptx, this] {\n+            m_internals->TransactionRemovedFromMempool(ptx);\n+        };\n+        ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s reason=%s\", __func__,\n+                              ptx->GetHash().ToString(),\n+                              ptx->GetWitnessHash().ToString(),\n+                              MemPoolRemovalReasonString(reason));\n+    }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto event = [pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s block height=%d\", __func__,\n+                          pblock->GetHash().ToString(),\n+                          pindex->nHeight);\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock> &pblock) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, this] {\n+    auto event = [pblock, this] {\n         m_internals->BlockDisconnected(pblock);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s\", __func__,\n+                          pblock->GetHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Observation: This should be updated to also log the height when #15931 is merged (specifically commit https://github.com/bitcoin/bitcoin/pull/15931/commits/7d0f76a83e50328aaa8e7836b533ea0ea10d3c53)",
      "created_at": "2019-11-04T20:31:38Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342255685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342255685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342728594",
      "pull_request_review_id": 311952786,
      "id": 342728594,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjcyODU5NA==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\\n+        LOG_EVENT(\"Enqueuing \" fmt, local_name, __VA_ARGS__);  \\\n+        m_internals->m_schedulerClient.AddToProcessQueue([=] { \\\n+            LOG_EVENT(fmt, local_name, __VA_ARGS__);           \\\n+            event();                                           \\\n+        });                                                    \\\n+    } while (0)\n+\n+#define LOG_EVENT(fmt, ...) \\\n+    LogPrint(BCLog::VALIDATIONINTERFACE, fmt \"\\n\", __VA_ARGS__)\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%d)\", __func__,\n+                          pindexNew->GetBlockHash().ToString(),\n+                          pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                          fInitialDownload);",
      "path": "src/validationinterface.cpp",
      "position": 48,
      "original_position": 65,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "in_reply_to_id": 342251600,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in f871e27 by changing `%d` to `%s`, as tinyformat does the conversion if using that specifier.\r\n\r\nhttps://github.com/c42f/tinyformat#special-cases-for-p-c-and-s",
      "created_at": "2019-11-05T18:37:41Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342728594",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342728594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342729535",
      "pull_request_review_id": 311952786,
      "id": 342729535,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjcyOTUzNQ==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\\n+        LOG_EVENT(\"Enqueuing \" fmt, local_name, __VA_ARGS__);  \\\n+        m_internals->m_schedulerClient.AddToProcessQueue([=] { \\\n+            LOG_EVENT(fmt, local_name, __VA_ARGS__);           \\\n+            event();                                           \\\n+        });                                                    \\\n+    } while (0)\n+\n+#define LOG_EVENT(fmt, ...) \\\n+    LogPrint(BCLog::VALIDATIONINTERFACE, fmt \"\\n\", __VA_ARGS__)\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%d)\", __func__,\n+                          pindexNew->GetBlockHash().ToString(),\n+                          pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                          fInitialDownload);\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionAddedToMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n+}\n+\n+void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n+    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n+        auto event = [ptx, this] {\n+            m_internals->TransactionRemovedFromMempool(ptx);\n+        };\n+        ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s reason=%s\", __func__,\n+                              ptx->GetHash().ToString(),\n+                              ptx->GetWitnessHash().ToString(),\n+                              MemPoolRemovalReasonString(reason));\n+    }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto event = [pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s block height=%d\", __func__,\n+                          pblock->GetHash().ToString(),\n+                          pindex->nHeight);\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock> &pblock) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, this] {\n+    auto event = [pblock, this] {\n         m_internals->BlockDisconnected(pblock);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s\", __func__,\n+                          pblock->GetHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "in_reply_to_id": 342255685,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ACK. Happy to wait for that to be merged if you prefer.",
      "created_at": "2019-11-05T18:39:30Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342729535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342729535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342825836",
      "pull_request_review_id": 312080356,
      "id": 342825836,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjgyNTgzNg==",
      "diff_hunk": "@@ -356,6 +356,8 @@ enum class MemPoolRemovalReason {\n     REPLACED,    //!< Removed for replacement\n };\n \n+std::string MemPoolRemovalReasonString(const MemPoolRemovalReason reason);",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 4,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "454caa12c2267f01ae6aa3d5d0a8525e2d457c50",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: const? ",
      "created_at": "2019-11-05T22:14:54Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342825836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342825836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 357,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342827985",
      "pull_request_review_id": 312080356,
      "id": 342827985,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjgyNzk4NQ==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n+// Use a macro instead of a function for conditional logging to prevent",
      "path": "src/validationinterface.cpp",
      "position": 18,
      "original_position": 19,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "f871e272a1e4bd2b1c8b474416ee8eb065ef4e2c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not a C++ expert, could you explain or point to why macro prevent to evaluate argument there? I mean aren't they replaced at preprocessing and we know flag only at runtime?",
      "created_at": "2019-11-05T22:20:24Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342827985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342827985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 118,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342835637",
      "pull_request_review_id": 312092817,
      "id": 342835637,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjgzNTYzNw==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n+// Use a macro instead of a function for conditional logging to prevent",
      "path": "src/validationinterface.cpp",
      "position": 18,
      "original_position": 19,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "f871e272a1e4bd2b1c8b474416ee8eb065ef4e2c",
      "in_reply_to_id": 342827985,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "compare the macro expansion:\r\n\r\n```c++\r\nif (debug_foo) {\r\n    LogPrintf(\"Foobar %i\", ExpensiveToComputeFunction());\r\n}\r\n```\r\n\r\nwith\r\n\r\n```c++\r\nLogPrint(BCLog::FOO, \"Foobar %i\", ExpensiveToComputeFunction());\r\n```\r\n\r\nIn the first example, `ExpensiveToComputeFunction` is not invoked if `debug_foo` is false. In the second one it's invoked, but then disregarded by `LogPrint`.",
      "created_at": "2019-11-05T22:41:01Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342835637",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342835637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 118,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342844017",
      "pull_request_review_id": 312103713,
      "id": 342844017,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Mjg0NDAxNw==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n+// Use a macro instead of a function for conditional logging to prevent",
      "path": "src/validationinterface.cpp",
      "position": 18,
      "original_position": 19,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "f871e272a1e4bd2b1c8b474416ee8eb065ef4e2c",
      "in_reply_to_id": 342827985,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks but got it, `LogPrint` has been changed to a macro in https://github.com/bitcoin/bitcoin/pull/17218, was still thinking it was a function...\r\n\r\nThat's said shouldn't we use the `LOG_PRINT` convention as for any other macro ?",
      "created_at": "2019-11-05T23:06:38Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342844017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342844017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 118,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342848451",
      "pull_request_review_id": 312109298,
      "id": 342848451,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Mjg0ODQ1MQ==",
      "diff_hunk": "@@ -356,6 +356,8 @@ enum class MemPoolRemovalReason {\n     REPLACED,    //!< Removed for replacement\n };\n \n+std::string MemPoolRemovalReasonString(const MemPoolRemovalReason reason);",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 4,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "454caa12c2267f01ae6aa3d5d0a8525e2d457c50",
      "in_reply_to_id": 342825836,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do you mean remove the const from the parameter?",
      "created_at": "2019-11-05T23:21:26Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342848451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342848451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 357,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342876449",
      "pull_request_review_id": 312144190,
      "id": 342876449,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Mjg3NjQ0OQ==",
      "diff_hunk": "@@ -356,6 +356,8 @@ enum class MemPoolRemovalReason {\n     REPLACED,    //!< Removed for replacement\n };\n \n+std::string MemPoolRemovalReasonString(const MemPoolRemovalReason reason);",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 4,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "454caa12c2267f01ae6aa3d5d0a8525e2d457c50",
      "in_reply_to_id": 342825836,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nevermind, that's not a class method, useless to put const in function signature",
      "created_at": "2019-11-06T01:14:29Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r342876449",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342876449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 357,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343476465",
      "pull_request_review_id": 313109192,
      "id": 343476465,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzQ3NjQ2NQ==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n+// Use a macro instead of a function for conditional logging to prevent",
      "path": "src/validationinterface.cpp",
      "position": 18,
      "original_position": 19,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "f871e272a1e4bd2b1c8b474416ee8eb065ef4e2c",
      "in_reply_to_id": 342827985,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm using the convention in this PR but did not change it in the referenced PR for `LogPrint` since it was simply partially reverting a commit. It would have been a much larger change to update all the call sites, and that's something I'd be hesitant in undertaking without enough support for the change.",
      "created_at": "2019-11-07T04:57:32Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r343476465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343476465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 118,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344134808",
      "pull_request_review_id": 314148347,
      "id": 344134808,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDEzNDgwOA==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\\n+        LOG_EVENT(\"Enqueuing \" fmt, local_name, __VA_ARGS__);  \\\n+        m_internals->m_schedulerClient.AddToProcessQueue([=] { \\\n+            LOG_EVENT(fmt, local_name, __VA_ARGS__);           \\\n+            event();                                           \\\n+        });                                                    \\\n+    } while (0)\n+\n+#define LOG_EVENT(fmt, ...) \\\n+    LogPrint(BCLog::VALIDATIONINTERFACE, fmt \"\\n\", __VA_ARGS__)\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%d)\", __func__,\n+                          pindexNew->GetBlockHash().ToString(),\n+                          pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                          fInitialDownload);\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionAddedToMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n+}\n+\n+void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n+    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n+        auto event = [ptx, this] {\n+            m_internals->TransactionRemovedFromMempool(ptx);\n+        };\n+        ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s reason=%s\", __func__,\n+                              ptx->GetHash().ToString(),\n+                              ptx->GetWitnessHash().ToString(),\n+                              MemPoolRemovalReasonString(reason));\n+    }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto event = [pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s block height=%d\", __func__,\n+                          pblock->GetHash().ToString(),\n+                          pindex->nHeight);\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock> &pblock) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, this] {\n+    auto event = [pblock, this] {\n         m_internals->BlockDisconnected(pblock);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s\", __func__,\n+                          pblock->GetHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "in_reply_to_id": 342255685,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "#15931 is merged",
      "created_at": "2019-11-08T11:36:13Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r344134808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344134808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344397553",
      "pull_request_review_id": 314501475,
      "id": 344397553,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NDM5NzU1Mw==",
      "diff_hunk": "@@ -126,52 +131,90 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\\n+        LOG_EVENT(\"Enqueuing \" fmt, local_name, __VA_ARGS__);  \\\n+        m_internals->m_schedulerClient.AddToProcessQueue([=] { \\\n+            LOG_EVENT(fmt, local_name, __VA_ARGS__);           \\\n+            event();                                           \\\n+        });                                                    \\\n+    } while (0)\n+\n+#define LOG_EVENT(fmt, ...) \\\n+    LogPrint(BCLog::VALIDATIONINTERFACE, fmt \"\\n\", __VA_ARGS__)\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%d)\", __func__,\n+                          pindexNew->GetBlockHash().ToString(),\n+                          pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                          fInitialDownload);\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionAddedToMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n+}\n+\n+void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n+    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n+        auto event = [ptx, this] {\n+            m_internals->TransactionRemovedFromMempool(ptx);\n+        };\n+        ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s reason=%s\", __func__,\n+                              ptx->GetHash().ToString(),\n+                              ptx->GetWitnessHash().ToString(),\n+                              MemPoolRemovalReasonString(reason));\n+    }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto event = [pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s block height=%d\", __func__,\n+                          pblock->GetHash().ToString(),\n+                          pindex->nHeight);\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock> &pblock) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, this] {\n+    auto event = [pblock, this] {\n         m_internals->BlockDisconnected(pblock);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s\", __func__,\n+                          pblock->GetHash().ToString());",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "9eb373c07ad78448ea78eee97d1ee9b9b409b4b9",
      "in_reply_to_id": 342255685,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated in 741cab0.",
      "created_at": "2019-11-08T22:52:44Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r344397553",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/344397553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/349771939",
      "pull_request_review_id": 321779545,
      "id": 349771939,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0OTc3MTkzOQ==",
      "diff_hunk": "@@ -1098,3 +1100,22 @@ void CTxMemPool::SetIsLoaded(bool loaded)\n }\n \n SaltedTxidHasher::SaltedTxidHasher() : k0(GetRand(std::numeric_limits<uint64_t>::max())), k1(GetRand(std::numeric_limits<uint64_t>::max())) {}\n+\n+std::string MemPoolRemovalReasonString(const MemPoolRemovalReason reason)\n+{\n+    switch (reason) {\n+    case MemPoolRemovalReason::EXPIRY:\n+        return \"EXPIRY\";\n+    case MemPoolRemovalReason::SIZELIMIT:\n+        return \"SIZELIMIT\";\n+    case MemPoolRemovalReason::REORG:\n+        return \"REORG\";\n+    case MemPoolRemovalReason::BLOCK:\n+        return \"BLOCK\";\n+    case MemPoolRemovalReason::CONFLICT:\n+        return \"CONFLICT\";\n+    case MemPoolRemovalReason::REPLACED:\n+        return \"REPLACED\";\n+    }",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "deb243ef8798e7b400da9748a2f2dffe02617cc1",
      "in_reply_to_id": 336786215,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No longer needed since rebasing removed the need for this code.",
      "created_at": "2019-11-22T20:02:32Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r349771939",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/349771939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361541021",
      "pull_request_review_id": 336624585,
      "id": 361541021,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTU0MTAyMQ==",
      "diff_hunk": "@@ -162,6 +162,7 @@ const CLogCategoryDesc LogCategories[] =\n     {BCLog::COINDB, \"coindb\"},\n     {BCLog::QT, \"qt\"},\n     {BCLog::LEVELDB, \"leveldb\"},\n+    {BCLog::VALIDATIONINTERFACE, \"validationinterface\"},",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "389d423a252e43d0b08871f8ae5b66a84a8a217c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add VALIDATIONINTERFACE to BCLog::LogFlags\" (389d423a252e43d0b08871f8ae5b66a84a8a217c)\r\n\r\nWould change names to `VALIDATION, \"validation\"`. These are just validation events. Fact that they are printed in the validationinterface source file instead of the validation one is an implementation detail that could change and would be arcane to someone just trying to configure logging categories.",
      "created_at": "2019-12-26T22:08:05Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r361541021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361541021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 165,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361541576",
      "pull_request_review_id": 336624585,
      "id": 361541576,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTU0MTU3Ng==",
      "diff_hunk": "@@ -6,9 +6,9 @@\n #ifndef BITCOIN_UTIL_VALIDATION_H\n #define BITCOIN_UTIL_VALIDATION_H\n \n-#include <string>\n+#include <consensus/validation.h>\n \n-class ValidationState;",
      "path": "src/util/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "ee4d66a38c5c09161f8a3e63047db6b6908687f4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Format CValidationState properly in all cases\" (ee4d66a38c5c09161f8a3e63047db6b6908687f4)\r\n\r\nReplacing forward declaration with a full include seems unnecessary here, just making the diff bigger and perhaps unnecessarily slowing down compilation.",
      "created_at": "2019-12-26T22:12:38Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r361541576",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361541576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361542659",
      "pull_request_review_id": 336624585,
      "id": 361542659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTU0MjY1OQ==",
      "diff_hunk": "@@ -5,15 +5,20 @@\n \n #include <util/validation.h>\n \n-#include <consensus/validation.h>\n #include <tinyformat.h>\n \n-/** Convert ValidationState to a human-readable message for logging */\n std::string FormatStateMessage(const ValidationState &state)\n {\n-    return strprintf(\"%s%s\",\n-        state.GetRejectReason(),\n-        state.GetDebugMessage().empty() ? \"\" : \", \"+state.GetDebugMessage());\n+    if (state.IsValid()) {\n+        return \"Valid\";\n+    }\n+\n+    const std::string debug_message = state.GetDebugMessage();\n+    if (!debug_message.empty()) {\n+        return strprintf(\"%s, %s\", state.GetRejectReason(), debug_message);\n+    }",
      "path": "src/util/validation.cpp",
      "position": 17,
      "original_position": 20,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "ee4d66a38c5c09161f8a3e63047db6b6908687f4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Format CValidationState properly in all cases\" (ee4d66a38c5c09161f8a3e63047db6b6908687f4)\r\n\r\nI'm a little confused by all the changes in this commit. As far as I can tell the only change that affects behavior is adding `if (state.IsValid()) return \"Valid\";` at the top of this function, and everything else is a rewrite / style cleanup. Not a big deal, but in the future it might be good to fully motivate changes in the commit description or do style changes in separate commits.",
      "created_at": "2019-12-26T22:22:29Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r361542659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361542659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": 17,
      "original_start_line": 16,
      "start_side": "RIGHT",
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361543177",
      "pull_request_review_id": 336624585,
      "id": 361543177,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTU0MzE3Nw==",
      "diff_hunk": "@@ -110,52 +114,88 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\\n+        LOG_EVENT(\"Enqueuing \" fmt, local_name, __VA_ARGS__);  \\\n+        m_internals->m_schedulerClient.AddToProcessQueue([=] { \\\n+            LOG_EVENT(fmt, local_name, __VA_ARGS__);           \\\n+            event();                                           \\\n+        });                                                    \\\n+    } while (0)\n+\n+#define LOG_EVENT(fmt, ...) \\\n+    LogPrint(BCLog::VALIDATIONINTERFACE, fmt \"\\n\", __VA_ARGS__)\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%s)\", __func__,\n+                          pindexNew->GetBlockHash().ToString(),\n+                          pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                          fInitialDownload);\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionAddedToMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n }\n \n void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionRemovedFromMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto event = [pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s block height=%d\", __func__,\n+                          pblock->GetHash().ToString(),\n+                          pindex->nHeight);\n }\n \n-void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindex)\n-{\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, this] {\n+void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindex) {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "0cadb123bad37a2c224834a3d98bed474c661c21",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add logging for CValidationInterface events\" (0cadb123bad37a2c224834a3d98bed474c661c21)\r\n\r\nWhitespace is changing unnecessarily (and format is nonstandard, brace should go on new line)",
      "created_at": "2019-12-26T22:27:18Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r361543177",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361543177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362925681",
      "pull_request_review_id": 338229413,
      "id": 362925681,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyNTY4MQ==",
      "diff_hunk": "@@ -110,52 +114,88 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\\n+        LOG_EVENT(\"Enqueuing \" fmt, local_name, __VA_ARGS__);  \\\n+        m_internals->m_schedulerClient.AddToProcessQueue([=] { \\\n+            LOG_EVENT(fmt, local_name, __VA_ARGS__);           \\\n+            event();                                           \\\n+        });                                                    \\\n+    } while (0)\n+\n+#define LOG_EVENT(fmt, ...) \\\n+    LogPrint(BCLog::VALIDATIONINTERFACE, fmt \"\\n\", __VA_ARGS__)\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%s)\", __func__,\n+                          pindexNew->GetBlockHash().ToString(),\n+                          pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                          fInitialDownload);\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionAddedToMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n }\n \n void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionRemovedFromMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto event = [pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s block height=%d\", __func__,\n+                          pblock->GetHash().ToString(),\n+                          pindex->nHeight);\n }\n \n-void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindex)\n-{\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, this] {\n+void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindex) {",
      "path": "src/validationinterface.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "original_commit_id": "0cadb123bad37a2c224834a3d98bed474c661c21",
      "in_reply_to_id": 361543177,
      "user": {
        "login": "jkczyz",
        "id": 4015903,
        "node_id": "MDQ6VXNlcjQwMTU5MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jkczyz",
        "html_url": "https://github.com/jkczyz",
        "followers_url": "https://api.github.com/users/jkczyz/followers",
        "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
        "organizations_url": "https://api.github.com/users/jkczyz/orgs",
        "repos_url": "https://api.github.com/users/jkczyz/repos",
        "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jkczyz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was largely trying to avoid style changes and conform with the local conventions in the file. However, in the interim the brace was moved in https://github.com/bitcoin/bitcoin/commit/10b4729e33f76092bd8cfa06d1a5e0a066436f76#diff-e8d9e22d9683f73a9fb8399be0dab640R159 to use the standard conventions.\r\n\r\nNot sure what is preferred, but I don't mind changing it back to reduce the diff size.",
      "created_at": "2020-01-03T19:10:26Z",
      "updated_at": "2020-01-03T20:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r362925681",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362925681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 175,
      "side": "RIGHT"
    }
  ]
}