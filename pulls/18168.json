{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18168",
    "id": 376382166,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc2MzgyMTY2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18168",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18168.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18168.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18168/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18168/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/aff2748f8aee72f03b5fb6f6f97f0d0f66391755",
    "number": 18168,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "httpserver: use own HTTP status codes",
    "user": {
      "login": "toxeus",
      "id": 7702854,
      "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toxeus",
      "html_url": "https://github.com/toxeus",
      "followers_url": "https://api.github.com/users/toxeus/followers",
      "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
      "organizations_url": "https://api.github.com/users/toxeus/orgs",
      "repos_url": "https://api.github.com/users/toxeus/repos",
      "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/toxeus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Before, macros defined in `<event2/http.h>` have been used for some HTTP status codes. `<event2/http.h>` is included implicitly and the usage of its status code macros is inconsistent with the majority HTTP response implementations in this file.\r\n\r\nNow, the `HTTPStatusCode` enum from `<rpc/protocol.h>` is consistently used for all HTTP response implementations.",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-02-18T02:11:59Z",
    "updated_at": "2022-02-15T10:27:56Z",
    "closed_at": "2020-03-02T16:11:47Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-03-02T16:11:47Z",
    "merge_commit_sha": "ac5c5d0162a963be6fbaa53261c01705436a65f3",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "toxeus:500",
      "ref": "500",
      "sha": "aff2748f8aee72f03b5fb6f6f97f0d0f66391755",
      "user": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 142884434,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDI4ODQ0MzQ=",
        "name": "bitcoin",
        "full_name": "toxeus/bitcoin",
        "owner": {
          "login": "toxeus",
          "id": 7702854,
          "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/toxeus",
          "html_url": "https://github.com/toxeus",
          "followers_url": "https://api.github.com/users/toxeus/followers",
          "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
          "organizations_url": "https://api.github.com/users/toxeus/orgs",
          "repos_url": "https://api.github.com/users/toxeus/repos",
          "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/toxeus/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/toxeus/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/toxeus/bitcoin",
        "archive_url": "https://api.github.com/repos/toxeus/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/toxeus/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/toxeus/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/toxeus/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/toxeus/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/toxeus/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/toxeus/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/toxeus/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/toxeus/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/toxeus/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/toxeus/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/toxeus/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/toxeus/bitcoin/events",
        "forks_url": "https://api.github.com/repos/toxeus/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/toxeus/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/toxeus/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/toxeus/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/toxeus/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/toxeus/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/toxeus/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/toxeus/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/toxeus/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/toxeus/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/toxeus/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/toxeus/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/toxeus/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/toxeus/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/toxeus/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/toxeus/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:toxeus/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/toxeus/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/toxeus/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/toxeus/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/toxeus/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/toxeus/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/toxeus/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/toxeus/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/toxeus/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/toxeus/bitcoin/hooks",
        "svn_url": "https://github.com/toxeus/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 141214,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2020-03-24T11:59:18Z",
        "created_at": "2018-07-30T14:08:57Z",
        "updated_at": "2020-03-24T11:59:37Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "36f42e1bf43f2c9f3b4642814051cedf66f05a5e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18168"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 4,
    "deletions": 4,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 0,
    "comments": 17
  },
  "events": [
    {
      "event": "labeled",
      "id": 3045450726,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwNDU0NTA3MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3045450726",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T02:12:59Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "commented",
      "id": 587313899,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzMxMzg5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587313899",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T07:09:43Z",
      "updated_at": "2020-02-18T07:09:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nice find and welcome as a contributor!\r\n\r\nConcept ACK\r\n\r\nIn addition to `HTTP_INTERNAL` it seems like we have the same issue also for `HTTP_BADMETHOD` and `HTTP_NOTFOUND`?\r\n\r\n```sh\r\n$ for S in $(git grep '>WriteReply(' | tr \"(),\" \"\\n\" | egrep ^HTTP_ | sort -u); do\r\n      echo \"=== $S\"\r\n      grep \"$S\" src/rpc/protocol.h\r\n      echo\r\n  done\r\n=== HTTP_BADMETHOD\r\n\r\n=== HTTP_BAD_METHOD\r\n    HTTP_BAD_METHOD            = 405,\r\n\r\n=== HTTP_FORBIDDEN\r\n    HTTP_FORBIDDEN             = 403,\r\n\r\n=== HTTP_INTERNAL\r\n    HTTP_INTERNAL_SERVER_ERROR = 500,\r\n\r\n=== HTTP_NOTFOUND\r\n\r\n=== HTTP_OK\r\n    HTTP_OK                    = 200,\r\n\r\n=== HTTP_UNAUTHORIZED\r\n    HTTP_UNAUTHORIZED          = 401,\r\n\r\n```",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587313899",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "commented",
      "id": 587315046,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzMxNTA0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587315046",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T07:13:52Z",
      "updated_at": "2020-02-18T07:13:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks! I've stumbled upon this while debugging a client that exceeds the HTTP worker queue. I'll cleanup the remaining status codes.",
      "user": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587315046",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3045952529,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA0NTk1MjUyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3045952529",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T07:21:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3045963481,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA0NTk2MzQ4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3045963481",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T07:26:01Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZmYyNzQ4ZjhhZWU3MmYwM2I1ZmI2ZjZmOTdmMGQwZjY2MzkxNzU1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aff2748f8aee72f03b5fb6f6f97f0d0f66391755",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aff2748f8aee72f03b5fb6f6f97f0d0f66391755",
      "tree": {
        "sha": "257f16f03f1ea0d4450c069468c1a583db927301",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/257f16f03f1ea0d4450c069468c1a583db927301"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36f42e1bf43f2c9f3b4642814051cedf66f05a5e",
          "sha": "36f42e1bf43f2c9f3b4642814051cedf66f05a5e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/36f42e1bf43f2c9f3b4642814051cedf66f05a5e"
        }
      ],
      "message": "httpserver: use own HTTP status codes\n\nBefore, macros defined in `<event2/http.h>` have been used\nfor some HTTP status codes.\n`<event2/http.h>` is included implicitly and the usage\nof its status code macros is inconsistent with the majority\nHTTP response implementations in this file.\n\nNow, the `HTTPStatusCode` enum from `<rpc/protocol.h>` is\nconsistently used for all HTTP response implementations.",
      "committer": {
        "name": "Filip Gospodinov",
        "email": "f@gospodinov.ch",
        "date": "2020-02-18T07:29:35Z"
      },
      "author": {
        "name": "Filip Gospodinov",
        "email": "f@gospodinov.ch",
        "date": "2020-02-18T07:29:35Z"
      },
      "sha": "aff2748f8aee72f03b5fb6f6f97f0d0f66391755"
    },
    {
      "event": "commented",
      "id": 587415682,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQxNTY4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587415682",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T11:27:55Z",
      "updated_at": "2020-02-18T11:27:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "@toxeus To get some structure in the handling of status code we might want to consider changing from `enum HTTPStatusCode` to `enum class HTTPStatusCode`?\r\n\r\nSomething along the lines of ...\r\n\r\n<details><summary>Click for patch</summary>\r\n\r\n```diff\r\ndiff --git a/src/bitcoin-cli.cpp b/src/bitcoin-cli.cpp\r\nindex c085095a2..b9eeff819 100644\r\n--- a/src/bitcoin-cli.cpp\r\n+++ b/src/bitcoin-cli.cpp\r\n@@ -388,7 +388,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\r\n             responseErrorMessage = strprintf(\" (error code %d - \\\"%s\\\")\", response.error, http_errorstring(response.error));\r\n         }\r\n         throw CConnectionFailed(strprintf(\"Could not connect to the server %s:%d%s\\n\\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\", host, port, responseErrorMessage));\r\n-    } else if (response.status == HTTP_UNAUTHORIZED) {\r\n+    } else if (response.status == static_cast<int>(HTTPStatusCode::HTTP_UNAUTHORIZED)) {\r\n         if (failedToGetAuthCookie) {\r\n             throw std::runtime_error(strprintf(\r\n                 \"Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (%s)\",\r\n@@ -396,7 +396,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\r\n         } else {\r\n             throw std::runtime_error(\"Authorization failed: Incorrect rpcuser or rpcpassword\");\r\n         }\r\n-    } else if (response.status >= 400 && response.status != HTTP_BAD_REQUEST && response.status != HTTP_NOT_FOUND && response.status != HTTP_INTERNAL_SERVER_ERROR)\r\n+    } else if (response.status >= 400 && response.status != static_cast<int>(HTTPStatusCode::HTTP_BAD_REQUEST) && response.status != static_cast<int>(HTTPStatusCode::HTTP_NOT_FOUND) && response.status != static_cast<int>(HTTPStatusCode::HTTP_INTERNAL_SERVER_ERROR))\r\n         throw std::runtime_error(strprintf(\"server returned HTTP error %d\", response.status));\r\n     else if (response.body.empty())\r\n         throw std::runtime_error(\"no response from server\");\r\ndiff --git a/src/httprpc.cpp b/src/httprpc.cpp\r\nindex ff7578922..ec5734997 100644\r\n--- a/src/httprpc.cpp\r\n+++ b/src/httprpc.cpp\r\n@@ -76,13 +76,13 @@ static bool g_rpc_whitelist_default = false;\r\n static void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const UniValue& id)\r\n {\r\n     // Send error reply from json-rpc error object\r\n-    int nStatus = HTTP_INTERNAL_SERVER_ERROR;\r\n+    HTTPStatusCode nStatus = HTTPStatusCode::HTTP_INTERNAL_SERVER_ERROR;\r\n     int code = find_value(objError, \"code\").get_int();\r\n \r\n     if (code == RPC_INVALID_REQUEST)\r\n-        nStatus = HTTP_BAD_REQUEST;\r\n+        nStatus = HTTPStatusCode::HTTP_BAD_REQUEST;\r\n     else if (code == RPC_METHOD_NOT_FOUND)\r\n-        nStatus = HTTP_NOT_FOUND;\r\n+        nStatus = HTTPStatusCode::HTTP_NOT_FOUND;\r\n \r\n     std::string strReply = JSONRPCReply(NullUniValue, objError, id);\r\n \r\n@@ -155,14 +155,14 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\r\n {\r\n     // JSONRPC handles only POST\r\n     if (req->GetRequestMethod() != HTTPRequest::POST) {\r\n-        req->WriteReply(HTTP_BAD_METHOD, \"JSONRPC server handles only POST requests\");\r\n+        req->WriteReply(HTTPStatusCode::HTTP_BAD_METHOD, \"JSONRPC server handles only POST requests\");\r\n         return false;\r\n     }\r\n     // Check authorization\r\n     std::pair<bool, std::string> authHeader = req->GetHeader(\"authorization\");\r\n     if (!authHeader.first) {\r\n         req->WriteHeader(\"WWW-Authenticate\", WWW_AUTH_HEADER_DATA);\r\n-        req->WriteReply(HTTP_UNAUTHORIZED);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_UNAUTHORIZED);\r\n         return false;\r\n     }\r\n \r\n@@ -177,7 +177,7 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\r\n         MilliSleep(250);\r\n \r\n         req->WriteHeader(\"WWW-Authenticate\", WWW_AUTH_HEADER_DATA);\r\n-        req->WriteReply(HTTP_UNAUTHORIZED);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_UNAUTHORIZED);\r\n         return false;\r\n     }\r\n \r\n@@ -194,7 +194,7 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\r\n         bool user_has_whitelist = g_rpc_whitelist.count(jreq.authUser);\r\n         if (!user_has_whitelist && g_rpc_whitelist_default) {\r\n             LogPrintf(\"RPC User %s not allowed to call any methods\\n\", jreq.authUser);\r\n-            req->WriteReply(HTTP_FORBIDDEN);\r\n+            req->WriteReply(HTTPStatusCode::HTTP_FORBIDDEN);\r\n             return false;\r\n \r\n         // singleton request\r\n@@ -202,7 +202,7 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\r\n             jreq.parse(valRequest);\r\n             if (user_has_whitelist && !g_rpc_whitelist[jreq.authUser].count(jreq.strMethod)) {\r\n                 LogPrintf(\"RPC User %s not allowed to call method %s\\n\", jreq.authUser, jreq.strMethod);\r\n-                req->WriteReply(HTTP_FORBIDDEN);\r\n+                req->WriteReply(HTTPStatusCode::HTTP_FORBIDDEN);\r\n                 return false;\r\n             }\r\n             UniValue result = tableRPC.execute(jreq);\r\n@@ -222,7 +222,7 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\r\n                         std::string strMethod = find_value(request, \"method\").get_str();\r\n                         if (!g_rpc_whitelist[jreq.authUser].count(strMethod)) {\r\n                             LogPrintf(\"RPC User %s not allowed to call method %s\\n\", jreq.authUser, strMethod);\r\n-                            req->WriteReply(HTTP_FORBIDDEN);\r\n+                            req->WriteReply(HTTPStatusCode::HTTP_FORBIDDEN);\r\n                             return false;\r\n                         }\r\n                     }\r\n@@ -234,7 +234,7 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\r\n             throw JSONRPCError(RPC_PARSE_ERROR, \"Top-level object parse error\");\r\n \r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, strReply);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strReply);\r\n     } catch (const UniValue& objError) {\r\n         JSONErrorReply(req, objError, jreq.id);\r\n         return false;\r\ndiff --git a/src/httpserver.cpp b/src/httpserver.cpp\r\nindex 0e13b8580..54f0d077c 100644\r\n--- a/src/httpserver.cpp\r\n+++ b/src/httpserver.cpp\r\n@@ -228,7 +228,7 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\r\n     if (!ClientAllowed(hreq->GetPeer())) {\r\n         LogPrint(BCLog::HTTP, \"HTTP request from %s rejected: Client network is not allowed RPC access\\n\",\r\n                  hreq->GetPeer().ToString());\r\n-        hreq->WriteReply(HTTP_FORBIDDEN);\r\n+        hreq->WriteReply(HTTPStatusCode::HTTP_FORBIDDEN);\r\n         return;\r\n     }\r\n \r\n@@ -236,7 +236,7 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\r\n     if (hreq->GetRequestMethod() == HTTPRequest::UNKNOWN) {\r\n         LogPrint(BCLog::HTTP, \"HTTP request from %s rejected: Unknown HTTP request method\\n\",\r\n                  hreq->GetPeer().ToString());\r\n-        hreq->WriteReply(HTTP_BADMETHOD);\r\n+        hreq->WriteReply(HTTPStatusCode::HTTP_BAD_METHOD);\r\n         return;\r\n     }\r\n \r\n@@ -268,10 +268,10 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\r\n             item.release(); /* if true, queue took ownership */\r\n         else {\r\n             LogPrintf(\"WARNING: request rejected because http work queue depth exceeded, it can be increased with the -rpcworkqueue= setting\\n\");\r\n-            item->req->WriteReply(HTTP_INTERNAL, \"Work queue depth exceeded\");\r\n+            item->req->WriteReply(HTTPStatusCode::HTTP_INTERNAL_SERVER_ERROR, \"Work queue depth exceeded\");\r\n         }\r\n     } else {\r\n-        hreq->WriteReply(HTTP_NOTFOUND);\r\n+        hreq->WriteReply(HTTPStatusCode::HTTP_NOT_FOUND);\r\n     }\r\n }\r\n \r\n@@ -519,7 +519,7 @@ HTTPRequest::~HTTPRequest()\r\n     if (!replySent) {\r\n         // Keep track of whether reply was sent to avoid request leaks\r\n         LogPrintf(\"%s: Unhandled request\\n\", __func__);\r\n-        WriteReply(HTTP_INTERNAL, \"Unhandled request\");\r\n+        WriteReply(HTTPStatusCode::HTTP_INTERNAL_SERVER_ERROR, \"Unhandled request\");\r\n     }\r\n     // evhttpd cleans up the request, as long as a reply was sent.\r\n }\r\n@@ -567,7 +567,7 @@ void HTTPRequest::WriteHeader(const std::string& hdr, const std::string& value)\r\n  * Replies must be sent in the main loop in the main http thread,\r\n  * this cannot be done from worker threads.\r\n  */\r\n-void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\r\n+void HTTPRequest::WriteReply(HTTPStatusCode nStatus, const std::string& strReply)\r\n {\r\n     assert(!replySent && req);\r\n     if (ShutdownRequested()) {\r\n@@ -579,7 +579,7 @@ void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\r\n     evbuffer_add(evb, strReply.data(), strReply.size());\r\n     auto req_copy = req;\r\n     HTTPEvent* ev = new HTTPEvent(eventBase, true, [req_copy, nStatus]{\r\n-        evhttp_send_reply(req_copy, nStatus, nullptr, nullptr);\r\n+        evhttp_send_reply(req_copy, static_cast<int>(nStatus), nullptr, nullptr);\r\n         // Re-enable reading from the socket. This is the second part of the libevent\r\n         // workaround above.\r\n         if (event_get_version_number() >= 0x02010600 && event_get_version_number() < 0x02020001) {\r\ndiff --git a/src/httpserver.h b/src/httpserver.h\r\nindex 46820e6ae..f9710f844 100644\r\n--- a/src/httpserver.h\r\n+++ b/src/httpserver.h\r\n@@ -5,6 +5,8 @@\r\n #ifndef BITCOIN_HTTPSERVER_H\r\n #define BITCOIN_HTTPSERVER_H\r\n \r\n+#include <rpc/protocol.h>\r\n+\r\n #include <string>\r\n #include <functional>\r\n \r\n@@ -112,7 +114,7 @@ public:\r\n      * @note Can be called only once. As this will give the request back to the\r\n      * main thread, do not call any other HTTPRequest methods after calling this.\r\n      */\r\n-    void WriteReply(int nStatus, const std::string& strReply = \"\");\r\n+    void WriteReply(HTTPStatusCode nStatus, const std::string& strReply = \"\");\r\n };\r\n \r\n /** Event handler closure.\r\ndiff --git a/src/rest.cpp b/src/rest.cpp\r\nindex 062955758..cab7226a1 100644\r\n--- a/src/rest.cpp\r\n+++ b/src/rest.cpp\r\n@@ -83,7 +83,7 @@ static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, std::string me\r\n static CTxMemPool* GetMemPool(HTTPRequest* req)\r\n {\r\n     if (!g_rpc_node || !g_rpc_node->mempool) {\r\n-        RESTERR(req, HTTP_NOT_FOUND, \"Mempool disabled or instance not found\");\r\n+        RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"Mempool disabled or instance not found\");\r\n         return nullptr;\r\n     }\r\n     return g_rpc_node->mempool;\r\n@@ -130,7 +130,7 @@ static bool CheckWarmup(HTTPRequest* req)\r\n {\r\n     std::string statusmessage;\r\n     if (RPCIsInWarmup(&statusmessage))\r\n-         return RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Service temporarily unavailable: \" + statusmessage);\r\n+         return RESTERR(req, HTTPStatusCode::HTTP_SERVICE_UNAVAILABLE, \"Service temporarily unavailable: \" + statusmessage);\r\n     return true;\r\n }\r\n \r\n@@ -145,16 +145,16 @@ static bool rest_headers(HTTPRequest* req,\r\n     boost::split(path, param, boost::is_any_of(\"/\"));\r\n \r\n     if (path.size() != 2)\r\n-        return RESTERR(req, HTTP_BAD_REQUEST, \"No header count specified. Use /rest/headers/<count>/<hash>.<ext>.\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"No header count specified. Use /rest/headers/<count>/<hash>.<ext>.\");\r\n \r\n     long count = strtol(path[0].c_str(), nullptr, 10);\r\n     if (count < 1 || count > 2000)\r\n-        return RESTERR(req, HTTP_BAD_REQUEST, \"Header count out of range: \" + path[0]);\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Header count out of range: \" + path[0]);\r\n \r\n     std::string hashStr = path[1];\r\n     uint256 hash;\r\n     if (!ParseHashStr(hashStr, hash))\r\n-        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\r\n \r\n     const CBlockIndex* tip = nullptr;\r\n     std::vector<const CBlockIndex *> headers;\r\n@@ -180,7 +180,7 @@ static bool rest_headers(HTTPRequest* req,\r\n \r\n         std::string binaryHeader = ssHeader.str();\r\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\r\n-        req->WriteReply(HTTP_OK, binaryHeader);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, binaryHeader);\r\n         return true;\r\n     }\r\n \r\n@@ -192,7 +192,7 @@ static bool rest_headers(HTTPRequest* req,\r\n \r\n         std::string strHex = HexStr(ssHeader.begin(), ssHeader.end()) + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\r\n-        req->WriteReply(HTTP_OK, strHex);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strHex);\r\n         return true;\r\n     }\r\n     case RetFormat::JSON: {\r\n@@ -202,11 +202,11 @@ static bool rest_headers(HTTPRequest* req,\r\n         }\r\n         std::string strJSON = jsonHeaders.write() + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, strJSON);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strJSON);\r\n         return true;\r\n     }\r\n     default: {\r\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: .bin, .hex)\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"output format not found (available: .bin, .hex)\");\r\n     }\r\n     }\r\n }\r\n@@ -222,7 +222,7 @@ static bool rest_block(HTTPRequest* req,\r\n \r\n     uint256 hash;\r\n     if (!ParseHashStr(hashStr, hash))\r\n-        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\r\n \r\n     CBlock block;\r\n     CBlockIndex* pblockindex = nullptr;\r\n@@ -232,14 +232,14 @@ static bool rest_block(HTTPRequest* req,\r\n         tip = ::ChainActive().Tip();\r\n         pblockindex = LookupBlockIndex(hash);\r\n         if (!pblockindex) {\r\n-            return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\r\n+            return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, hashStr + \" not found\");\r\n         }\r\n \r\n         if (IsBlockPruned(pblockindex))\r\n-            return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not available (pruned data)\");\r\n+            return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, hashStr + \" not available (pruned data)\");\r\n \r\n         if (!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\r\n-            return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\r\n+            return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, hashStr + \" not found\");\r\n     }\r\n \r\n     switch (rf) {\r\n@@ -248,7 +248,7 @@ static bool rest_block(HTTPRequest* req,\r\n         ssBlock << block;\r\n         std::string binaryBlock = ssBlock.str();\r\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\r\n-        req->WriteReply(HTTP_OK, binaryBlock);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, binaryBlock);\r\n         return true;\r\n     }\r\n \r\n@@ -257,7 +257,7 @@ static bool rest_block(HTTPRequest* req,\r\n         ssBlock << block;\r\n         std::string strHex = HexStr(ssBlock.begin(), ssBlock.end()) + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\r\n-        req->WriteReply(HTTP_OK, strHex);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strHex);\r\n         return true;\r\n     }\r\n \r\n@@ -265,12 +265,12 @@ static bool rest_block(HTTPRequest* req,\r\n         UniValue objBlock = blockToJSON(block, tip, pblockindex, showTxDetails);\r\n         std::string strJSON = objBlock.write() + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, strJSON);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strJSON);\r\n         return true;\r\n     }\r\n \r\n     default: {\r\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n     }\r\n     }\r\n }\r\n@@ -302,11 +302,11 @@ static bool rest_chaininfo(HTTPRequest* req, const std::string& strURIPart)\r\n         UniValue chainInfoObject = getblockchaininfo(jsonRequest);\r\n         std::string strJSON = chainInfoObject.write() + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, strJSON);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strJSON);\r\n         return true;\r\n     }\r\n     default: {\r\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"output format not found (available: json)\");\r\n     }\r\n     }\r\n }\r\n@@ -326,11 +326,11 @@ static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\r\n \r\n         std::string strJSON = mempoolInfoObject.write() + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, strJSON);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strJSON);\r\n         return true;\r\n     }\r\n     default: {\r\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"output format not found (available: json)\");\r\n     }\r\n     }\r\n }\r\n@@ -349,11 +349,11 @@ static bool rest_mempool_contents(HTTPRequest* req, const std::string& strURIPar\r\n \r\n         std::string strJSON = mempoolObject.write() + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, strJSON);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strJSON);\r\n         return true;\r\n     }\r\n     default: {\r\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"output format not found (available: json)\");\r\n     }\r\n     }\r\n }\r\n@@ -367,7 +367,7 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\r\n \r\n     uint256 hash;\r\n     if (!ParseHashStr(hashStr, hash))\r\n-        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\r\n \r\n     if (g_txindex) {\r\n         g_txindex->BlockUntilSyncedToCurrentChain();\r\n@@ -376,7 +376,7 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\r\n     CTransactionRef tx;\r\n     uint256 hashBlock = uint256();\r\n     if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock))\r\n-        return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, hashStr + \" not found\");\r\n \r\n     switch (rf) {\r\n     case RetFormat::BINARY: {\r\n@@ -385,7 +385,7 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\r\n \r\n         std::string binaryTx = ssTx.str();\r\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\r\n-        req->WriteReply(HTTP_OK, binaryTx);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, binaryTx);\r\n         return true;\r\n     }\r\n \r\n@@ -395,7 +395,7 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\r\n \r\n         std::string strHex = HexStr(ssTx.begin(), ssTx.end()) + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\r\n-        req->WriteReply(HTTP_OK, strHex);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strHex);\r\n         return true;\r\n     }\r\n \r\n@@ -404,12 +404,12 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\r\n         TxToUniv(*tx, hashBlock, objTx);\r\n         std::string strJSON = objTx.write() + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, strJSON);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strJSON);\r\n         return true;\r\n     }\r\n \r\n     default: {\r\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n     }\r\n     }\r\n }\r\n@@ -431,7 +431,7 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\r\n     // throw exception in case of an empty request\r\n     std::string strRequestMutable = req->ReadBody();\r\n     if (strRequestMutable.length() == 0 && uriParts.size() == 0)\r\n-        return RESTERR(req, HTTP_BAD_REQUEST, \"Error: empty request\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Error: empty request\");\r\n \r\n     bool fInputParsed = false;\r\n     bool fCheckMemPool = false;\r\n@@ -453,7 +453,7 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\r\n             std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\r\n \r\n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\r\n-                return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error\");\r\n+                return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Parse error\");\r\n \r\n             txid.SetHex(strTxid);\r\n             vOutPoints.push_back(COutPoint(txid, (uint32_t)nOutput));\r\n@@ -462,7 +462,7 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\r\n         if (vOutPoints.size() > 0)\r\n             fInputParsed = true;\r\n         else\r\n-            return RESTERR(req, HTTP_BAD_REQUEST, \"Error: empty request\");\r\n+            return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Error: empty request\");\r\n     }\r\n \r\n     switch (rf) {\r\n@@ -478,7 +478,7 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\r\n             if (strRequestMutable.size() > 0)\r\n             {\r\n                 if (fInputParsed) //don't allow sending input over URI and HTTP RAW DATA\r\n-                    return RESTERR(req, HTTP_BAD_REQUEST, \"Combination of URI scheme inputs and raw post data is not allowed\");\r\n+                    return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Combination of URI scheme inputs and raw post data is not allowed\");\r\n \r\n                 CDataStream oss(SER_NETWORK, PROTOCOL_VERSION);\r\n                 oss << strRequestMutable;\r\n@@ -487,24 +487,24 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\r\n             }\r\n         } catch (const std::ios_base::failure&) {\r\n             // abort in case of unreadable binary data\r\n-            return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error\");\r\n+            return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Parse error\");\r\n         }\r\n         break;\r\n     }\r\n \r\n     case RetFormat::JSON: {\r\n         if (!fInputParsed)\r\n-            return RESTERR(req, HTTP_BAD_REQUEST, \"Error: empty request\");\r\n+            return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Error: empty request\");\r\n         break;\r\n     }\r\n     default: {\r\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n     }\r\n     }\r\n \r\n     // limit max outpoints\r\n     if (vOutPoints.size() > MAX_GETUTXOS_OUTPOINTS)\r\n-        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Error: max outpoints exceeded (max: %d, tried: %d)\", MAX_GETUTXOS_OUTPOINTS, vOutPoints.size()));\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, strprintf(\"Error: max outpoints exceeded (max: %d, tried: %d)\", MAX_GETUTXOS_OUTPOINTS, vOutPoints.size()));\r\n \r\n     // check spentness and form a bitmap (as well as a JSON capable human-readable string representation)\r\n     std::vector<unsigned char> bitmap;\r\n@@ -551,7 +551,7 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\r\n         std::string ssGetUTXOResponseString = ssGetUTXOResponse.str();\r\n \r\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\r\n-        req->WriteReply(HTTP_OK, ssGetUTXOResponseString);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, ssGetUTXOResponseString);\r\n         return true;\r\n     }\r\n \r\n@@ -561,7 +561,7 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\r\n         std::string strHex = HexStr(ssGetUTXOResponse.begin(), ssGetUTXOResponse.end()) + \"\\n\";\r\n \r\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\r\n-        req->WriteReply(HTTP_OK, strHex);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strHex);\r\n         return true;\r\n     }\r\n \r\n@@ -591,11 +591,11 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\r\n         // return json string\r\n         std::string strJSON = objGetUTXOResponse.write() + \"\\n\";\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n-        req->WriteReply(HTTP_OK, strJSON);\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, strJSON);\r\n         return true;\r\n     }\r\n     default: {\r\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n     }\r\n     }\r\n }\r\n@@ -609,14 +609,14 @@ static bool rest_blockhash_by_height(HTTPRequest* req,\r\n \r\n     int32_t blockheight;\r\n     if (!ParseInt32(height_str, &blockheight) || blockheight < 0) {\r\n-        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid height: \" + SanitizeString(height_str));\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_BAD_REQUEST, \"Invalid height: \" + SanitizeString(height_str));\r\n     }\r\n \r\n     CBlockIndex* pblockindex = nullptr;\r\n     {\r\n         LOCK(cs_main);\r\n         if (blockheight > ::ChainActive().Height()) {\r\n-            return RESTERR(req, HTTP_NOT_FOUND, \"Block height out of range\");\r\n+            return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"Block height out of range\");\r\n         }\r\n         pblockindex = ::ChainActive()[blockheight];\r\n     }\r\n@@ -625,23 +625,23 @@ static bool rest_blockhash_by_height(HTTPRequest* req,\r\n         CDataStream ss_blockhash(SER_NETWORK, PROTOCOL_VERSION);\r\n         ss_blockhash << pblockindex->GetBlockHash();\r\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\r\n-        req->WriteReply(HTTP_OK, ss_blockhash.str());\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, ss_blockhash.str());\r\n         return true;\r\n     }\r\n     case RetFormat::HEX: {\r\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\r\n-        req->WriteReply(HTTP_OK, pblockindex->GetBlockHash().GetHex() + \"\\n\");\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, pblockindex->GetBlockHash().GetHex() + \"\\n\");\r\n         return true;\r\n     }\r\n     case RetFormat::JSON: {\r\n         req->WriteHeader(\"Content-Type\", \"application/json\");\r\n         UniValue resp = UniValue(UniValue::VOBJ);\r\n         resp.pushKV(\"blockhash\", pblockindex->GetBlockHash().GetHex());\r\n-        req->WriteReply(HTTP_OK, resp.write() + \"\\n\");\r\n+        req->WriteReply(HTTPStatusCode::HTTP_OK, resp.write() + \"\\n\");\r\n         return true;\r\n     }\r\n     default: {\r\n-        return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n+        return RESTERR(req, HTTPStatusCode::HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\r\n     }\r\n     }\r\n }\r\ndiff --git a/src/rpc/protocol.h b/src/rpc/protocol.h\r\nindex d1475f452..23d6e94b6 100644\r\n--- a/src/rpc/protocol.h\r\n+++ b/src/rpc/protocol.h\r\n@@ -7,7 +7,7 @@\r\n #define BITCOIN_RPC_PROTOCOL_H\r\n \r\n //! HTTP status codes\r\n-enum HTTPStatusCode\r\n+enum class HTTPStatusCode\r\n {\r\n     HTTP_OK                    = 200,\r\n     HTTP_BAD_REQUEST           = 400,\r\n```\r\n\r\n</details>",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587415682",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "mentioned",
      "id": 3046753041,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA0Njc1MzA0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3046753041",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T11:27:55Z"
    },
    {
      "event": "subscribed",
      "id": 3046753044,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNDY3NTMwNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3046753044",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T11:27:55Z"
    },
    {
      "event": "commented",
      "id": 587418648,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQxODY0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587418648",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T11:36:10Z",
      "updated_at": "2020-02-18T11:36:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "@practicalswift your suggestion increases type safety therefore I like it. But the suggested change is logically independent from this change therefore I'd prefer to make a follow up PR for that.",
      "user": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587418648",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "mentioned",
      "id": 3046782173,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA0Njc4MjE3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3046782173",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T11:36:10Z"
    },
    {
      "event": "subscribed",
      "id": 3046782175,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNDY3ODIxNzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3046782175",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T11:36:10Z"
    },
    {
      "event": "commented",
      "id": 587443828,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQ0MzgyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587443828",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T12:48:51Z",
      "updated_at": "2020-02-18T12:48:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK aff2748f8aee72f03b5fb6f6f97f0d0f66391755 -- patch looks correct",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587443828",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "commented",
      "id": 588021176,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODAyMTE3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588021176",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T03:47:42Z",
      "updated_at": "2020-02-19T03:47:42Z",
      "author_association": "MEMBER",
      "body": "I'd rather we go the opposite direction, and adopt libevent's macros (eliminating our own).\r\n\r\nIs there a reason to have our own duplicated macros? Or are they just holdovers from the pre-libevent implementation?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-588021176",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "commented",
      "id": 588037155,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODAzNzE1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588037155",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T05:03:03Z",
      "updated_at": "2020-02-19T05:03:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj added the enum in 2012 (285746d3dbed46d0e444d7a907c08453d36d99cd) which is before the introduction of evhttpd (40b556d3742a1f65d67e2d4c760d0b13fe8be5b7). I'm fine with eliminating the enums and using the libevent macros. Maybe @laanwj has an opinion on this?",
      "user": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-588037155",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "mentioned",
      "id": 3050267490,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1MDI2NzQ5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3050267490",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T05:03:03Z"
    },
    {
      "event": "subscribed",
      "id": 3050267494,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTAyNjc0OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3050267494",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T05:03:03Z"
    },
    {
      "event": "commented",
      "id": 588052836,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODA1MjgzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588052836",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T06:08:26Z",
      "updated_at": "2020-02-19T06:08:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "In general, enums confer more type information, passing more information further down into the compile pipeline, vs macros.   All other things being equal, that lends weight to a enums>macros preference, for greater -O0 debug-ability -- symbol names in gdb, vs numbers -- as well as greater type clarity & safety.",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-588052836",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "commented",
      "id": 588223444,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODIyMzQ0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588223444",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T13:15:52Z",
      "updated_at": "2020-02-19T13:15:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Agree with @jgarzik.\r\n\r\nThis is what the C++ Core Guidelines has to say:\r\n\r\n* [`enum class` is strictly better than plain `enum`](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#enum3-prefer-class-enums-over-plain-enums)\r\n* [Plain `enum` is strictly better than macro (`#define`)](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#enum1-prefer-enumerations-over-macros)\r\n* Macro (`#define`) is strictly better than magic number\r\n\r\n",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-588223444",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "mentioned",
      "id": 3051701876,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1MTcwMTg3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3051701876",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T13:15:52Z"
    },
    {
      "event": "subscribed",
      "id": 3051701880,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTE3MDE4ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3051701880",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T13:15:52Z"
    },
    {
      "event": "commented",
      "id": 589441233,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTQ0MTIzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589441233",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T00:34:42Z",
      "updated_at": "2020-02-21T00:34:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "If we go with `enum` over libevent macros, why not also change type to `HTTPStatusCode` everywhere (for example, line `int nStatus = HTTP_INTERNAL_SERVER_ERROR;` in `src/httprpc.cpp`)?",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589441233",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "reviewed",
      "id": 362446975,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDQ2OTc1",
      "url": null,
      "actor": null,
      "commit_id": "aff2748f8aee72f03b5fb6f6f97f0d0f66391755",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK adding new `enum class` and dropping `#include <rpc/protocol.h>` from `src/httpserver.cpp`.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#pullrequestreview-362446975",
      "submitted_at": "2020-02-21T07:47:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18168"
    },
    {
      "event": "commented",
      "id": 589539354,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTUzOTM1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589539354",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T07:50:57Z",
      "updated_at": "2020-02-21T07:50:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "@promag your statement is self-contradictory. The enum in discussion is in `#include <rpc/protocol.h>`.",
      "user": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589539354",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "mentioned",
      "id": 3059550240,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1OTU1MDI0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3059550240",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T07:50:57Z"
    },
    {
      "event": "subscribed",
      "id": 3059550243,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTk1NTAyNDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3059550243",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T07:50:57Z"
    },
    {
      "event": "commented",
      "id": 589542197,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTU0MjE5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589542197",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T08:00:31Z",
      "updated_at": "2020-02-21T08:00:31Z",
      "author_association": "MEMBER",
      "body": "@toxeus yes I know, I think it should be in `src/httpserver.h`, where it's needed by `WriteReply()`. Also sounds weird including a rpc header in httpserver code, should be the other way around.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589542197",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "mentioned",
      "id": 3059572363,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1OTU3MjM2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3059572363",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T08:00:31Z"
    },
    {
      "event": "subscribed",
      "id": 3059572366,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTk1NzIzNjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3059572366",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T08:00:32Z"
    },
    {
      "event": "commented",
      "id": 589542597,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTU0MjU5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589542597",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T08:01:51Z",
      "updated_at": "2020-02-21T08:01:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Makes sense. Thanks for clarifying :+1: ",
      "user": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589542597",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "commented",
      "id": 589643810,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTY0MzgxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589643810",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T13:01:58Z",
      "updated_at": "2020-02-21T13:01:58Z",
      "author_association": "MEMBER",
      "body": "HTTP status codes aren't really an enum, though...",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589643810",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "commented",
      "id": 591849227,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTg0OTIyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591849227",
      "actor": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T08:38:31Z",
      "updated_at": "2020-02-27T08:38:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "> HTTP status codes aren't really an enum, though...\r\n\r\nenums are used often beyond the strict semantics you're referring to. They group constants together that belong together. enum classes even add type safety. The fact that the HTTP status codes are defined in an enum since years and nobody seemed to care supports my argument I think.\r\n\r\nStill, I'm also not happy about duplicating here something that is also defined in libevent. OTOH, the added type safety and improved code readability do justify a duplication using an enum class.",
      "user": {
        "login": "toxeus",
        "id": 7702854,
        "node_id": "MDQ6VXNlcjc3MDI4NTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7702854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/toxeus",
        "html_url": "https://github.com/toxeus",
        "followers_url": "https://api.github.com/users/toxeus/followers",
        "following_url": "https://api.github.com/users/toxeus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/toxeus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/toxeus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/toxeus/subscriptions",
        "organizations_url": "https://api.github.com/users/toxeus/orgs",
        "repos_url": "https://api.github.com/users/toxeus/repos",
        "events_url": "https://api.github.com/users/toxeus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/toxeus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-591849227",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "commented",
      "id": 592044555,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjA0NDU1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592044555",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T16:16:48Z",
      "updated_at": "2020-02-27T16:16:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "> HTTP status codes aren't really an enum, though...\r\n\r\nYou're right.   They are a protocol & specification from RFC 2616 and others, which can be implemented as a macro, enum, JSON database, or some other method which best suits the situation.",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-592044555",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "commented",
      "id": 593478837,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzQ3ODgzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/593478837",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-02T16:07:27Z",
      "updated_at": "2020-03-02T16:07:27Z",
      "author_association": "MEMBER",
      "body": "ACK aff2748f8aee72f03b5fb6f6f97f0d0f66391755\r\nThis slightly improves consistency. I do not think converting status codes to an `enum class` is necessary. As said by others they're well-standardized numbers, not arbitrary enum items.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-593478837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18168"
    },
    {
      "event": "merged",
      "id": 3088611628,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzA4ODYxMTYyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3088611628",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ac5c5d0162a963be6fbaa53261c01705436a65f3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac5c5d0162a963be6fbaa53261c01705436a65f3",
      "created_at": "2020-03-02T16:11:47Z"
    },
    {
      "event": "closed",
      "id": 3088611639,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzA4ODYxMTYzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3088611639",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-02T16:11:47Z"
    },
    {
      "event": "referenced",
      "id": 3089920672,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMwODk5MjA2NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3089920672",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3ccce3434b987c094eeb618da6b1d9733f10faef",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/3ccce3434b987c094eeb618da6b1d9733f10faef",
      "created_at": "2020-03-02T22:29:04Z"
    },
    {
      "event": "referenced",
      "id": 3219067981,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMTkwNjc5ODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3219067981",
      "actor": {
        "login": "MarkLTZ",
        "id": 43173987,
        "node_id": "MDQ6VXNlcjQzMTczOTg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/43173987?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarkLTZ",
        "html_url": "https://github.com/MarkLTZ",
        "followers_url": "https://api.github.com/users/MarkLTZ/followers",
        "following_url": "https://api.github.com/users/MarkLTZ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarkLTZ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarkLTZ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarkLTZ/subscriptions",
        "organizations_url": "https://api.github.com/users/MarkLTZ/orgs",
        "repos_url": "https://api.github.com/users/MarkLTZ/repos",
        "events_url": "https://api.github.com/users/MarkLTZ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarkLTZ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3ec6a5c5471e22c3e195c67cda23cad23222f4a8",
      "commit_url": "https://api.github.com/repos/litecoinz-core/litecoinz/commits/3ec6a5c5471e22c3e195c67cda23cad23222f4a8",
      "created_at": "2020-04-09T16:33:10Z"
    },
    {
      "event": "referenced",
      "id": 3980858966,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5ODA4NTg5NjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980858966",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8a664c883fbd59de98f59cd049f96d57171abffc",
      "commit_url": "https://api.github.com/repos/syscoin-core/syscoin/commits/8a664c883fbd59de98f59cd049f96d57171abffc",
      "created_at": "2020-11-10T20:39:52Z"
    },
    {
      "event": "referenced",
      "id": 4168880478,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxNjg4ODA0Nzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4168880478",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5ecb5c979f9da609beef26355087a80ebdc575d2",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/5ecb5c979f9da609beef26355087a80ebdc575d2",
      "created_at": "2021-01-05T09:45:33Z"
    },
    {
      "event": "referenced",
      "id": 4944319476,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQzMTk0NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944319476",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b8a44312cb8e5e6cd1cc06517e38c76c4ca7a4ed",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/b8a44312cb8e5e6cd1cc06517e38c76c4ca7a4ed",
      "created_at": "2021-06-27T21:07:07Z"
    },
    {
      "event": "referenced",
      "id": 4944491591,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQ0OTE1OTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944491591",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "137165272da5e5523b8f2285fbdfbaade5c82169",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/137165272da5e5523b8f2285fbdfbaade5c82169",
      "created_at": "2021-06-28T00:24:45Z"
    },
    {
      "event": "referenced",
      "id": 4950405421,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NTA0MDU0MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4950405421",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a71c87df09a2bef91852644c0583bedb261c3397",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/a71c87df09a2bef91852644c0583bedb261c3397",
      "created_at": "2021-06-29T00:06:19Z"
    },
    {
      "event": "referenced",
      "id": 4968414479,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5Njg0MTQ0Nzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4968414479",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e62760024c33dd69dc4821e1d3641edab392e834",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/e62760024c33dd69dc4821e1d3641edab392e834",
      "created_at": "2021-07-01T22:04:28Z"
    },
    {
      "event": "referenced",
      "id": 4968436836,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5Njg0MzY4MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4968436836",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2883f6f1cb4fb4abc0b8326443f3e1674d7e6ead",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/2883f6f1cb4fb4abc0b8326443f3e1674d7e6ead",
      "created_at": "2021-07-01T22:11:20Z"
    },
    {
      "event": "referenced",
      "id": 5017097991,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMTcwOTc5OTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5017097991",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eaab6cd68dac836d5d36ebb97dd6fb963ad92834",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/eaab6cd68dac836d5d36ebb97dd6fb963ad92834",
      "created_at": "2021-07-14T02:20:50Z"
    },
    {
      "event": "locked",
      "id": 6073766264,
      "node_id": "LOE_lADOABII584hxabozwAAAAFqBlF4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073766264",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:27:56Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": []
}