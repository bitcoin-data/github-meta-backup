{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552",
    "id": 148379876,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ4Mzc5ODc2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11552",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/11552.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/11552.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11552",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11552/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/bc9c0a7b74eab853fc21402d62a30dacd77a8843",
    "number": 11552,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Improve wallet-accounts test",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add comments and\r\n\r\n- Verify sending to a account causes getaccountaddress to generate new addresses.\r\n- Verify sending to a account causes getreceivedbyaccount to return amount received.\r\n- Verify ways setaccount updates the accounts of existing addresses.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2017-10-24T12:19:49Z",
    "updated_at": "2021-09-08T11:30:40Z",
    "closed_at": "2017-11-09T12:13:48Z",
    "mergeable_state": "unknown",
    "merged_at": "2017-11-09T12:13:48Z",
    "merge_commit_sha": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ryanofsky:pr/acctt",
      "ref": "pr/acctt",
      "sha": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 8,
        "watchers_count": 8,
        "size": 229522,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T09:40:24Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2023-05-05T12:10:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "57ee73990f1ce29916adfd99f93eae1ccea1a43b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T00:11:53Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 105,
    "deletions": 32,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 4,
    "comments": 3
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzljMGE3Yjc0ZWFiODUzZmMyMTQwMmQ2MmEzMGRhY2Q3N2E4ODQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "tree": {
        "sha": "56587f93e055af2fc7004fb8d3067eed738b0872",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56587f93e055af2fc7004fb8d3067eed738b0872"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff92fbf24739a022eb677daab03c87c5e6971094",
          "sha": "ff92fbf24739a022eb677daab03c87c5e6971094",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ff92fbf24739a022eb677daab03c87c5e6971094"
        }
      ],
      "message": "Improve wallet-accounts test\n\nAdd comments and\n\n- Verify sending to a account causes getaccountaddress to generate new addresses.\n- Verify sending to a account causes getreceivedbyaccount to return amount received.\n- Verify ways setaccount updates the accounts of existing addresses.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-10-24T11:45:17Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-10-24T11:45:17Z"
      },
      "sha": "bc9c0a7b74eab853fc21402d62a30dacd77a8843"
    },
    {
      "event": "labeled",
      "id": 1307693128,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDEzMDc2OTMxMjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1307693128",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-24T13:05:29Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 71506486,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE1MDY0ODY=",
      "url": null,
      "actor": null,
      "commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Is it worth since accounts is deprecated?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11552#pullrequestreview-71506486",
      "submitted_at": "2017-10-24T13:09:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552"
    },
    {
      "event": "commented",
      "id": 338988187,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzODk4ODE4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338988187",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-24T13:23:04Z",
      "updated_at": "2017-10-24T13:23:04Z",
      "author_association": "MEMBER",
      "body": "> Is it worth since accounts is deprecated?\r\n\r\nYes, all of the new tests apply to both accounts and labels. The new tests helped me identify two bugs in #7729.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11552#issuecomment-338988187",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11552"
    },
    {
      "event": "commented",
      "id": 343135539,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzEzNTUzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343135539",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-09T12:07:03Z",
      "updated_at": "2017-11-09T12:07:03Z",
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/11552/commits/bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11552#issuecomment-343135539",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11552"
    },
    {
      "event": "merged",
      "id": 1333830171,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTMzMzgzMDE3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1333830171",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "created_at": "2017-11-09T12:13:48Z"
    },
    {
      "event": "closed",
      "id": 1333830175,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTMzMzgzMDE3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1333830175",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-09T12:13:48Z"
    },
    {
      "event": "referenced",
      "id": 1333830322,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzMzM4MzAzMjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1333830322",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b5f9f025fef0c3c38bc4b29f01356dc9b23289fe",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5f9f025fef0c3c38bc4b29f01356dc9b23289fe",
      "created_at": "2017-11-09T12:13:52Z"
    },
    {
      "event": "commented",
      "id": 343284478,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzI4NDQ3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343284478",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-09T20:40:23Z",
      "updated_at": "2017-11-09T20:40:23Z",
      "author_association": "MEMBER",
      "body": "post merge utACK bc9c0a7",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11552#issuecomment-343284478",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11552"
    },
    {
      "event": "referenced",
      "id": 2903484408,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MDM0ODQ0MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2903484408",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "da406e0663950d069a27667db4a8d1d9cc3566cb",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/da406e0663950d069a27667db4a8d1d9cc3566cb",
      "created_at": "2019-12-22T23:11:51Z"
    },
    {
      "event": "referenced",
      "id": 2919018808,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MTkwMTg4MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2919018808",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "94e44bbbd6d0889dc1f6b7f98ac6cb77f45e71a9",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/94e44bbbd6d0889dc1f6b7f98ac6cb77f45e71a9",
      "created_at": "2020-01-02T22:59:31Z"
    },
    {
      "event": "referenced",
      "id": 2921937440,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MjE5Mzc0NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2921937440",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6307f66b533c02199cc9df08a3a03b4dd920928d",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/6307f66b533c02199cc9df08a3a03b4dd920928d",
      "created_at": "2020-01-04T16:52:30Z"
    },
    {
      "event": "referenced",
      "id": 2940914192,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDA5MTQxOTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2940914192",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c1a9d5f8dc489b9b36c76d8307747ba1b3ec7370",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/c1a9d5f8dc489b9b36c76d8307747ba1b3ec7370",
      "created_at": "2020-01-12T00:03:08Z"
    },
    {
      "event": "referenced",
      "id": 2940920407,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDA5MjA0MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2940920407",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8316cb605947a90d79be0bcd681caba936b9118c",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/8316cb605947a90d79be0bcd681caba936b9118c",
      "created_at": "2020-01-12T00:19:00Z"
    },
    {
      "event": "referenced",
      "id": 2940921189,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDA5MjExODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2940921189",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e0e94cee01fa46dc88d744af9825fb37a8ed18d1",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/e0e94cee01fa46dc88d744af9825fb37a8ed18d1",
      "created_at": "2020-01-12T00:20:41Z"
    },
    {
      "event": "referenced",
      "id": 2940922133,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDA5MjIxMzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2940922133",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "01724df3f6ad40f153d96ce1d27dd5715c976d87",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/01724df3f6ad40f153d96ce1d27dd5715c976d87",
      "created_at": "2020-01-12T00:23:03Z"
    },
    {
      "event": "referenced",
      "id": 2940932129,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDA5MzIxMjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2940932129",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f2b3fd3642b9f11bd58961320db8c4d2d64e255c",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/f2b3fd3642b9f11bd58961320db8c4d2d64e255c",
      "created_at": "2020-01-12T00:48:59Z"
    },
    {
      "event": "referenced",
      "id": 2941571119,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDE1NzExMTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2941571119",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1fe256cdb487c0d009f0dfcf70e6c99944a2dda0",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/1fe256cdb487c0d009f0dfcf70e6c99944a2dda0",
      "created_at": "2020-01-12T23:03:07Z"
    },
    {
      "event": "referenced",
      "id": 2954961816,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NTQ5NjE4MTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2954961816",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e5ad819c30c4084a3f5dfc44f255aaf953f65622",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/e5ad819c30c4084a3f5dfc44f255aaf953f65622",
      "created_at": "2020-01-16T15:23:43Z"
    },
    {
      "event": "referenced",
      "id": 2970426167,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NzA0MjYxNjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2970426167",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6d4839fd8942fffab36bfa12d568ca29a74ac6dd",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/6d4839fd8942fffab36bfa12d568ca29a74ac6dd",
      "created_at": "2020-01-22T15:12:40Z"
    },
    {
      "event": "referenced",
      "id": 2990775855,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5OTA3NzU4NTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2990775855",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f6715027be0c672f835c0c794bf62b77cdf61787",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/f6715027be0c672f835c0c794bf62b77cdf61787",
      "created_at": "2020-01-29T19:23:20Z"
    },
    {
      "event": "referenced",
      "id": 2991005725,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5OTEwMDU3MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2991005725",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "50edf1a5b187ea3a108b1d68b3f62d26ff8822f0",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/50edf1a5b187ea3a108b1d68b3f62d26ff8822f0",
      "created_at": "2020-01-29T20:39:41Z"
    },
    {
      "event": "referenced",
      "id": 4517981707,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1MTc5ODE3MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4517981707",
      "actor": {
        "login": "ckti",
        "id": 7046769,
        "node_id": "MDQ6VXNlcjcwNDY3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7046769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ckti",
        "html_url": "https://github.com/ckti",
        "followers_url": "https://api.github.com/users/ckti/followers",
        "following_url": "https://api.github.com/users/ckti/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ckti/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ckti/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ckti/subscriptions",
        "organizations_url": "https://api.github.com/users/ckti/orgs",
        "repos_url": "https://api.github.com/users/ckti/repos",
        "events_url": "https://api.github.com/users/ckti/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ckti/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ed724350fee1b0b1d98ed0527969f396c5d56e1d",
      "commit_url": "https://api.github.com/repos/ckti-ioncore-current/ion/commits/ed724350fee1b0b1d98ed0527969f396c5d56e1d",
      "created_at": "2021-03-28T10:03:03Z"
    },
    {
      "event": "locked",
      "id": 5271691004,
      "node_id": "LOE_lADOABII584P-YA6zwAAAAE6N578",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271691004",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:30:40Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146549693",
      "pull_request_review_id": 71506486,
      "id": 146549693,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjU0OTY5Mw==",
      "diff_hunk": "@@ -72,62 +72,135 @@ def run_test(self):\n         # otherwise we're off by exactly the fee amount as that's mined\n         # and matures in the next 100 blocks\n         node.sendfrom(\"\", common_address, fee)\n-        accounts = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n         amount_to_send = 1.0\n-        account_addresses = dict()\n+\n+        # Create accounts and make sure subsequent account API calls\n+        # recognize the account/address associations.\n+        accounts = [Account(name) for name in (\"a\", \"b\", \"c\", \"d\", \"e\")]\n         for account in accounts:\n-            address = node.getaccountaddress(account)\n-            account_addresses[account] = address\n-            \n-            node.getnewaddress(account)\n-            assert_equal(node.getaccount(address), account)\n-            assert(address in node.getaddressesbyaccount(account))\n-            \n-            node.sendfrom(\"\", address, amount_to_send)\n-        \n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+\n+        # Send a transaction to each account, and make sure this forces\n+        # getaccountaddress to generate a new receiving address.\n+        for account in accounts:\n+            node.sendtoaddress(account.receive_address, amount_to_send)\n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+\n+        # Check the amounts received.\n         node.generate(1)\n+        for account in accounts:\n+            assert_equal(\n+                node.getreceivedbyaddress(account.addresses[0]), amount_to_send)\n+            assert_equal(node.getreceivedbyaccount(account.name), amount_to_send)\n         \n-        for i in range(len(accounts)):\n-            from_account = accounts[i]\n+        # Check that sendfrom account reduces listaccounts balances.\n+        for i, account in enumerate(accounts):\n             to_account = accounts[(i+1) % len(accounts)]\n-            to_address = account_addresses[to_account]\n-            node.sendfrom(from_account, to_address, amount_to_send)\n-        \n+            node.sendfrom(account.name, to_account.receive_address, amount_to_send)\n         node.generate(1)\n-        \n         for account in accounts:\n-            address = node.getaccountaddress(account)\n-            assert(address != account_addresses[account])\n-            assert_equal(node.getreceivedbyaccount(account), 2)\n-            node.move(account, \"\", node.getbalance(account))\n-\n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+            assert_equal(node.getreceivedbyaccount(account.name), 2)\n+            node.move(account.name, \"\", node.getbalance(account.name))\n+            account.verify(node)\n         node.generate(101)\n-        \n         expected_account_balances = {\"\": 5200}\n         for account in accounts:\n-            expected_account_balances[account] = 0\n-        \n+            expected_account_balances[account.name] = 0\n         assert_equal(node.listaccounts(), expected_account_balances)\n-        \n         assert_equal(node.getbalance(\"\"), 5200)\n         \n+        # Check that setaccount can assign an account to a new unused address.\n         for account in accounts:\n             address = node.getaccountaddress(\"\")\n-            node.setaccount(address, account)\n-            assert(address in node.getaddressesbyaccount(account))\n+            node.setaccount(address, account.name)\n+            account.add_address(address)\n+            account.verify(node)\n             assert(address not in node.getaddressesbyaccount(\"\"))\n         \n+        # Check that addmultisigaddress can assign accounts.\n         for account in accounts:\n             addresses = []\n             for x in range(10):\n                 addresses.append(node.getnewaddress())\n-            multisig_address = node.addmultisigaddress(5, addresses, account)\n+            multisig_address = node.addmultisigaddress(5, addresses, account.name)\n+            account.add_address(multisig_address)\n+            account.verify(node)\n             node.sendfrom(\"\", multisig_address, 50)\n-        \n         node.generate(101)\n-        \n         for account in accounts:\n-            assert_equal(node.getbalance(account), 50)\n+            assert_equal(node.getbalance(account.name), 50)\n+\n+        # Check that setaccount can change the account of an address from a\n+        # different account.\n+        change_account(node, accounts[0].addresses[0], accounts[0], accounts[1])\n+\n+        # Check that setaccount can change the account of an address which\n+        # is the receiving address of a different account.\n+        change_account(node, accounts[0].receive_address, accounts[0], accounts[1])\n+\n+        # Check that setaccount can set the account of an address already\n+        # in the account. This is a no-op.\n+        change_account(node, accounts[2].addresses[0], accounts[2], accounts[2])\n+\n+        # Check that setaccount can set the account of an address which is\n+        # already the receiving address of the account. It would probably make\n+        # sense for this to be a no-op, but right now it resets the receiving\n+        # address, causing getaccountaddress to return a brand new address.\n+        change_account(node, accounts[2].receive_address, accounts[2], accounts[2])\n+\n+class Account:\n+    def __init__(self, name):\n+        # Account name\n+        self.name = name\n+        # Current receiving address associated with this account.\n+        self.receive_address = None\n+        # List of all addresses assigned with this account\n+        self.addresses = []\n+\n+    def add_address(self, address):\n+        assert_equal(address not in self.addresses, True)\n+        self.addresses.append(address)\n+\n+    def add_receive_address(self, address):\n+        self.add_address(address)\n+        self.receive_address = address\n+\n+    def verify(self, node):\n+        if self.receive_address is not None:\n+            assert self.receive_address in self.addresses",
      "path": "test/functional/wallet-accounts.py",
      "position": 135,
      "original_position": 135,
      "commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "original_commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Assert to detect if `receive_address` is incorrecly changed?",
      "created_at": "2017-10-24T12:55:55Z",
      "updated_at": "2017-10-24T13:09:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11552#discussion_r146549693",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146549693"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 174,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146551327",
      "pull_request_review_id": 71506486,
      "id": 146551327,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjU1MTMyNw==",
      "diff_hunk": "@@ -72,62 +72,135 @@ def run_test(self):\n         # otherwise we're off by exactly the fee amount as that's mined\n         # and matures in the next 100 blocks\n         node.sendfrom(\"\", common_address, fee)\n-        accounts = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n         amount_to_send = 1.0\n-        account_addresses = dict()\n+\n+        # Create accounts and make sure subsequent account API calls\n+        # recognize the account/address associations.\n+        accounts = [Account(name) for name in (\"a\", \"b\", \"c\", \"d\", \"e\")]\n         for account in accounts:\n-            address = node.getaccountaddress(account)\n-            account_addresses[account] = address\n-            \n-            node.getnewaddress(account)\n-            assert_equal(node.getaccount(address), account)\n-            assert(address in node.getaddressesbyaccount(account))\n-            \n-            node.sendfrom(\"\", address, amount_to_send)\n-        \n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+\n+        # Send a transaction to each account, and make sure this forces\n+        # getaccountaddress to generate a new receiving address.\n+        for account in accounts:\n+            node.sendtoaddress(account.receive_address, amount_to_send)\n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+\n+        # Check the amounts received.\n         node.generate(1)\n+        for account in accounts:\n+            assert_equal(\n+                node.getreceivedbyaddress(account.addresses[0]), amount_to_send)\n+            assert_equal(node.getreceivedbyaccount(account.name), amount_to_send)\n         \n-        for i in range(len(accounts)):\n-            from_account = accounts[i]\n+        # Check that sendfrom account reduces listaccounts balances.\n+        for i, account in enumerate(accounts):\n             to_account = accounts[(i+1) % len(accounts)]\n-            to_address = account_addresses[to_account]\n-            node.sendfrom(from_account, to_address, amount_to_send)\n-        \n+            node.sendfrom(account.name, to_account.receive_address, amount_to_send)\n         node.generate(1)\n-        \n         for account in accounts:\n-            address = node.getaccountaddress(account)\n-            assert(address != account_addresses[account])\n-            assert_equal(node.getreceivedbyaccount(account), 2)\n-            node.move(account, \"\", node.getbalance(account))\n-\n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+            assert_equal(node.getreceivedbyaccount(account.name), 2)\n+            node.move(account.name, \"\", node.getbalance(account.name))\n+            account.verify(node)\n         node.generate(101)\n-        \n         expected_account_balances = {\"\": 5200}\n         for account in accounts:\n-            expected_account_balances[account] = 0\n-        \n+            expected_account_balances[account.name] = 0\n         assert_equal(node.listaccounts(), expected_account_balances)\n-        \n         assert_equal(node.getbalance(\"\"), 5200)\n         \n+        # Check that setaccount can assign an account to a new unused address.\n         for account in accounts:\n             address = node.getaccountaddress(\"\")\n-            node.setaccount(address, account)\n-            assert(address in node.getaddressesbyaccount(account))\n+            node.setaccount(address, account.name)\n+            account.add_address(address)\n+            account.verify(node)\n             assert(address not in node.getaddressesbyaccount(\"\"))\n         \n+        # Check that addmultisigaddress can assign accounts.\n         for account in accounts:\n             addresses = []\n             for x in range(10):\n                 addresses.append(node.getnewaddress())\n-            multisig_address = node.addmultisigaddress(5, addresses, account)\n+            multisig_address = node.addmultisigaddress(5, addresses, account.name)\n+            account.add_address(multisig_address)\n+            account.verify(node)\n             node.sendfrom(\"\", multisig_address, 50)\n-        \n         node.generate(101)\n-        \n         for account in accounts:\n-            assert_equal(node.getbalance(account), 50)\n+            assert_equal(node.getbalance(account.name), 50)\n+\n+        # Check that setaccount can change the account of an address from a\n+        # different account.\n+        change_account(node, accounts[0].addresses[0], accounts[0], accounts[1])\n+\n+        # Check that setaccount can change the account of an address which\n+        # is the receiving address of a different account.\n+        change_account(node, accounts[0].receive_address, accounts[0], accounts[1])\n+\n+        # Check that setaccount can set the account of an address already\n+        # in the account. This is a no-op.\n+        change_account(node, accounts[2].addresses[0], accounts[2], accounts[2])\n+\n+        # Check that setaccount can set the account of an address which is\n+        # already the receiving address of the account. It would probably make\n+        # sense for this to be a no-op, but right now it resets the receiving\n+        # address, causing getaccountaddress to return a brand new address.\n+        change_account(node, accounts[2].receive_address, accounts[2], accounts[2])\n+\n+class Account:\n+    def __init__(self, name):\n+        # Account name\n+        self.name = name\n+        # Current receiving address associated with this account.\n+        self.receive_address = None\n+        # List of all addresses assigned with this account\n+        self.addresses = []\n+\n+    def add_address(self, address):\n+        assert_equal(address not in self.addresses, True)\n+        self.addresses.append(address)\n+\n+    def add_receive_address(self, address):\n+        self.add_address(address)\n+        self.receive_address = address\n+\n+    def verify(self, node):\n+        if self.receive_address is not None:\n+            assert self.receive_address in self.addresses\n+            assert_equal(node.getaccountaddress(self.name), self.receive_address)\n+\n+        for address in self.addresses:\n+            assert_equal(node.getaccount(address), self.name)\n+\n+        assert_equal(\n+            set(node.getaddressesbyaccount(self.name)), set(self.addresses))\n+\n+\n+def change_account(node, address, old_account, new_account):\n+    assert_equal(address in old_account.addresses, True)\n+    node.setaccount(address, new_account.name)\n+\n+    old_account.addresses.remove(address)\n+    new_account.add_address(address)\n+\n+    # Calling setaccount on an address which was previously the receiving\n+    # address of a different account should reset the receiving address of\n+    # the old account, causing getaccountaddress to return a brand new\n+    # address.\n+    if address == old_account.receive_address:\n+        new_address = node.getaccountaddress(old_account.name)\n+        assert_equal(new_address not in old_account.addresses, True)",
      "path": "test/functional/wallet-accounts.py",
      "position": 158,
      "original_position": 158,
      "commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "original_commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`assert ... not in ...;`?",
      "created_at": "2017-10-24T13:02:08Z",
      "updated_at": "2017-10-24T13:09:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11552#discussion_r146551327",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146551327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 197,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146559305",
      "pull_request_review_id": 71517909,
      "id": 146559305,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjU1OTMwNQ==",
      "diff_hunk": "@@ -72,62 +72,135 @@ def run_test(self):\n         # otherwise we're off by exactly the fee amount as that's mined\n         # and matures in the next 100 blocks\n         node.sendfrom(\"\", common_address, fee)\n-        accounts = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n         amount_to_send = 1.0\n-        account_addresses = dict()\n+\n+        # Create accounts and make sure subsequent account API calls\n+        # recognize the account/address associations.\n+        accounts = [Account(name) for name in (\"a\", \"b\", \"c\", \"d\", \"e\")]\n         for account in accounts:\n-            address = node.getaccountaddress(account)\n-            account_addresses[account] = address\n-            \n-            node.getnewaddress(account)\n-            assert_equal(node.getaccount(address), account)\n-            assert(address in node.getaddressesbyaccount(account))\n-            \n-            node.sendfrom(\"\", address, amount_to_send)\n-        \n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+\n+        # Send a transaction to each account, and make sure this forces\n+        # getaccountaddress to generate a new receiving address.\n+        for account in accounts:\n+            node.sendtoaddress(account.receive_address, amount_to_send)\n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+\n+        # Check the amounts received.\n         node.generate(1)\n+        for account in accounts:\n+            assert_equal(\n+                node.getreceivedbyaddress(account.addresses[0]), amount_to_send)\n+            assert_equal(node.getreceivedbyaccount(account.name), amount_to_send)\n         \n-        for i in range(len(accounts)):\n-            from_account = accounts[i]\n+        # Check that sendfrom account reduces listaccounts balances.\n+        for i, account in enumerate(accounts):\n             to_account = accounts[(i+1) % len(accounts)]\n-            to_address = account_addresses[to_account]\n-            node.sendfrom(from_account, to_address, amount_to_send)\n-        \n+            node.sendfrom(account.name, to_account.receive_address, amount_to_send)\n         node.generate(1)\n-        \n         for account in accounts:\n-            address = node.getaccountaddress(account)\n-            assert(address != account_addresses[account])\n-            assert_equal(node.getreceivedbyaccount(account), 2)\n-            node.move(account, \"\", node.getbalance(account))\n-\n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+            assert_equal(node.getreceivedbyaccount(account.name), 2)\n+            node.move(account.name, \"\", node.getbalance(account.name))\n+            account.verify(node)\n         node.generate(101)\n-        \n         expected_account_balances = {\"\": 5200}\n         for account in accounts:\n-            expected_account_balances[account] = 0\n-        \n+            expected_account_balances[account.name] = 0\n         assert_equal(node.listaccounts(), expected_account_balances)\n-        \n         assert_equal(node.getbalance(\"\"), 5200)\n         \n+        # Check that setaccount can assign an account to a new unused address.\n         for account in accounts:\n             address = node.getaccountaddress(\"\")\n-            node.setaccount(address, account)\n-            assert(address in node.getaddressesbyaccount(account))\n+            node.setaccount(address, account.name)\n+            account.add_address(address)\n+            account.verify(node)\n             assert(address not in node.getaddressesbyaccount(\"\"))\n         \n+        # Check that addmultisigaddress can assign accounts.\n         for account in accounts:\n             addresses = []\n             for x in range(10):\n                 addresses.append(node.getnewaddress())\n-            multisig_address = node.addmultisigaddress(5, addresses, account)\n+            multisig_address = node.addmultisigaddress(5, addresses, account.name)\n+            account.add_address(multisig_address)\n+            account.verify(node)\n             node.sendfrom(\"\", multisig_address, 50)\n-        \n         node.generate(101)\n-        \n         for account in accounts:\n-            assert_equal(node.getbalance(account), 50)\n+            assert_equal(node.getbalance(account.name), 50)\n+\n+        # Check that setaccount can change the account of an address from a\n+        # different account.\n+        change_account(node, accounts[0].addresses[0], accounts[0], accounts[1])\n+\n+        # Check that setaccount can change the account of an address which\n+        # is the receiving address of a different account.\n+        change_account(node, accounts[0].receive_address, accounts[0], accounts[1])\n+\n+        # Check that setaccount can set the account of an address already\n+        # in the account. This is a no-op.\n+        change_account(node, accounts[2].addresses[0], accounts[2], accounts[2])\n+\n+        # Check that setaccount can set the account of an address which is\n+        # already the receiving address of the account. It would probably make\n+        # sense for this to be a no-op, but right now it resets the receiving\n+        # address, causing getaccountaddress to return a brand new address.\n+        change_account(node, accounts[2].receive_address, accounts[2], accounts[2])\n+\n+class Account:\n+    def __init__(self, name):\n+        # Account name\n+        self.name = name\n+        # Current receiving address associated with this account.\n+        self.receive_address = None\n+        # List of all addresses assigned with this account\n+        self.addresses = []\n+\n+    def add_address(self, address):\n+        assert_equal(address not in self.addresses, True)\n+        self.addresses.append(address)\n+\n+    def add_receive_address(self, address):\n+        self.add_address(address)\n+        self.receive_address = address\n+\n+    def verify(self, node):\n+        if self.receive_address is not None:\n+            assert self.receive_address in self.addresses\n+            assert_equal(node.getaccountaddress(self.name), self.receive_address)\n+\n+        for address in self.addresses:\n+            assert_equal(node.getaccount(address), self.name)\n+\n+        assert_equal(\n+            set(node.getaddressesbyaccount(self.name)), set(self.addresses))\n+\n+\n+def change_account(node, address, old_account, new_account):\n+    assert_equal(address in old_account.addresses, True)\n+    node.setaccount(address, new_account.name)\n+\n+    old_account.addresses.remove(address)\n+    new_account.add_address(address)\n+\n+    # Calling setaccount on an address which was previously the receiving\n+    # address of a different account should reset the receiving address of\n+    # the old account, causing getaccountaddress to return a brand new\n+    # address.\n+    if address == old_account.receive_address:\n+        new_address = node.getaccountaddress(old_account.name)\n+        assert_equal(new_address not in old_account.addresses, True)",
      "path": "test/functional/wallet-accounts.py",
      "position": 158,
      "original_position": 158,
      "commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "original_commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "in_reply_to_id": 146551327,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> assert ... not in ...;?\r\n\r\nAssert statements are skipped when python is run in optimized mode. I only use assert statements in tests when asserting conditions that indicate bugs in test setup, as opposed to conditions that could be caused by bugs in the code under test. (If you're familiar with google test framework, this is the distinction between CHECK and ASSERT_TRUE).\r\n",
      "created_at": "2017-10-24T13:30:23Z",
      "updated_at": "2017-10-24T13:30:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11552#discussion_r146559305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146559305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 197,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146560275",
      "pull_request_review_id": 71519056,
      "id": 146560275,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjU2MDI3NQ==",
      "diff_hunk": "@@ -72,62 +72,135 @@ def run_test(self):\n         # otherwise we're off by exactly the fee amount as that's mined\n         # and matures in the next 100 blocks\n         node.sendfrom(\"\", common_address, fee)\n-        accounts = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n         amount_to_send = 1.0\n-        account_addresses = dict()\n+\n+        # Create accounts and make sure subsequent account API calls\n+        # recognize the account/address associations.\n+        accounts = [Account(name) for name in (\"a\", \"b\", \"c\", \"d\", \"e\")]\n         for account in accounts:\n-            address = node.getaccountaddress(account)\n-            account_addresses[account] = address\n-            \n-            node.getnewaddress(account)\n-            assert_equal(node.getaccount(address), account)\n-            assert(address in node.getaddressesbyaccount(account))\n-            \n-            node.sendfrom(\"\", address, amount_to_send)\n-        \n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+\n+        # Send a transaction to each account, and make sure this forces\n+        # getaccountaddress to generate a new receiving address.\n+        for account in accounts:\n+            node.sendtoaddress(account.receive_address, amount_to_send)\n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+\n+        # Check the amounts received.\n         node.generate(1)\n+        for account in accounts:\n+            assert_equal(\n+                node.getreceivedbyaddress(account.addresses[0]), amount_to_send)\n+            assert_equal(node.getreceivedbyaccount(account.name), amount_to_send)\n         \n-        for i in range(len(accounts)):\n-            from_account = accounts[i]\n+        # Check that sendfrom account reduces listaccounts balances.\n+        for i, account in enumerate(accounts):\n             to_account = accounts[(i+1) % len(accounts)]\n-            to_address = account_addresses[to_account]\n-            node.sendfrom(from_account, to_address, amount_to_send)\n-        \n+            node.sendfrom(account.name, to_account.receive_address, amount_to_send)\n         node.generate(1)\n-        \n         for account in accounts:\n-            address = node.getaccountaddress(account)\n-            assert(address != account_addresses[account])\n-            assert_equal(node.getreceivedbyaccount(account), 2)\n-            node.move(account, \"\", node.getbalance(account))\n-\n+            account.add_receive_address(node.getaccountaddress(account.name))\n+            account.verify(node)\n+            assert_equal(node.getreceivedbyaccount(account.name), 2)\n+            node.move(account.name, \"\", node.getbalance(account.name))\n+            account.verify(node)\n         node.generate(101)\n-        \n         expected_account_balances = {\"\": 5200}\n         for account in accounts:\n-            expected_account_balances[account] = 0\n-        \n+            expected_account_balances[account.name] = 0\n         assert_equal(node.listaccounts(), expected_account_balances)\n-        \n         assert_equal(node.getbalance(\"\"), 5200)\n         \n+        # Check that setaccount can assign an account to a new unused address.\n         for account in accounts:\n             address = node.getaccountaddress(\"\")\n-            node.setaccount(address, account)\n-            assert(address in node.getaddressesbyaccount(account))\n+            node.setaccount(address, account.name)\n+            account.add_address(address)\n+            account.verify(node)\n             assert(address not in node.getaddressesbyaccount(\"\"))\n         \n+        # Check that addmultisigaddress can assign accounts.\n         for account in accounts:\n             addresses = []\n             for x in range(10):\n                 addresses.append(node.getnewaddress())\n-            multisig_address = node.addmultisigaddress(5, addresses, account)\n+            multisig_address = node.addmultisigaddress(5, addresses, account.name)\n+            account.add_address(multisig_address)\n+            account.verify(node)\n             node.sendfrom(\"\", multisig_address, 50)\n-        \n         node.generate(101)\n-        \n         for account in accounts:\n-            assert_equal(node.getbalance(account), 50)\n+            assert_equal(node.getbalance(account.name), 50)\n+\n+        # Check that setaccount can change the account of an address from a\n+        # different account.\n+        change_account(node, accounts[0].addresses[0], accounts[0], accounts[1])\n+\n+        # Check that setaccount can change the account of an address which\n+        # is the receiving address of a different account.\n+        change_account(node, accounts[0].receive_address, accounts[0], accounts[1])\n+\n+        # Check that setaccount can set the account of an address already\n+        # in the account. This is a no-op.\n+        change_account(node, accounts[2].addresses[0], accounts[2], accounts[2])\n+\n+        # Check that setaccount can set the account of an address which is\n+        # already the receiving address of the account. It would probably make\n+        # sense for this to be a no-op, but right now it resets the receiving\n+        # address, causing getaccountaddress to return a brand new address.\n+        change_account(node, accounts[2].receive_address, accounts[2], accounts[2])\n+\n+class Account:\n+    def __init__(self, name):\n+        # Account name\n+        self.name = name\n+        # Current receiving address associated with this account.\n+        self.receive_address = None\n+        # List of all addresses assigned with this account\n+        self.addresses = []\n+\n+    def add_address(self, address):\n+        assert_equal(address not in self.addresses, True)\n+        self.addresses.append(address)\n+\n+    def add_receive_address(self, address):\n+        self.add_address(address)\n+        self.receive_address = address\n+\n+    def verify(self, node):\n+        if self.receive_address is not None:\n+            assert self.receive_address in self.addresses\n+            assert_equal(node.getaccountaddress(self.name), self.receive_address)\n+\n+        for address in self.addresses:\n+            assert_equal(node.getaccount(address), self.name)\n+\n+        assert_equal(\n+            set(node.getaddressesbyaccount(self.name)), set(self.addresses))\n+\n+\n+def change_account(node, address, old_account, new_account):\n+    assert_equal(address in old_account.addresses, True)\n+    node.setaccount(address, new_account.name)\n+\n+    old_account.addresses.remove(address)\n+    new_account.add_address(address)\n+\n+    # Calling setaccount on an address which was previously the receiving\n+    # address of a different account should reset the receiving address of\n+    # the old account, causing getaccountaddress to return a brand new\n+    # address.\n+    if address == old_account.receive_address:\n+        new_address = node.getaccountaddress(old_account.name)\n+        assert_equal(new_address not in old_account.addresses, True)",
      "path": "test/functional/wallet-accounts.py",
      "position": 158,
      "original_position": 158,
      "commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "original_commit_id": "bc9c0a7b74eab853fc21402d62a30dacd77a8843",
      "in_reply_to_id": 146551327,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the explanation, wasn't aware of this.",
      "created_at": "2017-10-24T13:33:45Z",
      "updated_at": "2017-10-24T13:33:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/11552#discussion_r146560275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146560275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 197,
      "original_line": 197,
      "side": "RIGHT"
    }
  ]
}