{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143",
    "id": 426779162,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2Nzc5MTYy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19143",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19143.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19143.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19143",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19143/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
    "number": 19143,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "tests: Add fuzzing harnesses for CAutoFile, CBufferedFile, LoadExternalBlockFile and other FILE* consumers",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add fuzzing harnesses for `CAutoFile`, `CBufferedFile`, `LoadExternalBlockFile` and other `FILE*` consumers:\r\n* Add `FuzzedFileProvider` which provides a `FILE*` interface to `FuzzedDataProvider` using `fopencookie`\r\n* Add `FuzzedAutoFileProvider` which provides a `CAutoFile` interface to `FuzzedDataProvider`\r\n* Add serialization/deserialization fuzzing helpers `WriteToStream(…)`/`ReadFromStream(…)`\r\n* Add fuzzing harness for `CAutoFile` (`streams.h`)\r\n* Add fuzzing harness for `CBufferedFile` (`streams.h`)\r\n* Add fuzzing harness for `LoadExternalBlockFile(...)` (`validation.h`)\r\n* Add fuzzing harness for `CBlockPolicyEstimator::Read` and `CBlockPolicyEstimator::Write` (`policy/fees.h`)\r\n\r\nSee [`doc/fuzzing.md`](https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md) for information on how to fuzz Bitcoin Core. Don't forget to contribute any coverage increasing inputs you find to the [Bitcoin Core fuzzing corpus repo](https://github.com/bitcoin-core/qa-assets).\r\n\r\nHappy fuzzing :)",
    "labels": [
      {
        "id": 61889416,
        "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-06-02T19:14:47Z",
    "updated_at": "2022-08-18T18:22:51Z",
    "closed_at": "2020-07-18T07:27:51Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-07-18T07:27:51Z",
    "merge_commit_sha": "090d87716074434bdc6c7656ec44d049197a793a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "practicalswift:fuzzers-FILE",
      "ref": "fuzzers-FILE",
      "sha": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 78569642,
        "node_id": "MDEwOlJlcG9zaXRvcnk3ODU2OTY0Mg==",
        "name": "bitcoin",
        "full_name": "practicalswift/bitcoin",
        "owner": {
          "login": "practicalswift",
          "id": 7826565,
          "node_id": "MDQ6VXNlcjc4MjY1NjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/practicalswift",
          "html_url": "https://github.com/practicalswift",
          "followers_url": "https://api.github.com/users/practicalswift/followers",
          "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
          "organizations_url": "https://api.github.com/users/practicalswift/orgs",
          "repos_url": "https://api.github.com/users/practicalswift/repos",
          "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/practicalswift/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/practicalswift/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/practicalswift/bitcoin",
        "archive_url": "https://api.github.com/repos/practicalswift/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/practicalswift/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/practicalswift/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/practicalswift/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/practicalswift/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/practicalswift/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/practicalswift/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/practicalswift/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/practicalswift/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/practicalswift/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/practicalswift/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/practicalswift/bitcoin/events",
        "forks_url": "https://api.github.com/repos/practicalswift/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/practicalswift/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/practicalswift/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/practicalswift/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/practicalswift/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/practicalswift/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/practicalswift/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/practicalswift/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/practicalswift/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/practicalswift/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/practicalswift/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/practicalswift/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/practicalswift/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:practicalswift/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/practicalswift/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/practicalswift/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/practicalswift/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/practicalswift/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/practicalswift/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/practicalswift/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/practicalswift/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/practicalswift/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/practicalswift/bitcoin/hooks",
        "svn_url": "https://github.com/practicalswift/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 164685,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2021-10-01T13:54:08Z",
        "created_at": "2017-01-10T20:09:24Z",
        "updated_at": "2022-08-28T15:39:12Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3d57015aa228f3504ce056243c8b8dfd74fd8c76",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 454,
    "deletions": 0,
    "changed_files": 7,
    "commits": 8,
    "review_comments": 19,
    "comments": 4
  },
  "events": [
    {
      "event": "labeled",
      "id": 3399335405,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMzOTkzMzU0MDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3399335405",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-02T20:20:47Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 3399335408,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMzOTkzMzU0MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3399335408",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-02T20:20:47Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 640300639,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDMwMDYzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/640300639",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-08T00:08:21Z",
      "updated_at": "2020-07-11T20:48:13Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19259 (tests: Add fuzzing harness for LoadMempool(...) and DumpMempool(...) by practicalswift)\n* #19203 (net: Add regression fuzz harness for CVE-2017-18350. Add FuzzedSocket. Add thin SOCKET wrapper. by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#issuecomment-640300639",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19143"
    },
    {
      "event": "labeled",
      "id": 3435280716,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MzUyODA3MTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3435280716",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T17:49:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3435717397,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQzNTcxNzM5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3435717397",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T19:55:30Z"
    },
    {
      "event": "unlabeled",
      "id": 3436099112,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQzNjA5OTExMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3436099112",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T21:59:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3437309060,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQzNzMwOTA2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3437309060",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-12T07:46:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3446277739,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ0NjI3NzczOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3446277739",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T21:30:19Z"
    },
    {
      "event": "reviewed",
      "id": 446741006,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzQxMDA2",
      "url": null,
      "actor": null,
      "commit_id": "97ee502b664eabbdd338f034a16b31c775057638",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "utACK 27bef8c",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#pullrequestreview-446741006",
      "submitted_at": "2020-07-10T23:30:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
    },
    {
      "event": "labeled",
      "id": 3536187452,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1MzYxODc0NTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536187452",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T10:39:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3536490208,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzNjQ5MDIwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536490208",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T18:17:26Z"
    },
    {
      "event": "unlabeled",
      "id": 3536516442,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzUzNjUxNjQ0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536516442",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T18:57:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 448430879,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NDMwODc5",
      "url": null,
      "actor": null,
      "commit_id": "30d545c15a1fcbae1d4875d2af4fbac40fc43cf2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Combined fuzzing coverage for only the fuzzers in *this* branch: https://crypt-iq.github.io/pr19143_cov/src/\r\n\r\nEach fuzzer was run for about 24 hours. I used a variation of libFuzzer and AFL. \r\nThere seems to be some missing coverage in `CBlockPolicyEstimator::Write` & `CBlockPolicyEstimator::Read`. That could probably be fixed by better seeds. There's also missing coverage in `LoadExternalBlockFile`, and this can also be fixed by better seeds. I don't know the format of the external block files (I copy pasted the magic bytes from `MessageStart()` as seeds but no luck). This was the only slow fuzzing harness with ~5 execs/s.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#pullrequestreview-448430879",
      "submitted_at": "2020-07-14T21:24:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3546355670,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0NjM1NTY3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3546355670",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T00:07:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3546420418,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0NjQyMDQxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3546420418",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T00:44:01Z"
    },
    {
      "event": "commented",
      "id": 658485369,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODQ4NTM2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658485369",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T00:58:53Z",
      "updated_at": "2020-07-15T00:58:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Combined fuzzing coverage for only the fuzzers in _this_ branch: https://crypt-iq.github.io/pr19143_cov/src/\r\n> \r\n> Each fuzzer was run for about 24 hours. I used a variation of libFuzzer and AFL.\r\n\r\nWow, that's some thorough testing! Thanks a lot!\r\n\r\n> There seems to be some missing coverage in `CBlockPolicyEstimator::Write` & `CBlockPolicyEstimator::Read`. That could probably be fixed by better seeds.\r\n\r\nI think the perceived lack of coverage is simply due to `src/test/fuzz/policy_estimator` being very slow (`CBlockPolicyEstimator` creation is costly): I believe that given enough time the fuzzer will span the full CFG :)\r\n\r\nTo speed things up I've now added also a dedicated fuzzer for `CBlockPolicyEstimator::{Write,Read}` which re-uses the `CBlockPolicyEstimator` object across runs (without sacrificing substantial coverage stability AFAICT): see `src/test/fuzz/policy_estimator_io.cpp`.\r\n\r\nThis dedicated fuzzer is running at >1000 exec/s compared to <50 exec/s for the non-dedicated one.\r\n\r\n> There's also missing coverage in `LoadExternalBlockFile`, and this can also be fixed by better seeds. I don't know the format of the external block files (I copy pasted the magic bytes from `MessageStart()` as seeds but no luck). This was the only slow fuzzing harness with ~5 execs/s.\r\n\r\nlibFuzzer from LLVM 10 is able to reach past the magic bytes check within a few seconds. Perhaps you were using an old version of libFuzzer when running the `load_external_block_file` fuzzer?",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#issuecomment-658485369",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19143"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3546491878,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0NjQ5MTg3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3546491878",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T01:25:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3547528022,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0NzUyODAyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3547528022",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T08:43:25Z"
    },
    {
      "event": "reviewed",
      "id": 448585447,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NTg1NDQ3",
      "url": null,
      "actor": null,
      "commit_id": "46ce3bf4c663fce393c1cf8e74833549847e6bfb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "With `clang-10` I can pass the magic bytes check (I guess it uses coverage in `memcmp` to solve for it?). Currently running the new policy_estimator_io fuzzer as well.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#pullrequestreview-448585447",
      "submitted_at": "2020-07-15T10:16:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGJjZDY4NTRjYTA1YTliZDFlOWE1ZTEyMjJkYWMxNzU4MDQ4MjMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
      "tree": {
        "sha": "7bafc63b2e7a6e10e4a416a1509bc86a71dc35d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bafc63b2e7a6e10e4a416a1509bc86a71dc35d4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42fe6aad326f62c7e6ea12ee873149257f67ce5d",
          "sha": "42fe6aad326f62c7e6ea12ee873149257f67ce5d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/42fe6aad326f62c7e6ea12ee873149257f67ce5d"
        }
      ],
      "message": "tests: Add FuzzedFileProvider which provides a FILE* interface to FuzzedDataProvider using fopencookie",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T18:58:21Z"
      },
      "sha": "9dbcd6854ca05a9bd1e9a5e1222dac1758048231"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDgwOTRhNTA2YWQwMzFkMjExYjlkZmU3NjM5ZDhiM2EyMjM5Nzg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e48094a506ad031d211b9dfe7639d8b3a2239788",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e48094a506ad031d211b9dfe7639d8b3a2239788",
      "tree": {
        "sha": "59463e3989b19dc2199b8238c28c73ac2eff0901",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59463e3989b19dc2199b8238c28c73ac2eff0901"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
          "sha": "9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9dbcd6854ca05a9bd1e9a5e1222dac1758048231"
        }
      ],
      "message": "tests: Add FuzzedAutoFileProvider which provides a CAutoFile interface to FuzzedDataProvider",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:02:26Z"
      },
      "sha": "e48094a506ad031d211b9dfe7639d8b3a2239788"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTA3YzA3OTlkNzU5MzU1ZGQwY2ZiZTgzNDQ5ZjBmNzY3YTcyNjRl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e507c0799d759355dd0cfbe83449f0f767a7264e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e507c0799d759355dd0cfbe83449f0f767a7264e",
      "tree": {
        "sha": "0d64949f74db8745041e3ccbdf0a5f36f909bfb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d64949f74db8745041e3ccbdf0a5f36f909bfb7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e48094a506ad031d211b9dfe7639d8b3a2239788",
          "sha": "e48094a506ad031d211b9dfe7639d8b3a2239788",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e48094a506ad031d211b9dfe7639d8b3a2239788"
        }
      ],
      "message": "tests: Add serialization/deserialization fuzzing helpers WriteToStream(…)/ReadFromStream(…)",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:03:52Z"
      },
      "sha": "e507c0799d759355dd0cfbe83449f0f767a7264e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmM2FhNjU5YmU2NzZhNGRkMGMyMGZlNmM1Y2I0YWNkN2E1YjM4Yjc2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
      "tree": {
        "sha": "2cc4462401841cd9bc239128621294930c141335",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cc4462401841cd9bc239128621294930c141335"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e507c0799d759355dd0cfbe83449f0f767a7264e",
          "sha": "e507c0799d759355dd0cfbe83449f0f767a7264e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e507c0799d759355dd0cfbe83449f0f767a7264e"
        }
      ],
      "message": "tests: Add fuzzing harness for CAutoFile (streams.h)",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:04:44Z"
      },
      "sha": "f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODIzMzc2MDMwNWEzNmFjYmQ0MWQ3NmFlZWJlYWRhMTM0MGY2MzY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98233760305a36acbd41d76aeebeada1340f6367",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/98233760305a36acbd41d76aeebeada1340f6367",
      "tree": {
        "sha": "d8e7e8f940830a580ed5fdddde02a40d2623bb47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8e7e8f940830a580ed5fdddde02a40d2623bb47"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
          "sha": "f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76"
        }
      ],
      "message": "tests: Add fuzzing harness for CBufferedFile (streams.h)",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:05:13Z"
      },
      "sha": "98233760305a36acbd41d76aeebeada1340f6367"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmNjNzFlNWY4Y2RmZDhiYTE0MTFjNzk5YzA3MjZmNTAzZTUyMzQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
      "tree": {
        "sha": "b4004bb55b04640f5724f258a0649ad2867c0bf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4004bb55b04640f5724f258a0649ad2867c0bf4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98233760305a36acbd41d76aeebeada1340f6367",
          "sha": "98233760305a36acbd41d76aeebeada1340f6367",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/98233760305a36acbd41d76aeebeada1340f6367"
        }
      ],
      "message": "tests: Add fuzzing harness for LoadExternalBlockFile(...) (validation.h)",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:05:46Z"
      },
      "sha": "7bcc71e5f8cdfd8ba1411c799c0726f503e52343"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTRlMDgwN2E4MTM3ZDgyODMyYWVhNDVlNDg2NGI0MjRmNzFmNjk4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/614e0807a8137d82832aea45e4864b424f71f698",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/614e0807a8137d82832aea45e4864b424f71f698",
      "tree": {
        "sha": "1e409ec6a0c064e51f6d884f1ee67fa54c765e4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e409ec6a0c064e51f6d884f1ee67fa54c765e4f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
          "sha": "7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7bcc71e5f8cdfd8ba1411c799c0726f503e52343"
        }
      ],
      "message": "tests: Add fuzzing harness for CBufferedFile::{SetPos,GetPos,GetType,GetVersion} (stream.h)",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T00:04:46Z"
      },
      "sha": "614e0807a8137d82832aea45e4864b424f71f698"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDZjMzQ4ODFkYzEyNWM5NzNiNmI5YmExZGFhOTk5ZDMxNDFiMWFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "tree": {
        "sha": "68e2b8e24eed511ac33988b0a8fb58699b651c6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68e2b8e24eed511ac33988b0a8fb58699b651c6e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/614e0807a8137d82832aea45e4864b424f71f698",
          "sha": "614e0807a8137d82832aea45e4864b424f71f698",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/614e0807a8137d82832aea45e4864b424f71f698"
        }
      ],
      "message": "tests: Add fuzzing harness for CBlockPolicyEstimator::{Read,Write} (policy/fees.h)",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:06:07Z"
      },
      "sha": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3548178119,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0ODE3ODExOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3548178119",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-15T11:43:35Z"
    },
    {
      "event": "commented",
      "id": 659460159,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTQ2MDE1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659460159",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-16T14:45:28Z",
      "updated_at": "2020-07-16T14:45:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can confirm that the new `policy_estimator_io` fuzzer is significantly faster with libfuzzer (600-700 exec/s on one core) and hits checks in `Read` & `Write` that it otherwise doesn't hit in the `policy_estimator` fuzzer due to being slower. Also tried with AFL but was very slow since I forgot to compile with persistent mode :/. Will review the latest set of changes now. Coverage for just the `policy_estimator_io` fuzzer is here https://crypt-iq.github.io/policy_cov_llvm_outs/src/policy/fees.cpp.gcov.html",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#issuecomment-659460159",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19143"
    },
    {
      "event": "commented",
      "id": 660410612,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDQxMDYxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660410612",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-18T02:33:57Z",
      "updated_at": "2020-07-18T02:33:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK ad6c348",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#issuecomment-660410612",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19143"
    },
    {
      "event": "merged",
      "id": 3560741290,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzU2MDc0MTI5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3560741290",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "090d87716074434bdc6c7656ec44d049197a793a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/090d87716074434bdc6c7656ec44d049197a793a",
      "created_at": "2020-07-18T07:27:51Z"
    },
    {
      "event": "closed",
      "id": 3560741295,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzU2MDc0MTI5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3560741295",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-18T07:27:52Z"
    },
    {
      "event": "referenced",
      "id": 3561284436,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1NjEyODQ0MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3561284436",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "60a95acd67df2e1188a792d9352fa36039de9461",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/60a95acd67df2e1188a792d9352fa36039de9461",
      "created_at": "2020-07-18T15:58:15Z"
    },
    {
      "event": "referenced",
      "id": 4284485731,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQyODQ0ODU3MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4284485731",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b52804961de5fe7f8b79ac2e4bfb068795f019ae",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/b52804961de5fe7f8b79ac2e4bfb068795f019ae",
      "created_at": "2021-02-03T10:38:14Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4577821409,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0NTc3ODIxNDA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4577821409",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-10T19:42:05Z"
    },
    {
      "event": "referenced",
      "id": 6567231971,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGHcAHj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6567231971",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a6bb4410ab248f6341863af38d39cd044ea773d2",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/a6bb4410ab248f6341863af38d39cd044ea773d2",
      "created_at": "2022-05-07T08:37:11Z"
    },
    {
      "event": "referenced",
      "id": 6567232501,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGHcAP1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6567232501",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4a5287d999c3ffa0caca4bec399a7d6b850101dd",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/4a5287d999c3ffa0caca4bec399a7d6b850101dd",
      "created_at": "2022-05-07T08:37:47Z"
    },
    {
      "event": "referenced",
      "id": 6801389503,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGVZPe_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6801389503",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "48937a60ebcfe9beb7707b9bf5700b9c27a94f13",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/48937a60ebcfe9beb7707b9bf5700b9c27a94f13",
      "created_at": "2022-06-14T06:35:26Z"
    },
    {
      "event": "referenced",
      "id": 6801416058,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGVZV96",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6801416058",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8950416efc97c5b44f9e274a98daf3410955d2c5",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/8950416efc97c5b44f9e274a98daf3410955d2c5",
      "created_at": "2022-06-14T06:40:24Z"
    },
    {
      "event": "referenced",
      "id": 6806667883,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGVtYJr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6806667883",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c18816d0bdc4358716309a452029dda6542fc604",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/c18816d0bdc4358716309a452029dda6542fc604",
      "created_at": "2022-06-14T18:12:19Z"
    },
    {
      "event": "referenced",
      "id": 6833558235,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGXT9Lb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6833558235",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8049c7962ccd9ebd5412de0b169df6c12514be42",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/8049c7962ccd9ebd5412de0b169df6c12514be42",
      "created_at": "2022-06-18T17:45:03Z"
    },
    {
      "event": "referenced",
      "id": 6833561307,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGXT97b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6833561307",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "67997d3e446f163cc1d83ccab1878dc0e40c0f16",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/67997d3e446f163cc1d83ccab1878dc0e40c0f16",
      "created_at": "2022-06-18T17:46:06Z"
    },
    {
      "event": "referenced",
      "id": 6925243991,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGcxtZX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6925243991",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b12b2b7a36de1c1d54e4c6b85a2b2665d5e4262a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/b12b2b7a36de1c1d54e4c6b85a2b2665d5e4262a",
      "created_at": "2022-07-04T06:37:21Z"
    },
    {
      "event": "referenced",
      "id": 6925255369,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGcxwLJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6925255369",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f83469f3fdd41127338429a9b4abbee4813d9c4d",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/f83469f3fdd41127338429a9b4abbee4813d9c4d",
      "created_at": "2022-07-04T06:39:45Z"
    },
    {
      "event": "referenced",
      "id": 6944346069,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGd6k_V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6944346069",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a2110387036e76c42ddf0d8f366c97b8278e0174",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/a2110387036e76c42ddf0d8f366c97b8278e0174",
      "created_at": "2022-07-06T16:35:26Z"
    },
    {
      "event": "referenced",
      "id": 6944422002,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGd63hy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6944422002",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8bde6cf8164e9da7b75a89fd92fc8609be5de79a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/8bde6cf8164e9da7b75a89fd92fc8609be5de79a",
      "created_at": "2022-07-06T16:45:15Z"
    },
    {
      "event": "referenced",
      "id": 6945610916,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGd_Zyk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6945610916",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "915dcab3dc73fa1a95f08e7c1655513e1b855fd0",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/915dcab3dc73fa1a95f08e7c1655513e1b855fd0",
      "created_at": "2022-07-06T19:32:05Z"
    },
    {
      "event": "referenced",
      "id": 6982537394,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGgMRCy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6982537394",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c92c2cc09bd36da95a47b201c12036fda37f0a62",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/c92c2cc09bd36da95a47b201c12036fda37f0a62",
      "created_at": "2022-07-13T03:45:22Z"
    },
    {
      "event": "referenced",
      "id": 6986410494,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGgbCn-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6986410494",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "60aa00a590ae7a07692ef921dc137913e149c694",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/60aa00a590ae7a07692ef921dc137913e149c694",
      "created_at": "2022-07-13T14:13:23Z"
    },
    {
      "event": "referenced",
      "id": 7002942355,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGhaGuT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7002942355",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eb2fa8128893a84b8b0fefe9c36fb93648fddc8d",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/eb2fa8128893a84b8b0fefe9c36fb93648fddc8d",
      "created_at": "2022-07-15T15:54:42Z"
    },
    {
      "event": "referenced",
      "id": 7007930187,
      "node_id": "REFE_lADOABII584lhKHuzwAAAAGhtIdL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7007930187",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "30d6584cb6d733bb0762918489bd23669a0ddee1",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/30d6584cb6d733bb0762918489bd23669a0ddee1",
      "created_at": "2022-07-17T20:35:07Z"
    },
    {
      "event": "locked",
      "id": 7216532506,
      "node_id": "LOE_lADOABII584lhKHuzwAAAAGuI4wa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7216532506",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T18:22:51Z",
      "lock_reason": "resolved"
    },
    {
      "event": "subscribed",
      "id": 7547090617,
      "node_id": "SE_lADOABII584lhKHuzwAAAAHB13a5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7547090617",
      "actor": {
        "login": "Leylimahmud",
        "id": 99537361,
        "node_id": "U_kgDOBe7R0Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/99537361?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Leylimahmud",
        "html_url": "https://github.com/Leylimahmud",
        "followers_url": "https://api.github.com/users/Leylimahmud/followers",
        "following_url": "https://api.github.com/users/Leylimahmud/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Leylimahmud/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Leylimahmud/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Leylimahmud/subscriptions",
        "organizations_url": "https://api.github.com/users/Leylimahmud/orgs",
        "repos_url": "https://api.github.com/users/Leylimahmud/repos",
        "events_url": "https://api.github.com/users/Leylimahmud/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Leylimahmud/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-07T23:50:43Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453112343",
      "pull_request_review_id": 446741006,
      "id": 453112343,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExMjM0Mw==",
      "diff_hunk": "@@ -228,4 +229,121 @@ NODISCARD inline std::vector<uint8_t> ConsumeFixedLengthByteVector(FuzzedDataPro\n     return result;\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else\n+        (void)mode;\n+        return nullptr;\n+#endif\n+    }\n+\n+    static ssize_t read(void* cookie, char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        if (buf == nullptr || size == 0 || fuzzed_file->m_fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memset(buf, 0, size);\n+        const std::vector<uint8_t> random_bytes = fuzzed_file->m_fuzzed_data_provider.ConsumeBytes<uint8_t>(size);\n+        if (random_bytes.empty()) {\n+            return 0;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        const ssize_t n = fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? size : random_bytes.size();",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 80,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "97ee502b664eabbdd338f034a16b31c775057638",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand the need for the call to `ConsumeBool()`. Isn't `size` necessarily equal to `random_bytes.size()`?",
      "created_at": "2020-07-10T22:58:07Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r453112343",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453112343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453180452",
      "pull_request_review_id": 446793695,
      "id": 453180452,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE4MDQ1Mg==",
      "diff_hunk": "@@ -228,4 +229,121 @@ NODISCARD inline std::vector<uint8_t> ConsumeFixedLengthByteVector(FuzzedDataPro\n     return result;\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else\n+        (void)mode;\n+        return nullptr;\n+#endif\n+    }\n+\n+    static ssize_t read(void* cookie, char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        if (buf == nullptr || size == 0 || fuzzed_file->m_fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memset(buf, 0, size);\n+        const std::vector<uint8_t> random_bytes = fuzzed_file->m_fuzzed_data_provider.ConsumeBytes<uint8_t>(size);\n+        if (random_bytes.empty()) {\n+            return 0;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        const ssize_t n = fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? size : random_bytes.size();",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 80,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "97ee502b664eabbdd338f034a16b31c775057638",
      "in_reply_to_id": 453112343,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If the m_fuzzed_data_provider is empty it should give out less bytes, so `size` would be larger. `ConsumeBool` would return false in that case and this condition would evaluate to `size`.\r\n\r\nSo it seems `n` can simply be replaced by `size`",
      "created_at": "2020-07-11T10:18:29Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r453180452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453180452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453183002",
      "pull_request_review_id": 446795248,
      "id": 453183002,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE4MzAwMg==",
      "diff_hunk": "@@ -228,4 +229,121 @@ NODISCARD inline std::vector<uint8_t> ConsumeFixedLengthByteVector(FuzzedDataPro\n     return result;\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else\n+        (void)mode;\n+        return nullptr;\n+#endif\n+    }\n+\n+    static ssize_t read(void* cookie, char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        if (buf == nullptr || size == 0 || fuzzed_file->m_fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memset(buf, 0, size);\n+        const std::vector<uint8_t> random_bytes = fuzzed_file->m_fuzzed_data_provider.ConsumeBytes<uint8_t>(size);\n+        if (random_bytes.empty()) {\n+            return 0;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        const ssize_t n = fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? size : random_bytes.size();",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 80,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "97ee502b664eabbdd338f034a16b31c775057638",
      "in_reply_to_id": 453112343,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh I didn't think about that edge case. Don't you mean the condition should evaluate to `random_bytes.size()` if `ConsumeBool()` is false. So `n` replaced by `random_bytes.size()` instead?",
      "created_at": "2020-07-11T10:50:18Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r453183002",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453183002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453183062",
      "pull_request_review_id": 446795282,
      "id": 453183062,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE4MzA2Mg==",
      "diff_hunk": "@@ -228,4 +229,121 @@ NODISCARD inline std::vector<uint8_t> ConsumeFixedLengthByteVector(FuzzedDataPro\n     return result;\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else\n+        (void)mode;\n+        return nullptr;\n+#endif\n+    }\n+\n+    static ssize_t read(void* cookie, char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        if (buf == nullptr || size == 0 || fuzzed_file->m_fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memset(buf, 0, size);\n+        const std::vector<uint8_t> random_bytes = fuzzed_file->m_fuzzed_data_provider.ConsumeBytes<uint8_t>(size);\n+        if (random_bytes.empty()) {\n+            return 0;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        const ssize_t n = fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? size : random_bytes.size();",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 80,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "97ee502b664eabbdd338f034a16b31c775057638",
      "in_reply_to_id": 453112343,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah right off-by-one :man_facepalming: ",
      "created_at": "2020-07-11T10:51:11Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r453183062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453183062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454616440",
      "pull_request_review_id": 448430879,
      "id": 454616440,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYxNjQ0MA==",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <iostream>\n+#include <optional>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    FuzzedFileProvider fuzzed_file_provider = ConsumeFile(fuzzed_data_provider);\n+    std::optional<CBufferedFile> opt_buffered_file;\n+    FILE* fuzzed_file = fuzzed_file_provider.open();\n+    try {\n+        opt_buffered_file.emplace(fuzzed_file, fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096), fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096), fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeIntegral<int>());\n+    } catch (const std::ios_base::failure&) {\n+        if (fuzzed_file != nullptr) {\n+            fclose(fuzzed_file);\n+        }\n+    }\n+    if (opt_buffered_file && fuzzed_file != nullptr) {\n+        while (fuzzed_data_provider.ConsumeBool()) {\n+            switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 4)) {\n+            case 0: {\n+                std::array<uint8_t, 4096> arr{};\n+                try {\n+                    opt_buffered_file->read((char*)arr.data(), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+                } catch (const std::ios_base::failure&) {\n+                }\n+                break;\n+            }\n+            case 1: {",
      "path": "src/test/fuzz/buffered_file.cpp",
      "position": 43,
      "original_position": 42,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "30d545c15a1fcbae1d4875d2af4fbac40fc43cf2",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why did you leave out `SetPos` when calling `CBufferedFile` functions?",
      "created_at": "2020-07-14T20:13:41Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454616440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454616440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454715644",
      "pull_request_review_id": 448546909,
      "id": 454715644,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxNTY0NA==",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <iostream>\n+#include <optional>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    FuzzedFileProvider fuzzed_file_provider = ConsumeFile(fuzzed_data_provider);\n+    std::optional<CBufferedFile> opt_buffered_file;\n+    FILE* fuzzed_file = fuzzed_file_provider.open();\n+    try {\n+        opt_buffered_file.emplace(fuzzed_file, fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096), fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096), fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeIntegral<int>());\n+    } catch (const std::ios_base::failure&) {\n+        if (fuzzed_file != nullptr) {\n+            fclose(fuzzed_file);\n+        }\n+    }\n+    if (opt_buffered_file && fuzzed_file != nullptr) {\n+        while (fuzzed_data_provider.ConsumeBool()) {\n+            switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 4)) {\n+            case 0: {\n+                std::array<uint8_t, 4096> arr{};\n+                try {\n+                    opt_buffered_file->read((char*)arr.data(), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+                } catch (const std::ios_base::failure&) {\n+                }\n+                break;\n+            }\n+            case 1: {",
      "path": "src/test/fuzz/buffered_file.cpp",
      "position": 43,
      "original_position": 42,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "30d545c15a1fcbae1d4875d2af4fbac40fc43cf2",
      "in_reply_to_id": 454616440,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch! Now fuzzing also `SetPos` :)",
      "created_at": "2020-07-15T00:11:44Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454715644",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454715644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454735593",
      "pull_request_review_id": 448568500,
      "id": 454735593,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNTU5Mw==",
      "diff_hunk": "@@ -228,4 +229,121 @@ NODISCARD inline std::vector<uint8_t> ConsumeFixedLengthByteVector(FuzzedDataPro\n     return result;\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else\n+        (void)mode;\n+        return nullptr;\n+#endif\n+    }\n+\n+    static ssize_t read(void* cookie, char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        if (buf == nullptr || size == 0 || fuzzed_file->m_fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        std::memset(buf, 0, size);\n+        const std::vector<uint8_t> random_bytes = fuzzed_file->m_fuzzed_data_provider.ConsumeBytes<uint8_t>(size);\n+        if (random_bytes.empty()) {\n+            return 0;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        const ssize_t n = fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? size : random_bytes.size();",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 80,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "97ee502b664eabbdd338f034a16b31c775057638",
      "in_reply_to_id": 453112343,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now simply using `random_bytes.size()`. I think I was trying to be too clever :)  Please re-review :)",
      "created_at": "2020-07-15T01:25:16Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454735593",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454735593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454751328",
      "pull_request_review_id": 448585447,
      "id": 454751328,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1MTMyOA==",
      "diff_hunk": "@@ -264,4 +265,209 @@ void InitializeFuzzingContext(const std::string& chain_name = CBaseChainParams::\n     static const BasicTestingSetup basic_testing_setup{chain_name, {\"-nodebuglogfile\"}};\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else\n+        (void)mode;\n+        return nullptr;\n+#endif\n+    }\n+\n+    static ssize_t read(void* cookie, char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        if (buf == nullptr || size == 0 || fuzzed_file->m_fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = fuzzed_file->m_fuzzed_data_provider.ConsumeBytes<uint8_t>(size);\n+        if (random_bytes.empty()) {\n+            return 0;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (AdditionOverflow((uint64_t)fuzzed_file->m_offset, random_bytes.size())) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        fuzzed_file->m_offset += random_bytes.size();\n+        return random_bytes.size();\n+    }\n+\n+    static ssize_t write(void* cookie, const char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        const ssize_t n = fuzzed_file->m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(0, size);\n+        if (AdditionOverflow(fuzzed_file->m_offset, n)) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        fuzzed_file->m_offset += n;\n+        return n;\n+    }\n+\n+    static int seek(void* cookie, int64_t* offset, int whence)\n+    {\n+        assert(whence == SEEK_SET || whence == SEEK_CUR); // SEEK_END not implemented yet.\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        int64_t new_offset = 0;\n+        if (whence == SEEK_SET) {\n+            new_offset = *offset;\n+        } else if (whence == SEEK_CUR) {\n+            if (AdditionOverflow(new_offset, *offset)) {",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 105,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "46ce3bf4c663fce393c1cf8e74833549847e6bfb",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`new_offset` should be `fuzzed_file->m_offset`",
      "created_at": "2020-07-15T02:23:14Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454751328",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454751328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454875264",
      "pull_request_review_id": 448585447,
      "id": 454875264,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg3NTI2NA==",
      "diff_hunk": "@@ -264,4 +265,122 @@ void InitializeFuzzingContext(const std::string& chain_name = CBaseChainParams::\n     static const BasicTestingSetup basic_testing_setup{chain_name, {\"-nodebuglogfile\"}};\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else",
      "path": "src/test/fuzz/util.h",
      "position": 62,
      "original_position": 62,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "3f12c9334f6bc269c3560623498ca44913197605",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could return early at the top of the function `#ifndef _GNU_SOURCE`, then you wouldn't need these macros here?",
      "created_at": "2020-07-15T08:17:58Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454875264",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454875264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 318,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454884408",
      "pull_request_review_id": 448585447,
      "id": 454884408,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg4NDQwOA==",
      "diff_hunk": "@@ -0,0 +1,72 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <iostream>\n+#include <optional>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n+    CAutoFile auto_file = fuzzed_auto_file_provider.open();\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            std::array<uint8_t, 4096> arr{};\n+            try {\n+                auto_file.read((char*)arr.data(), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            } catch (const std::ios_base::failure&) {\n+            }\n+            break;\n+        }\n+        case 1: {\n+            const std::array<uint8_t, 4096> arr{};\n+            try {\n+                auto_file.write((const char*)arr.data(), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            } catch (const std::ios_base::failure&) {\n+            }\n+            break;\n+        }\n+        case 2: {\n+            try {\n+                auto_file.ignore(fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            } catch (const std::ios_base::failure&) {\n+            }\n+            break;\n+        }\n+        case 3: {\n+            auto_file.fclose();\n+            break;\n+        }\n+        case 4: {\n+            ReadFromStream(fuzzed_data_provider, auto_file);\n+            break;\n+        }\n+        case 5: {\n+            WriteToStream(fuzzed_data_provider, auto_file);\n+            break;\n+        }\n+        }\n+    }\n+    (void)auto_file.Get();\n+    (void)auto_file.GetType();\n+    (void)auto_file.GetVersion();\n+    (void)auto_file.IsNull();\n+    if (fuzzed_data_provider.ConsumeBool()) {",
      "path": "src/test/fuzz/autofile.cpp",
      "position": 66,
      "original_position": 66,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "d03f2588a42123de5b13179c2435ce12f2eddf58",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this gated by `ConsumeBool()` to test the behavior that, if this isn't hit, `fclose()` is called automatically in the destructor?",
      "created_at": "2020-07-15T08:33:22Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454884408",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454884408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454888506",
      "pull_request_review_id": 448585447,
      "id": 454888506,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg4ODUwNg==",
      "diff_hunk": "@@ -48,17 +49,30 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n                 break;\n             }\n             case 3: {\n+                if (!opt_buffered_file->SetPos(fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096))) {\n+                    setpos_fail = true;",
      "path": "src/test/fuzz/buffered_file.cpp",
      "position": 53,
      "original_position": 16,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "8cf3f3492d0e0fad9f19c6a70381ee3ecfe9b13a",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this be set back to `false` upon successful call to `SetPos`?",
      "created_at": "2020-07-15T08:40:11Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454888506",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454888506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454893815",
      "pull_request_review_id": 448585447,
      "id": 454893815,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg5MzgxNQ==",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/fees.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+void initialize()\n+{\n+    InitializeFuzzingContext();\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n+    CAutoFile fuzzed_auto_file = fuzzed_auto_file_provider.open();\n+    // Re-using block_policy_estimator across runs to avoid costly creation of CBlockPolicyEstimator object.\n+    static CBlockPolicyEstimator block_policy_estimator;\n+    if (block_policy_estimator.Read(fuzzed_auto_file)) {",
      "path": "src/test/fuzz/policy_estimator_io.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "bb8711426e0b7fe7d072d65e52a2755bab1d9134",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since `block_policy_estimator` is declared static, it shouldn't matter if the `Read` call fails because the `Write` call could still succeed so I don't think it needs to be gated.",
      "created_at": "2020-07-15T08:48:37Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454893815",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454893815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454980370",
      "pull_request_review_id": 448862389,
      "id": 454980370,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4MDM3MA==",
      "diff_hunk": "@@ -264,4 +265,122 @@ void InitializeFuzzingContext(const std::string& chain_name = CBaseChainParams::\n     static const BasicTestingSetup basic_testing_setup{chain_name, {\"-nodebuglogfile\"}};\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else",
      "path": "src/test/fuzz/util.h",
      "position": 62,
      "original_position": 62,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "3f12c9334f6bc269c3560623498ca44913197605",
      "in_reply_to_id": 454875264,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is intentional actually: I want exactly the same input bytes to be consumed by an `open()` call regardless of `fopencookie` being available or not.",
      "created_at": "2020-07-15T11:25:47Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454980370",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454980370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 318,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454980944",
      "pull_request_review_id": 448863112,
      "id": 454980944,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4MDk0NA==",
      "diff_hunk": "@@ -0,0 +1,72 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <iostream>\n+#include <optional>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n+    CAutoFile auto_file = fuzzed_auto_file_provider.open();\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            std::array<uint8_t, 4096> arr{};\n+            try {\n+                auto_file.read((char*)arr.data(), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            } catch (const std::ios_base::failure&) {\n+            }\n+            break;\n+        }\n+        case 1: {\n+            const std::array<uint8_t, 4096> arr{};\n+            try {\n+                auto_file.write((const char*)arr.data(), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            } catch (const std::ios_base::failure&) {\n+            }\n+            break;\n+        }\n+        case 2: {\n+            try {\n+                auto_file.ignore(fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            } catch (const std::ios_base::failure&) {\n+            }\n+            break;\n+        }\n+        case 3: {\n+            auto_file.fclose();\n+            break;\n+        }\n+        case 4: {\n+            ReadFromStream(fuzzed_data_provider, auto_file);\n+            break;\n+        }\n+        case 5: {\n+            WriteToStream(fuzzed_data_provider, auto_file);\n+            break;\n+        }\n+        }\n+    }\n+    (void)auto_file.Get();\n+    (void)auto_file.GetType();\n+    (void)auto_file.GetVersion();\n+    (void)auto_file.IsNull();\n+    if (fuzzed_data_provider.ConsumeBool()) {",
      "path": "src/test/fuzz/autofile.cpp",
      "position": 66,
      "original_position": 66,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "d03f2588a42123de5b13179c2435ce12f2eddf58",
      "in_reply_to_id": 454884408,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes it is, but I want the fuzzer to also exercise the `release()` code path here, and it isn't called in the destructor :)",
      "created_at": "2020-07-15T11:27:03Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454980944",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454980944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454982020",
      "pull_request_review_id": 448864458,
      "id": 454982020,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4MjAyMA==",
      "diff_hunk": "@@ -48,17 +49,30 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n                 break;\n             }\n             case 3: {\n+                if (!opt_buffered_file->SetPos(fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096))) {\n+                    setpos_fail = true;",
      "path": "src/test/fuzz/buffered_file.cpp",
      "position": 53,
      "original_position": 16,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "8cf3f3492d0e0fad9f19c6a70381ee3ecfe9b13a",
      "in_reply_to_id": 454888506,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unfortunately I think a single failed `SetPos` call is sufficient to set a subsequent `FindByte` call into an infinite loop. A successful `SetPos` won't necessarily undo the harm of a prior failed `SetPos` call :)",
      "created_at": "2020-07-15T11:29:21Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454982020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454982020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454984243",
      "pull_request_review_id": 448867179,
      "id": 454984243,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4NDI0Mw==",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/fees.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+void initialize()\n+{\n+    InitializeFuzzingContext();\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n+    CAutoFile fuzzed_auto_file = fuzzed_auto_file_provider.open();\n+    // Re-using block_policy_estimator across runs to avoid costly creation of CBlockPolicyEstimator object.\n+    static CBlockPolicyEstimator block_policy_estimator;\n+    if (block_policy_estimator.Read(fuzzed_auto_file)) {",
      "path": "src/test/fuzz/policy_estimator_io.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "bb8711426e0b7fe7d072d65e52a2755bab1d9134",
      "in_reply_to_id": 454893815,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The thinking here is that a successful `Read` will \"reset\" (to some extent) the state of `block_policy_estimator`. Without the check we might be calling `Write(…)` on `block_policy_estimator` that is populated from a successful `Read` in a previous run: that would introduce unnecessary coverage instability.\r\n\r\nMore specifically this is the case I'm guarding against:\r\n\r\n```\r\nrun n:\r\n  block_policy_estimator.Read(…) returns true\r\n  block_policy_estimator.Write(…)\r\nrun n+1:\r\n  block_policy_estimator.Read(…) returns false\r\n  block_policy_estimator.Write(…) # now with state from run n (instead of n+1)\r\n```\r\n\r\nI want to minimize the unnecessary coverage instability that unavoidably may arise from re-using `block_policy_estimator` between runs (which in turn is done to get decent performance for this otherwise super slow fuzzing harness).",
      "created_at": "2020-07-15T11:33:42Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454984243",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454984243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454988740",
      "pull_request_review_id": 448872848,
      "id": 454988740,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4ODc0MA==",
      "diff_hunk": "@@ -264,4 +265,209 @@ void InitializeFuzzingContext(const std::string& chain_name = CBaseChainParams::\n     static const BasicTestingSetup basic_testing_setup{chain_name, {\"-nodebuglogfile\"}};\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else\n+        (void)mode;\n+        return nullptr;\n+#endif\n+    }\n+\n+    static ssize_t read(void* cookie, char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        if (buf == nullptr || size == 0 || fuzzed_file->m_fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = fuzzed_file->m_fuzzed_data_provider.ConsumeBytes<uint8_t>(size);\n+        if (random_bytes.empty()) {\n+            return 0;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (AdditionOverflow((uint64_t)fuzzed_file->m_offset, random_bytes.size())) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        fuzzed_file->m_offset += random_bytes.size();\n+        return random_bytes.size();\n+    }\n+\n+    static ssize_t write(void* cookie, const char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        const ssize_t n = fuzzed_file->m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(0, size);\n+        if (AdditionOverflow(fuzzed_file->m_offset, n)) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        fuzzed_file->m_offset += n;\n+        return n;\n+    }\n+\n+    static int seek(void* cookie, int64_t* offset, int whence)\n+    {\n+        assert(whence == SEEK_SET || whence == SEEK_CUR); // SEEK_END not implemented yet.\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        int64_t new_offset = 0;\n+        if (whence == SEEK_SET) {\n+            new_offset = *offset;\n+        } else if (whence == SEEK_CUR) {\n+            if (AdditionOverflow(new_offset, *offset)) {",
      "path": "src/test/fuzz/util.h",
      "position": null,
      "original_position": 105,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "46ce3bf4c663fce393c1cf8e74833549847e6bfb",
      "in_reply_to_id": 454751328,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, nice catch! Thanks for noticing: now fixed!",
      "created_at": "2020-07-15T11:42:51Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454988740",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454988740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454988782",
      "pull_request_review_id": 448872908,
      "id": 454988782,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4ODc4Mg==",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/fees.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+void initialize()\n+{\n+    InitializeFuzzingContext();\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n+    CAutoFile fuzzed_auto_file = fuzzed_auto_file_provider.open();\n+    // Re-using block_policy_estimator across runs to avoid costly creation of CBlockPolicyEstimator object.\n+    static CBlockPolicyEstimator block_policy_estimator;\n+    if (block_policy_estimator.Read(fuzzed_auto_file)) {",
      "path": "src/test/fuzz/policy_estimator_io.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "bb8711426e0b7fe7d072d65e52a2755bab1d9134",
      "in_reply_to_id": 454893815,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok this makes much more sense. Otherwise it's not always possible to get the same coverage I think? Different machines on different runs may not hit the same `Read`->`Write`->`Read(false)` calls.",
      "created_at": "2020-07-15T11:42:56Z",
      "updated_at": "2020-07-15T11:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454988782",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454988782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454992886",
      "pull_request_review_id": 448878087,
      "id": 454992886,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5Mjg4Ng==",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/fees.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+void initialize()\n+{\n+    InitializeFuzzingContext();\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n+    CAutoFile fuzzed_auto_file = fuzzed_auto_file_provider.open();\n+    // Re-using block_policy_estimator across runs to avoid costly creation of CBlockPolicyEstimator object.\n+    static CBlockPolicyEstimator block_policy_estimator;\n+    if (block_policy_estimator.Read(fuzzed_auto_file)) {",
      "path": "src/test/fuzz/policy_estimator_io.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "original_commit_id": "bb8711426e0b7fe7d072d65e52a2755bab1d9134",
      "in_reply_to_id": 454893815,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@Crypt-iQ Exactly! We want to have \"coverage stability\": a given input should result in the same coverage for a single run regardless of what has happened in previous runs. Achieving 100% coverage stability is not always possible. It might be due to architectural reasons (globals is a typical example), or it might be due to performance reasons (re-using an object might be required to get decent performance in terms of execs/s). We want to do what we can to at least minimise _unnecessary_ coverage instability.",
      "created_at": "2020-07-15T11:50:44Z",
      "updated_at": "2020-07-15T11:50:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19143#discussion_r454992886",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454992886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    }
  ]
}