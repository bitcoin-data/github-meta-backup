{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216",
    "id": 1265208369,
    "node_id": "PR_kwDOABII585LaYwx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27216",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27216.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27216.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f7cd46280fefa06f9487a8a2927de093af1d421d",
    "number": 27216,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "wallet: Add wallet method to detect if a key is \"active\"",
    "user": {
      "login": "pinheadmz",
      "id": 2084648,
      "node_id": "MDQ6VXNlcjIwODQ2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pinheadmz",
      "html_url": "https://github.com/pinheadmz",
      "followers_url": "https://api.github.com/users/pinheadmz/followers",
      "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
      "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
      "repos_url": "https://api.github.com/users/pinheadmz/repos",
      "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a first step towards closing https://github.com/bitcoin/bitcoin/issues/3314 by implementing functions in Wallet and ScriptPubKeyMan that determine if a key is \"active\" meaning \"derived from a currently active scriptpubkey manager.\" \r\n\r\nA key is NOT \"active\" if:\r\n- It was imported using an `import{privkey, address, pubkey}` rpc\r\n- It was derived before the wallet was encrypted (which replaces the active SPKM(s))\r\n\r\nUsers should be discouraged from using these keys to receive new transactions, so this PR adds a new field `isactive` to rpc `getaddressinfo`, follow-up work will be adding this to the GUI address book as well, [something like this](https://github.com/bitcoin/bitcoin/issues/3314#issuecomment-81567665). The original issue also recommends sweeping all value from keys in this category, I think that feature can be discussed in the future as a follow-up.\r\n\r\nThis PR also patches `PKDescriptor` from https://github.com/bitcoin/bitcoin/pull/22051 where matching public keys were not returned.\r\n\r\nFollow-up PR for the GUI: https://github.com/bitcoin-core/gui/pull/723",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2023-03-06T21:36:57Z",
    "updated_at": "2023-06-02T15:59:48Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "5976470984983231501bc0892ff9908b83410187",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "pinheadmz:used-addr-ui",
      "ref": "used-addr-ui",
      "sha": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 61248407,
        "node_id": "MDEwOlJlcG9zaXRvcnk2MTI0ODQwNw==",
        "name": "bitcoin",
        "full_name": "pinheadmz/bitcoin",
        "owner": {
          "login": "pinheadmz",
          "id": 2084648,
          "node_id": "MDQ6VXNlcjIwODQ2NDg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pinheadmz",
          "html_url": "https://github.com/pinheadmz",
          "followers_url": "https://api.github.com/users/pinheadmz/followers",
          "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
          "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
          "repos_url": "https://api.github.com/users/pinheadmz/repos",
          "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/pinheadmz/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/pinheadmz/bitcoin",
        "archive_url": "https://api.github.com/repos/pinheadmz/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/pinheadmz/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/pinheadmz/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/pinheadmz/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/pinheadmz/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/pinheadmz/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/pinheadmz/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/pinheadmz/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/pinheadmz/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/pinheadmz/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/pinheadmz/bitcoin/events",
        "forks_url": "https://api.github.com/repos/pinheadmz/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/pinheadmz/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/pinheadmz/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/pinheadmz/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/pinheadmz/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/pinheadmz/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/pinheadmz/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/pinheadmz/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/pinheadmz/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/pinheadmz/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:pinheadmz/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/pinheadmz/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/pinheadmz/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/pinheadmz/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/pinheadmz/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/pinheadmz/bitcoin/hooks",
        "svn_url": "https://github.com/pinheadmz/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 214423,
        "default_branch": "master2",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T18:37:08Z",
        "created_at": "2016-06-15T23:48:20Z",
        "updated_at": "2019-11-18T20:27:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e43fdfd9adf253d94d1d428d3d177101fd56eb19",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 626,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:29:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T07:34:31Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 301,
    "deletions": 25,
    "changed_files": 9,
    "commits": 5,
    "review_comments": 39,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 1457038403,
      "node_id": "IC_kwDOABII585W2KRD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1457038403",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T21:37:00Z",
      "updated_at": "2023-05-27T10:42:53Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/27216#pullrequestreview-1391018900) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20892](https://github.com/bitcoin/bitcoin/pull/20892) (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#issuecomment-1457038403",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216"
    },
    {
      "event": "reviewed",
      "id": 1328671625,
      "node_id": "PRR_kwDOABII585PMeuJ",
      "url": null,
      "actor": null,
      "commit_id": "63f1d1e56a7a90160c9610a68b990ff27d3dc451",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#pullrequestreview-1328671625",
      "submitted_at": "2023-03-07T14:45:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
    },
    {
      "event": "commented",
      "id": 1458300719,
      "node_id": "IC_kwDOABII585W6-cv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1458300719",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T14:46:32Z",
      "updated_at": "2023-03-07T14:46:32Z",
      "author_association": "MEMBER",
      "body": "https://github.com/bitcoin/bitcoin/pull/27216/checks?check_run_id=11804958852\r\n```bash\r\nAssertion failed: lock cs_wallet not held in ./wallet/wallet.h:444; locks held:\r\n'cs_KeyStore' in wallet/scriptpubkeyman.cpp:1185 (in thread 'test')\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#issuecomment-1458300719",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8701071144,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIGn88o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8701071144",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T22:00:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8711977549,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIHRjpN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8711977549",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T19:59:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8712014633,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIHRssp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8712014633",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T20:04:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8712526924,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIHTpxM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8712526924",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T21:07:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8724760854,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIICUkW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8724760854",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-11T22:49:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8732419956,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIIfid0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8732419956",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-13T14:25:34Z"
    },
    {
      "event": "renamed",
      "id": 8732474367,
      "node_id": "RTE_lADOABII585gGN5kzwAAAAIIfvv_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8732474367",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-13T14:29:55Z",
      "rename": {
        "from": "Add wallet method to detect if a key is \"fresh\"",
        "to": "Add wallet method to detect if a key is \"active\""
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8734379087,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIInAxP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8734379087",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-13T17:15:47Z"
    },
    {
      "event": "ready_for_review",
      "id": 8735075074,
      "node_id": "RFRE_lADOABII585gGN5kzwAAAAIIpqsC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8735075074",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-13T18:27:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8936066941,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIUoY99",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8936066941",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-05T14:43:25Z"
    },
    {
      "event": "commented",
      "id": 1497746671,
      "node_id": "IC_kwDOABII585ZRczv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497746671",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-05T16:01:20Z",
      "updated_at": "2023-04-05T16:01:20Z",
      "author_association": "MEMBER",
      "body": "rebased on master and addressed some nits from follow-up PR https://github.com/bitcoin-core/gui/pull/723",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#issuecomment-1497746671",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216"
    },
    {
      "event": "reviewed",
      "id": 1373758349,
      "node_id": "PRR_kwDOABII585R4eON",
      "url": null,
      "actor": null,
      "commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, tested and reviewed each commit. Some thoughts and questions follow.\r\n\r\n> This PR also patches PKDescriptor from https://github.com/bitcoin/bitcoin/pull/22051 where matching public keys were not returned.\r\n\r\nI didn't see where/how; can you help or explain?",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#pullrequestreview-1373758349",
      "submitted_at": "2023-04-06T23:23:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8957862111,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIV7iDf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8957862111",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-08T16:23:52Z"
    },
    {
      "event": "commented",
      "id": 1500927311,
      "node_id": "IC_kwDOABII585ZdlVP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1500927311",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-08T16:30:50Z",
      "updated_at": "2023-04-08T16:30:50Z",
      "author_association": "MEMBER",
      "body": "@jonatack thanks so much for the great review, addressed comments (1 or 2 questions along the way) rebase on master and also rebased the GUI follow up ",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#issuecomment-1500927311",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216"
    },
    {
      "event": "mentioned",
      "id": 8957869756,
      "node_id": "MEE_lADOABII585gGN5kzwAAAAIV7j68",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8957869756",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-08T16:30:51Z"
    },
    {
      "event": "subscribed",
      "id": 8957869758,
      "node_id": "SE_lADOABII585gGN5kzwAAAAIV7j6-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8957869758",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-08T16:30:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8998240120,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIYVj94",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8998240120",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T15:12:48Z"
    },
    {
      "event": "commented",
      "id": 1507152541,
      "node_id": "IC_kwDOABII585Z1VKd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1507152541",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T15:14:49Z",
      "updated_at": "2023-04-13T15:14:49Z",
      "author_association": "MEMBER",
      "body": "rebase to: 58fba35e25c2b9dcdd5b3dd0aa8f412801a98146\r\n- added `nodiscard`\r\n- cleaned up help message in `getaddressinfo`\r\n- added release note file",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#issuecomment-1507152541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216"
    },
    {
      "event": "reviewed",
      "id": 1384012329,
      "node_id": "PRR_kwDOABII585Sflop",
      "url": null,
      "actor": null,
      "commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK with some suggestions below.\r\n\r\nThe release note and added test coverage could optionally all be in separate commits, provided each commit is hygienic, i.e. builds and all tests pass. It's a bit easier for reviewers if updates needed for tests to pass with a change are in the same commit, while additional coverage is in separate commits.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#pullrequestreview-1384012329",
      "submitted_at": "2023-04-13T23:06:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
    },
    {
      "event": "reviewed",
      "id": 1384371024,
      "node_id": "PRR_kwDOABII585Sg9NQ",
      "url": null,
      "actor": null,
      "commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#pullrequestreview-1384371024",
      "submitted_at": "2023-04-13T23:16:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
    },
    {
      "event": "referenced",
      "id": 9011208624,
      "node_id": "REFE_lADOABII585gGN5kzwAAAAIZHCGw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9011208624",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8139075244f1f361a14f80920c45d8c4f41d553e",
      "commit_url": "https://api.github.com/repos/pinheadmz/bitcoin/commits/8139075244f1f361a14f80920c45d8c4f41d553e",
      "created_at": "2023-04-14T19:25:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9011208710,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIZHCIG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9011208710",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-14T19:25:21Z"
    },
    {
      "event": "commented",
      "id": 1509119182,
      "node_id": "IC_kwDOABII585Z81TO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1509119182",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-14T19:26:58Z",
      "updated_at": "2023-04-14T19:26:58Z",
      "author_association": "MEMBER",
      "body": "thanks again @jonatack \r\nrebase to 8139075244f1f361a14f80920c45d8c4f41d553e\r\n- refactor commits to separate tests in hygenic order!\r\n- address review nits",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#issuecomment-1509119182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216"
    },
    {
      "event": "mentioned",
      "id": 9011217984,
      "node_id": "MEE_lADOABII585gGN5kzwAAAAIZHEZA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9011217984",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-14T19:26:59Z"
    },
    {
      "event": "subscribed",
      "id": 9011217993,
      "node_id": "SE_lADOABII585gGN5kzwAAAAIZHEZJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9011217993",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-14T19:26:59Z"
    },
    {
      "event": "reviewed",
      "id": 1391018900,
      "node_id": "PRR_kwDOABII585S6UOU",
      "url": null,
      "actor": null,
      "commit_id": "8139075244f1f361a14f80920c45d8c4f41d553e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 8139075244f1f361a14f80920c45d8c4f41d553e modulo eyes from someone more familiar with the wallet to validate the approach.\r\n\r\nCommit 2a5774f45c07f0d000f0cbdf0 should probably be renamed to something like `test: cover ScriptPubKeyMan::IsKeyActive and IsDestinationActive`\r\n\r\nRe-reviewing this shuffled version was a little trickier due to the unneeded rebase. Please rebase only when you have to. Aside from that, the reorganized commits seem easier to review now.\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#pullrequestreview-1391018900",
      "submitted_at": "2023-04-18T22:52:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
    },
    {
      "event": "reviewed",
      "id": 1391039049,
      "node_id": "PRR_kwDOABII585S6ZJJ",
      "url": null,
      "actor": null,
      "commit_id": "8139075244f1f361a14f80920c45d8c4f41d553e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#pullrequestreview-1391039049",
      "submitted_at": "2023-04-18T22:57:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
    },
    {
      "event": "commented",
      "id": 1527773928,
      "node_id": "IC_kwDOABII585bD_ro",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1527773928",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-28T16:00:55Z",
      "updated_at": "2023-04-28T16:00:55Z",
      "author_association": "MEMBER",
      "body": "> https://github.com/bitcoin/bitcoin/commit/81f29f03a607cbfb7162705c1c1618ca7b59640e I'm not sure if or when legacy wallet support is expected to be phased out, but if isactive is only different from ismine in legacy wallets, is it worth adding a field (and all the new methods), versus just updating the ismine field documentation in the help for descriptor wallets\r\n\r\nFollowing up on https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1160272170 above, according to https://github.com/bitcoin/bitcoin/issues/20160 legacy wallet support may be dropped in the next couple releases.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#issuecomment-1527773928",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216"
    },
    {
      "event": "labeled",
      "id": 9282110581,
      "node_id": "LE_lADOABII585gGN5kzwAAAAIpQcR1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9282110581",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T17:21:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 9282616355,
      "node_id": "REFE_lADOABII585gGN5kzwAAAAIpSXwj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9282616355",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fa9b7d95454cb65f1a0863aa7f91887eed99ed1a",
      "commit_url": "https://api.github.com/repos/pinheadmz/bitcoin/commits/fa9b7d95454cb65f1a0863aa7f91887eed99ed1a",
      "created_at": "2023-05-18T18:24:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9282616433,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIpSXxx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9282616433",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:24:12Z"
    },
    {
      "event": "commented",
      "id": 1553450191,
      "node_id": "IC_kwDOABII585cl8TP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553450191",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:25:52Z",
      "updated_at": "2023-05-18T18:25:52Z",
      "author_association": "MEMBER",
      "body": "> Needs rebase\r\n\r\ndone thanks",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#issuecomment-1553450191",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27216"
    },
    {
      "event": "renamed",
      "id": 9282682326,
      "node_id": "RTE_lADOABII585gGN5kzwAAAAIpSn3W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9282682326",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:32:53Z",
      "rename": {
        "from": "Add wallet method to detect if a key is \"active\"",
        "to": "wallet: Add wallet method to detect if a key is \"active\""
      }
    },
    {
      "event": "unsubscribed",
      "id": 9282797137,
      "node_id": "UE_lADOABII585gGN5kzwAAAAIpTD5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9282797137",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:46:47Z"
    },
    {
      "event": "unlabeled",
      "id": 9283291173,
      "node_id": "UNLE_lADOABII585gGN5kzwAAAAIpU8gl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9283291173",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T19:53:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9283291594,
      "node_id": "LE_lADOABII585gGN5kzwAAAAIpU8nK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9283291594",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T19:53:51Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYzOTk1N2Y1ZGVlYzg3ZDE0MWU5OTVhM2JjOTBjYzU0ZTJkMGNjYmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f39957f5deec87d141e995a3bc90cc54e2d0ccbf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f39957f5deec87d141e995a3bc90cc54e2d0ccbf",
      "tree": {
        "sha": "37183644ca0c10adf65444c6bab2f4ddfdd7a204",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37183644ca0c10adf65444c6bab2f4ddfdd7a204"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 37183644ca0c10adf65444c6bab2f4ddfdd7a204\nparent b22408df162a224d94ac54e8443b57ef3fd2ca72\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1681499104 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1685720301 -0400\n\nwallet: implement IsKeyActive() in scriptpubkeyman\n\nThis new method returns true if the given CScript key is derived\nfrom the SPKM. For Legacy that means checking the hd_seed_id in the\nkey's metadata.\n\nAlso patches PKDescriptor to return associated public keys in\nMakeScripts()\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmR6DPMACgkQ5+KYS2KJ\nyTphBg//UEp14j9RdsR4rguzOfoqN0O1hTX7LsNFZty7E/5Fzg2QLHRyC+SWUUS7\nxOIGuHTVd2heXn/jFUvBxVlT8aI480GU4iXR74iPFEK4TNonzTnZpjgGn4cl64DY\nvIppCBzsKFxCuwqFJK/eidDDLFc1GJJts98jPt7lQkkUyLEWV8emRc5dkx/QAqhW\nCzhznKXESazMlwNYfpsnlq13od+avw9J2DD/MSOCLjB/dZlPci7G7VF19nKEXJDU\noG+9hCIMP7Qfj/BGfIHw0q4mFFFDEaLSQptWezIfabsU68Nm842PQhRzGtKeei7E\nqspo4ThnwNGVEWUfYiJAUsK1LKatIR1wGIYLOTNRNanLo8K/CPu2g5OuVndImLkx\nkAaXej69XEf8l5jF53xrkUwA+sml+ffDkC5ENGxG72/nX1JR6ex+fsnC+G4MLzl6\nJllyo9vdeOn+s9weSbs9x1g8gjyGL3PDUEVRF/c49r+ItZr5YKKc2BgiO3f3dQec\nwzMLCjkTSVTEFEsIcwm7gLsixt0Ii5drBr0ELNzKl9pWGLtkj94ftHclMECN7TIH\n9hBGj8A1Ubydgw7RB1efmqMGMF484JMnijCA9Pthkn9oHObRg8zeByN9QZPUZARw\n2PIvPaqPsrHFPWuAmmBdU1d8isr8kMYEv3d6i3jOhfXZqhfudSo=\n=OAaU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b22408df162a224d94ac54e8443b57ef3fd2ca72",
          "sha": "b22408df162a224d94ac54e8443b57ef3fd2ca72",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b22408df162a224d94ac54e8443b57ef3fd2ca72"
        }
      ],
      "message": "wallet: implement IsKeyActive() in scriptpubkeyman\n\nThis new method returns true if the given CScript key is derived\nfrom the SPKM. For Legacy that means checking the hd_seed_id in the\nkey's metadata.\n\nAlso patches PKDescriptor to return associated public keys in\nMakeScripts()",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-06-02T15:38:21Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-04-14T19:05:04Z"
      },
      "sha": "f39957f5deec87d141e995a3bc90cc54e2d0ccbf"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQzM2YzYmRiODRmMTgyM2FlYmUzZmQ4OGM0YjJlYzRkZjFjMWZlM2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d33f3bdb84f1823aebe3fd88c4b2ec4df1c1fe3d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d33f3bdb84f1823aebe3fd88c4b2ec4df1c1fe3d",
      "tree": {
        "sha": "9eaee2eb2f8178fcb0bb8e44e8df8eadec17c0bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9eaee2eb2f8178fcb0bb8e44e8df8eadec17c0bf"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9eaee2eb2f8178fcb0bb8e44e8df8eadec17c0bf\nparent f39957f5deec87d141e995a3bc90cc54e2d0ccbf\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1681499203 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1685720307 -0400\n\nwallet: implement IsDestinationActive() and add to rpc getaddressinfo\n\nThis connects SPKM.IsKeyActive() up to the wallet level.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmR6DPMACgkQ5+KYS2KJ\nyTrXOBAApE9udzr10PQi4EWPe1Iji7VSyOm7JQJhVK6x+CtSvlrwzaI66zXVmpyp\nEbHHjd6kmKKv6TgVC3dcl+jnNC9KlNRZna1nbiFjol9lYFfLTzvBlbVoYXdJDjdS\nPx1aGqrSEgQ7EFJNN/8GzosTDowicNuxAMuOZQv+xEfsEmkqihgs6us68Kgc4eaC\nrNLFsT9houpHZsLLgnD8kJ9heM33SOiLb1/yPO7wETBdd6mNYAFMUDf9jhaWOKFo\ni6qAcaofni30hScIhLdzw74azqwcMZzwiZPHjkTqafFfLLS1xeM8Vb8BCkV/l/pe\nRxHiinr/msukiP4MHBzVA0OsF2rvzNhRTEbPO5W6+LMh8gJdUFRtH8XnbGCz/xrh\nt/ljHg13tBFGKcuEIP74MeGSpedjMe04PuZJBi07e6PZ4uoF5eDYaJoPINcs2rOq\nf6YIvWCzG3ocVFITIVjYTyX9dxwiMMuvcPLifHaaumnwoDJViIXvGJYgWa/f4XJP\nY+YC8IkGEvkDRWl0H4GrOXRjccLbyDsQvQDlyEV+sYM8rlWhiisFSC6s47SnYQ6U\nCp/zGajiYJMytPEJ9QsDqO63OtyscyP1Yfb33WqEsvxBco1JHjG/NxdRqf3zvfLv\nnAuVcF+Yr867d4kgq8nYxffJA/p1jPF+QA28+IHK2L/mftYBB3I=\n=TAd8\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f39957f5deec87d141e995a3bc90cc54e2d0ccbf",
          "sha": "f39957f5deec87d141e995a3bc90cc54e2d0ccbf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f39957f5deec87d141e995a3bc90cc54e2d0ccbf"
        }
      ],
      "message": "wallet: implement IsDestinationActive() and add to rpc getaddressinfo\n\nThis connects SPKM.IsKeyActive() up to the wallet level.",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-06-02T15:38:27Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-04-14T19:06:43Z"
      },
      "sha": "d33f3bdb84f1823aebe3fd88c4b2ec4df1c1fe3d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJhNjVkOTNhNGM0YWUxZTA2ZmJkNWUwNmFiMGIzNDRlNzdiMmMzYjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba65d93a4c4ae1e06fbd5e06ab0b344e77b2c3b0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ba65d93a4c4ae1e06fbd5e06ab0b344e77b2c3b0",
      "tree": {
        "sha": "ff7c660275af9d4f84c7c71653548bcb722c403e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff7c660275af9d4f84c7c71653548bcb722c403e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ff7c660275af9d4f84c7c71653548bcb722c403e\nparent d33f3bdb84f1823aebe3fd88c4b2ec4df1c1fe3d\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1681499151 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1685720307 -0400\n\ntest: cover ScriptPubKeyMan::IsKeyActive() and Wallet::IsDestinationActive()\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmR6DRQACgkQ5+KYS2KJ\nyTp3txAA11CMlVz+pgv4Ci6/i42XGw/yJ1Axrcuok+Ujhzv9or6oo1JiOGEAQLS+\nem9tAKSlEoSYMVN6PEmq1w7UvdELS695FseqdmmKE9B/Vhf9UpsIle1E2NFp+9ZE\nIwPW4bmga7J1wmksixbPQd1U4qYXtl0zSIbTozln6DE6prK9TF6C6RuJDinkxOB2\nK//0q0Xm1R1GFAVrLIO9rDLjmUxrxzk7a8QD1F7MZJoE/zzpxghfhYFlloUv44IM\nDdR5+2tO+EUy+3eLnr7mbmZY3eD9e7mUZNniHo43p3feSG0mYFHFjI0ROiFBXSCj\nDYRcaRa0C+9VLKoPwuHu9qOd6E+YS1j2gVEwcj+zkg+SWVwMvEAmujY2TY/8xRT9\n9dvVWNezUFNvi1aIEjlyqwF0QF81MmQX+6OdIX77AwGILKCzIrDdEBz3cmZ7e2gk\nSTK58URdxCTdVeV68TfdcK9B4/YWx9i7ZKBctuXppiC16Yu5pgRAFmhMgRxuavc9\nQ7Bp8Ebelk1u/rHiyYNUTn1nzKDWTlHQ7/VB1NwC5a47XbG0TxzFPwOB7WY1Na0s\n3MIXTdL+ct39BlsP8utWPev8xabiltQQFpfZiE03qBYMQ+IEDCpv6W5v/WJhKEmd\nb26pgkw12JAkQ9MlAbQOpL5oNwdZtVqREFMrQFAfB/MQ4/j93g0=\n=sbNC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d33f3bdb84f1823aebe3fd88c4b2ec4df1c1fe3d",
          "sha": "d33f3bdb84f1823aebe3fd88c4b2ec4df1c1fe3d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d33f3bdb84f1823aebe3fd88c4b2ec4df1c1fe3d"
        }
      ],
      "message": "test: cover ScriptPubKeyMan::IsKeyActive() and Wallet::IsDestinationActive()",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-06-02T15:38:27Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-04-14T19:05:51Z"
      },
      "sha": "ba65d93a4c4ae1e06fbd5e06ab0b344e77b2c3b0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3N2FmNTYxNTZiOTkzMmYwMjNlNTFkYTJmNDk5YzAxYmU2OWY4YTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e77af56156b9932f023e51da2f499c01be69f8a2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e77af56156b9932f023e51da2f499c01be69f8a2",
      "tree": {
        "sha": "e8adbde41782df367a2ad63f5bb96c44df07daa3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8adbde41782df367a2ad63f5bb96c44df07daa3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e8adbde41782df367a2ad63f5bb96c44df07daa3\nparent ba65d93a4c4ae1e06fbd5e06ab0b344e77b2c3b0\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1681499283 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1685720340 -0400\n\ntest: cover \"isactive\" field in rpc getaddressinfo\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmR6DRQACgkQ5+KYS2KJ\nyTo3sg//Ww2ZDgZ48SB/1vYWVWB8iQaUEThdCd4Z/idgZnwyyEDNAdFkiR9eCAbf\nqcwarE8kV0vyR/XNjtviK8ENGzR5wDTttujlAEEgEd2nkSHJlFW7p8Nd01e1rXU7\nTk9mubhx+Q+nX+EobzuURTW4+Nf0JK7/7u9I0S6lCOD06wal8oU8mh+T7a2KJu82\nFFMTcgKYFgTTKguwwvG0MngRic4y3OfULdyGa+E2RbMdCaSlec8kWCNA47MDhe+8\nqEjV8l4wBmOD+Ve11DJcLjl51ksct6A9Sk2GE0kbU5zkpmq02fQ/ntEcnid4fqDr\nT2MY+gLjFCWi+lVXVbWCYfB14tABqYb3zPDM4/4YZzy5mf08Lr3BosOr4dsBjog9\nI0e5/2B6mygVyzPYy6cXOQESJuhsfo2DZRs8ovJvxatIpPqArxqt/5EGtnBlM529\nw1tfmKe220/RWtSjoFCHIxv/6iRALI9G/NLYaUc06p/VxZxkqNRI3aSS3nV/pCWN\nivWgXuy2+1ZydLfRRNuozw5Fnt9cL0ohYkLeAdYBmVtGm+mbbHWQjvkZftkWY0VR\n5CUzQ3g2MsLssn/REcaEB1umex9N4f8yfoUCxv/vfvxPxxD3QADBjqma0EIDO5hG\npyd8g2kIBiLOmLAUQ68bz0hjiPv0yQr+W0KhR5mOUCwTjody9Mw=\n=1cXC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba65d93a4c4ae1e06fbd5e06ab0b344e77b2c3b0",
          "sha": "ba65d93a4c4ae1e06fbd5e06ab0b344e77b2c3b0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ba65d93a4c4ae1e06fbd5e06ab0b344e77b2c3b0"
        }
      ],
      "message": "test: cover \"isactive\" field in rpc getaddressinfo",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-06-02T15:39:00Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-04-14T19:08:03Z"
      },
      "sha": "e77af56156b9932f023e51da2f499c01be69f8a2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY3Y2Q0NjI4MGZlZmEwNmY5NDg3YThhMjkyN2RlMDkzYWYxZDQyMWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7cd46280fefa06f9487a8a2927de093af1d421d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f7cd46280fefa06f9487a8a2927de093af1d421d",
      "tree": {
        "sha": "68e47a8702e8bdbd1a2d1b44b6c10a6208781e4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68e47a8702e8bdbd1a2d1b44b6c10a6208781e4f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 68e47a8702e8bdbd1a2d1b44b6c10a6208781e4f\nparent e77af56156b9932f023e51da2f499c01be69f8a2\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1681499497 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1685720341 -0400\n\ndoc: release notes for #27216\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmR6DRUACgkQ5+KYS2KJ\nyTrDiA//bPeoq0uS5jCNM16VtKY8iz2N1wUnSVzfUmwmr5Y6Ejtd6siXCEDja7tj\nhNTuIQC0iOzgZAcl9fK/hn7KtCZ3msXoGcCKUhVZ7M21gtRXlrH4SQXDDWrriuMb\nMvG1TzgyZ2o3y5rDeJzRKOe6JyGzS7XGJyRIkRJ7K7/GiFiB50aGvIqAA1xK8Wxg\narTkWbh1dVs2wtMsimGjkFOF3Zpg8IkBs7Hnl6xJ3KVIcApLqY2Cy8u014QeiTt8\nNlu2APUqEPn+0cqzjduwbuVUzs1F2eCQQVHrksmCVahaYB+06++5HC3TAgN4rKBR\nU3JSTA6eX2DXZ+SP1i/uIMGor3M9bCYby6uKvwSeQWtvsTSUZi8TxhkJ9FF2Z3vV\n5reHJ6fqAbcts9Fk+JVOYwkU3EFxrnVVqOBoq+5drobXOIc8edNc2EBmLvHYiV01\n4sYoUdPXgyidg3A1hHq0wMnsi81OB3UhGccD6dbeJyUCcGE50T/Z2/hLV3z8i/rv\nUh00RiAFf+6fRILKwnU1l/lKA9cHm5Ks/jJAtShAlCrRFFwP7eIjP0gxNvBswxWv\nyRULcADwb4n/Q/CKik52hWSWore4bmXw88SWwLeZhVht7k/CFJ0Na5Y8VxwjEKsU\n2wC+tWgyvIMxBPvbhO1iatXUxVr3b8Pi6nooeth7MeEmLnUrTWE=\n=zw3S\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e77af56156b9932f023e51da2f499c01be69f8a2",
          "sha": "e77af56156b9932f023e51da2f499c01be69f8a2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e77af56156b9932f023e51da2f499c01be69f8a2"
        }
      ],
      "message": "doc: release notes for #27216",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-06-02T15:39:01Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-04-14T19:11:37Z"
      },
      "sha": "f7cd46280fefa06f9487a8a2927de093af1d421d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9415900701,
      "node_id": "HRFPE_lADOABII585gGN5kzwAAAAIxOz4d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9415900701",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T15:59:46Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1127978416",
      "pull_request_review_id": 1328671625,
      "id": 1127978416,
      "node_id": "PRRC_kwDOABII585DO5Ww",
      "diff_hunk": "@@ -39,5 +40,146 @@ BOOST_AUTO_TEST_CASE(CanProvide)\n     BOOST_CHECK(keyman.CanProvide(p2sh_script, data));\n }\n \n+BOOST_AUTO_TEST_CASE(Legacy_isKeyInPool)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    LegacyScriptPubKeyMan& spkm = *wallet.GetOrCreateLegacyScriptPubKeyMan();\n+\n+    // Start off empty\n+    BOOST_CHECK(spkm.GetScriptPubKeys().empty());\n+\n+    // Generate 1000 external keys\n+    // (HD wallet change addresses are not pre-generated)\n+    spkm.TopUp();\n+\n+    // 2000 Scripts (P2PK and P2PKH): DEFAULT_KEYPOOL_SIZE * 2\n+    auto scripts1 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 2000);\n+\n+    // All 1000 keys are in keypool\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm.IsKeyInKeypool(script));\n+    }\n+\n+    // Requesting single key from spkm should remove that key from pool\n+    auto dest1 = spkm.GetNewDestination(OutputType::BECH32);\n+    CScript script = GetScriptForDestination(dest1.value());\n+    BOOST_CHECK(!spkm.IsKeyInKeypool(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts2.size() == 2000);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(spkm.cs_KeyStore);\n+        spkm.MarkReserveKeysAsUsed(10);\n+    }\n+\n+    // Key pool size did not change\n+    auto scripts3 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts3.size() == 2000);\n+\n+    // All keys up to and including that key are removed from pool\n+    int num_script_keys_not_found = 0;\n+    for (const CScript& script : scripts3) {\n+        if (!spkm.IsKeyInKeypool(script))\n+            num_script_keys_not_found++;\n+    }\n+    BOOST_CHECK(num_script_keys_not_found == 20);\n+\n+    // When user encrypts wallet for the first time,\n+    // all existing keys are removed from pool\n+    spkm.NewKeyPool(); // called by EncryptWallet()->SetupGeneration()\n+    num_script_keys_not_found = 0;\n+    for (const CScript& script : scripts3) {\n+        if (!spkm.IsKeyInKeypool(script))\n+            num_script_keys_not_found++;\n+    }\n+    BOOST_CHECK(num_script_keys_not_found == 2000);\n+\n+    // 1000 new keys were added\n+    auto scripts4 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts4.size() == 4000);\n+}\n+\n+BOOST_AUTO_TEST_CASE(Descriptor_isKeyInPool)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet.SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetupDescriptorScriptPubKeyMans();\n+    }\n+    DescriptorScriptPubKeyMan* spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, /*internal=*/false));\n+\n+    // Start off with 1000 pre-generated keys, 1 script each\n+    auto scripts1 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 1000);\n+\n+    // All 1000 keys are in keypool\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm->IsKeyInKeypool(script));\n+    }\n+\n+    // Requesting single key from spkm should remove that key from pool\n+    auto dest1 = spkm->GetNewDestination(OutputType::BECH32);\n+    CScript script = GetScriptForDestination(dest1.value());\n+    BOOST_CHECK(!spkm->IsKeyInKeypool(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts2.size() == 1000);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(spkm->cs_desc_man);\n+        WalletDescriptor descriptor = spkm->GetWalletDescriptor();\n+        FlatSigningProvider provider;\n+        std::vector<CScript> scripts3;\n+        descriptor.descriptor->ExpandFromCache(/*index=*/10, descriptor.cache, scripts3, provider);",
      "path": "src/wallet/test/scriptpubkeyman_tests.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "63f1d1e56a7a90160c9610a68b990ff27d3dc451",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://cirrus-ci.com/task/6502838134636544:\r\n```bash\r\nwallet/test/scriptpubkeyman_tests.cpp:142:48: error: argument name 'index' in comment does not match parameter name 'pos' [bugprone-argument-comment,-warnings-as-errors]\r\n        descriptor.descriptor->ExpandFromCache(/*index=*/10, descriptor.cache, scripts3, provider);\r\n                                               ^\r\n./script/descriptor.h:137:38: note: 'pos' declared here\r\n    virtual bool ExpandFromCache(int pos, const DescriptorCache& read_cache, std::vector<CScript>& output_scripts, FlatSigningProvider& out) const = 0;\r\n```",
      "created_at": "2023-03-07T14:45:05Z",
      "updated_at": "2023-03-07T14:45:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1127978416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1127978416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128006272",
      "pull_request_review_id": 1328722903,
      "id": 1128006272,
      "node_id": "PRRC_kwDOABII585DPAKA",
      "diff_hunk": "@@ -39,5 +40,146 @@ BOOST_AUTO_TEST_CASE(CanProvide)\n     BOOST_CHECK(keyman.CanProvide(p2sh_script, data));\n }\n \n+BOOST_AUTO_TEST_CASE(Legacy_isKeyInPool)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    LegacyScriptPubKeyMan& spkm = *wallet.GetOrCreateLegacyScriptPubKeyMan();\n+\n+    // Start off empty\n+    BOOST_CHECK(spkm.GetScriptPubKeys().empty());\n+\n+    // Generate 1000 external keys\n+    // (HD wallet change addresses are not pre-generated)\n+    spkm.TopUp();\n+\n+    // 2000 Scripts (P2PK and P2PKH): DEFAULT_KEYPOOL_SIZE * 2\n+    auto scripts1 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 2000);\n+\n+    // All 1000 keys are in keypool\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm.IsKeyInKeypool(script));\n+    }\n+\n+    // Requesting single key from spkm should remove that key from pool\n+    auto dest1 = spkm.GetNewDestination(OutputType::BECH32);\n+    CScript script = GetScriptForDestination(dest1.value());\n+    BOOST_CHECK(!spkm.IsKeyInKeypool(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts2.size() == 2000);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(spkm.cs_KeyStore);\n+        spkm.MarkReserveKeysAsUsed(10);\n+    }\n+\n+    // Key pool size did not change\n+    auto scripts3 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts3.size() == 2000);\n+\n+    // All keys up to and including that key are removed from pool\n+    int num_script_keys_not_found = 0;\n+    for (const CScript& script : scripts3) {\n+        if (!spkm.IsKeyInKeypool(script))\n+            num_script_keys_not_found++;\n+    }\n+    BOOST_CHECK(num_script_keys_not_found == 20);\n+\n+    // When user encrypts wallet for the first time,\n+    // all existing keys are removed from pool\n+    spkm.NewKeyPool(); // called by EncryptWallet()->SetupGeneration()\n+    num_script_keys_not_found = 0;\n+    for (const CScript& script : scripts3) {\n+        if (!spkm.IsKeyInKeypool(script))\n+            num_script_keys_not_found++;\n+    }\n+    BOOST_CHECK(num_script_keys_not_found == 2000);\n+\n+    // 1000 new keys were added\n+    auto scripts4 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts4.size() == 4000);\n+}\n+\n+BOOST_AUTO_TEST_CASE(Descriptor_isKeyInPool)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    wallet.SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetupDescriptorScriptPubKeyMans();\n+    }\n+    DescriptorScriptPubKeyMan* spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, /*internal=*/false));\n+\n+    // Start off with 1000 pre-generated keys, 1 script each\n+    auto scripts1 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 1000);\n+\n+    // All 1000 keys are in keypool\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm->IsKeyInKeypool(script));\n+    }\n+\n+    // Requesting single key from spkm should remove that key from pool\n+    auto dest1 = spkm->GetNewDestination(OutputType::BECH32);\n+    CScript script = GetScriptForDestination(dest1.value());\n+    BOOST_CHECK(!spkm->IsKeyInKeypool(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts2.size() == 1000);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(spkm->cs_desc_man);\n+        WalletDescriptor descriptor = spkm->GetWalletDescriptor();\n+        FlatSigningProvider provider;\n+        std::vector<CScript> scripts3;\n+        descriptor.descriptor->ExpandFromCache(/*index=*/10, descriptor.cache, scripts3, provider);",
      "path": "src/wallet/test/scriptpubkeyman_tests.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "63f1d1e56a7a90160c9610a68b990ff27d3dc451",
      "in_reply_to_id": 1127978416,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oooh thanks, didn't realize those comments were parsed by anything!",
      "created_at": "2023-03-07T15:01:49Z",
      "updated_at": "2023-03-07T15:01:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1128006272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128006272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159068107",
      "pull_request_review_id": 1373758349,
      "id": 1159068107,
      "node_id": "PRRC_kwDOABII585FFfnL",
      "diff_hunk": "@@ -730,8 +730,11 @@ class PKDescriptor final : public DescriptorImpl\n private:\n     const bool m_xonly;\n protected:\n-    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider& out) const override\n     {\n+        CKeyID id = keys[0].GetID();\n+        out.pubkeys.emplace(id, keys[0]);",
      "path": "src/script/descriptor.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "45d565073cab12b6107aae9d08048 nit, remove unnecessary local object while still keeping code readability.\r\n\r\n(Also if we're not sure the element exists or its absence would be a logic error, maybe `s/keys[0]/keys.at(0)` to have bounds checks, as accessing a nonexistent element with `vector#operator[]` is UB).\r\n\r\n```diff\r\n-        CKeyID id = keys[0].GetID();\r\n-        out.pubkeys.emplace(id, keys[0]);\r\n+        out.pubkeys.emplace(/*CKeyID=*/keys[0].GetID(), /*CPubKey=*/keys[0]);\r\n```\r\n",
      "created_at": "2023-04-05T22:02:48Z",
      "updated_at": "2023-04-06T23:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1159068107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159068107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 746,
      "original_line": 746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160257900",
      "pull_request_review_id": 1373758349,
      "id": 1160257900,
      "node_id": "PRRC_kwDOABII585FKCFs",
      "diff_hunk": "@@ -198,6 +198,9 @@ class ScriptPubKeyMan\n      */\n     virtual std::vector<WalletDestination> MarkUnusedAddresses(const CScript& script) { return {}; }\n \n+    /* Determines if address is derived from active key manager */\n+    virtual bool IsKeyActive(const CScript& script) { return false; };",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 5,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/45d565073cab12b6107aae9d08048d5310d752d4 If they are thread-safe, should the `IsKeyActive` member functions be `const`?\r\n\r\n<details><summary>diff</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/wallet/scriptpubkeyman.cpp b/src/wallet/scriptpubkeyman.cpp\r\nindex 9afd2538b0c..87ab7cc034b 100644\r\n--- a/src/wallet/scriptpubkeyman.cpp\r\n+++ b/src/wallet/scriptpubkeyman.cpp\r\n \r\n-bool LegacyScriptPubKeyMan::IsKeyActive(const CScript& script)\r\n+bool LegacyScriptPubKeyMan::IsKeyActive(const CScript& script) const\r\n@@ -2228,7 +2226,7 @@ std::vector<WalletDestination> DescriptorScriptPubKeyMan::MarkUnusedAddresses(co\r\n \r\n-bool DescriptorScriptPubKeyMan::IsKeyActive(const CScript& script)\r\n+bool DescriptorScriptPubKeyMan::IsKeyActive(const CScript& script) const\r\n\r\ndiff --git a/src/wallet/scriptpubkeyman.h b/src/wallet/scriptpubkeyman.h\r\nindex 4b2a6c5b177..aeef722d31f 100644\r\n--- a/src/wallet/scriptpubkeyman.h\r\n+++ b/src/wallet/scriptpubkeyman.h\r\n     /* Determines if address is derived from active key manager */\r\n-    virtual bool IsKeyActive(const CScript& script) { return false; };\r\n+    virtual bool IsKeyActive(const CScript& script) const { return false; };\r\n \r\n@@ -385,7 +385,7 @@ public:\r\n \r\n-    bool IsKeyActive(const CScript& script) override;\r\n+    bool IsKeyActive(const CScript& script) const override;\r\n \r\n@@ -612,7 +612,7 @@ public:\r\n \r\n-    bool IsKeyActive(const CScript& script) override;\r\n+    bool IsKeyActive(const CScript& script) const override;\r\n```\r\n</p></details>\r\n",
      "created_at": "2023-04-06T21:04:35Z",
      "updated_at": "2023-04-06T23:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1160257900",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160257900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160261941",
      "pull_request_review_id": 1373758349,
      "id": 1160261941,
      "node_id": "PRRC_kwDOABII585FKDE1",
      "diff_hunk": "@@ -392,6 +392,28 @@ std::vector<WalletDestination> LegacyScriptPubKeyMan::MarkUnusedAddresses(const\n     return result;\n }\n \n+bool LegacyScriptPubKeyMan::IsKeyActive(const CScript& script)\n+{\n+    LOCK(cs_KeyStore);\n+\n+    // Not in the keystore at all\n+    if (!IsMine(script)) return false;\n+\n+    for (const auto& key_id : GetAffectedKeys(script, *this)) {\n+        auto it = mapKeyMetadata.find(key_id);\n+        if (it == mapKeyMetadata.end()) {\n+            // This key must be really old\n+            return false;\n+        }\n+        const CKeyMetadata& meta = it->second;\n+        if (m_hd_chain.seed_id == meta.hd_seed_id)\n+            return true;\n+    }",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 15,
      "original_position": 20,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/45d565073cab12b6107aae9d08048d5310d752d4\r\n\r\n- add missing conditional brackets (see developer notes)\r\n- avoid unneeded `const CKeyMetadata& meta` overhead in the loop, or...\r\n\r\n```diff\r\n     LOCK(cs_KeyStore);\r\n-\r\n-    // Not in the keystore at all\r\n-    if (!IsMine(script)) return false;\r\n+    if (!IsMine(script)) return false; // not in the keystore at all\r\n \r\n     for (const auto& key_id : GetAffectedKeys(script, *this)) {\r\n-        auto it = mapKeyMetadata.find(key_id);\r\n+        const auto it{mapKeyMetadata.find(key_id)};\r\n         if (it == mapKeyMetadata.end()) {\r\n             // This key must be really old\r\n             return false;\r\n         }\r\n-        const CKeyMetadata& meta = it->second;\r\n-        if (m_hd_chain.seed_id == meta.hd_seed_id)\r\n+        if (m_hd_chain.seed_id == it->second.hd_seed_id) {\r\n             return true;\r\n+        }\r\n     }\r\n```\r\n\r\n...or alternately, do we need a null check here?\r\n\r\n```diff\r\n         const CKeyMetadata& meta = it->second;\r\n-        if (m_hd_chain.seed_id == meta.hd_seed_id)\r\n+        if (!meta.hd_seed_id.IsNull() && meta.hd_seed_id == m_hd_chain.seed_id) {\r\n```\r\n",
      "created_at": "2023-04-06T21:10:54Z",
      "updated_at": "2023-04-06T23:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1160261941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160261941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 406,
      "original_line": 406,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160272170",
      "pull_request_review_id": 1373758349,
      "id": 1160272170,
      "node_id": "PRRC_kwDOABII585FKFkq",
      "diff_hunk": "@@ -602,6 +603,7 @@ RPCHelpMan getaddressinfo()\n     ret.pushKVs(detail);\n \n     ret.pushKV(\"ischange\", ScriptIsChange(*pwallet, scriptPubKey));\n+    ret.pushKV(\"isactive\", pwallet->IsDestinationActive(dest));",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "81f29f03a607cbfb7162705 I'm not sure if or when legacy wallet support is expected to be phased out, but if isactive is only different from ismine in legacy wallets, is it worth adding a field (and all the new methods), versus just updating the ismine field documentation in the help for descriptor wallets? (When I'm double-checking an address with getaddressinfo before using it to receive, ismine is a field I'm already checking.)\r\n\r\nOtherwise, it might be handy for cli users to order isactive just after ismine, and in general group the \"is\" type of fields together in the RPC help and output, i.e. an order along the lines of ismine, isactive, iswatchonly, iswitness, isscript.",
      "created_at": "2023-04-06T21:27:06Z",
      "updated_at": "2023-04-06T23:24:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1160272170",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160272170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 606,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160291829",
      "pull_request_review_id": 1373758349,
      "id": 1160291829,
      "node_id": "PRRC_kwDOABII585FKKX1",
      "diff_hunk": "@@ -39,5 +40,159 @@ BOOST_AUTO_TEST_CASE(CanProvide)\n     BOOST_CHECK(keyman.CanProvide(p2sh_script, data));\n }\n \n+BOOST_AUTO_TEST_CASE(Legacy_IsKeyActive)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetMinVersion(FEATURE_LATEST);\n+        wallet.m_keypool_size = 10;\n+    }\n+    LegacyScriptPubKeyMan& spkm = *wallet.GetOrCreateLegacyScriptPubKeyMan();\n+\n+    // Start off empty\n+    BOOST_CHECK(spkm.GetScriptPubKeys().empty());\n+\n+    // Generate 20 keypool keys (10 internal, 10 external)\n+    {\n+        LOCK(wallet.cs_wallet);\n+        spkm.SetupGeneration();\n+    }\n+\n+    // 4 scripts per keypool key (P2PK, P2PKH, P2WPKH, P2SH-P2WPKH)\n+    // Plus 4 scripts for the seed key\n+    auto scripts1 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 84);",
      "path": "src/wallet/test/scriptpubkeyman_tests.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in general can use `BOOST_CHECK_EQUAL` for equality checks, if you prefer\r\n```suggestion\r\n    BOOST_CHECK_EQUAL(scripts1.size(), 84);\r\n```",
      "created_at": "2023-04-06T22:01:28Z",
      "updated_at": "2023-04-06T23:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1160291829",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160291829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160298313",
      "pull_request_review_id": 1373758349,
      "id": 1160298313,
      "node_id": "PRRC_kwDOABII585FKL9J",
      "diff_hunk": "@@ -39,5 +40,159 @@ BOOST_AUTO_TEST_CASE(CanProvide)\n     BOOST_CHECK(keyman.CanProvide(p2sh_script, data));\n }\n \n+BOOST_AUTO_TEST_CASE(Legacy_IsKeyActive)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetMinVersion(FEATURE_LATEST);\n+        wallet.m_keypool_size = 10;\n+    }\n+    LegacyScriptPubKeyMan& spkm = *wallet.GetOrCreateLegacyScriptPubKeyMan();\n+\n+    // Start off empty\n+    BOOST_CHECK(spkm.GetScriptPubKeys().empty());\n+\n+    // Generate 20 keypool keys (10 internal, 10 external)\n+    {\n+        LOCK(wallet.cs_wallet);\n+        spkm.SetupGeneration();\n+    }\n+\n+    // 4 scripts per keypool key (P2PK, P2PKH, P2WPKH, P2SH-P2WPKH)\n+    // Plus 4 scripts for the seed key\n+    auto scripts1 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 84);\n+\n+    // All keys are active\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm.IsKeyActive(script));\n+    }\n+\n+    // Requesting single from spkm should not deactivate key\n+    CTxDestination dest1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        auto result = spkm.GetNewDestination(OutputType::BECH32);\n+        dest1 = result.value();\n+    }\n+    CScript script = GetScriptForDestination(dest1);\n+    BOOST_CHECK(spkm.IsKeyActive(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts2.size() == 84);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(wallet.cs_wallet);\n+        LOCK(spkm.cs_KeyStore);\n+        auto keys = spkm.MarkReserveKeysAsUsed(5);\n+        BOOST_CHECK(keys.size() == 4); // Because we already used one with GetNewDestination\n+    }\n+\n+    // Key pool size did not change\n+    auto scripts3 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts3.size() == 84);\n+\n+    // All keys are still active\n+    for (const CScript& script : scripts3) {\n+        BOOST_CHECK(spkm.IsKeyActive(script));\n+    }\n+\n+    // When user encrypts wallet for the first time,\n+    // all existing keys are removed from active keypool\n+    {\n+        LOCK(wallet.cs_wallet);\n+        // called by EncryptWallet()\n+        spkm.SetupGeneration(true);\n+    }\n+\n+    // 20 new keys were added\n+    auto scripts4 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts4.size() == 84 * 2);\n+\n+    // All 10 original keys are now inactive\n+    for (const CScript& script : scripts3) {\n+        BOOST_CHECK(!spkm.IsKeyActive(script));\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(Descriptor_IsKeyActive)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.LoadMinVersion(FEATURE_LATEST);\n+        wallet.SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+        wallet.m_keypool_size = 10;\n+        wallet.SetupDescriptorScriptPubKeyMans();\n+    }\n+    DescriptorScriptPubKeyMan* spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, /*internal=*/false));\n+\n+    // Start off with 10 pre-generated keys, 1 script each\n+    auto scripts1 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 10);\n+\n+    // All keys are active\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm->IsKeyActive(script));\n+    }\n+\n+    // Requesting single key from spkm should not deactivate key\n+    auto dest1 = spkm->GetNewDestination(OutputType::BECH32);\n+    CScript script = GetScriptForDestination(dest1.value());\n+    BOOST_CHECK(spkm->IsKeyActive(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts2.size() == 10);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(spkm->cs_desc_man);\n+        WalletDescriptor descriptor = spkm->GetWalletDescriptor();\n+        FlatSigningProvider provider;\n+        std::vector<CScript> scripts3;\n+        descriptor.descriptor->ExpandFromCache(/*pos=*/5, descriptor.cache, scripts3, provider);\n+\n+        BOOST_CHECK(scripts3.size() == 1);\n+        spkm->MarkUnusedAddresses(scripts3.front());\n+    }\n+\n+    // Key pool size increased to replace used keys\n+    auto scripts4 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts4.size() == 16);\n+\n+    // All keys are still active\n+    for (const CScript& script : scripts4) {\n+        BOOST_CHECK(spkm->IsKeyActive(script));\n+    }\n+\n+    // When user encrypts wallet for the first time,\n+    // all existing keys are removed from active keypool\n+    {\n+        LOCK(wallet.cs_wallet);\n+        // called by EncryptWallet()\n+        wallet.SetupDescriptorScriptPubKeyMans();\n+    }\n+\n+    // This SPKM is not affected\n+    for (const CScript& script : scripts4) {\n+        BOOST_CHECK(spkm->IsKeyActive(script));\n+    }\n+\n+    // ...but at the wallet level all the keys from that SPKM are deactivated\n+    int num_script_keys_not_found = 0;\n+    for (const CScript& script : scripts4) {\n+        WitnessV0ScriptHash scripthash(script);\n+        if (!wallet.IsDestinationActive(scripthash))\n+            num_script_keys_not_found++;\n+    }",
      "path": "src/wallet/test/scriptpubkeyman_tests.cpp",
      "position": 154,
      "original_position": 162,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "81f29f03a607cbfb7162705 conditional brackets and prefix increment operator per developer notes, drop unneeded localvar\r\n\r\n```diff\r\n-        WitnessV0ScriptHash scripthash(script);\r\n-        if (!wallet.IsDestinationActive(scripthash))\r\n-            num_script_keys_not_found++;\r\n+        if (!wallet.IsDestinationActive(WitnessV0ScriptHash(script))) {\r\n+            ++num_script_keys_not_found;\r\n+        }\r\n```\r\n",
      "created_at": "2023-04-06T22:13:19Z",
      "updated_at": "2023-04-06T23:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1160298313",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160298313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160313284",
      "pull_request_review_id": 1373758349,
      "id": 1160313284,
      "node_id": "PRRC_kwDOABII585FKPnE",
      "diff_hunk": "@@ -2557,6 +2557,16 @@ void CWallet::ForEachAddrBookEntry(const ListAddrBookFunc& func) const\n     }\n }\n \n+bool CWallet::IsDestinationActive(const CTxDestination& dest) const\n+{\n+    CScript script = GetScriptForDestination(dest);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/81f29f03a607cbfb7162705c1c1618ca7b59640e \r\n\r\n- avoid copy\r\n\r\n```suggestion\r\n    const CScript& script{GetScriptForDestination(dest)};\r\n```\r\n\r\n- remove extra newline, and another implementation for the fun of it\r\n\r\n```diff\r\n bool CWallet::IsDestinationActive(const CTxDestination& dest) const\r\n {\r\n-    CScript script = GetScriptForDestination(dest);\r\n-    for (const auto& spk_man : GetActiveScriptPubKeyMans()) {\r\n-        if (spk_man->IsKeyActive(script)) return true;\r\n-    }\r\n-    return false;\r\n+    const CScript& script{GetScriptForDestination(dest)};\r\n+    const std::set<ScriptPubKeyMan*>& spkms{GetActiveScriptPubKeyMans()};\r\n+    return std::any_of(spkms.cbegin(), spkms.cend(), [&script](const auto& spkm) { return spkm->IsKeyActive(script); });\r\n }\r\n-\r\n\r\n```\r\n",
      "created_at": "2023-04-06T22:41:50Z",
      "updated_at": "2023-04-06T23:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1160313284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160313284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160327631",
      "pull_request_review_id": 1373758349,
      "id": 1160327631,
      "node_id": "PRRC_kwDOABII585FKTHP",
      "diff_hunk": "@@ -4,32 +4,107 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet keypool and interaction with wallet encryption/locking.\"\"\"\n \n+import os\n+import re\n import time\n from decimal import Decimal\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.descriptors import descsum_create\n+\n+TEST_KEYPOOL_SIZE = 10\n+TEST_NEW_KEYPOOL_SIZE = TEST_KEYPOOL_SIZE + 2\n \n class KeyPoolTest(BitcoinTestFramework):\n     def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.extra_args = [[f\"-keypool={TEST_KEYPOOL_SIZE}\"]]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n         nodes = self.nodes\n+\n+        # Derive addresses from the wallet without removing them from keypool\n+        addrs = []\n+        if not self.options.descriptors:\n+            path = os.path.join(self.nodes[0].datadir, 'wallet.dump')\n+            nodes[0].dumpwallet(path)\n+            file = open(path, \"r\", encoding=\"utf8\")\n+            m = re.search(r\"masterkey: (\\w+)\", file.read())\n+            file.close()\n+            xpriv = m.group(1)\n+            desc = descsum_create(f\"wpkh({xpriv}/0h/0h/*h)\")\n+            addrs = nodes[0].deriveaddresses(desc, [0, 9])\n+        else:\n+            list_descriptors = nodes[0].listdescriptors()\n+            for desc in list_descriptors[\"descriptors\"]:\n+                if desc['active'] and not desc[\"internal\"] and desc[\"desc\"][:4] == \"wpkh\":\n+                    addrs = nodes[0].deriveaddresses(desc[\"desc\"], [0, 9])\n+\n+        addr0 = addrs[0]\n+        addr9 = addrs[9] # arbitrary future address index\n+\n+        # Address is active before it is removed from keypool by getnewaddress\n+        addr0_before_getting_data = nodes[0].getaddressinfo(addr0)\n+        assert addr0_before_getting_data['isactive'] == True\n+\n         addr_before_encrypting = nodes[0].getnewaddress()\n         addr_before_encrypting_data = nodes[0].getaddressinfo(addr_before_encrypting)\n+        assert addr0 == addr_before_encrypting\n+        # Address is still active even after being removed from keypool\n+        assert addr_before_encrypting_data['isactive'] == True\n+\n         wallet_info_old = nodes[0].getwalletinfo()\n         if not self.options.descriptors:\n             assert addr_before_encrypting_data['hdseedid'] == wallet_info_old['hdseedid']\n \n+        # Address is active before wallet is encrypted (resetting keypool)\n+        addr9_before_encrypting_data = nodes[0].getaddressinfo(addr9)\n+        assert addr9_before_encrypting_data['isactive'] == True\n+\n+        # Imported things are never considered active, no need to rescan\n+        if self.options.descriptors:\n+            nodes[0].importdescriptors([{\n+                \"desc\": \"addr(bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v)\",\n+                \"timestamp\": \"now\"\n+            }])\n+        else:\n+            nodes[0].importaddress(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\", \"label\", False)\n+        import_addr_data = nodes[0].getaddressinfo(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\")\n+        assert not import_addr_data[\"ismine\"]\n+        assert import_addr_data[\"iswatchonly\"] is not self.options.descriptors\n+        assert not import_addr_data[\"isactive\"]\n+\n+        if self.options.descriptors:\n+            nodes[0].importdescriptors([{\n+                \"desc\": \"pk(02f893ca95b0d55b4ce4e72ae94982eb679158cb2ebc120ff62c17fedfd1f0700e)\",\n+                \"timestamp\": \"now\"\n+            }])\n+        else:\n+            nodes[0].importpubkey(\"02f893ca95b0d55b4ce4e72ae94982eb679158cb2ebc120ff62c17fedfd1f0700e\", \"label\", False)\n+        import_pub_data = nodes[0].getaddressinfo(\"bcrt1q4v7a8wn5vqd6fk4026s5gzzxyu7cfzz23n576h\")\n+        assert not import_pub_data[\"ismine\"]\n+        assert import_pub_data[\"iswatchonly\"] is not self.options.descriptors\n+        assert not import_pub_data[\"isactive\"]\n+\n+        nodes[0].importprivkey(\"cPMX7v5CNV1zCphFSq2hnR5rCjzAhA1GsBfD1qrJGdj4QEfu38Qx\", \"label\", False)\n+        import_priv_data = nodes[0].getaddressinfo(\"bcrt1qa985v5d53qqtrfujmzq2zrw3r40j6zz4ns02kj\")\n+        assert import_priv_data[\"ismine\"]\n+        assert not import_priv_data[\"iswatchonly\"]\n+        assert not import_priv_data[\"isactive\"]\n+\n         # Encrypt wallet and wait to terminate\n         nodes[0].encryptwallet('test')\n+        addr9_after_encrypting_data = nodes[0].getaddressinfo(addr9)\n+        # Key is from unencrypted seed, no longer considered active\n+        assert addr9_after_encrypting_data['isactive'] == False",
      "path": "test/functional/wallet_keypool.py",
      "position": null,
      "original_position": 103,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/81f29f03a607cbfb7162705c1c1618ca7b59640e style nit, either omit the `== False` and the 3 `== True` above, or use `assert_equal`",
      "created_at": "2023-04-06T23:16:11Z",
      "updated_at": "2023-04-06T23:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1160327631",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160327631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160329162",
      "pull_request_review_id": 1373758349,
      "id": 1160329162,
      "node_id": "PRRC_kwDOABII585FKTfK",
      "diff_hunk": "@@ -506,7 +506,8 @@ RPCHelpMan getaddressinfo()\n                         {RPCResult::Type::STR, \"desc\", /*optional=*/true, \"A descriptor for spending coins sent to this address (only when solvable).\"},\n                         {RPCResult::Type::STR, \"parent_desc\", /*optional=*/true, \"The descriptor used to derive this address if this is a descriptor wallet\"},\n                         {RPCResult::Type::BOOL, \"isscript\", \"If the key is a script.\"},\n-                        {RPCResult::Type::BOOL, \"ischange\", \"If the address was used for change output.\"},\n+                        {RPCResult::Type::BOOL, \"ischange\", \"If the address was or will be used for change output.\"},",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be good to explain this \"or will be\" change.",
      "created_at": "2023-04-06T23:20:18Z",
      "updated_at": "2023-04-06T23:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1160329162",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160329162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161121018",
      "pull_request_review_id": 1376771630,
      "id": 1161121018,
      "node_id": "PRRC_kwDOABII585FNUz6",
      "diff_hunk": "@@ -730,8 +730,11 @@ class PKDescriptor final : public DescriptorImpl\n private:\n     const bool m_xonly;\n protected:\n-    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider& out) const override\n     {\n+        CKeyID id = keys[0].GetID();\n+        out.pubkeys.emplace(id, keys[0]);",
      "path": "src/script/descriptor.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1159068107,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The style here matches the neighboring descriptors but I see your point about using `.at(0)` -- do you think all the `descriptor::MakeScripts()` should be cleaned up like this?\r\n\r\nAlso this chunk is the patch alluded to in the comment\r\n> This PR also patches PKDescriptor from https://github.com/bitcoin/bitcoin/pull/22051 where matching public keys were not returned.\r\n\r\nWhen we expand a bare pubkey descriptor we weren't populating `out.pubkeys` and so `GetAffectedKeys()` wouldn't return anything",
      "created_at": "2023-04-08T14:48:38Z",
      "updated_at": "2023-04-08T14:48:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1161121018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161121018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 746,
      "original_line": 746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130735",
      "pull_request_review_id": 1376780649,
      "id": 1161130735,
      "node_id": "PRRC_kwDOABII585FNXLv",
      "diff_hunk": "@@ -198,6 +198,9 @@ class ScriptPubKeyMan\n      */\n     virtual std::vector<WalletDestination> MarkUnusedAddresses(const CScript& script) { return {}; }\n \n+    /* Determines if address is derived from active key manager */\n+    virtual bool IsKeyActive(const CScript& script) { return false; };",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 5,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1160257900,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks will add this -- also I think these could be `[[nodiscard]]` as well? But I don't see that for any of the other `bool Is...()` members in SPKM...",
      "created_at": "2023-04-08T16:23:13Z",
      "updated_at": "2023-04-08T16:23:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1161130735",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130743",
      "pull_request_review_id": 1376780656,
      "id": 1161130743,
      "node_id": "PRRC_kwDOABII585FNXL3",
      "diff_hunk": "@@ -392,6 +392,28 @@ std::vector<WalletDestination> LegacyScriptPubKeyMan::MarkUnusedAddresses(const\n     return result;\n }\n \n+bool LegacyScriptPubKeyMan::IsKeyActive(const CScript& script)\n+{\n+    LOCK(cs_KeyStore);\n+\n+    // Not in the keystore at all\n+    if (!IsMine(script)) return false;\n+\n+    for (const auto& key_id : GetAffectedKeys(script, *this)) {\n+        auto it = mapKeyMetadata.find(key_id);\n+        if (it == mapKeyMetadata.end()) {\n+            // This key must be really old\n+            return false;\n+        }\n+        const CKeyMetadata& meta = it->second;\n+        if (m_hd_chain.seed_id == meta.hd_seed_id)\n+            return true;\n+    }",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 15,
      "original_position": 20,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1160261941,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, updating.",
      "created_at": "2023-04-08T16:23:17Z",
      "updated_at": "2023-04-08T16:23:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1161130743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 406,
      "original_line": 406,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130747",
      "pull_request_review_id": 1376780661,
      "id": 1161130747,
      "node_id": "PRRC_kwDOABII585FNXL7",
      "diff_hunk": "@@ -602,6 +603,7 @@ RPCHelpMan getaddressinfo()\n     ret.pushKVs(detail);\n \n     ret.pushKV(\"ischange\", ScriptIsChange(*pwallet, scriptPubKey));\n+    ret.pushKV(\"isactive\", pwallet->IsDestinationActive(dest));",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1160272170,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok, moving `isactive` next to `ismine`. You have a good point about legacy wallet deprecation. I suppose when that happens most of this new code will be deprecated as well since its mainly implemented only in `LegacyScriptPubKeyMan`. Would it make sense to only add the field to RPC response in legacy wallets?",
      "created_at": "2023-04-08T16:23:19Z",
      "updated_at": "2023-04-08T16:23:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1161130747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 606,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130750",
      "pull_request_review_id": 1376780665,
      "id": 1161130750,
      "node_id": "PRRC_kwDOABII585FNXL-",
      "diff_hunk": "@@ -39,5 +40,159 @@ BOOST_AUTO_TEST_CASE(CanProvide)\n     BOOST_CHECK(keyman.CanProvide(p2sh_script, data));\n }\n \n+BOOST_AUTO_TEST_CASE(Legacy_IsKeyActive)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetMinVersion(FEATURE_LATEST);\n+        wallet.m_keypool_size = 10;\n+    }\n+    LegacyScriptPubKeyMan& spkm = *wallet.GetOrCreateLegacyScriptPubKeyMan();\n+\n+    // Start off empty\n+    BOOST_CHECK(spkm.GetScriptPubKeys().empty());\n+\n+    // Generate 20 keypool keys (10 internal, 10 external)\n+    {\n+        LOCK(wallet.cs_wallet);\n+        spkm.SetupGeneration();\n+    }\n+\n+    // 4 scripts per keypool key (P2PK, P2PKH, P2WPKH, P2SH-P2WPKH)\n+    // Plus 4 scripts for the seed key\n+    auto scripts1 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 84);",
      "path": "src/wallet/test/scriptpubkeyman_tests.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1160291829,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks, I do prefer!",
      "created_at": "2023-04-08T16:23:21Z",
      "updated_at": "2023-04-08T16:23:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1161130750",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130751",
      "pull_request_review_id": 1376780667,
      "id": 1161130751,
      "node_id": "PRRC_kwDOABII585FNXL_",
      "diff_hunk": "@@ -39,5 +40,159 @@ BOOST_AUTO_TEST_CASE(CanProvide)\n     BOOST_CHECK(keyman.CanProvide(p2sh_script, data));\n }\n \n+BOOST_AUTO_TEST_CASE(Legacy_IsKeyActive)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetMinVersion(FEATURE_LATEST);\n+        wallet.m_keypool_size = 10;\n+    }\n+    LegacyScriptPubKeyMan& spkm = *wallet.GetOrCreateLegacyScriptPubKeyMan();\n+\n+    // Start off empty\n+    BOOST_CHECK(spkm.GetScriptPubKeys().empty());\n+\n+    // Generate 20 keypool keys (10 internal, 10 external)\n+    {\n+        LOCK(wallet.cs_wallet);\n+        spkm.SetupGeneration();\n+    }\n+\n+    // 4 scripts per keypool key (P2PK, P2PKH, P2WPKH, P2SH-P2WPKH)\n+    // Plus 4 scripts for the seed key\n+    auto scripts1 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 84);\n+\n+    // All keys are active\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm.IsKeyActive(script));\n+    }\n+\n+    // Requesting single from spkm should not deactivate key\n+    CTxDestination dest1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        auto result = spkm.GetNewDestination(OutputType::BECH32);\n+        dest1 = result.value();\n+    }\n+    CScript script = GetScriptForDestination(dest1);\n+    BOOST_CHECK(spkm.IsKeyActive(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts2.size() == 84);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(wallet.cs_wallet);\n+        LOCK(spkm.cs_KeyStore);\n+        auto keys = spkm.MarkReserveKeysAsUsed(5);\n+        BOOST_CHECK(keys.size() == 4); // Because we already used one with GetNewDestination\n+    }\n+\n+    // Key pool size did not change\n+    auto scripts3 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts3.size() == 84);\n+\n+    // All keys are still active\n+    for (const CScript& script : scripts3) {\n+        BOOST_CHECK(spkm.IsKeyActive(script));\n+    }\n+\n+    // When user encrypts wallet for the first time,\n+    // all existing keys are removed from active keypool\n+    {\n+        LOCK(wallet.cs_wallet);\n+        // called by EncryptWallet()\n+        spkm.SetupGeneration(true);\n+    }\n+\n+    // 20 new keys were added\n+    auto scripts4 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK(scripts4.size() == 84 * 2);\n+\n+    // All 10 original keys are now inactive\n+    for (const CScript& script : scripts3) {\n+        BOOST_CHECK(!spkm.IsKeyActive(script));\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(Descriptor_IsKeyActive)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.LoadMinVersion(FEATURE_LATEST);\n+        wallet.SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+        wallet.m_keypool_size = 10;\n+        wallet.SetupDescriptorScriptPubKeyMans();\n+    }\n+    DescriptorScriptPubKeyMan* spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, /*internal=*/false));\n+\n+    // Start off with 10 pre-generated keys, 1 script each\n+    auto scripts1 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts1.size() == 10);\n+\n+    // All keys are active\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm->IsKeyActive(script));\n+    }\n+\n+    // Requesting single key from spkm should not deactivate key\n+    auto dest1 = spkm->GetNewDestination(OutputType::BECH32);\n+    CScript script = GetScriptForDestination(dest1.value());\n+    BOOST_CHECK(spkm->IsKeyActive(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts2.size() == 10);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(spkm->cs_desc_man);\n+        WalletDescriptor descriptor = spkm->GetWalletDescriptor();\n+        FlatSigningProvider provider;\n+        std::vector<CScript> scripts3;\n+        descriptor.descriptor->ExpandFromCache(/*pos=*/5, descriptor.cache, scripts3, provider);\n+\n+        BOOST_CHECK(scripts3.size() == 1);\n+        spkm->MarkUnusedAddresses(scripts3.front());\n+    }\n+\n+    // Key pool size increased to replace used keys\n+    auto scripts4 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK(scripts4.size() == 16);\n+\n+    // All keys are still active\n+    for (const CScript& script : scripts4) {\n+        BOOST_CHECK(spkm->IsKeyActive(script));\n+    }\n+\n+    // When user encrypts wallet for the first time,\n+    // all existing keys are removed from active keypool\n+    {\n+        LOCK(wallet.cs_wallet);\n+        // called by EncryptWallet()\n+        wallet.SetupDescriptorScriptPubKeyMans();\n+    }\n+\n+    // This SPKM is not affected\n+    for (const CScript& script : scripts4) {\n+        BOOST_CHECK(spkm->IsKeyActive(script));\n+    }\n+\n+    // ...but at the wallet level all the keys from that SPKM are deactivated\n+    int num_script_keys_not_found = 0;\n+    for (const CScript& script : scripts4) {\n+        WitnessV0ScriptHash scripthash(script);\n+        if (!wallet.IsDestinationActive(scripthash))\n+            num_script_keys_not_found++;\n+    }",
      "path": "src/wallet/test/scriptpubkeyman_tests.cpp",
      "position": 154,
      "original_position": 162,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1160298313,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks got it",
      "created_at": "2023-04-08T16:23:24Z",
      "updated_at": "2023-04-08T16:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1161130751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130754",
      "pull_request_review_id": 1376780670,
      "id": 1161130754,
      "node_id": "PRRC_kwDOABII585FNXMC",
      "diff_hunk": "@@ -2557,6 +2557,16 @@ void CWallet::ForEachAddrBookEntry(const ListAddrBookFunc& func) const\n     }\n }\n \n+bool CWallet::IsDestinationActive(const CTxDestination& dest) const\n+{\n+    CScript script = GetScriptForDestination(dest);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1160313284,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah really cool with `any_of` thanks",
      "created_at": "2023-04-08T16:23:27Z",
      "updated_at": "2023-04-08T16:23:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1161130754",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130756",
      "pull_request_review_id": 1376780680,
      "id": 1161130756,
      "node_id": "PRRC_kwDOABII585FNXME",
      "diff_hunk": "@@ -4,32 +4,107 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet keypool and interaction with wallet encryption/locking.\"\"\"\n \n+import os\n+import re\n import time\n from decimal import Decimal\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.descriptors import descsum_create\n+\n+TEST_KEYPOOL_SIZE = 10\n+TEST_NEW_KEYPOOL_SIZE = TEST_KEYPOOL_SIZE + 2\n \n class KeyPoolTest(BitcoinTestFramework):\n     def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.extra_args = [[f\"-keypool={TEST_KEYPOOL_SIZE}\"]]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n         nodes = self.nodes\n+\n+        # Derive addresses from the wallet without removing them from keypool\n+        addrs = []\n+        if not self.options.descriptors:\n+            path = os.path.join(self.nodes[0].datadir, 'wallet.dump')\n+            nodes[0].dumpwallet(path)\n+            file = open(path, \"r\", encoding=\"utf8\")\n+            m = re.search(r\"masterkey: (\\w+)\", file.read())\n+            file.close()\n+            xpriv = m.group(1)\n+            desc = descsum_create(f\"wpkh({xpriv}/0h/0h/*h)\")\n+            addrs = nodes[0].deriveaddresses(desc, [0, 9])\n+        else:\n+            list_descriptors = nodes[0].listdescriptors()\n+            for desc in list_descriptors[\"descriptors\"]:\n+                if desc['active'] and not desc[\"internal\"] and desc[\"desc\"][:4] == \"wpkh\":\n+                    addrs = nodes[0].deriveaddresses(desc[\"desc\"], [0, 9])\n+\n+        addr0 = addrs[0]\n+        addr9 = addrs[9] # arbitrary future address index\n+\n+        # Address is active before it is removed from keypool by getnewaddress\n+        addr0_before_getting_data = nodes[0].getaddressinfo(addr0)\n+        assert addr0_before_getting_data['isactive'] == True\n+\n         addr_before_encrypting = nodes[0].getnewaddress()\n         addr_before_encrypting_data = nodes[0].getaddressinfo(addr_before_encrypting)\n+        assert addr0 == addr_before_encrypting\n+        # Address is still active even after being removed from keypool\n+        assert addr_before_encrypting_data['isactive'] == True\n+\n         wallet_info_old = nodes[0].getwalletinfo()\n         if not self.options.descriptors:\n             assert addr_before_encrypting_data['hdseedid'] == wallet_info_old['hdseedid']\n \n+        # Address is active before wallet is encrypted (resetting keypool)\n+        addr9_before_encrypting_data = nodes[0].getaddressinfo(addr9)\n+        assert addr9_before_encrypting_data['isactive'] == True\n+\n+        # Imported things are never considered active, no need to rescan\n+        if self.options.descriptors:\n+            nodes[0].importdescriptors([{\n+                \"desc\": \"addr(bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v)\",\n+                \"timestamp\": \"now\"\n+            }])\n+        else:\n+            nodes[0].importaddress(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\", \"label\", False)\n+        import_addr_data = nodes[0].getaddressinfo(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\")\n+        assert not import_addr_data[\"ismine\"]\n+        assert import_addr_data[\"iswatchonly\"] is not self.options.descriptors\n+        assert not import_addr_data[\"isactive\"]\n+\n+        if self.options.descriptors:\n+            nodes[0].importdescriptors([{\n+                \"desc\": \"pk(02f893ca95b0d55b4ce4e72ae94982eb679158cb2ebc120ff62c17fedfd1f0700e)\",\n+                \"timestamp\": \"now\"\n+            }])\n+        else:\n+            nodes[0].importpubkey(\"02f893ca95b0d55b4ce4e72ae94982eb679158cb2ebc120ff62c17fedfd1f0700e\", \"label\", False)\n+        import_pub_data = nodes[0].getaddressinfo(\"bcrt1q4v7a8wn5vqd6fk4026s5gzzxyu7cfzz23n576h\")\n+        assert not import_pub_data[\"ismine\"]\n+        assert import_pub_data[\"iswatchonly\"] is not self.options.descriptors\n+        assert not import_pub_data[\"isactive\"]\n+\n+        nodes[0].importprivkey(\"cPMX7v5CNV1zCphFSq2hnR5rCjzAhA1GsBfD1qrJGdj4QEfu38Qx\", \"label\", False)\n+        import_priv_data = nodes[0].getaddressinfo(\"bcrt1qa985v5d53qqtrfujmzq2zrw3r40j6zz4ns02kj\")\n+        assert import_priv_data[\"ismine\"]\n+        assert not import_priv_data[\"iswatchonly\"]\n+        assert not import_priv_data[\"isactive\"]\n+\n         # Encrypt wallet and wait to terminate\n         nodes[0].encryptwallet('test')\n+        addr9_after_encrypting_data = nodes[0].getaddressinfo(addr9)\n+        # Key is from unencrypted seed, no longer considered active\n+        assert addr9_after_encrypting_data['isactive'] == False",
      "path": "test/functional/wallet_keypool.py",
      "position": null,
      "original_position": 103,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1160327631,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "okay yes",
      "created_at": "2023-04-08T16:23:30Z",
      "updated_at": "2023-04-08T16:23:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1161130756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130759",
      "pull_request_review_id": 1376780686,
      "id": 1161130759,
      "node_id": "PRRC_kwDOABII585FNXMH",
      "diff_hunk": "@@ -506,7 +506,8 @@ RPCHelpMan getaddressinfo()\n                         {RPCResult::Type::STR, \"desc\", /*optional=*/true, \"A descriptor for spending coins sent to this address (only when solvable).\"},\n                         {RPCResult::Type::STR, \"parent_desc\", /*optional=*/true, \"The descriptor used to derive this address if this is a descriptor wallet\"},\n                         {RPCResult::Type::BOOL, \"isscript\", \"If the key is a script.\"},\n-                        {RPCResult::Type::BOOL, \"ischange\", \"If the address was used for change output.\"},\n+                        {RPCResult::Type::BOOL, \"ischange\", \"If the address was or will be used for change output.\"},",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1160329162,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok?\r\n\r\n> \"If the address is reserved for use as a change output. It may or may not have already been used as change.\"",
      "created_at": "2023-04-08T16:23:34Z",
      "updated_at": "2023-04-08T16:23:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1161130759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161130759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165902595",
      "pull_request_review_id": 1384012329,
      "id": 1165902595,
      "node_id": "PRRC_kwDOABII585FfkMD",
      "diff_hunk": "@@ -0,0 +1,5 @@\n+RPC",
      "path": "doc/release-notes/release-notes-27216.md",
      "position": null,
      "original_position": 1,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Per `doc/release-notes-empty-template.md` would suggest\r\n\r\n```\r\nUpdated RPCs\r\n------------\r\n```",
      "created_at": "2023-04-13T18:42:18Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1165902595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165902595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165903530",
      "pull_request_review_id": 1384012329,
      "id": 1165903530,
      "node_id": "PRRC_kwDOABII585Ffkaq",
      "diff_hunk": "@@ -0,0 +1,5 @@\n+RPC\n+---\n+\n+- `getaddressinfo` returns new boolean field `\"isactive\"` which is `true` if the\n+address is derived from an active descriptor or HD seed.",
      "path": "doc/release-notes/release-notes-27216.md",
      "position": null,
      "original_position": 5,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\naddress is derived from an active descriptor or HD seed. (#27216)\r\n```",
      "created_at": "2023-04-13T18:43:29Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1165903530",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165903530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165908531",
      "pull_request_review_id": 1384012329,
      "id": 1165908531,
      "node_id": "PRRC_kwDOABII585Ffloz",
      "diff_hunk": "@@ -0,0 +1,5 @@\n+RPC\n+---\n+\n+- `getaddressinfo` returns new boolean field `\"isactive\"` which is `true` if the",
      "path": "doc/release-notes/release-notes-27216.md",
      "position": null,
      "original_position": 4,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "- Suggestion\r\n\r\n```suggestion\r\n- RPC `getaddressinfo` now returns a new boolean field `\"isactive\"`, which is `true` if the\r\n```\r\n\r\n- For the release note (and/or in the RPC help), it may be good to briefly explain *why* this field is added, i.e. maybe something roughly like: \"Keys become non-active if derived before the wallet was encrypted or imported using RPCs `importprivkey`, `importaddress`, or `importpubkey`. The new field is intended to help users avoid using such keys to receive new transactions, as they can be exposed or compromised.\"\r\n\r\n- A release note can take time to do well and is often a separate commit (up to you).",
      "created_at": "2023-04-13T18:49:16Z",
      "updated_at": "2023-04-13T23:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1165908531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165908531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165915371",
      "pull_request_review_id": 1384012329,
      "id": 1165915371,
      "node_id": "PRRC_kwDOABII585FfnTr",
      "diff_hunk": "@@ -501,12 +501,13 @@ RPCHelpMan getaddressinfo()\n                         {RPCResult::Type::STR, \"address\", \"The bitcoin address validated.\"},\n                         {RPCResult::Type::STR_HEX, \"scriptPubKey\", \"The hex-encoded scriptPubKey generated by the address.\"},\n                         {RPCResult::Type::BOOL, \"ismine\", \"If the address is yours.\"},\n+                        {RPCResult::Type::BOOL, \"isactive\", \"If the key is in the active keypool (always equal to \\\"ismine\\\" in descriptor wallets).\"},\n                         {RPCResult::Type::BOOL, \"iswatchonly\", \"If the address is watchonly.\"},\n                         {RPCResult::Type::BOOL, \"solvable\", \"If we know how to spend coins sent to this address, ignoring the possible lack of private keys.\"},\n                         {RPCResult::Type::STR, \"desc\", /*optional=*/true, \"A descriptor for spending coins sent to this address (only when solvable).\"},\n                         {RPCResult::Type::STR, \"parent_desc\", /*optional=*/true, \"The descriptor used to derive this address if this is a descriptor wallet\"},\n                         {RPCResult::Type::BOOL, \"isscript\", \"If the key is a script.\"},\n-                        {RPCResult::Type::BOOL, \"ischange\", \"If the address was used for change output.\"},\n+                        {RPCResult::Type::BOOL, \"ischange\", \"If the address is reserved for use as a change output. It may or may not have already been used as change.\"},",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unsure, but seems like this doc change could be a separate commit if it is an unrelated fix/improvement.",
      "created_at": "2023-04-13T18:56:32Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1165915371",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1165915371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 510,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166088185",
      "pull_request_review_id": 1384012329,
      "id": 1166088185,
      "node_id": "PRRC_kwDOABII585FgRf5",
      "diff_hunk": "@@ -4,32 +4,107 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet keypool and interaction with wallet encryption/locking.\"\"\"\n \n+import os\n+import re\n import time\n from decimal import Decimal\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.descriptors import descsum_create\n+\n+TEST_KEYPOOL_SIZE = 10\n+TEST_NEW_KEYPOOL_SIZE = TEST_KEYPOOL_SIZE + 2\n \n class KeyPoolTest(BitcoinTestFramework):\n     def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.extra_args = [[f\"-keypool={TEST_KEYPOOL_SIZE}\"]]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n         nodes = self.nodes\n+\n+        # Derive addresses from the wallet without removing them from keypool\n+        addrs = []\n+        if not self.options.descriptors:\n+            path = os.path.join(self.nodes[0].datadir, 'wallet.dump')\n+            nodes[0].dumpwallet(path)\n+            file = open(path, \"r\", encoding=\"utf8\")\n+            m = re.search(r\"masterkey: (\\w+)\", file.read())\n+            file.close()\n+            xpriv = m.group(1)\n+            desc = descsum_create(f\"wpkh({xpriv}/0h/0h/*h)\")\n+            addrs = nodes[0].deriveaddresses(desc, [0, 9])\n+        else:\n+            list_descriptors = nodes[0].listdescriptors()\n+            for desc in list_descriptors[\"descriptors\"]:\n+                if desc['active'] and not desc[\"internal\"] and desc[\"desc\"][:4] == \"wpkh\":\n+                    addrs = nodes[0].deriveaddresses(desc[\"desc\"], [0, 9])",
      "path": "test/functional/wallet_keypool.py",
      "position": null,
      "original_position": 45,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, prefer named args when multiple\r\n\r\n```diff\r\n-            addrs = nodes[0].deriveaddresses(desc, [0, 9])\r\n+            addrs = nodes[0].deriveaddresses(descriptor=desc, range=[0, 9])\r\n         else:\r\n             list_descriptors = nodes[0].listdescriptors()\r\n             for desc in list_descriptors[\"descriptors\"]:\r\n                 if desc['active'] and not desc[\"internal\"] and desc[\"desc\"][:4] == \"wpkh\":\r\n-                    addrs = nodes[0].deriveaddresses(desc[\"desc\"], [0, 9])\r\n+                    addrs = nodes[0].deriveaddresses(descriptor=desc[\"desc\"], range=[0, 9])\r\n```\r\n",
      "created_at": "2023-04-13T22:31:22Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166088185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166088185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166089491",
      "pull_request_review_id": 1384012329,
      "id": 1166089491,
      "node_id": "PRRC_kwDOABII585FgR0T",
      "diff_hunk": "@@ -4,32 +4,107 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet keypool and interaction with wallet encryption/locking.\"\"\"\n \n+import os\n+import re\n import time\n from decimal import Decimal\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.descriptors import descsum_create\n+\n+TEST_KEYPOOL_SIZE = 10\n+TEST_NEW_KEYPOOL_SIZE = TEST_KEYPOOL_SIZE + 2\n \n class KeyPoolTest(BitcoinTestFramework):\n     def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.extra_args = [[f\"-keypool={TEST_KEYPOOL_SIZE}\"]]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n         nodes = self.nodes\n+\n+        # Derive addresses from the wallet without removing them from keypool\n+        addrs = []\n+        if not self.options.descriptors:\n+            path = os.path.join(self.nodes[0].datadir, 'wallet.dump')\n+            nodes[0].dumpwallet(path)\n+            file = open(path, \"r\", encoding=\"utf8\")\n+            m = re.search(r\"masterkey: (\\w+)\", file.read())\n+            file.close()\n+            xpriv = m.group(1)\n+            desc = descsum_create(f\"wpkh({xpriv}/0h/0h/*h)\")\n+            addrs = nodes[0].deriveaddresses(desc, [0, 9])\n+        else:\n+            list_descriptors = nodes[0].listdescriptors()\n+            for desc in list_descriptors[\"descriptors\"]:\n+                if desc['active'] and not desc[\"internal\"] and desc[\"desc\"][:4] == \"wpkh\":\n+                    addrs = nodes[0].deriveaddresses(desc[\"desc\"], [0, 9])\n+\n+        addr0 = addrs[0]\n+        addr9 = addrs[9] # arbitrary future address index\n+\n+        # Address is active before it is removed from keypool by getnewaddress\n+        addr0_before_getting_data = nodes[0].getaddressinfo(addr0)\n+        assert addr0_before_getting_data['isactive']\n+\n         addr_before_encrypting = nodes[0].getnewaddress()\n         addr_before_encrypting_data = nodes[0].getaddressinfo(addr_before_encrypting)\n+        assert addr0 == addr_before_encrypting\n+        # Address is still active even after being removed from keypool\n+        assert addr_before_encrypting_data['isactive']\n+\n         wallet_info_old = nodes[0].getwalletinfo()\n         if not self.options.descriptors:\n             assert addr_before_encrypting_data['hdseedid'] == wallet_info_old['hdseedid']\n \n+        # Address is active before wallet is encrypted (resetting keypool)\n+        addr9_before_encrypting_data = nodes[0].getaddressinfo(addr9)\n+        assert addr9_before_encrypting_data['isactive']\n+\n+        # Imported things are never considered active, no need to rescan\n+        if self.options.descriptors:\n+            nodes[0].importdescriptors([{\n+                \"desc\": \"addr(bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v)\",\n+                \"timestamp\": \"now\"\n+            }])\n+        else:\n+            nodes[0].importaddress(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\", \"label\", False)",
      "path": "test/functional/wallet_keypool.py",
      "position": null,
      "original_position": 75,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            nodes[0].importaddress(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\", \"label\", rescan=False)\r\n```",
      "created_at": "2023-04-13T22:34:01Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166089491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166089491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166089789",
      "pull_request_review_id": 1384012329,
      "id": 1166089789,
      "node_id": "PRRC_kwDOABII585FgR49",
      "diff_hunk": "@@ -4,32 +4,107 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet keypool and interaction with wallet encryption/locking.\"\"\"\n \n+import os\n+import re\n import time\n from decimal import Decimal\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.descriptors import descsum_create\n+\n+TEST_KEYPOOL_SIZE = 10\n+TEST_NEW_KEYPOOL_SIZE = TEST_KEYPOOL_SIZE + 2\n \n class KeyPoolTest(BitcoinTestFramework):\n     def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.extra_args = [[f\"-keypool={TEST_KEYPOOL_SIZE}\"]]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n         nodes = self.nodes\n+\n+        # Derive addresses from the wallet without removing them from keypool\n+        addrs = []\n+        if not self.options.descriptors:\n+            path = os.path.join(self.nodes[0].datadir, 'wallet.dump')\n+            nodes[0].dumpwallet(path)\n+            file = open(path, \"r\", encoding=\"utf8\")\n+            m = re.search(r\"masterkey: (\\w+)\", file.read())\n+            file.close()\n+            xpriv = m.group(1)\n+            desc = descsum_create(f\"wpkh({xpriv}/0h/0h/*h)\")\n+            addrs = nodes[0].deriveaddresses(desc, [0, 9])\n+        else:\n+            list_descriptors = nodes[0].listdescriptors()\n+            for desc in list_descriptors[\"descriptors\"]:\n+                if desc['active'] and not desc[\"internal\"] and desc[\"desc\"][:4] == \"wpkh\":\n+                    addrs = nodes[0].deriveaddresses(desc[\"desc\"], [0, 9])\n+\n+        addr0 = addrs[0]\n+        addr9 = addrs[9] # arbitrary future address index\n+\n+        # Address is active before it is removed from keypool by getnewaddress\n+        addr0_before_getting_data = nodes[0].getaddressinfo(addr0)\n+        assert addr0_before_getting_data['isactive']\n+\n         addr_before_encrypting = nodes[0].getnewaddress()\n         addr_before_encrypting_data = nodes[0].getaddressinfo(addr_before_encrypting)\n+        assert addr0 == addr_before_encrypting\n+        # Address is still active even after being removed from keypool\n+        assert addr_before_encrypting_data['isactive']\n+\n         wallet_info_old = nodes[0].getwalletinfo()\n         if not self.options.descriptors:\n             assert addr_before_encrypting_data['hdseedid'] == wallet_info_old['hdseedid']\n \n+        # Address is active before wallet is encrypted (resetting keypool)\n+        addr9_before_encrypting_data = nodes[0].getaddressinfo(addr9)\n+        assert addr9_before_encrypting_data['isactive']\n+\n+        # Imported things are never considered active, no need to rescan\n+        if self.options.descriptors:\n+            nodes[0].importdescriptors([{\n+                \"desc\": \"addr(bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v)\",\n+                \"timestamp\": \"now\"\n+            }])\n+        else:\n+            nodes[0].importaddress(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\", \"label\", False)\n+        import_addr_data = nodes[0].getaddressinfo(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\")\n+        assert not import_addr_data[\"ismine\"]\n+        assert import_addr_data[\"iswatchonly\"] is not self.options.descriptors\n+        assert not import_addr_data[\"isactive\"]\n+\n+        if self.options.descriptors:\n+            nodes[0].importdescriptors([{\n+                \"desc\": \"pk(02f893ca95b0d55b4ce4e72ae94982eb679158cb2ebc120ff62c17fedfd1f0700e)\",\n+                \"timestamp\": \"now\"\n+            }])\n+        else:\n+            nodes[0].importpubkey(\"02f893ca95b0d55b4ce4e72ae94982eb679158cb2ebc120ff62c17fedfd1f0700e\", \"label\", False)",
      "path": "test/functional/wallet_keypool.py",
      "position": null,
      "original_position": 87,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            nodes[0].importpubkey(\"02f893ca95b0d55b4ce4e72ae94982eb679158cb2ebc120ff62c17fedfd1f0700e\", \"label\", rescan=False)\r\n```",
      "created_at": "2023-04-13T22:34:28Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166089789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166089789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166090006",
      "pull_request_review_id": 1384012329,
      "id": 1166090006,
      "node_id": "PRRC_kwDOABII585FgR8W",
      "diff_hunk": "@@ -4,32 +4,107 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet keypool and interaction with wallet encryption/locking.\"\"\"\n \n+import os\n+import re\n import time\n from decimal import Decimal\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.descriptors import descsum_create\n+\n+TEST_KEYPOOL_SIZE = 10\n+TEST_NEW_KEYPOOL_SIZE = TEST_KEYPOOL_SIZE + 2\n \n class KeyPoolTest(BitcoinTestFramework):\n     def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.extra_args = [[f\"-keypool={TEST_KEYPOOL_SIZE}\"]]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n         nodes = self.nodes\n+\n+        # Derive addresses from the wallet without removing them from keypool\n+        addrs = []\n+        if not self.options.descriptors:\n+            path = os.path.join(self.nodes[0].datadir, 'wallet.dump')\n+            nodes[0].dumpwallet(path)\n+            file = open(path, \"r\", encoding=\"utf8\")\n+            m = re.search(r\"masterkey: (\\w+)\", file.read())\n+            file.close()\n+            xpriv = m.group(1)\n+            desc = descsum_create(f\"wpkh({xpriv}/0h/0h/*h)\")\n+            addrs = nodes[0].deriveaddresses(desc, [0, 9])\n+        else:\n+            list_descriptors = nodes[0].listdescriptors()\n+            for desc in list_descriptors[\"descriptors\"]:\n+                if desc['active'] and not desc[\"internal\"] and desc[\"desc\"][:4] == \"wpkh\":\n+                    addrs = nodes[0].deriveaddresses(desc[\"desc\"], [0, 9])\n+\n+        addr0 = addrs[0]\n+        addr9 = addrs[9] # arbitrary future address index\n+\n+        # Address is active before it is removed from keypool by getnewaddress\n+        addr0_before_getting_data = nodes[0].getaddressinfo(addr0)\n+        assert addr0_before_getting_data['isactive']\n+\n         addr_before_encrypting = nodes[0].getnewaddress()\n         addr_before_encrypting_data = nodes[0].getaddressinfo(addr_before_encrypting)\n+        assert addr0 == addr_before_encrypting\n+        # Address is still active even after being removed from keypool\n+        assert addr_before_encrypting_data['isactive']\n+\n         wallet_info_old = nodes[0].getwalletinfo()\n         if not self.options.descriptors:\n             assert addr_before_encrypting_data['hdseedid'] == wallet_info_old['hdseedid']\n \n+        # Address is active before wallet is encrypted (resetting keypool)\n+        addr9_before_encrypting_data = nodes[0].getaddressinfo(addr9)\n+        assert addr9_before_encrypting_data['isactive']\n+\n+        # Imported things are never considered active, no need to rescan\n+        if self.options.descriptors:\n+            nodes[0].importdescriptors([{\n+                \"desc\": \"addr(bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v)\",\n+                \"timestamp\": \"now\"\n+            }])\n+        else:\n+            nodes[0].importaddress(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\", \"label\", False)\n+        import_addr_data = nodes[0].getaddressinfo(\"bcrt1q95gp4zeaah3qcerh35yhw02qeptlzasdtst55v\")\n+        assert not import_addr_data[\"ismine\"]\n+        assert import_addr_data[\"iswatchonly\"] is not self.options.descriptors\n+        assert not import_addr_data[\"isactive\"]\n+\n+        if self.options.descriptors:\n+            nodes[0].importdescriptors([{\n+                \"desc\": \"pk(02f893ca95b0d55b4ce4e72ae94982eb679158cb2ebc120ff62c17fedfd1f0700e)\",\n+                \"timestamp\": \"now\"\n+            }])\n+        else:\n+            nodes[0].importpubkey(\"02f893ca95b0d55b4ce4e72ae94982eb679158cb2ebc120ff62c17fedfd1f0700e\", \"label\", False)\n+        import_pub_data = nodes[0].getaddressinfo(\"bcrt1q4v7a8wn5vqd6fk4026s5gzzxyu7cfzz23n576h\")\n+        assert not import_pub_data[\"ismine\"]\n+        assert import_pub_data[\"iswatchonly\"] is not self.options.descriptors\n+        assert not import_pub_data[\"isactive\"]\n+\n+        nodes[0].importprivkey(\"cPMX7v5CNV1zCphFSq2hnR5rCjzAhA1GsBfD1qrJGdj4QEfu38Qx\", \"label\", False)",
      "path": "test/functional/wallet_keypool.py",
      "position": null,
      "original_position": 93,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        nodes[0].importprivkey(\"cPMX7v5CNV1zCphFSq2hnR5rCjzAhA1GsBfD1qrJGdj4QEfu38Qx\", \"label\", rescan=False)\r\n```",
      "created_at": "2023-04-13T22:34:54Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166090006",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166090006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166092789",
      "pull_request_review_id": 1384012329,
      "id": 1166092789,
      "node_id": "PRRC_kwDOABII585FgSn1",
      "diff_hunk": "@@ -84,50 +161,44 @@ def run_test(self):\n             assert addr_data['hdseedid'] == wallet_info['hdseedid']\n         assert_raises_rpc_error(-12, \"Error: Keypool ran out, please call keypoolrefill first\", nodes[0].getnewaddress)\n \n-        # put six (plus 2) new keys in the keypool (100% external-, +100% internal-keys, 1 in min)\n+        # put two new keys in the keypool\n         nodes[0].walletpassphrase('test', 12000)\n-        nodes[0].keypoolrefill(6)\n+        nodes[0].keypoolrefill(TEST_NEW_KEYPOOL_SIZE)\n         nodes[0].walletlock()\n         wi = nodes[0].getwalletinfo()\n         if self.options.descriptors:\n-            assert_equal(wi['keypoolsize_hd_internal'], 24)\n-            assert_equal(wi['keypoolsize'], 24)\n+            # Descriptors wallet: keypool size applies to both internal and external\n+            # chains and there are four of each (legacy, nested, segwit, and taproot)\n+            assert_equal(wi['keypoolsize_hd_internal'], TEST_NEW_KEYPOOL_SIZE * 4)\n+            assert_equal(wi['keypoolsize'], TEST_NEW_KEYPOOL_SIZE * 4)\n         else:\n-            assert_equal(wi['keypoolsize_hd_internal'], 6)\n-            assert_equal(wi['keypoolsize'], 6)\n+            # Legacy wallet: keypool size applies to both internal and external HD chains\n+            assert_equal(wi['keypoolsize_hd_internal'], TEST_NEW_KEYPOOL_SIZE)\n+            assert_equal(wi['keypoolsize'], TEST_NEW_KEYPOOL_SIZE)\n \n         # drain the internal keys\n-        nodes[0].getrawchangeaddress()\n-        nodes[0].getrawchangeaddress()\n-        nodes[0].getrawchangeaddress()\n-        nodes[0].getrawchangeaddress()\n-        nodes[0].getrawchangeaddress()\n-        nodes[0].getrawchangeaddress()\n-        addr = set()\n+        for _ in range(TEST_NEW_KEYPOOL_SIZE):\n+            nodes[0].getrawchangeaddress()\n         # the next one should fail\n         assert_raises_rpc_error(-12, \"Keypool ran out\", nodes[0].getrawchangeaddress)\n \n         # drain the external keys\n-        addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n-        addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n-        addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n-        addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n-        addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n-        addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n-        assert len(addr) == 6\n+        addr = set()\n+        for _ in range(TEST_NEW_KEYPOOL_SIZE):\n+            addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n         # the next one should fail\n         assert_raises_rpc_error(-12, \"Error: Keypool ran out, please call keypoolrefill first\", nodes[0].getnewaddress)\n \n-        # refill keypool with three new addresses\n+        # refill keypool\n         nodes[0].walletpassphrase('test', 1)\n-        nodes[0].keypoolrefill(3)\n+        nodes[0].keypoolrefill(50)",
      "path": "test/functional/wallet_keypool.py",
      "position": 177,
      "original_position": 175,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It may be nice to add a comment on why the choice of 50 here.",
      "created_at": "2023-04-13T22:40:09Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166092789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166092789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 196,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166097250",
      "pull_request_review_id": 1384012329,
      "id": 1166097250,
      "node_id": "PRRC_kwDOABII585FgTti",
      "diff_hunk": "@@ -392,6 +392,23 @@ std::vector<WalletDestination> LegacyScriptPubKeyMan::MarkUnusedAddresses(const\n     return result;\n }\n \n+[[nodiscard]] bool LegacyScriptPubKeyMan::IsKeyActive(const CScript& script) const",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My understanding is that [[[nodiscard]]](https://en.cppreference.com/w/cpp/language/attributes/nodiscard) only needs to be declared in the declaration (i.e. in the .h file here), not the definition as well (idem for the other functions where it has been added to the definitions in addition to the declarations).",
      "created_at": "2023-04-13T22:48:58Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166097250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166097250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166097539",
      "pull_request_review_id": 1384012329,
      "id": 1166097539,
      "node_id": "PRRC_kwDOABII585FgTyD",
      "diff_hunk": "@@ -2206,6 +2223,11 @@ std::vector<WalletDestination> DescriptorScriptPubKeyMan::MarkUnusedAddresses(co\n     return result;\n }\n \n+[[nodiscard]] bool DescriptorScriptPubKeyMan::IsKeyActive(const CScript& script) const\n+{\n+    return IsMine(script);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, a one-liner like this can just be inlined in the declaration, and omit the definition.",
      "created_at": "2023-04-13T22:49:36Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166097539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166097539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166097803",
      "pull_request_review_id": 1384012329,
      "id": 1166097803,
      "node_id": "PRRC_kwDOABII585FgT2L",
      "diff_hunk": "@@ -673,6 +673,11 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     using ListAddrBookFunc = std::function<void(const CTxDestination& dest, const std::string& label, const std::string& purpose, bool is_change)>;\n     void ForEachAddrBookEntry(const ListAddrBookFunc& func) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    /**\n+     * Determines if a destination is in the active spkm (not imported and not dumped for a new keypool)\n+     */\n+    bool IsDestinationActive(const CTxDestination& dest) const;",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 7,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, can be nodiscard",
      "created_at": "2023-04-13T22:50:14Z",
      "updated_at": "2023-04-13T23:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166097803",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166097803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 679,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166100726",
      "pull_request_review_id": 1384012329,
      "id": 1166100726,
      "node_id": "PRRC_kwDOABII585FgUj2",
      "diff_hunk": "@@ -730,8 +730,11 @@ class PKDescriptor final : public DescriptorImpl\n private:\n     const bool m_xonly;\n protected:\n-    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider&) const override\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript>, FlatSigningProvider& out) const override\n     {\n+        CKeyID id = keys[0].GetID();\n+        out.pubkeys.emplace(id, keys[0]);",
      "path": "src/script/descriptor.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "81f29f03a607cbfb7162705c1c1618ca7b59640e",
      "in_reply_to_id": 1159068107,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As to which one to use here in this new code, rather than following other code, I guess if we're not sure the element exists, use `vector#find` and check presence with `!end()`. If its absence is a program logic error (and to avoid UB), then `vector#at`. If we're sure of presence and optimizing for speed (say, in a hotspot), then `vector#operator[]`.",
      "created_at": "2023-04-13T22:56:18Z",
      "updated_at": "2023-04-13T23:09:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166100726",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166100726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 746,
      "original_line": 746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166118176",
      "pull_request_review_id": 1384371024,
      "id": 1166118176,
      "node_id": "PRRC_kwDOABII585FgY0g",
      "diff_hunk": "@@ -39,5 +39,159 @@ BOOST_AUTO_TEST_CASE(CanProvide)\n     BOOST_CHECK(keyman.CanProvide(p2sh_script, data));\n }\n \n+BOOST_AUTO_TEST_CASE(Legacy_IsKeyActive)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetMinVersion(FEATURE_LATEST);\n+        wallet.m_keypool_size = 10;\n+    }\n+    LegacyScriptPubKeyMan& spkm = *wallet.GetOrCreateLegacyScriptPubKeyMan();\n+\n+    // Start off empty\n+    BOOST_CHECK(spkm.GetScriptPubKeys().empty());\n+\n+    // Generate 20 keypool keys (10 internal, 10 external)\n+    {\n+        LOCK(wallet.cs_wallet);\n+        spkm.SetupGeneration();\n+    }\n+\n+    // 4 scripts per keypool key (P2PK, P2PKH, P2WPKH, P2SH-P2WPKH)\n+    // Plus 4 scripts for the seed key\n+    auto scripts1 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK_EQUAL(scripts1.size(), 84);\n+\n+    // All keys are active\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm.IsKeyActive(script));\n+    }\n+\n+    // Requesting single from spkm should not deactivate key\n+    CTxDestination dest1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        auto result = spkm.GetNewDestination(OutputType::BECH32);\n+        dest1 = result.value();\n+    }\n+    CScript script = GetScriptForDestination(dest1);\n+    BOOST_CHECK(spkm.IsKeyActive(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK_EQUAL(scripts2.size(), 84);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(wallet.cs_wallet);\n+        LOCK(spkm.cs_KeyStore);\n+        auto keys = spkm.MarkReserveKeysAsUsed(5);\n+        BOOST_CHECK_EQUAL(keys.size(), 4); // Because we already used one with GetNewDestination\n+    }\n+\n+    // Key pool size did not change\n+    auto scripts3 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK_EQUAL(scripts3.size(), 84);\n+\n+    // All keys are still active\n+    for (const CScript& script : scripts3) {\n+        BOOST_CHECK(spkm.IsKeyActive(script));\n+    }\n+\n+    // When user encrypts wallet for the first time,\n+    // all existing keys are removed from active keypool\n+    {\n+        LOCK(wallet.cs_wallet);\n+        // called by EncryptWallet()\n+        spkm.SetupGeneration(true);\n+    }\n+\n+    // 20 new keys were added\n+    auto scripts4 = spkm.GetScriptPubKeys();\n+    BOOST_CHECK_EQUAL(scripts4.size(), 84 * 2);\n+\n+    // All 10 original keys are now inactive\n+    for (const CScript& script : scripts3) {\n+        BOOST_CHECK(!spkm.IsKeyActive(script));\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(Descriptor_IsKeyActive)\n+{\n+    CWallet wallet(m_node.chain.get(), \"\", CreateMockWalletDatabase());\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.LoadMinVersion(FEATURE_LATEST);\n+        wallet.SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+        wallet.m_keypool_size = 10;\n+        wallet.SetupDescriptorScriptPubKeyMans();\n+    }\n+    DescriptorScriptPubKeyMan* spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, /*internal=*/false));\n+\n+    // Start off with 10 pre-generated keys, 1 script each\n+    auto scripts1 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK_EQUAL(scripts1.size(), 10);\n+\n+    // All keys are active\n+    for (const CScript& script : scripts1) {\n+        BOOST_CHECK(spkm->IsKeyActive(script));\n+    }\n+\n+    // Requesting single key from spkm should not deactivate key\n+    auto dest1 = spkm->GetNewDestination(OutputType::BECH32);\n+    CScript script = GetScriptForDestination(dest1.value());\n+    BOOST_CHECK(spkm->IsKeyActive(script));\n+\n+    // Key pool size did not change\n+    auto scripts2 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK_EQUAL(scripts2.size(), 10);\n+\n+    // Use key that is not the next key\n+    // (i.e. address gap in wallet recovery)\n+    {\n+        LOCK(spkm->cs_desc_man);\n+        WalletDescriptor descriptor = spkm->GetWalletDescriptor();\n+        FlatSigningProvider provider;\n+        std::vector<CScript> scripts3;\n+        descriptor.descriptor->ExpandFromCache(/*pos=*/5, descriptor.cache, scripts3, provider);\n+\n+        BOOST_CHECK_EQUAL(scripts3.size(), 1);\n+        spkm->MarkUnusedAddresses(scripts3.front());\n+    }\n+\n+    // Key pool size increased to replace used keys\n+    auto scripts4 = spkm->GetScriptPubKeys();\n+    BOOST_CHECK_EQUAL(scripts4.size(), 16);\n+\n+    // All keys are still active\n+    for (const CScript& script : scripts4) {\n+        BOOST_CHECK(spkm->IsKeyActive(script));\n+    }\n+\n+    // When user encrypts wallet for the first time,\n+    // all existing keys are removed from active keypool\n+    {\n+        LOCK(wallet.cs_wallet);\n+        // called by EncryptWallet()\n+        wallet.SetupDescriptorScriptPubKeyMans();\n+    }\n+\n+    // This SPKM is not affected\n+    for (const CScript& script : scripts4) {\n+        BOOST_CHECK(spkm->IsKeyActive(script));\n+    }\n+\n+    // ...but at the wallet level all the keys from that SPKM are deactivated\n+    int num_script_keys_not_found = 0;\n+    for (const CScript& script : scripts4) {\n+        if (!wallet.IsDestinationActive(WitnessV0ScriptHash(script))) {\n+            ++num_script_keys_not_found;\n+        }\n+    }\n+    BOOST_CHECK_EQUAL(num_script_keys_not_found, 16);",
      "path": "src/wallet/test/scriptpubkeyman_tests.cpp",
      "position": 155,
      "original_position": 155,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Another implementation for fun!\r\n\r\n```diff\r\n-    int num_script_keys_not_found = 0;\r\n-    for (const CScript& script : scripts4) {\r\n-        if (!wallet.IsDestinationActive(WitnessV0ScriptHash(script))) {\r\n-            ++num_script_keys_not_found;\r\n-        }\r\n-    }\r\n+    int num_script_keys_not_found = std::accumulate(scripts4.cbegin(), scripts4.cend(), 0, [&wallet] (int n, const CScript& s) { return wallet.IsDestinationActive(WitnessV0ScriptHash(s)) ? n : ++n; });\r\n```\r\n\n(maybe improveable with std::reduce instead)",
      "created_at": "2023-04-13T23:16:43Z",
      "updated_at": "2023-04-14T00:42:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1166118176",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1166118176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 194,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167110228",
      "pull_request_review_id": 1385895881,
      "id": 1167110228,
      "node_id": "PRRC_kwDOABII585FkLBU",
      "diff_hunk": "@@ -392,6 +392,23 @@ std::vector<WalletDestination> LegacyScriptPubKeyMan::MarkUnusedAddresses(const\n     return result;\n }\n \n+[[nodiscard]] bool LegacyScriptPubKeyMan::IsKeyActive(const CScript& script) const",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": 1166097250,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah yeah \"...Appears in a function declaration, enumeration declaration, or class declaration. \"\r\n\r\nbut theres a few leaks in bitcoin...\r\n```\r\n--> git grep nodiscard *.cpp | wc -l\r\n       8\r\n```",
      "created_at": "2023-04-14T17:25:57Z",
      "updated_at": "2023-04-14T17:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1167110228",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167110228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1170606402",
      "pull_request_review_id": 1390989423,
      "id": 1170606402,
      "node_id": "PRRC_kwDOABII585FxglC",
      "diff_hunk": "@@ -392,6 +392,23 @@ std::vector<WalletDestination> LegacyScriptPubKeyMan::MarkUnusedAddresses(const\n     return result;\n }\n \n+[[nodiscard]] bool LegacyScriptPubKeyMan::IsKeyActive(const CScript& script) const",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "b95e2ee9822e58451dbf662cdb2eae4d55431aff",
      "in_reply_to_id": 1166097250,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Interesting, though only 3 of the 8 seem to be extraneous annotations (two in `src/base58.cpp` and one in `src/node/eviction.cpp`, and the one in `src/script/descriptor.cpp` should just have `static` added).",
      "created_at": "2023-04-18T21:57:11Z",
      "updated_at": "2023-04-18T21:57:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1170606402",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1170606402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1170643262",
      "pull_request_review_id": 1391039049,
      "id": 1170643262,
      "node_id": "PRRC_kwDOABII585Fxpk-",
      "diff_hunk": "@@ -198,6 +198,9 @@ class ScriptPubKeyMan\n      */\n     virtual std::vector<WalletDestination> MarkUnusedAddresses(const CScript& script) { return {}; }\n \n+    /* Determines if address is derived from active key manager */\n+    [[nodiscard]] virtual bool IsKeyActive(const CScript& script) const { return false; };",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 5,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "8139075244f1f361a14f80920c45d8c4f41d553e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fb3d39ad3e391da273a142c36 It may make sense to declare this base class member as a pure virtual function. The implementation here seems unused/unnecessary.\r\n```suggestion\r\n    virtual bool IsKeyActive(const CScript& script) const = 0;\r\n```",
      "created_at": "2023-04-18T22:57:39Z",
      "updated_at": "2023-04-18T23:34:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1170643262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1170643262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171399601",
      "pull_request_review_id": 1392157023,
      "id": 1171399601,
      "node_id": "PRRC_kwDOABII585F0iOx",
      "diff_hunk": "@@ -198,6 +198,9 @@ class ScriptPubKeyMan\n      */\n     virtual std::vector<WalletDestination> MarkUnusedAddresses(const CScript& script) { return {}; }\n \n+    /* Determines if address is derived from active key manager */\n+    [[nodiscard]] virtual bool IsKeyActive(const CScript& script) const { return false; };",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 5,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "8139075244f1f361a14f80920c45d8c4f41d553e",
      "in_reply_to_id": 1170643262,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah thanks for the ack, I'll update this and the commit message you mentioned if I need to revise again.",
      "created_at": "2023-04-19T14:06:27Z",
      "updated_at": "2023-04-19T14:06:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1171399601",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171399601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214557458",
      "pull_request_review_id": 1457894930,
      "id": 1214557458,
      "node_id": "PRRC_kwDOABII585IZK0S",
      "diff_hunk": "@@ -198,6 +198,9 @@ class ScriptPubKeyMan\n      */\n     virtual std::vector<WalletDestination> MarkUnusedAddresses(const CScript& script) { return {}; }\n \n+    /* Determines if address is derived from active key manager */\n+    [[nodiscard]] virtual bool IsKeyActive(const CScript& script) const { return false; };",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 5,
      "commit_id": "f7cd46280fefa06f9487a8a2927de093af1d421d",
      "original_commit_id": "8139075244f1f361a14f80920c45d8c4f41d553e",
      "in_reply_to_id": 1170643262,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, both comments addressed with rebase",
      "created_at": "2023-06-02T15:59:48Z",
      "updated_at": "2023-06-02T15:59:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27216#discussion_r1214557458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214557458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27216"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    }
  ]
}