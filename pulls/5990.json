{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990",
    "id": 32992305,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzI5OTIzMDU=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5990",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/5990.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/5990.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fb5b746fce742218ae5d6f285c2936a50897c5db",
    "number": 5990,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "refactor and optimize init.cpp/CWallet interaction",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Reduced wallet/core coupling.\nThis would also slowly lay groundwork for a possible new wallet candidate.\n- hides CWalletDB behind CWallet\n- reduces ENABLE_WALLET ifdefs\n",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2015-04-09T20:20:43Z",
    "updated_at": "2021-09-08T12:01:37Z",
    "closed_at": "2016-04-15T16:34:03Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "62604ad4e94f981ce9d310524cab61b4a5ede135",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "jonasschnelli:2015/04/wallet_init_decoup",
      "ref": "2015/04/wallet_init_decoup",
      "sha": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 9264454,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjY0NDU0",
        "name": "bitcoin",
        "full_name": "jonasschnelli/bitcoin",
        "owner": {
          "login": "jonasschnelli",
          "id": 178464,
          "node_id": "MDQ6VXNlcjE3ODQ2NA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasschnelli",
          "html_url": "https://github.com/jonasschnelli",
          "followers_url": "https://api.github.com/users/jonasschnelli/followers",
          "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
          "repos_url": "https://api.github.com/users/jonasschnelli/repos",
          "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasschnelli/bitcoin",
        "fork": true,
        "url": "https://api.github.com/repos/jonasschnelli/bitcoin",
        "archive_url": "https://api.github.com/repos/jonasschnelli/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasschnelli/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasschnelli/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasschnelli/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jonasschnelli/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasschnelli/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasschnelli/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasschnelli/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasschnelli/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jonasschnelli/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jonasschnelli/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasschnelli/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasschnelli/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasschnelli/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasschnelli/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasschnelli/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jonasschnelli/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasschnelli/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/hooks",
        "svn_url": "https://github.com/jonasschnelli/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 5,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 194164,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-08-07T18:33:53Z",
        "created_at": "2013-04-06T18:21:51Z",
        "updated_at": "2023-05-19T06:34:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "83f0e2249765520b9f974c45811b53c90b0d0ede",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 532,
    "deletions": 319,
    "changed_files": 19,
    "commits": 4,
    "review_comments": 23,
    "comments": 16
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 277533969,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjc3NTMzOTY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/277533969",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-09T20:22:54Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYwOTQ6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYwOTU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYwOTk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMDE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "renamed",
      "id": 277887728,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50Mjc3ODg3NzI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/277887728",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-10T08:07:52Z",
      "rename": {
        "from": "[Wallet] refactor and optimize init.cpp/CWallet interaction",
        "to": "refactor and optimize init.cpp/CWallet interaction"
      }
    },
    {
      "event": "commented",
      "id": 92082054,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkyMDgyMDU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/92082054",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-12T15:36:16Z",
      "updated_at": "2015-04-12T15:36:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "ditto previous PR - code movement in separate commit\n\nconcept ACK\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-92082054",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "commented",
      "id": 92083499,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkyMDgzNDk5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/92083499",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-12T16:01:15Z",
      "updated_at": "2015-04-12T16:01:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Here the moved code did need some adaption. I was trying to make more smaller commits. This was not possible with the fact that every commit should also passes travis (and result in a proper compilable bitcoind/qt)\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-92083499",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "commented",
      "id": 92084010,
      "node_id": "MDEyOklzc3VlQ29tbWVudDkyMDg0MDEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/92084010",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-12T16:07:03Z",
      "updated_at": "2015-04-12T16:07:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "fair enough\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-92084010",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 292942875,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjkyOTQyODc1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/292942875",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-29T12:33:06Z"
    },
    {
      "event": "commented",
      "id": 97414206,
      "node_id": "MDEyOklzc3VlQ29tbWVudDk3NDE0MjA2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/97414206",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-29T12:37:46Z",
      "updated_at": "2015-04-29T12:37:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased.\n\nI'm not sure if i should include another commit which would then completely decouple the wallet over signaling to allow multiple wallet devices:\nhttps://github.com/jonasschnelli/bitcoin/commit/15ccf479f190786d0fc97a0253bfdbd080074ff1#diff-e74648dfe36ec1841b222ca921ad61c0\n\nWith this commit it would be a useful groundwork for ZMQ and a wallet rewriting without breaking the current wallet.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-97414206",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 293953279,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjkzOTUzMjc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/293953279",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-30T12:33:57Z"
    },
    {
      "event": "labeled",
      "id": 297975158,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5Nzk3NTE1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/297975158",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-06T08:03:24Z",
      "label": {
        "name": "Wallet",
        "color": "02d7e1"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 300085501,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAwMDg1NTAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/300085501",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-08T09:32:50Z"
    },
    {
      "event": "commented",
      "id": 100173179,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDE3MzE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/100173179",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-08T09:34:03Z",
      "updated_at": "2015-05-08T09:34:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-100173179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 300098237,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAwMDk4MjM3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/300098237",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-08T09:54:07Z"
    },
    {
      "event": "commented",
      "id": 100178912,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDE3ODkxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/100178912",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-08T09:57:38Z",
      "updated_at": "2015-05-08T09:57:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added another commit on top.\n\nThis would decouple the wallet from the core and would allow to have multiple wallets (validation devices) over signaling.\n\nTogether with https://github.com/bitcoin/bitcoin/pull/5994 it would basically remove (almost) all wallet #ifdefs. The goal is to just have one wallet #ifdef at the point where we register for signals.\n\nIMO this is a massiv step forward of core/wallet separation.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-100178912",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 300156840,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAwMTU2ODQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/300156840",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-05-08T11:28:48Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTgwMzU2YWQ4NjFlY2EyOTQwYjg4ZTYxNDE3YWJhMDYwYjExZGQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e80356ad861eca2940b88e61417aba060b11dd0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9e80356ad861eca2940b88e61417aba060b11dd0",
      "tree": {
        "sha": "257ecdcc3f7e00716293b22c26cc072637ce4ec3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/257ecdcc3f7e00716293b22c26cc072637ce4ec3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1fb0e1075f626ea23d832b07b2070e0638f4215",
          "sha": "c1fb0e1075f626ea23d832b07b2070e0638f4215",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c1fb0e1075f626ea23d832b07b2070e0638f4215"
        }
      ],
      "message": "[Wallet] refactor and optimize init.cpp/CWallet interaction\n\nReduced wallet/core coupling.\n\n- hides CWalletDB behind CWallet\n- reduces ENABLE_WALLET ifdefs",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-15T12:02:50Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-04-09T20:16:04Z"
      },
      "sha": "9e80356ad861eca2940b88e61417aba060b11dd0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTRjZjMzNmZhYjk4NGY1YTQxNWRmNTk0ODk0ZmRhNzJjNGQ0NjRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/294cf336fab984f5a415df594894fda72c4d464b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/294cf336fab984f5a415df594894fda72c4d464b",
      "tree": {
        "sha": "969f5cabe44ebb8affe526c49e1e9e1215889017",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/969f5cabe44ebb8affe526c49e1e9e1215889017"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e80356ad861eca2940b88e61417aba060b11dd0",
          "sha": "9e80356ad861eca2940b88e61417aba060b11dd0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9e80356ad861eca2940b88e61417aba060b11dd0"
        }
      ],
      "message": "[squashme] remove whitespace",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-15T12:03:43Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-04-30T12:33:02Z"
      },
      "sha": "294cf336fab984f5a415df594894fda72c4d464b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWQ4OWFhMDllZmJkZjZlMmE4NjhjMTM2YjM5ZDI1ZGI4MjQzMDAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95d89aa09efbdf6e2a868c136b39d25db8243000",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/95d89aa09efbdf6e2a868c136b39d25db8243000",
      "tree": {
        "sha": "daccd903f1c236806b19d97234e1753414abe8ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/daccd903f1c236806b19d97234e1753414abe8ab"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/294cf336fab984f5a415df594894fda72c4d464b",
          "sha": "294cf336fab984f5a415df594894fda72c4d464b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/294cf336fab984f5a415df594894fda72c4d464b"
        }
      ],
      "message": "[squashme] remove overwriting/bypassing of member variable",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-15T12:03:43Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-04-10T20:31:25Z"
      },
      "sha": "95d89aa09efbdf6e2a868c136b39d25db8243000"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjViNzQ2ZmNlNzQyMjE4YWU1ZDZmMjg1YzI5MzZhNTA4OTdjNWRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb5b746fce742218ae5d6f285c2936a50897c5db",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fb5b746fce742218ae5d6f285c2936a50897c5db",
      "tree": {
        "sha": "019734e3f3368c661ced3e959f991d03b9db2e89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/019734e3f3368c661ced3e959f991d03b9db2e89"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95d89aa09efbdf6e2a868c136b39d25db8243000",
          "sha": "95d89aa09efbdf6e2a868c136b39d25db8243000",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/95d89aa09efbdf6e2a868c136b39d25db8243000"
        }
      ],
      "message": "decouple wallet from core, allow multiple wallets through signaling",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-15T12:28:08Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-05-08T09:39:52Z"
      },
      "sha": "fb5b746fce742218ae5d6f285c2936a50897c5db"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 330967394,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMwOTY3Mzk0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/330967394",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-15T12:28:18Z"
    },
    {
      "event": "commented",
      "id": 112057572,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExMjA1NzU3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112057572",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-15T12:53:28Z",
      "updated_at": "2015-06-15T12:53:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-112057572",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMDQ6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMDg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMTI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 112064286,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExMjA2NDI4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112064286",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-15T13:09:51Z",
      "updated_at": "2015-06-15T13:09:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Travis issue seems to be non-related to this PR (race condition)\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-112064286",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMTY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "head_ref_force_pushed",
      "id": 332252490,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMyMjUyNDkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/332252490",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-16T16:04:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 332254296,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMyMjU0Mjk2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/332254296",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-16T16:06:15Z"
    },
    {
      "event": "commented",
      "id": 112524096,
      "node_id": "MDEyOklzc3VlQ29tbWVudDExMjUyNDA5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112524096",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-16T18:38:59Z",
      "updated_at": "2015-06-16T18:38:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased this PR.\nThis PR is required to support two (or more) wallet implementations. This PR would allow to selective compile-in a potential 2nd wallet code.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-112524096",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 332402070,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMyNDAyMDcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/332402070",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-16T18:43:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 332402553,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMyNDAyNTUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/332402553",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-16T18:44:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 332403379,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMyNDAzMzc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/332403379",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-16T18:45:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 332403713,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMyNDAzNzEz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/332403713",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-16T18:45:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 335557165,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM1NTU3MTY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/335557165",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-06-19T19:36:11Z"
    },
    {
      "event": "commented",
      "id": 140490109,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDQ5MDEwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/140490109",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-15T18:24:10Z",
      "updated_at": "2015-09-15T18:24:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "ut ACK - this seems a reasonable refactor to merge soonish even considering my comments on bitcoin-dev about refactoring - @jonasschnelli seems like the main person working on improving CoreWallet right now, so downstream developer breakage seems unlikely.\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-140490109",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "mentioned",
      "id": 410117254,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEwMTE3MjU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/410117254",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-15T18:24:10Z"
    },
    {
      "event": "subscribed",
      "id": 410117255,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMDExNzI1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/410117255",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-15T18:24:10Z"
    },
    {
      "event": "commented",
      "id": 140492372,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDQ5MjM3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/140492372",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-15T18:33:05Z",
      "updated_at": "2015-09-15T18:33:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "This would be a major step in decoupling the wallet from the core (codebase and not process decoupling). I'm ready to continue, but would like to get some concept ACK because this PR is itself relatively \"heavy\" and requires rebases all the time because it moves code away from `init.cpp` where often changes happen.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-140492372",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMTk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMjM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMjc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMzE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMzU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxMzg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxNDM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxNDU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxNDk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjE1OTYxNTI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 140648948,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDY0ODk0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/140648948",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-16T07:00:51Z",
      "updated_at": "2015-10-21T22:17:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK,  will review some point soon\n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-140648948",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "commented",
      "id": 150040345,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDA0MDM0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150040345",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-21T22:16:38Z",
      "updated_at": "2015-10-21T22:17:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "light utACK,  will review again after rebase @jonasschnelli \n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-150040345",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "mentioned",
      "id": 442057849,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQyMDU3ODQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/442057849",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-21T22:17:40Z"
    },
    {
      "event": "subscribed",
      "id": 442057850,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MjA1Nzg1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/442057850",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-21T22:17:40Z"
    },
    {
      "event": "commented",
      "id": 160336915,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDMzNjkxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160336915",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-28T21:28:36Z",
      "updated_at": "2015-11-28T21:28:36Z",
      "author_association": "MEMBER",
      "body": "Needs rebase.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-160336915",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "commented",
      "id": 210480043,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDQ4MDA0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/210480043",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-15T14:19:26Z",
      "updated_at": "2016-04-15T14:19:26Z",
      "author_association": "MEMBER",
      "body": "Is this pull still relevant with recent wallet/init.cpp changes? If so needs rebase, otherwise let's close\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-210480043",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "commented",
      "id": 210533990,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDUzMzk5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/210533990",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-15T16:34:03Z",
      "updated_at": "2016-04-15T16:34:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Right. Closing. #7691 (merged) did contain most of this changes (a slightly different concept though).\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#issuecomment-210533990",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5990"
    },
    {
      "event": "closed",
      "id": 629179436,
      "node_id": "MDExOkNsb3NlZEV2ZW50NjI5MTc5NDM2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/629179436",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-15T16:34:03Z"
    },
    {
      "event": "locked",
      "id": 5271840197,
      "node_id": "LOE_lADOABII584EBRjdzwAAAAE6OeXF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271840197",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:01:37Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124205",
      "pull_request_review_id": null,
      "id": 28124205,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTI0MjA1",
      "diff_hunk": "@@ -1111,141 +1053,23 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n-    if (fDisableWallet) {\n+    if (CWallet::IsDisabled()) {\n         pwalletMain = NULL;\n         LogPrintf(\"Wallet disabled!\\n\");\n     } else {\n-\n-        // needed to restore wallet transaction meta data after -zapwallettxes\n-        std::vector<CWalletTx> vWtx;\n-\n-        if (GetBoolArg(\"-zapwallettxes\", false)) {\n-            uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n-\n-            pwalletMain = new CWallet(strWalletFile);\n-            DBErrors nZapWalletRet = pwalletMain->ZapWalletTx(vWtx);\n-            if (nZapWalletRet != DB_LOAD_OK) {\n-                uiInterface.InitMessage(_(\"Error loading wallet.dat: Wallet corrupted\"));\n-                return false;\n-            }\n-\n-            delete pwalletMain;\n-            pwalletMain = NULL;\n-        }\n-\n         uiInterface.InitMessage(_(\"Loading wallet...\"));\n-\n-        nStart = GetTimeMillis();\n-        bool fFirstRun = true;\n-        pwalletMain = new CWallet(strWalletFile);\n-        DBErrors nLoadWalletRet = pwalletMain->LoadWallet(fFirstRun);\n-        if (nLoadWalletRet != DB_LOAD_OK)\n-        {\n-            if (nLoadWalletRet == DB_CORRUPT)\n-                strErrors << _(\"Error loading wallet.dat: Wallet corrupted\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NONCRITICAL_ERROR)\n-            {\n-                string msg(_(\"Warning: error reading wallet.dat! All keys read correctly, but transaction data\"\n-                             \" or address book entries might be missing or incorrect.\"));\n-                InitWarning(msg);\n-            }\n-            else if (nLoadWalletRet == DB_TOO_NEW)\n-                strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin Core\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NEED_REWRITE)\n-            {\n-                strErrors << _(\"Wallet needed to be rewritten: restart Bitcoin Core to complete\") << \"\\n\";\n-                LogPrintf(\"%s\", strErrors.str());\n-                return InitError(strErrors.str());\n-            }\n-            else\n-                strErrors << _(\"Error loading wallet.dat\") << \"\\n\";\n-        }\n-\n-        if (GetBoolArg(\"-upgradewallet\", fFirstRun))\n-        {\n-            int nMaxVersion = GetArg(\"-upgradewallet\", 0);\n-            if (nMaxVersion == 0) // the -upgradewallet without argument case\n-            {\n-                LogPrintf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n-                nMaxVersion = CLIENT_VERSION;\n-                pwalletMain->SetMinVersion(FEATURE_LATEST); // permanently upgrade the wallet immediately\n-            }\n-            else\n-                LogPrintf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n-            if (nMaxVersion < pwalletMain->GetVersion())\n-                strErrors << _(\"Cannot downgrade wallet\") << \"\\n\";\n-            pwalletMain->SetMaxVersion(nMaxVersion);\n-        }\n-\n-        if (fFirstRun)\n-        {\n-            // Create new keyUser and set as default key\n-            RandAddSeedPerfmon();\n-\n-            CPubKey newDefaultKey;\n-            if (pwalletMain->GetKeyFromPool(newDefaultKey)) {\n-                pwalletMain->SetDefaultKey(newDefaultKey);\n-                if (!pwalletMain->SetAddressBook(pwalletMain->vchDefaultKey.GetID(), \"\", \"receive\"))\n-                    strErrors << _(\"Cannot write default address\") << \"\\n\";\n-            }\n-\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-        }\n-\n-        LogPrintf(\"%s\", strErrors.str());\n-        LogPrintf(\" wallet      %15dms\\n\", GetTimeMillis() - nStart);\n-\n-        RegisterValidationInterface(pwalletMain);\n-\n-        CBlockIndex *pindexRescan = chainActive.Tip();\n-        if (GetBoolArg(\"-rescan\", false))\n-            pindexRescan = chainActive.Genesis();\n-        else\n-        {\n-            CWalletDB walletdb(strWalletFile);\n-            CBlockLocator locator;\n-            if (walletdb.ReadBestBlock(locator))\n-                pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n-            else\n-                pindexRescan = chainActive.Genesis();\n-        }\n-        if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n-        {\n-            uiInterface.InitMessage(_(\"Rescanning...\"));\n-            LogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", chainActive.Height() - pindexRescan->nHeight, pindexRescan->nHeight);\n-            nStart = GetTimeMillis();\n-            pwalletMain->ScanForWalletTransactions(pindexRescan, true);\n-            LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-            nWalletDBUpdated++;\n-\n-            // Restore wallet transaction metadata after -zapwallettxes=1\n-            if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")\n-            {\n-                CWalletDB walletdb(strWalletFile);\n-\n-                BOOST_FOREACH(const CWalletTx& wtxOld, vWtx)\n-                {\n-                    uint256 hash = wtxOld.GetHash();\n-                    std::map<uint256, CWalletTx>::iterator mi = pwalletMain->mapWallet.find(hash);\n-                    if (mi != pwalletMain->mapWallet.end())\n-                    {\n-                        const CWalletTx* copyFrom = &wtxOld;\n-                        CWalletTx* copyTo = &mi->second;\n-                        copyTo->mapValue = copyFrom->mapValue;\n-                        copyTo->vOrderForm = copyFrom->vOrderForm;\n-                        copyTo->nTimeReceived = copyFrom->nTimeReceived;\n-                        copyTo->nTimeSmart = copyFrom->nTimeSmart;\n-                        copyTo->fFromMe = copyFrom->fFromMe;\n-                        copyTo->strFromAccount = copyFrom->strFromAccount;\n-                        copyTo->nOrderPos = copyFrom->nOrderPos;\n-                        copyTo->WriteToDisk(&walletdb);\n-                    }\n-                }\n-            }\n-        }\n-        pwalletMain->SetBroadcastTransactions(GetBoolArg(\"-walletbroadcast\", true));\n-    } // (!fDisableWallet)\n+        pwalletMain = new CWallet();\n+        \n+        std::string warningString, errorString;\n+        \n+        if(!pwalletMain->LoadWallet(warningString, errorString))",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 298,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "4e5c56ebade15e2018a0bb1e4c5fc4b4c61760eb",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would a `!pwalletMain` help with a NULL pointer here?\n",
      "created_at": "2015-04-10T06:15:45Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r28124205",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124307",
      "pull_request_review_id": null,
      "id": 28124307,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTI0MzA3",
      "diff_hunk": "@@ -908,6 +911,100 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::IsDisabled()\n+{\n+    return GetBoolArg(\"-disablewallet\", false);\n+}\n+\n+void CWallet::MapParameters(string& warningString, string& errorString)\n+{\n+    if (mapArgs.count(\"-mintxfee\"))\n+    {\n+        CAmount n = 0;\n+        if (ParseMoney(mapArgs[\"-mintxfee\"], n) && n > 0)\n+            CWallet::minTxFee = CFeeRate(n);\n+        else\n+        {\n+            errorString += strprintf(_(\"Invalid amount for -mintxfee=<amount>: '%s'\"), mapArgs[\"-mintxfee\"]);\n+            return;\n+        }\n+        \n+    }\n+    if (mapArgs.count(\"-paytxfee\"))\n+    {\n+        CAmount nFeePerK = 0;\n+        if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n+            errorString += strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s'\"), mapArgs[\"-paytxfee\"]); return;\n+        if (nFeePerK > nHighTransactionFeeWarning)\n+            warningString += _(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"); return;\n+        payTxFee = CFeeRate(nFeePerK, 1000);\n+        if (payTxFee < ::minRelayTxFee)\n+            errorString += strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\"),\n+                                     mapArgs[\"-paytxfee\"], ::minRelayTxFee.ToString()); return;\n+    }\n+    if (mapArgs.count(\"-maxtxfee\"))\n+    {\n+        CAmount nMaxFee = 0;\n+        if (!ParseMoney(mapArgs[\"-maxtxfee\"], nMaxFee))\n+            errorString += strprintf(_(\"Invalid amount for -maxtxfee=<amount>: '%s'\"), mapArgs[\"-maptxfee\"]); return;\n+        if (nMaxFee > nHighTransactionMaxFeeWarning)\n+            warningString += _(\"Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.\"); return;\n+        maxTxFee = nMaxFee;\n+        if (CFeeRate(maxTxFee, 1000) < ::minRelayTxFee)\n+             errorString += strprintf(_(\"Invalid amount for -maxtxfee=<amount>: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)\"), mapArgs[\"-maxtxfee\"], ::minRelayTxFee.ToString()); return;\n+    }\n+    nTxConfirmTarget = GetArg(\"-txconfirmtarget\", 1);\n+    bSpendZeroConfChange = GetArg(\"-spendzeroconfchange\", true);\n+    fSendFreeTransactions = GetArg(\"-sendfreetransactions\", false);\n+}\n+\n+std::string CWallet::GetWalletFile()\n+{\n+    return GetArg(\"-wallet\", \"wallet.dat\");\n+}\n+\n+void CWallet::SanityCheck(string& errorString)\n+{\n+    std::string strWalletFile = GetWalletFile();\n+    // Wallet file must be a plain filename without a directory\n+    if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n+        errorString += strprintf(_(\"Wallet %s resides outside data directory\"), strWalletFile);\n+}\n+\n+void CWallet::LogGeneralInfos()\n+{\n+    LogPrintf(\"Using BerkeleyDB version %s\\n\", DbEnv::version(0, 0, 0));\n+}\n+void CWallet::LogInfos() const",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "4e5c56ebade15e2018a0bb1e4c5fc4b4c61760eb",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Missing new-line :).\n",
      "created_at": "2015-04-10T06:18:56Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r28124307",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124326",
      "pull_request_review_id": null,
      "id": 28124326,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTI0MzI2",
      "diff_hunk": "@@ -1111,141 +1053,23 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n-    if (fDisableWallet) {\n+    if (CWallet::IsDisabled()) {\n         pwalletMain = NULL;\n         LogPrintf(\"Wallet disabled!\\n\");\n     } else {\n-\n-        // needed to restore wallet transaction meta data after -zapwallettxes\n-        std::vector<CWalletTx> vWtx;\n-\n-        if (GetBoolArg(\"-zapwallettxes\", false)) {\n-            uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n-\n-            pwalletMain = new CWallet(strWalletFile);\n-            DBErrors nZapWalletRet = pwalletMain->ZapWalletTx(vWtx);\n-            if (nZapWalletRet != DB_LOAD_OK) {\n-                uiInterface.InitMessage(_(\"Error loading wallet.dat: Wallet corrupted\"));\n-                return false;\n-            }\n-\n-            delete pwalletMain;\n-            pwalletMain = NULL;\n-        }\n-\n         uiInterface.InitMessage(_(\"Loading wallet...\"));\n-\n-        nStart = GetTimeMillis();\n-        bool fFirstRun = true;\n-        pwalletMain = new CWallet(strWalletFile);\n-        DBErrors nLoadWalletRet = pwalletMain->LoadWallet(fFirstRun);\n-        if (nLoadWalletRet != DB_LOAD_OK)\n-        {\n-            if (nLoadWalletRet == DB_CORRUPT)\n-                strErrors << _(\"Error loading wallet.dat: Wallet corrupted\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NONCRITICAL_ERROR)\n-            {\n-                string msg(_(\"Warning: error reading wallet.dat! All keys read correctly, but transaction data\"\n-                             \" or address book entries might be missing or incorrect.\"));\n-                InitWarning(msg);\n-            }\n-            else if (nLoadWalletRet == DB_TOO_NEW)\n-                strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin Core\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NEED_REWRITE)\n-            {\n-                strErrors << _(\"Wallet needed to be rewritten: restart Bitcoin Core to complete\") << \"\\n\";\n-                LogPrintf(\"%s\", strErrors.str());\n-                return InitError(strErrors.str());\n-            }\n-            else\n-                strErrors << _(\"Error loading wallet.dat\") << \"\\n\";\n-        }\n-\n-        if (GetBoolArg(\"-upgradewallet\", fFirstRun))\n-        {\n-            int nMaxVersion = GetArg(\"-upgradewallet\", 0);\n-            if (nMaxVersion == 0) // the -upgradewallet without argument case\n-            {\n-                LogPrintf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n-                nMaxVersion = CLIENT_VERSION;\n-                pwalletMain->SetMinVersion(FEATURE_LATEST); // permanently upgrade the wallet immediately\n-            }\n-            else\n-                LogPrintf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n-            if (nMaxVersion < pwalletMain->GetVersion())\n-                strErrors << _(\"Cannot downgrade wallet\") << \"\\n\";\n-            pwalletMain->SetMaxVersion(nMaxVersion);\n-        }\n-\n-        if (fFirstRun)\n-        {\n-            // Create new keyUser and set as default key\n-            RandAddSeedPerfmon();\n-\n-            CPubKey newDefaultKey;\n-            if (pwalletMain->GetKeyFromPool(newDefaultKey)) {\n-                pwalletMain->SetDefaultKey(newDefaultKey);\n-                if (!pwalletMain->SetAddressBook(pwalletMain->vchDefaultKey.GetID(), \"\", \"receive\"))\n-                    strErrors << _(\"Cannot write default address\") << \"\\n\";\n-            }\n-\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-        }\n-\n-        LogPrintf(\"%s\", strErrors.str());\n-        LogPrintf(\" wallet      %15dms\\n\", GetTimeMillis() - nStart);\n-\n-        RegisterValidationInterface(pwalletMain);\n-\n-        CBlockIndex *pindexRescan = chainActive.Tip();\n-        if (GetBoolArg(\"-rescan\", false))\n-            pindexRescan = chainActive.Genesis();\n-        else\n-        {\n-            CWalletDB walletdb(strWalletFile);\n-            CBlockLocator locator;\n-            if (walletdb.ReadBestBlock(locator))\n-                pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n-            else\n-                pindexRescan = chainActive.Genesis();\n-        }\n-        if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n-        {\n-            uiInterface.InitMessage(_(\"Rescanning...\"));\n-            LogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", chainActive.Height() - pindexRescan->nHeight, pindexRescan->nHeight);\n-            nStart = GetTimeMillis();\n-            pwalletMain->ScanForWalletTransactions(pindexRescan, true);\n-            LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-            nWalletDBUpdated++;\n-\n-            // Restore wallet transaction metadata after -zapwallettxes=1\n-            if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")\n-            {\n-                CWalletDB walletdb(strWalletFile);\n-\n-                BOOST_FOREACH(const CWalletTx& wtxOld, vWtx)\n-                {\n-                    uint256 hash = wtxOld.GetHash();\n-                    std::map<uint256, CWalletTx>::iterator mi = pwalletMain->mapWallet.find(hash);\n-                    if (mi != pwalletMain->mapWallet.end())\n-                    {\n-                        const CWalletTx* copyFrom = &wtxOld;\n-                        CWalletTx* copyTo = &mi->second;\n-                        copyTo->mapValue = copyFrom->mapValue;\n-                        copyTo->vOrderForm = copyFrom->vOrderForm;\n-                        copyTo->nTimeReceived = copyFrom->nTimeReceived;\n-                        copyTo->nTimeSmart = copyFrom->nTimeSmart;\n-                        copyTo->fFromMe = copyFrom->fFromMe;\n-                        copyTo->strFromAccount = copyFrom->strFromAccount;\n-                        copyTo->nOrderPos = copyFrom->nOrderPos;\n-                        copyTo->WriteToDisk(&walletdb);\n-                    }\n-                }\n-            }\n-        }\n-        pwalletMain->SetBroadcastTransactions(GetBoolArg(\"-walletbroadcast\", true));\n-    } // (!fDisableWallet)\n+        pwalletMain = new CWallet();\n+        \n+        std::string warningString, errorString;\n+        \n+        if(!pwalletMain->LoadWallet(warningString, errorString))\n+            return false;\n+        \n+        if (!warningString.empty())\n+            InitWarning(warningString);\n+        if (!errorString.empty())\n+            return InitError(errorString);\n+    }\n #else // ENABLE_WALLET\n     LogPrintf(\"No wallet compiled in!\\n\");",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 307,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "4e5c56ebade15e2018a0bb1e4c5fc4b4c61760eb",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I always wanted this to change into `No wallet support compiled in!`, what do you think?\n",
      "created_at": "2015-04-10T06:19:50Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r28124326",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124454",
      "pull_request_review_id": null,
      "id": 28124454,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTI0NDU0",
      "diff_hunk": "@@ -1111,141 +1053,23 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n-    if (fDisableWallet) {\n+    if (CWallet::IsDisabled()) {\n         pwalletMain = NULL;\n         LogPrintf(\"Wallet disabled!\\n\");\n     } else {\n-\n-        // needed to restore wallet transaction meta data after -zapwallettxes\n-        std::vector<CWalletTx> vWtx;\n-\n-        if (GetBoolArg(\"-zapwallettxes\", false)) {\n-            uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n-\n-            pwalletMain = new CWallet(strWalletFile);\n-            DBErrors nZapWalletRet = pwalletMain->ZapWalletTx(vWtx);\n-            if (nZapWalletRet != DB_LOAD_OK) {\n-                uiInterface.InitMessage(_(\"Error loading wallet.dat: Wallet corrupted\"));\n-                return false;\n-            }\n-\n-            delete pwalletMain;\n-            pwalletMain = NULL;\n-        }\n-\n         uiInterface.InitMessage(_(\"Loading wallet...\"));\n-\n-        nStart = GetTimeMillis();\n-        bool fFirstRun = true;\n-        pwalletMain = new CWallet(strWalletFile);\n-        DBErrors nLoadWalletRet = pwalletMain->LoadWallet(fFirstRun);\n-        if (nLoadWalletRet != DB_LOAD_OK)\n-        {\n-            if (nLoadWalletRet == DB_CORRUPT)\n-                strErrors << _(\"Error loading wallet.dat: Wallet corrupted\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NONCRITICAL_ERROR)\n-            {\n-                string msg(_(\"Warning: error reading wallet.dat! All keys read correctly, but transaction data\"\n-                             \" or address book entries might be missing or incorrect.\"));\n-                InitWarning(msg);\n-            }\n-            else if (nLoadWalletRet == DB_TOO_NEW)\n-                strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin Core\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NEED_REWRITE)\n-            {\n-                strErrors << _(\"Wallet needed to be rewritten: restart Bitcoin Core to complete\") << \"\\n\";\n-                LogPrintf(\"%s\", strErrors.str());\n-                return InitError(strErrors.str());\n-            }\n-            else\n-                strErrors << _(\"Error loading wallet.dat\") << \"\\n\";\n-        }\n-\n-        if (GetBoolArg(\"-upgradewallet\", fFirstRun))\n-        {\n-            int nMaxVersion = GetArg(\"-upgradewallet\", 0);\n-            if (nMaxVersion == 0) // the -upgradewallet without argument case\n-            {\n-                LogPrintf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n-                nMaxVersion = CLIENT_VERSION;\n-                pwalletMain->SetMinVersion(FEATURE_LATEST); // permanently upgrade the wallet immediately\n-            }\n-            else\n-                LogPrintf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n-            if (nMaxVersion < pwalletMain->GetVersion())\n-                strErrors << _(\"Cannot downgrade wallet\") << \"\\n\";\n-            pwalletMain->SetMaxVersion(nMaxVersion);\n-        }\n-\n-        if (fFirstRun)\n-        {\n-            // Create new keyUser and set as default key\n-            RandAddSeedPerfmon();\n-\n-            CPubKey newDefaultKey;\n-            if (pwalletMain->GetKeyFromPool(newDefaultKey)) {\n-                pwalletMain->SetDefaultKey(newDefaultKey);\n-                if (!pwalletMain->SetAddressBook(pwalletMain->vchDefaultKey.GetID(), \"\", \"receive\"))\n-                    strErrors << _(\"Cannot write default address\") << \"\\n\";\n-            }\n-\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-        }\n-\n-        LogPrintf(\"%s\", strErrors.str());\n-        LogPrintf(\" wallet      %15dms\\n\", GetTimeMillis() - nStart);\n-\n-        RegisterValidationInterface(pwalletMain);\n-\n-        CBlockIndex *pindexRescan = chainActive.Tip();\n-        if (GetBoolArg(\"-rescan\", false))\n-            pindexRescan = chainActive.Genesis();\n-        else\n-        {\n-            CWalletDB walletdb(strWalletFile);\n-            CBlockLocator locator;\n-            if (walletdb.ReadBestBlock(locator))\n-                pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n-            else\n-                pindexRescan = chainActive.Genesis();\n-        }\n-        if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n-        {\n-            uiInterface.InitMessage(_(\"Rescanning...\"));\n-            LogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", chainActive.Height() - pindexRescan->nHeight, pindexRescan->nHeight);\n-            nStart = GetTimeMillis();\n-            pwalletMain->ScanForWalletTransactions(pindexRescan, true);\n-            LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-            nWalletDBUpdated++;\n-\n-            // Restore wallet transaction metadata after -zapwallettxes=1\n-            if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")\n-            {\n-                CWalletDB walletdb(strWalletFile);\n-\n-                BOOST_FOREACH(const CWalletTx& wtxOld, vWtx)\n-                {\n-                    uint256 hash = wtxOld.GetHash();\n-                    std::map<uint256, CWalletTx>::iterator mi = pwalletMain->mapWallet.find(hash);\n-                    if (mi != pwalletMain->mapWallet.end())\n-                    {\n-                        const CWalletTx* copyFrom = &wtxOld;\n-                        CWalletTx* copyTo = &mi->second;\n-                        copyTo->mapValue = copyFrom->mapValue;\n-                        copyTo->vOrderForm = copyFrom->vOrderForm;\n-                        copyTo->nTimeReceived = copyFrom->nTimeReceived;\n-                        copyTo->nTimeSmart = copyFrom->nTimeSmart;\n-                        copyTo->fFromMe = copyFrom->fFromMe;\n-                        copyTo->strFromAccount = copyFrom->strFromAccount;\n-                        copyTo->nOrderPos = copyFrom->nOrderPos;\n-                        copyTo->WriteToDisk(&walletdb);\n-                    }\n-                }\n-            }\n-        }\n-        pwalletMain->SetBroadcastTransactions(GetBoolArg(\"-walletbroadcast\", true));\n-    } // (!fDisableWallet)\n+        pwalletMain = new CWallet();\n+        \n+        std::string warningString, errorString;\n+        \n+        if(!pwalletMain->LoadWallet(warningString, errorString))",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 298,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "4e5c56ebade15e2018a0bb1e4c5fc4b4c61760eb",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's within a `if (CWallet::IsDisabled())` else control structure. pwalletMain can't be NULL there. But i assume it won't hurt adding a `!pwalletMain`\n",
      "created_at": "2015-04-10T06:23:34Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r28124454",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124516",
      "pull_request_review_id": null,
      "id": 28124516,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTI0NTE2",
      "diff_hunk": "@@ -1111,141 +1053,23 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n-    if (fDisableWallet) {\n+    if (CWallet::IsDisabled()) {\n         pwalletMain = NULL;\n         LogPrintf(\"Wallet disabled!\\n\");\n     } else {\n-\n-        // needed to restore wallet transaction meta data after -zapwallettxes\n-        std::vector<CWalletTx> vWtx;\n-\n-        if (GetBoolArg(\"-zapwallettxes\", false)) {\n-            uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n-\n-            pwalletMain = new CWallet(strWalletFile);\n-            DBErrors nZapWalletRet = pwalletMain->ZapWalletTx(vWtx);\n-            if (nZapWalletRet != DB_LOAD_OK) {\n-                uiInterface.InitMessage(_(\"Error loading wallet.dat: Wallet corrupted\"));\n-                return false;\n-            }\n-\n-            delete pwalletMain;\n-            pwalletMain = NULL;\n-        }\n-\n         uiInterface.InitMessage(_(\"Loading wallet...\"));\n-\n-        nStart = GetTimeMillis();\n-        bool fFirstRun = true;\n-        pwalletMain = new CWallet(strWalletFile);\n-        DBErrors nLoadWalletRet = pwalletMain->LoadWallet(fFirstRun);\n-        if (nLoadWalletRet != DB_LOAD_OK)\n-        {\n-            if (nLoadWalletRet == DB_CORRUPT)\n-                strErrors << _(\"Error loading wallet.dat: Wallet corrupted\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NONCRITICAL_ERROR)\n-            {\n-                string msg(_(\"Warning: error reading wallet.dat! All keys read correctly, but transaction data\"\n-                             \" or address book entries might be missing or incorrect.\"));\n-                InitWarning(msg);\n-            }\n-            else if (nLoadWalletRet == DB_TOO_NEW)\n-                strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin Core\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NEED_REWRITE)\n-            {\n-                strErrors << _(\"Wallet needed to be rewritten: restart Bitcoin Core to complete\") << \"\\n\";\n-                LogPrintf(\"%s\", strErrors.str());\n-                return InitError(strErrors.str());\n-            }\n-            else\n-                strErrors << _(\"Error loading wallet.dat\") << \"\\n\";\n-        }\n-\n-        if (GetBoolArg(\"-upgradewallet\", fFirstRun))\n-        {\n-            int nMaxVersion = GetArg(\"-upgradewallet\", 0);\n-            if (nMaxVersion == 0) // the -upgradewallet without argument case\n-            {\n-                LogPrintf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n-                nMaxVersion = CLIENT_VERSION;\n-                pwalletMain->SetMinVersion(FEATURE_LATEST); // permanently upgrade the wallet immediately\n-            }\n-            else\n-                LogPrintf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n-            if (nMaxVersion < pwalletMain->GetVersion())\n-                strErrors << _(\"Cannot downgrade wallet\") << \"\\n\";\n-            pwalletMain->SetMaxVersion(nMaxVersion);\n-        }\n-\n-        if (fFirstRun)\n-        {\n-            // Create new keyUser and set as default key\n-            RandAddSeedPerfmon();\n-\n-            CPubKey newDefaultKey;\n-            if (pwalletMain->GetKeyFromPool(newDefaultKey)) {\n-                pwalletMain->SetDefaultKey(newDefaultKey);\n-                if (!pwalletMain->SetAddressBook(pwalletMain->vchDefaultKey.GetID(), \"\", \"receive\"))\n-                    strErrors << _(\"Cannot write default address\") << \"\\n\";\n-            }\n-\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-        }\n-\n-        LogPrintf(\"%s\", strErrors.str());\n-        LogPrintf(\" wallet      %15dms\\n\", GetTimeMillis() - nStart);\n-\n-        RegisterValidationInterface(pwalletMain);\n-\n-        CBlockIndex *pindexRescan = chainActive.Tip();\n-        if (GetBoolArg(\"-rescan\", false))\n-            pindexRescan = chainActive.Genesis();\n-        else\n-        {\n-            CWalletDB walletdb(strWalletFile);\n-            CBlockLocator locator;\n-            if (walletdb.ReadBestBlock(locator))\n-                pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n-            else\n-                pindexRescan = chainActive.Genesis();\n-        }\n-        if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n-        {\n-            uiInterface.InitMessage(_(\"Rescanning...\"));\n-            LogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", chainActive.Height() - pindexRescan->nHeight, pindexRescan->nHeight);\n-            nStart = GetTimeMillis();\n-            pwalletMain->ScanForWalletTransactions(pindexRescan, true);\n-            LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-            nWalletDBUpdated++;\n-\n-            // Restore wallet transaction metadata after -zapwallettxes=1\n-            if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")\n-            {\n-                CWalletDB walletdb(strWalletFile);\n-\n-                BOOST_FOREACH(const CWalletTx& wtxOld, vWtx)\n-                {\n-                    uint256 hash = wtxOld.GetHash();\n-                    std::map<uint256, CWalletTx>::iterator mi = pwalletMain->mapWallet.find(hash);\n-                    if (mi != pwalletMain->mapWallet.end())\n-                    {\n-                        const CWalletTx* copyFrom = &wtxOld;\n-                        CWalletTx* copyTo = &mi->second;\n-                        copyTo->mapValue = copyFrom->mapValue;\n-                        copyTo->vOrderForm = copyFrom->vOrderForm;\n-                        copyTo->nTimeReceived = copyFrom->nTimeReceived;\n-                        copyTo->nTimeSmart = copyFrom->nTimeSmart;\n-                        copyTo->fFromMe = copyFrom->fFromMe;\n-                        copyTo->strFromAccount = copyFrom->strFromAccount;\n-                        copyTo->nOrderPos = copyFrom->nOrderPos;\n-                        copyTo->WriteToDisk(&walletdb);\n-                    }\n-                }\n-            }\n-        }\n-        pwalletMain->SetBroadcastTransactions(GetBoolArg(\"-walletbroadcast\", true));\n-    } // (!fDisableWallet)\n+        pwalletMain = new CWallet();\n+        \n+        std::string warningString, errorString;\n+        \n+        if(!pwalletMain->LoadWallet(warningString, errorString))\n+            return false;\n+        \n+        if (!warningString.empty())\n+            InitWarning(warningString);\n+        if (!errorString.empty())\n+            return InitError(errorString);\n+    }\n #else // ENABLE_WALLET\n     LogPrintf(\"No wallet compiled in!\\n\");",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 307,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "4e5c56ebade15e2018a0bb1e4c5fc4b4c61760eb",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd like to keep the log output in the PR as exact as possible to allow log file comparison between this PR and the master. But your string is def. better. Why not open a PR @ trivial?\n",
      "created_at": "2015-04-10T06:26:08Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r28124516",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124537",
      "pull_request_review_id": null,
      "id": 28124537,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTI0NTM3",
      "diff_hunk": "@@ -908,6 +911,100 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::IsDisabled()",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "4e5c56ebade15e2018a0bb1e4c5fc4b4c61760eb",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I deleted my comment after discovering the declaration, sorry ;).\n",
      "created_at": "2015-04-10T06:27:04Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r28124537",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28124537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32416984",
      "pull_request_review_id": null,
      "id": 32416984,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDE2OTg0",
      "diff_hunk": "@@ -0,0 +1,233 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/legacywallet.h\"\n+\n+#include \"main.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n+\n+#include <boost/filesystem.hpp>\n+#include <boost/thread.hpp>\n+\n+CWallet* pwalletMain = NULL;\n+\n+const static std::string DEFAULT_WALLET_FILE = \"wallet.dat\";\n+\n+namespace CLegacyWalletModule {\n+\n+std::string GetWalletFile()\n+{\n+    return GetArg(\"-wallet\", DEFAULT_WALLET_FILE);\n+}\n+\n+void AppendHelpMessageString(std::string& strUsage, bool debugHelp)\n+{\n+    if (debugHelp)\n+    {\n+        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)\", FormatMoney(CWallet::minTxFee.GetFeePerK())));\n+        return;\n+    }\n+\n+    strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n+    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n+    strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in BTC/kB) to add to transactions you send (default: %s)\"), FormatMoney(payTxFee.GetFeePerK())));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n+    strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n+                                                            FormatMoney(maxTxFee)));\n+    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n+    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n+    strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n+    strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n+                               \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n+    strUsage += HelpMessageOpt(\"-gen\", strprintf(_(\"Generate coins (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-genproclimit=<n>\", strprintf(_(\"Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)\"), 1));\n+}\n+    \n+void Flush(bool shutdown)\n+{\n+    if (pwalletMain)\n+        pwalletMain->Flush(shutdown);\n+}\n+\n+void Dealloc()\n+{\n+    delete pwalletMain;\n+    pwalletMain = NULL;\n+}\n+\n+//! Dump wallet infos to log\n+void LogGeneralInfos()\n+{\n+    LogPrintf(\"Using BerkeleyDB version %s\\n\", DbEnv::version(0, 0, 0));\n+}\n+\n+//! Dump wallet infos to log\n+void LogInfos()\n+{\n+    LogPrintf(\"setKeyPool.size() = %u\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n+    LogPrintf(\"mapWallet.size() = %u\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n+    LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+}\n+\n+//! Performs sanity check and appends possible errors to given string\n+void SanityCheck(std::string& errorString)\n+{\n+    std::string strWalletFile = GetWalletFile();\n+    // Wallet file must be a plain filename without a directory\n+    if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n+    errorString += strprintf(_(\"Wallet %s resides outside data directory\"), strWalletFile);\n+}\n+\n+bool IsDisabled()\n+{\n+    return GetBoolArg(\"-disablewallet\", false);\n+}\n+\n+void LoadAsModule(std::string& warningString, std::string& errorString, bool& stopInit)\n+{\n+    if (IsDisabled()) {\n+        pwalletMain = NULL;\n+        LogPrintf(\"Wallet disabled!\\n\");\n+    } else {\n+        uiInterface.InitMessage(_(\"Loading wallet...\"));\n+        pwalletMain = new CWallet(GetWalletFile());\n+        \n+        if (!pwalletMain->LoadWallet(warningString, errorString))\n+            stopInit = true;\n+    }\n+}\n+\n+void Verify(std::string& warningString, std::string& errorString, bool &stopInit)\n+{\n+    if (IsDisabled())\n+        return;\n+    \n+    uiInterface.InitMessage(_(\"Verifying wallet...\"));\n+    \n+    const std::string walletFile = GetWalletFile();\n+    LogPrintf(\"Using wallet %s\\n\", walletFile);\n+    \n+    if (!pwalletMain->Verify(walletFile, warningString, errorString))\n+        stopInit = true;\n+}\n+\n+void MapParameters(std::string& warningString, std::string& errorString)\n+{\n+    if (GetBoolArg(\"-salvagewallet\", false)) {\n+        // Rewrite just private keys: rescan to find transactions\n+        if (SoftSetBoolArg(\"-rescan\", true))\n+            LogPrintf(\"%s: parameter interaction: -salvagewallet=1 -> setting -rescan=1\\n\", __func__);\n+    }\n+\n+    // -zapwallettx implies a rescan\n+    if (GetBoolArg(\"-zapwallettxes\", false)) {\n+        if (SoftSetBoolArg(\"-rescan\", true))\n+            LogPrintf(\"%s: parameter interaction: -zapwallettxes=<mode> -> setting -rescan=1\\n\", __func__);\n+    }\n+\n+    if (mapArgs.count(\"-mintxfee\"))",
      "path": "src/wallet/legacywallet.cpp",
      "position": 139,
      "original_position": 139,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why are we using .count here and not e.g. GetArg()?\n",
      "created_at": "2015-06-15T13:07:17Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r32416984",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32416984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 139,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417098",
      "pull_request_review_id": null,
      "id": 32417098,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDE3MDk4",
      "diff_hunk": "@@ -702,9 +702,16 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     //! Flush wallet (bitdb flush)\n     void Flush(bool shutdown=false);\n \n+    //! Dump wallet infos to log\n+    static void LogInfos();\n+    static void LogGeneralInfos();\n+\n     //! Verify the wallet database and perform salvage if required\n     static bool Verify(const std::string& walletFile, std::string& warningString, std::string& errorString);\n     \n+    static void StartWalletTasks(boost::thread_group& threadGroup);\n+    ",
      "path": "src/wallet/wallet.h",
      "position": 21,
      "original_position": 21,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Unneeded newline\n",
      "created_at": "2015-06-15T13:08:42Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r32417098",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 713,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417116",
      "pull_request_review_id": null,
      "id": 32417116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDE3MTE2",
      "diff_hunk": "@@ -0,0 +1,233 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/legacywallet.h\"\n+\n+#include \"main.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n+\n+#include <boost/filesystem.hpp>\n+#include <boost/thread.hpp>\n+\n+CWallet* pwalletMain = NULL;\n+\n+const static std::string DEFAULT_WALLET_FILE = \"wallet.dat\";\n+\n+namespace CLegacyWalletModule {\n+\n+std::string GetWalletFile()\n+{\n+    return GetArg(\"-wallet\", DEFAULT_WALLET_FILE);\n+}\n+\n+void AppendHelpMessageString(std::string& strUsage, bool debugHelp)\n+{\n+    if (debugHelp)\n+    {\n+        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)\", FormatMoney(CWallet::minTxFee.GetFeePerK())));\n+        return;\n+    }\n+\n+    strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n+    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n+    strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in BTC/kB) to add to transactions you send (default: %s)\"), FormatMoney(payTxFee.GetFeePerK())));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n+    strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n+                                                            FormatMoney(maxTxFee)));\n+    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n+    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n+    strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n+    strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n+                               \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n+    strUsage += HelpMessageOpt(\"-gen\", strprintf(_(\"Generate coins (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-genproclimit=<n>\", strprintf(_(\"Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)\"), 1));\n+}\n+    \n+void Flush(bool shutdown)\n+{\n+    if (pwalletMain)\n+        pwalletMain->Flush(shutdown);\n+}\n+\n+void Dealloc()\n+{\n+    delete pwalletMain;\n+    pwalletMain = NULL;\n+}\n+\n+//! Dump wallet infos to log\n+void LogGeneralInfos()\n+{\n+    LogPrintf(\"Using BerkeleyDB version %s\\n\", DbEnv::version(0, 0, 0));\n+}\n+\n+//! Dump wallet infos to log\n+void LogInfos()\n+{\n+    LogPrintf(\"setKeyPool.size() = %u\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n+    LogPrintf(\"mapWallet.size() = %u\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n+    LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+}\n+\n+//! Performs sanity check and appends possible errors to given string\n+void SanityCheck(std::string& errorString)\n+{\n+    std::string strWalletFile = GetWalletFile();\n+    // Wallet file must be a plain filename without a directory\n+    if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n+    errorString += strprintf(_(\"Wallet %s resides outside data directory\"), strWalletFile);\n+}\n+\n+bool IsDisabled()\n+{\n+    return GetBoolArg(\"-disablewallet\", false);\n+}\n+\n+void LoadAsModule(std::string& warningString, std::string& errorString, bool& stopInit)\n+{\n+    if (IsDisabled()) {\n+        pwalletMain = NULL;\n+        LogPrintf(\"Wallet disabled!\\n\");\n+    } else {\n+        uiInterface.InitMessage(_(\"Loading wallet...\"));\n+        pwalletMain = new CWallet(GetWalletFile());\n+        \n+        if (!pwalletMain->LoadWallet(warningString, errorString))\n+            stopInit = true;\n+    }\n+}\n+\n+void Verify(std::string& warningString, std::string& errorString, bool &stopInit)\n+{\n+    if (IsDisabled())\n+        return;\n+    \n+    uiInterface.InitMessage(_(\"Verifying wallet...\"));\n+    \n+    const std::string walletFile = GetWalletFile();\n+    LogPrintf(\"Using wallet %s\\n\", walletFile);\n+    \n+    if (!pwalletMain->Verify(walletFile, warningString, errorString))\n+        stopInit = true;\n+}\n+\n+void MapParameters(std::string& warningString, std::string& errorString)\n+{\n+    if (GetBoolArg(\"-salvagewallet\", false)) {\n+        // Rewrite just private keys: rescan to find transactions\n+        if (SoftSetBoolArg(\"-rescan\", true))\n+            LogPrintf(\"%s: parameter interaction: -salvagewallet=1 -> setting -rescan=1\\n\", __func__);\n+    }\n+\n+    // -zapwallettx implies a rescan\n+    if (GetBoolArg(\"-zapwallettxes\", false)) {\n+        if (SoftSetBoolArg(\"-rescan\", true))\n+            LogPrintf(\"%s: parameter interaction: -zapwallettxes=<mode> -> setting -rescan=1\\n\", __func__);\n+    }\n+\n+    if (mapArgs.count(\"-mintxfee\"))",
      "path": "src/wallet/legacywallet.cpp",
      "position": 139,
      "original_position": 139,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This code has been moved 1:1 (better review capabilities).\n",
      "created_at": "2015-06-15T13:08:58Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r32417116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 139,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417155",
      "pull_request_review_id": null,
      "id": 32417155,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDE3MTU1",
      "diff_hunk": "@@ -0,0 +1,233 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/legacywallet.h\"\n+\n+#include \"main.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n+\n+#include <boost/filesystem.hpp>\n+#include <boost/thread.hpp>\n+\n+CWallet* pwalletMain = NULL;\n+\n+const static std::string DEFAULT_WALLET_FILE = \"wallet.dat\";\n+\n+namespace CLegacyWalletModule {\n+\n+std::string GetWalletFile()\n+{\n+    return GetArg(\"-wallet\", DEFAULT_WALLET_FILE);\n+}\n+\n+void AppendHelpMessageString(std::string& strUsage, bool debugHelp)\n+{\n+    if (debugHelp)\n+    {\n+        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)\", FormatMoney(CWallet::minTxFee.GetFeePerK())));\n+        return;\n+    }\n+\n+    strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n+    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n+    strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in BTC/kB) to add to transactions you send (default: %s)\"), FormatMoney(payTxFee.GetFeePerK())));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n+    strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n+                                                            FormatMoney(maxTxFee)));\n+    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n+    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n+    strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n+    strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n+                               \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n+    strUsage += HelpMessageOpt(\"-gen\", strprintf(_(\"Generate coins (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-genproclimit=<n>\", strprintf(_(\"Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)\"), 1));\n+}\n+    \n+void Flush(bool shutdown)\n+{\n+    if (pwalletMain)\n+        pwalletMain->Flush(shutdown);\n+}\n+\n+void Dealloc()\n+{\n+    delete pwalletMain;\n+    pwalletMain = NULL;\n+}\n+\n+//! Dump wallet infos to log\n+void LogGeneralInfos()\n+{\n+    LogPrintf(\"Using BerkeleyDB version %s\\n\", DbEnv::version(0, 0, 0));\n+}\n+\n+//! Dump wallet infos to log\n+void LogInfos()\n+{\n+    LogPrintf(\"setKeyPool.size() = %u\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n+    LogPrintf(\"mapWallet.size() = %u\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n+    LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+}\n+\n+//! Performs sanity check and appends possible errors to given string\n+void SanityCheck(std::string& errorString)\n+{\n+    std::string strWalletFile = GetWalletFile();\n+    // Wallet file must be a plain filename without a directory\n+    if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n+    errorString += strprintf(_(\"Wallet %s resides outside data directory\"), strWalletFile);",
      "path": "src/wallet/legacywallet.cpp",
      "position": 89,
      "original_position": 89,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Missing indentation\n",
      "created_at": "2015-06-15T13:09:29Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r32417155",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 89,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417361",
      "pull_request_review_id": null,
      "id": 32417361,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDE3MzYx",
      "diff_hunk": "@@ -0,0 +1,233 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/legacywallet.h\"\n+\n+#include \"main.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n+\n+#include <boost/filesystem.hpp>\n+#include <boost/thread.hpp>\n+\n+CWallet* pwalletMain = NULL;\n+\n+const static std::string DEFAULT_WALLET_FILE = \"wallet.dat\";\n+\n+namespace CLegacyWalletModule {\n+\n+std::string GetWalletFile()\n+{\n+    return GetArg(\"-wallet\", DEFAULT_WALLET_FILE);",
      "path": "src/wallet/legacywallet.cpp",
      "position": 24,
      "original_position": 24,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not that it would matter that much, but how about using a static variable, that would allow to use `GetWalletFile()` without the need to store it into another std::string when using the function, which happens quite a few times.\n",
      "created_at": "2015-06-15T13:11:35Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r32417361",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417403",
      "pull_request_review_id": null,
      "id": 32417403,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDE3NDAz",
      "diff_hunk": "@@ -0,0 +1,233 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/legacywallet.h\"\n+\n+#include \"main.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n+\n+#include <boost/filesystem.hpp>\n+#include <boost/thread.hpp>\n+\n+CWallet* pwalletMain = NULL;\n+\n+const static std::string DEFAULT_WALLET_FILE = \"wallet.dat\";\n+\n+namespace CLegacyWalletModule {\n+\n+std::string GetWalletFile()\n+{\n+    return GetArg(\"-wallet\", DEFAULT_WALLET_FILE);\n+}\n+\n+void AppendHelpMessageString(std::string& strUsage, bool debugHelp)\n+{\n+    if (debugHelp)\n+    {\n+        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)\", FormatMoney(CWallet::minTxFee.GetFeePerK())));\n+        return;\n+    }\n+\n+    strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n+    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n+    strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in BTC/kB) to add to transactions you send (default: %s)\"), FormatMoney(payTxFee.GetFeePerK())));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n+    strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n+                                                            FormatMoney(maxTxFee)));\n+    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n+    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n+    strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n+    strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n+                               \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n+    strUsage += HelpMessageOpt(\"-gen\", strprintf(_(\"Generate coins (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-genproclimit=<n>\", strprintf(_(\"Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)\"), 1));\n+}\n+    \n+void Flush(bool shutdown)\n+{\n+    if (pwalletMain)\n+        pwalletMain->Flush(shutdown);\n+}\n+\n+void Dealloc()\n+{\n+    delete pwalletMain;\n+    pwalletMain = NULL;\n+}\n+\n+//! Dump wallet infos to log\n+void LogGeneralInfos()\n+{\n+    LogPrintf(\"Using BerkeleyDB version %s\\n\", DbEnv::version(0, 0, 0));\n+}\n+\n+//! Dump wallet infos to log\n+void LogInfos()\n+{\n+    LogPrintf(\"setKeyPool.size() = %u\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n+    LogPrintf(\"mapWallet.size() = %u\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n+    LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+}\n+\n+//! Performs sanity check and appends possible errors to given string\n+void SanityCheck(std::string& errorString)\n+{\n+    std::string strWalletFile = GetWalletFile();\n+    // Wallet file must be a plain filename without a directory\n+    if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n+    errorString += strprintf(_(\"Wallet %s resides outside data directory\"), strWalletFile);",
      "path": "src/wallet/legacywallet.cpp",
      "position": 89,
      "original_position": 89,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops. Merge issue. This is even more than a \"nit\". Will fix.\n",
      "created_at": "2015-06-15T13:12:06Z",
      "updated_at": "2015-06-19T19:36:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r32417403",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32417403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 89,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39565887",
      "pull_request_review_id": null,
      "id": 39565887,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1ODg3",
      "diff_hunk": "@@ -940,25 +856,18 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     int64_t nStart;\n \n-    // ********************************************************* Step 5: verify wallet database integrity\n-#ifdef ENABLE_WALLET\n-    if (!fDisableWallet) {\n-        LogPrintf(\"Using wallet %s\\n\", strWalletFile);\n-        uiInterface.InitMessage(_(\"Verifying wallet...\"));\n-\n-        std::string warningString;\n-        std::string errorString;\n-\n-        if (!CWallet::Verify(strWalletFile, warningString, errorString))\n-            return false;\n-\n-        if (!warningString.empty())\n-            InitWarning(warningString);\n-        if (!errorString.empty())\n-            return InitError(warningString);\n-\n-    } // (!fDisableWallet)\n-#endif // ENABLE_WALLET\n+    // ********************************************************* Step 5: verify integrity of connected devices\n+    warningString.clear();",
      "path": "src/init.cpp",
      "position": 250,
      "original_position": 250,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "NIT: Add a newline before this and before the next step?\n",
      "created_at": "2015-09-15T21:11:27Z",
      "updated_at": "2015-09-15T21:11:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39565887",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39565887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 860,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39565924",
      "pull_request_review_id": null,
      "id": 39565924,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1OTI0",
      "diff_hunk": "@@ -940,25 +856,18 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     int64_t nStart;\n \n-    // ********************************************************* Step 5: verify wallet database integrity\n-#ifdef ENABLE_WALLET\n-    if (!fDisableWallet) {\n-        LogPrintf(\"Using wallet %s\\n\", strWalletFile);\n-        uiInterface.InitMessage(_(\"Verifying wallet...\"));\n-\n-        std::string warningString;\n-        std::string errorString;\n-\n-        if (!CWallet::Verify(strWalletFile, warningString, errorString))\n-            return false;\n-\n-        if (!warningString.empty())\n-            InitWarning(warningString);\n-        if (!errorString.empty())\n-            return InitError(warningString);\n-\n-    } // (!fDisableWallet)\n-#endif // ENABLE_WALLET\n+    // ********************************************************* Step 5: verify integrity of connected devices\n+    warningString.clear();\n+    errorString.clear();\n+    bool stopInit = false;\n+    GetMainSignals().VerifyIntegrity(warningString, errorString, stopInit);\n+    if (stopInit)\n+        return false;\n+    \n+    if (!warningString.empty())\n+    InitWarning(warningString);",
      "path": "src/init.cpp",
      "position": 258,
      "original_position": 258,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Missing indentation\n",
      "created_at": "2015-09-15T21:11:43Z",
      "updated_at": "2015-09-15T21:11:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39565924",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39565924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 868,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39565931",
      "pull_request_review_id": null,
      "id": 39565931,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1OTMx",
      "diff_hunk": "@@ -940,25 +856,18 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     int64_t nStart;\n \n-    // ********************************************************* Step 5: verify wallet database integrity\n-#ifdef ENABLE_WALLET\n-    if (!fDisableWallet) {\n-        LogPrintf(\"Using wallet %s\\n\", strWalletFile);\n-        uiInterface.InitMessage(_(\"Verifying wallet...\"));\n-\n-        std::string warningString;\n-        std::string errorString;\n-\n-        if (!CWallet::Verify(strWalletFile, warningString, errorString))\n-            return false;\n-\n-        if (!warningString.empty())\n-            InitWarning(warningString);\n-        if (!errorString.empty())\n-            return InitError(warningString);\n-\n-    } // (!fDisableWallet)\n-#endif // ENABLE_WALLET\n+    // ********************************************************* Step 5: verify integrity of connected devices\n+    warningString.clear();\n+    errorString.clear();\n+    bool stopInit = false;\n+    GetMainSignals().VerifyIntegrity(warningString, errorString, stopInit);\n+    if (stopInit)\n+        return false;\n+    \n+    if (!warningString.empty())\n+    InitWarning(warningString);\n+    if (!errorString.empty())\n+    return InitError(errorString);",
      "path": "src/init.cpp",
      "position": 260,
      "original_position": 260,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Missing indentation\n",
      "created_at": "2015-09-15T21:11:49Z",
      "updated_at": "2015-09-15T21:11:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39565931",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39565931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 870,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39565994",
      "pull_request_review_id": null,
      "id": 39565994,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1OTk0",
      "diff_hunk": "@@ -1227,159 +1136,18 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         }\n     }\n \n-    // ********************************************************* Step 8: load wallet\n-#ifdef ENABLE_WALLET\n-    if (fDisableWallet) {\n-        pwalletMain = NULL;\n-        LogPrintf(\"Wallet disabled!\\n\");\n-    } else {\n-\n-        // needed to restore wallet transaction meta data after -zapwallettxes\n-        std::vector<CWalletTx> vWtx;\n-\n-        if (GetBoolArg(\"-zapwallettxes\", false)) {\n-            uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n-\n-            pwalletMain = new CWallet(strWalletFile);\n-            DBErrors nZapWalletRet = pwalletMain->ZapWalletTx(vWtx);\n-            if (nZapWalletRet != DB_LOAD_OK) {\n-                uiInterface.InitMessage(_(\"Error loading wallet.dat: Wallet corrupted\"));\n-                return false;\n-            }\n-\n-            delete pwalletMain;\n-            pwalletMain = NULL;\n-        }\n-\n-        uiInterface.InitMessage(_(\"Loading wallet...\"));\n-\n-        nStart = GetTimeMillis();\n-        bool fFirstRun = true;\n-        pwalletMain = new CWallet(strWalletFile);\n-        DBErrors nLoadWalletRet = pwalletMain->LoadWallet(fFirstRun);\n-        if (nLoadWalletRet != DB_LOAD_OK)\n-        {\n-            if (nLoadWalletRet == DB_CORRUPT)\n-                strErrors << _(\"Error loading wallet.dat: Wallet corrupted\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NONCRITICAL_ERROR)\n-            {\n-                string msg(_(\"Warning: error reading wallet.dat! All keys read correctly, but transaction data\"\n-                             \" or address book entries might be missing or incorrect.\"));\n-                InitWarning(msg);\n-            }\n-            else if (nLoadWalletRet == DB_TOO_NEW)\n-                strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin Core\") << \"\\n\";\n-            else if (nLoadWalletRet == DB_NEED_REWRITE)\n-            {\n-                strErrors << _(\"Wallet needed to be rewritten: restart Bitcoin Core to complete\") << \"\\n\";\n-                LogPrintf(\"%s\", strErrors.str());\n-                return InitError(strErrors.str());\n-            }\n-            else\n-                strErrors << _(\"Error loading wallet.dat\") << \"\\n\";\n-        }\n-\n-        if (GetBoolArg(\"-upgradewallet\", fFirstRun))\n-        {\n-            int nMaxVersion = GetArg(\"-upgradewallet\", 0);\n-            if (nMaxVersion == 0) // the -upgradewallet without argument case\n-            {\n-                LogPrintf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n-                nMaxVersion = CLIENT_VERSION;\n-                pwalletMain->SetMinVersion(FEATURE_LATEST); // permanently upgrade the wallet immediately\n-            }\n-            else\n-                LogPrintf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n-            if (nMaxVersion < pwalletMain->GetVersion())\n-                strErrors << _(\"Cannot downgrade wallet\") << \"\\n\";\n-            pwalletMain->SetMaxVersion(nMaxVersion);\n-        }\n-\n-        if (fFirstRun)\n-        {\n-            // Create new keyUser and set as default key\n-            RandAddSeedPerfmon();\n-\n-            CPubKey newDefaultKey;\n-            if (pwalletMain->GetKeyFromPool(newDefaultKey)) {\n-                pwalletMain->SetDefaultKey(newDefaultKey);\n-                if (!pwalletMain->SetAddressBook(pwalletMain->vchDefaultKey.GetID(), \"\", \"receive\"))\n-                    strErrors << _(\"Cannot write default address\") << \"\\n\";\n-            }\n-\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-        }\n-\n-        LogPrintf(\"%s\", strErrors.str());\n-        LogPrintf(\" wallet      %15dms\\n\", GetTimeMillis() - nStart);\n-\n-        RegisterValidationInterface(pwalletMain);\n-\n-        CBlockIndex *pindexRescan = chainActive.Tip();\n-        if (GetBoolArg(\"-rescan\", false))\n-            pindexRescan = chainActive.Genesis();\n-        else\n-        {\n-            CWalletDB walletdb(strWalletFile);\n-            CBlockLocator locator;\n-            if (walletdb.ReadBestBlock(locator))\n-                pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n-            else\n-                pindexRescan = chainActive.Genesis();\n-        }\n-        if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n-        {\n-            //We can't rescan beyond non-pruned blocks, stop and throw an error\n-            //this might happen if a user uses a old wallet within a pruned node\n-            // or if he ran -disablewallet for a longer time, then decided to re-enable\n-            if (fPruneMode)\n-            {\n-                CBlockIndex *block = chainActive.Tip();\n-                while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA) && block->pprev->nTx > 0 && pindexRescan != block)\n-                    block = block->pprev;\n-\n-                if (pindexRescan != block)\n-                    return InitError(_(\"Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)\"));\n-            }\n-\n-            uiInterface.InitMessage(_(\"Rescanning...\"));\n-            LogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", chainActive.Height() - pindexRescan->nHeight, pindexRescan->nHeight);\n-            nStart = GetTimeMillis();\n-            pwalletMain->ScanForWalletTransactions(pindexRescan, true);\n-            LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n-            pwalletMain->SetBestChain(chainActive.GetLocator());\n-            nWalletDBUpdated++;\n-\n-            // Restore wallet transaction metadata after -zapwallettxes=1\n-            if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")\n-            {\n-                CWalletDB walletdb(strWalletFile);\n-\n-                BOOST_FOREACH(const CWalletTx& wtxOld, vWtx)\n-                {\n-                    uint256 hash = wtxOld.GetHash();\n-                    std::map<uint256, CWalletTx>::iterator mi = pwalletMain->mapWallet.find(hash);\n-                    if (mi != pwalletMain->mapWallet.end())\n-                    {\n-                        const CWalletTx* copyFrom = &wtxOld;\n-                        CWalletTx* copyTo = &mi->second;\n-                        copyTo->mapValue = copyFrom->mapValue;\n-                        copyTo->vOrderForm = copyFrom->vOrderForm;\n-                        copyTo->nTimeReceived = copyFrom->nTimeReceived;\n-                        copyTo->nTimeSmart = copyFrom->nTimeSmart;\n-                        copyTo->fFromMe = copyFrom->fFromMe;\n-                        copyTo->strFromAccount = copyFrom->strFromAccount;\n-                        copyTo->nOrderPos = copyFrom->nOrderPos;\n-                        copyTo->WriteToDisk(&walletdb);\n-                    }\n-                }\n-            }\n-        }\n-        pwalletMain->SetBroadcastTransactions(GetBoolArg(\"-walletbroadcast\", true));\n-    } // (!fDisableWallet)\n-#else // ENABLE_WALLET\n-    LogPrintf(\"No wallet support compiled in!\\n\");\n-#endif // !ENABLE_WALLET\n+    // ********************************************************* Step 8: load wallets/modules",
      "path": "src/init.cpp",
      "position": 421,
      "original_position": 421,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Same as with step 5.\n",
      "created_at": "2015-09-15T21:12:22Z",
      "updated_at": "2015-09-15T21:12:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39565994",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39565994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1139,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566133",
      "pull_request_review_id": null,
      "id": 39566133,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2MTMz",
      "diff_hunk": "@@ -31,6 +31,7 @@\n #include \"util.h\"\n \n #ifdef ENABLE_WALLET\n+#include \"wallet/legacywallet.h\"\n #include \"wallet/wallet.h\"",
      "path": "src/qt/bitcoin.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "legacywallet.h includes wallet.h\n",
      "created_at": "2015-09-15T21:13:31Z",
      "updated_at": "2015-09-15T21:13:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39566133",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566152",
      "pull_request_review_id": null,
      "id": 39566152,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2MTUy",
      "diff_hunk": "@@ -13,6 +13,7 @@\n #include \"base58.h\"\n #include \"init.h\"\n #include \"main.h\" // For strMessageMagic\n+#include \"wallet/legacywallet.h\"\n #include \"wallet/wallet.h\"",
      "path": "src/qt/signverifymessagedialog.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "legacywallet.h includes wallet.h... true for all other places below\n",
      "created_at": "2015-09-15T21:13:41Z",
      "updated_at": "2015-09-15T21:14:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39566152",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566363",
      "pull_request_review_id": null,
      "id": 39566363,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2MzYz",
      "diff_hunk": "@@ -0,0 +1,233 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers",
      "path": "src/wallet/legacywallet.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: 2015 ;)\n",
      "created_at": "2015-09-15T21:15:19Z",
      "updated_at": "2015-09-15T21:15:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39566363",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566544",
      "pull_request_review_id": null,
      "id": 39566544,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NTQ0",
      "diff_hunk": "@@ -0,0 +1,233 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/legacywallet.h\"\n+\n+#include \"main.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n+\n+#include <boost/filesystem.hpp>\n+#include <boost/thread.hpp>\n+\n+CWallet* pwalletMain = NULL;\n+\n+const static std::string DEFAULT_WALLET_FILE = \"wallet.dat\";\n+\n+namespace CLegacyWalletModule {\n+\n+std::string GetWalletFile()\n+{\n+    return GetArg(\"-wallet\", DEFAULT_WALLET_FILE);\n+}\n+\n+void AppendHelpMessageString(std::string& strUsage, bool debugHelp)\n+{\n+    if (debugHelp)\n+    {\n+        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)\", FormatMoney(CWallet::minTxFee.GetFeePerK())));\n+        return;\n+    }\n+\n+    strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n+    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n+    strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in BTC/kB) to add to transactions you send (default: %s)\"), FormatMoney(payTxFee.GetFeePerK())));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n+    strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n+                                                            FormatMoney(maxTxFee)));\n+    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n+    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n+    strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n+    strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n+                               \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n+    strUsage += HelpMessageOpt(\"-gen\", strprintf(_(\"Generate coins (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-genproclimit=<n>\", strprintf(_(\"Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)\"), 1));\n+}\n+    \n+void Flush(bool shutdown)\n+{\n+    if (pwalletMain)\n+        pwalletMain->Flush(shutdown);\n+}\n+\n+void Dealloc()\n+{\n+    delete pwalletMain;\n+    pwalletMain = NULL;\n+}\n+\n+//! Dump wallet infos to log\n+void LogGeneralInfos()\n+{\n+    LogPrintf(\"Using BerkeleyDB version %s\\n\", DbEnv::version(0, 0, 0));\n+}\n+\n+//! Dump wallet infos to log\n+void LogInfos()\n+{\n+    LogPrintf(\"setKeyPool.size() = %u\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n+    LogPrintf(\"mapWallet.size() = %u\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n+    LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+}\n+\n+//! Performs sanity check and appends possible errors to given string\n+void SanityCheck(std::string& errorString)\n+{\n+    std::string strWalletFile = GetWalletFile();\n+    // Wallet file must be a plain filename without a directory\n+    if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n+    errorString += strprintf(_(\"Wallet %s resides outside data directory\"), strWalletFile);",
      "path": "src/wallet/legacywallet.cpp",
      "position": 89,
      "original_position": 89,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Still needs fixing :).\n",
      "created_at": "2015-09-15T21:16:50Z",
      "updated_at": "2015-09-15T21:16:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39566544",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 89,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566646",
      "pull_request_review_id": null,
      "id": 39566646,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NjQ2",
      "diff_hunk": "@@ -0,0 +1,233 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet/legacywallet.h\"\n+\n+#include \"main.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n+\n+#include <boost/filesystem.hpp>\n+#include <boost/thread.hpp>\n+\n+CWallet* pwalletMain = NULL;\n+\n+const static std::string DEFAULT_WALLET_FILE = \"wallet.dat\";\n+\n+namespace CLegacyWalletModule {\n+\n+std::string GetWalletFile()\n+{\n+    return GetArg(\"-wallet\", DEFAULT_WALLET_FILE);\n+}\n+\n+void AppendHelpMessageString(std::string& strUsage, bool debugHelp)\n+{\n+    if (debugHelp)\n+    {\n+        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)\", FormatMoney(CWallet::minTxFee.GetFeePerK())));\n+        return;\n+    }\n+\n+    strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n+    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n+    strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in BTC/kB) to add to transactions you send (default: %s)\"), FormatMoney(payTxFee.GetFeePerK())));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n+    strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n+                                                            FormatMoney(maxTxFee)));\n+    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n+    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n+    strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n+    strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n+                               \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n+    strUsage += HelpMessageOpt(\"-gen\", strprintf(_(\"Generate coins (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-genproclimit=<n>\", strprintf(_(\"Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)\"), 1));\n+}\n+    \n+void Flush(bool shutdown)\n+{\n+    if (pwalletMain)\n+        pwalletMain->Flush(shutdown);\n+}\n+\n+void Dealloc()\n+{\n+    delete pwalletMain;\n+    pwalletMain = NULL;\n+}\n+\n+//! Dump wallet infos to log\n+void LogGeneralInfos()\n+{\n+    LogPrintf(\"Using BerkeleyDB version %s\\n\", DbEnv::version(0, 0, 0));\n+}\n+\n+//! Dump wallet infos to log\n+void LogInfos()\n+{\n+    LogPrintf(\"setKeyPool.size() = %u\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n+    LogPrintf(\"mapWallet.size() = %u\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n+    LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+}\n+\n+//! Performs sanity check and appends possible errors to given string\n+void SanityCheck(std::string& errorString)\n+{\n+    std::string strWalletFile = GetWalletFile();\n+    // Wallet file must be a plain filename without a directory\n+    if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n+    errorString += strprintf(_(\"Wallet %s resides outside data directory\"), strWalletFile);\n+}\n+\n+bool IsDisabled()\n+{\n+    return GetBoolArg(\"-disablewallet\", false);\n+}\n+\n+void LoadAsModule(std::string& warningString, std::string& errorString, bool& stopInit)\n+{\n+    if (IsDisabled()) {\n+        pwalletMain = NULL;\n+        LogPrintf(\"Wallet disabled!\\n\");\n+    } else {\n+        uiInterface.InitMessage(_(\"Loading wallet...\"));\n+        pwalletMain = new CWallet(GetWalletFile());\n+        \n+        if (!pwalletMain->LoadWallet(warningString, errorString))\n+            stopInit = true;\n+    }\n+}\n+\n+void Verify(std::string& warningString, std::string& errorString, bool &stopInit)\n+{\n+    if (IsDisabled())\n+        return;\n+    \n+    uiInterface.InitMessage(_(\"Verifying wallet...\"));\n+    \n+    const std::string walletFile = GetWalletFile();\n+    LogPrintf(\"Using wallet %s\\n\", walletFile);\n+    \n+    if (!pwalletMain->Verify(walletFile, warningString, errorString))\n+        stopInit = true;\n+}\n+\n+void MapParameters(std::string& warningString, std::string& errorString)\n+{\n+    if (GetBoolArg(\"-salvagewallet\", false)) {\n+        // Rewrite just private keys: rescan to find transactions\n+        if (SoftSetBoolArg(\"-rescan\", true))\n+            LogPrintf(\"%s: parameter interaction: -salvagewallet=1 -> setting -rescan=1\\n\", __func__);\n+    }\n+\n+    // -zapwallettx implies a rescan\n+    if (GetBoolArg(\"-zapwallettxes\", false)) {\n+        if (SoftSetBoolArg(\"-rescan\", true))",
      "path": "src/wallet/legacywallet.cpp",
      "position": 135,
      "original_position": 135,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could be a one-line check?\n",
      "created_at": "2015-09-15T21:17:43Z",
      "updated_at": "2015-09-15T21:17:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39566646",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 135,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566722",
      "pull_request_review_id": null,
      "id": 39566722,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NzIy",
      "diff_hunk": "@@ -0,0 +1,20 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_LEGACYWALLET_H",
      "path": "src/wallet/legacywallet.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Needs to be BITCOIN_WALLET_LEGACYWALLET_H, also for header end comment.\n",
      "created_at": "2015-09-15T21:18:17Z",
      "updated_at": "2015-09-15T21:18:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39566722",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566873",
      "pull_request_review_id": null,
      "id": 39566873,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2ODcz",
      "diff_hunk": "@@ -0,0 +1,20 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_LEGACYWALLET_H\n+#define BITCOIN_LEGACYWALLET_H\n+\n+#include \"wallet/wallet.h\"\n+\n+extern CWallet* pwalletMain;\n+\n+namespace CLegacyWalletModule {\n+    void RegisterSignals();\n+    void UnregisterSignals();\n+    \n+    std::string GetWalletFile();",
      "path": "src/wallet/legacywallet.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "original_commit_id": "fb5b746fce742218ae5d6f285c2936a50897c5db",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could return as const.\n",
      "created_at": "2015-09-15T21:19:33Z",
      "updated_at": "2015-09-15T21:19:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/5990#discussion_r39566873",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/39566873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5990"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}