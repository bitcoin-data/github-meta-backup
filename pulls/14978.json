{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978",
    "id": 239013621,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5MDEzNjIx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14978",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14978.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14978.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/102faad81efa1cb12c29c466cfe81fc8c7351e1d",
    "number": 14978,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Factor out PSBT utilities from RPCs for use in GUI code; related refactoring.",
    "user": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "* Move most PSBT definitions into psbt.h.\r\n* Move most PSBT RPC utilities into psbt.{h,cpp}.\r\n* Move wallet-touching PSBT RPC utilities (FillPSBT) into\r\n    wallet/psbtwallet.{h,cpp}.\r\n* Switch exceptions from JSONRPCError() to new PSBTException class.\r\n* Split DecodePSBT into DecodeBase64PSBT (old behavior) and DecodeRawPSBT.\r\n* Add one new version of DecodeBase64 utility in strencodings.h (and\r\n    corresponding DecodeBase32 for completeness).\r\n* Factor BroadcastTransaction utility function out of sendrawtransaction RPC\r\n    handler in rpc/rawtransaction.cpp\r\n\r\nNote: For those keeping score at home wondering why refactor, this is in anticipation of (and developed in parallel with) a change to actually introduce GUI use of all this stuff, which is already under development and working-ish.\r\n",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-12-17T02:52:20Z",
    "updated_at": "2021-12-16T14:50:51Z",
    "closed_at": "2019-02-14T08:49:44Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-02-14T08:49:44Z",
    "merge_commit_sha": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "gwillen:feature-refactor-psbt-rpcs",
      "ref": "feature-refactor-psbt-rpcs",
      "sha": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 26886157,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNjg4NjE1Nw==",
        "name": "bitcoin",
        "full_name": "gwillen/bitcoin",
        "owner": {
          "login": "gwillen",
          "id": 458997,
          "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gwillen",
          "html_url": "https://github.com/gwillen",
          "followers_url": "https://api.github.com/users/gwillen/followers",
          "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
          "organizations_url": "https://api.github.com/users/gwillen/orgs",
          "repos_url": "https://api.github.com/users/gwillen/repos",
          "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/gwillen/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/gwillen/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/gwillen/bitcoin",
        "archive_url": "https://api.github.com/repos/gwillen/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/gwillen/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/gwillen/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/gwillen/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/gwillen/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/gwillen/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/gwillen/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/gwillen/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/gwillen/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/gwillen/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/gwillen/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/gwillen/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/gwillen/bitcoin/events",
        "forks_url": "https://api.github.com/repos/gwillen/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/gwillen/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/gwillen/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/gwillen/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/gwillen/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/gwillen/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/gwillen/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/gwillen/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/gwillen/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/gwillen/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/gwillen/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/gwillen/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/gwillen/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/gwillen/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/gwillen/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/gwillen/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:gwillen/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/gwillen/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/gwillen/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/gwillen/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/gwillen/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/gwillen/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/gwillen/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/gwillen/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/gwillen/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/gwillen/bitcoin/hooks",
        "svn_url": "https://github.com/gwillen/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "TypeScript",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 138127,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2020-10-29T19:45:51Z",
        "created_at": "2014-11-19T23:11:12Z",
        "updated_at": "2018-08-21T18:58:52Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "1bc149d05b09d716723d2f091250fab38fd70fc2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1229,
    "deletions": 929,
    "changed_files": 20,
    "commits": 7,
    "review_comments": 66,
    "comments": 38
  },
  "events": [
    {
      "event": "labeled",
      "id": 2029221694,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwMjkyMjE2OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2029221694",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T02:56:52Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "labeled",
      "id": 2029221695,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwMjkyMjE2OTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2029221695",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T02:56:52Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "reviewed",
      "id": 185447650,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1NDQ3NjUw",
      "url": null,
      "actor": null,
      "commit_id": "3c91a3ddf583806b211f576a25994d2182d824df",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-185447650",
      "submitted_at": "2018-12-17T06:00:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "commented",
      "id": 447731683,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzczMTY4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/447731683",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T06:02:00Z",
      "updated_at": "2018-12-17T06:02:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "I cleverly made a small change that apparently g++ does not accept but Clang does, so I will have to fix that before it will build on Linux, oops. (I commented on the offending line in the diff.)",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-447731683",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2029426003,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjAyOTQyNjAwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2029426003",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T06:40:42Z"
    },
    {
      "event": "commented",
      "id": 447749926,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzc0OTkyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/447749926",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T07:39:25Z",
      "updated_at": "2018-12-17T07:39:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hmm, something is also legitimately broken in the tests, will investigate tomorrow. :-\\",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-447749926",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 447759931,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzc1OTkzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/447759931",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T08:24:49Z",
      "updated_at": "2019-02-13T18:26:09Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15253](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15253.html) (Net: Consistently log outgoing INV messages by Empact)\n* [#15214](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15214.html) (tests: Check for expected return values when calling functions returning a success code by practicalswift)\n* [#13932](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13932.html) (Additional utility RPCs for PSBT by achow101)\n* [#13541](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13541.html) (wallet/rpc: sendrawtransaction maxfeerate by kallewoof)\n* [#13266](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13266.html) ([moveonly] privatize SignatureExtractorChecker by Empact)\n* [#12461](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12461.html) (scripted-diff: Rename key size consts to be relative to their class by Empact)\n* [#9152](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9152.html) (Wallet/RPC: sweepprivkeys method to scan UTXO set and send to local wallet by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-447759931",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "reviewed",
      "id": 185555227,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1NTU1MjI3",
      "url": null,
      "actor": null,
      "commit_id": "2fe27d6e4d78ccf2744be4bd52eb31a1e66f89f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-185555227",
      "submitted_at": "2018-12-17T11:57:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "commented",
      "id": 447867073,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg2NzA3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/447867073",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T14:36:13Z",
      "updated_at": "2018-12-17T14:36:41Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\n> for use in GUI code\r\n\r\nCan you detail the GUI part?\r\n\r\n> which is already under development and working-ish.\r\n\r\nIs it available?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-447867073",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2031585391,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjAzMTU4NTM5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2031585391",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T22:46:22Z"
    },
    {
      "event": "commented",
      "id": 448029296,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODAyOTI5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448029296",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T22:51:46Z",
      "updated_at": "2018-12-17T22:51:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Can you detail the GUI part?\r\n\r\nI'm adding an interface for offline and multisig signing in the GUI, using PSBT as the on-disk format for the intermediate files. See e.g. how Bitcoin Armory handles offline transactions, which I'm basically copying.\r\n\r\n> Is it available?\r\n\r\nI pasted it into #bitcoin-core-dev awhile ago -- I will link it here in the comment thread once I'm sure the tip of my branch is still actually building. ",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-448029296",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 448079641,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODA3OTY0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448079641",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T03:02:20Z",
      "updated_at": "2018-12-18T03:02:20Z",
      "author_association": "MEMBER",
      "body": "@gwillen writes:\n> * Move most PSBT definitions into psbt.h.\n> * Move most PSBT RPC utilities into psbt.{h,cpp}.\n> * Move wallet-touching PSBT RPC utilities (FillPSBT) into\n>     wallet/psbtwallet.{h,cpp}.\n> * Switch exceptions from JSONRPCError() to new PSBTException class.\n> * Split DecodePSBT into DecodeBase64PSBT (old behavior) and DecodeRawPSBT.\n> * Add one new version of DecodeBase64 utility in strencodings.h (and\n>     corresponding DecodeBase32 for completeness).\n> * Factor BroadcastTransaction utility function out of sendrawtransaction RPC\n>     handler in rpc/rawtransaction.cpp\n\nIs it possible to split this commit into one for each of the points\nhere? It makes review harder when everything is squashed into a single commit.\n",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-448079641",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2031911075,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjAzMTkxMTA3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2031911075",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T03:02:20Z"
    },
    {
      "event": "subscribed",
      "id": 2031911076,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwMzE5MTEwNzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2031911076",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T03:02:20Z"
    },
    {
      "event": "commented",
      "id": 448090750,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODA5MDc1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448090750",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T04:15:36Z",
      "updated_at": "2018-12-18T04:15:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "The GUI work is WIP here: https://github.com/gwillen/bitcoin/tree/feature-offline-v1 . I made that branch at a known-working version, since I'm making significant changes to it right now.\r\n\r\nIt's not currently based on this PR, which I will have to rebase it onto later; this PR is an extraction of some refactoring that also appears in that PR, plus some other stuff that doesn't yet.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-448090750",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 448090866,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODA5MDg2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448090866",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T04:16:20Z",
      "updated_at": "2018-12-18T04:17:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jb55 Yeah, I can definitely split it out if people prefer. Will take a day or two to get to. I might ask slight forgiveness in some cases where a reasonable intermediate state between two combined changes never existed, and would be hard to recreate.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-448090866",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2031987851,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjAzMTk4Nzg1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2031987851",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T04:16:20Z"
    },
    {
      "event": "subscribed",
      "id": 2031987853,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwMzE5ODc4NTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2031987853",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T04:16:21Z"
    },
    {
      "event": "commented",
      "id": 448127504,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODEyNzUwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448127504",
      "actor": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T07:49:14Z",
      "updated_at": "2018-12-18T07:49:14Z",
      "author_association": "MEMBER",
      "body": "Would be helpful to split the commit up, for review now and for intelligibility when looking back in the future.",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-448127504",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 448468508,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODQ2ODUwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448468508",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-19T04:49:04Z",
      "updated_at": "2018-12-19T04:49:04Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Agree with above, split this into multiple commits.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-448468508",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 448608549,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODYwODU0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448608549",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-19T14:09:07Z",
      "updated_at": "2018-12-19T14:09:07Z",
      "author_association": "MEMBER",
      "body": "I definitely agree in splitting it.\r\n\r\n@gwillen checked out the branch and looks promising.\r\n\r\n",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-448608549",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2035764919,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjAzNTc2NDkxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2035764919",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-19T14:09:07Z"
    },
    {
      "event": "subscribed",
      "id": 2035764920,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwMzU3NjQ5MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2035764920",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-19T14:09:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2061761782,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA2MTc2MTc4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2061761782",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-09T00:46:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2062783966,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA2Mjc4Mzk2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2062783966",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-09T11:10:18Z"
    },
    {
      "event": "commented",
      "id": 452660611,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjY2MDYxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452660611",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-09T11:13:10Z",
      "updated_at": "2019-01-09T11:58:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry for the delay. I have split the PR into more reasonable commits. The one that does the bulk of the code movement between files (\"Move PSBT definitions and code to separate files\") is now _only_ movement (and adjusting headers / Makefile), and no other substantive changes. \r\n\r\nThe final result is exactly the same as before, except for a single stray blank line I had accidentally introduced in the previous version, which is removed.\r\n\r\nEvery intermediate step is intended to be sane and self-contained (and buildable), but I haven't actually verified (by compiler rather than by eye) that every intermediate step cleanly builds yet.\r\n\r\n(EDIT: Wellll, I was pretty close. All intermediate states now build and pass tests.)",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-452660611",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2062879574,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA2Mjg3OTU3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2062879574",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-09T11:57:33Z"
    },
    {
      "event": "commented",
      "id": 452766732,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjc2NjczMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452766732",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-09T16:48:29Z",
      "updated_at": "2019-01-09T16:48:29Z",
      "author_association": "MEMBER",
      "body": "This looks much better now! Thanks! \r\n\r\nutACK dd45d3febacb40cf68f58eff08f76db2854fc340\r\n\r\nThe refactorings look pretty good in general.\r\n\r\nI did a quick skim of the code, I didn't see anything obviously wrong but I'm no expert on this part of the codebase.",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-452766732",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "reviewed",
      "id": 190864363,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkwODY0MzYz",
      "url": null,
      "actor": null,
      "commit_id": "65cb85e625e11850d21ff133420259a6993d7992",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK dd45d3febacb40cf68f58eff08f76db2854fc340\r\n\r\nSome comments, nothing that block this IMO",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-190864363",
      "submitted_at": "2019-01-09T18:54:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "commented",
      "id": 452898011,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjg5ODAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452898011",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-09T22:45:56Z",
      "updated_at": "2019-01-09T22:45:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "FWIW I believe the travis failure is spurious -- it failed a single unrelated test, on a single platform, and the code hasn't changed since the last time it succeeded.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-452898011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2076142213,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA3NjE0MjIxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2076142213",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-16T00:31:44Z"
    },
    {
      "event": "commented",
      "id": 454605365,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDYwNTM2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454605365",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-16T00:32:35Z",
      "updated_at": "2019-01-16T00:32:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "(Minor edit to remove a single unnecessary #include line that was bugging me, no significant change.)",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-454605365",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "reviewed",
      "id": 193054911,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkzMDU0OTEx",
      "url": null,
      "actor": null,
      "commit_id": "801333b36360e7137d682836041b61883f70909e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK c062d74 .Verified the move only commit, just adds necessary includes and updates the makefile with the new file. Some nits and other comments for your consideration.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-193054911",
      "submitted_at": "2019-01-16T11:08:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "reviewed",
      "id": 193412608,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkzNDEyNjA4",
      "url": null,
      "actor": null,
      "commit_id": "65cb85e625e11850d21ff133420259a6993d7992",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Big concept ACK",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-193412608",
      "submitted_at": "2019-01-17T00:23:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "commented",
      "id": 455627335,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTYyNzMzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455627335",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-18T17:35:42Z",
      "updated_at": "2019-01-18T17:39:01Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nFunny enough, yesterday I ran into an issue where I needed to reuse `sendrawtransaction`.\r\n\r\n@sipa wrote:\r\n> I'm slightly worried about the use of exceptions in code that use usable in more places than just RPC, as C++ can't guarantee that all possible exceptions are being dealt with at the right layer.\r\n\r\n> Would an enum with PSBT-related error codes, plus a enum to string conversion function (like in script/script_error) make sense?\r\n\r\nI'm also introducing an exception system for `ExternalSigner` in #14912:\r\n\r\n```cpp\r\nclass ExternalSignerException : public std::runtime_error {\r\n public:\r\n     using std::runtime_error::runtime_error;\r\n };\r\n\r\nthrow ExternalSignerException(strprintf(\"Some error with detail '%s'\", details));\r\n```\r\n\r\nI then map that to an RPC error like so:\r\n```cpp\r\n    try {\r\n        ExternalSigner::DoSomething(...);\r\n    } catch (const ExternalSignerException& e) {\r\n        throw JSONRPCError(RPC_WALLET_ERROR, e.what());\r\n    }\r\n```\r\n\r\n It's probably a good idea to agree on a single good way to do this.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-455627335",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2083515984,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjA4MzUxNTk4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2083515984",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-18T17:35:42Z"
    },
    {
      "event": "subscribed",
      "id": 2083515985,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwODM1MTU5ODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2083515985",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-18T17:35:43Z"
    },
    {
      "event": "reviewed",
      "id": 194209720,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk0MjA5NzIw",
      "url": null,
      "actor": null,
      "commit_id": "65cb85e625e11850d21ff133420259a6993d7992",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed c062d74e1187e481960ca6868a46642b8bbfbd2e, mostly happy.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-194209720",
      "submitted_at": "2019-01-18T18:13:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "labeled",
      "id": 2087183822,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwODcxODM4MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2087183822",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-21T19:35:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 196018112,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk2MDE4MTEy",
      "url": null,
      "actor": null,
      "commit_id": "c062d74e1187e481960ca6868a46642b8bbfbd2e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Lightly tested c062d74 using #14912, seems to work well.\r\n\r\nNeeds trivial rebase due because #14906 changed `PartiallySignedTransaction::PartiallySignedTransaction(const CTransaction& tx) : tx(tx)` to `CMutableTransaction` in `src/script/sign.{h/cpp}`",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-196018112",
      "submitted_at": "2019-01-24T14:24:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2102666616,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwMjY2NjYxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2102666616",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T05:20:00Z"
    },
    {
      "event": "unlabeled",
      "id": 2102720015,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjEwMjcyMDAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2102720015",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T06:06:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 458421067,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQyMTA2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458421067",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T06:18:52Z",
      "updated_at": "2019-01-29T06:21:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "@promag @sipa @Sjors Can you have an argument, here or elsewhere, about how error handling should work in cases like this, and then tell me what to do? :-) I am ambivalent between \"better exceptions\" and \"switch to return values\". It seems like Sjors and maybe promag favor door number 1, whereas sipa favors door number 2 for reasons I find entirely defensible, but the result is a little harder to work with, though perhaps less hazardous.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-458421067",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2102735500,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwMjczNTUwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2102735500",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T06:18:52Z"
    },
    {
      "event": "subscribed",
      "id": 2102735501,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDI3MzU1MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2102735501",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T06:18:52Z"
    },
    {
      "event": "mentioned",
      "id": 2102735503,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwMjczNTUwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2102735503",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T06:18:52Z"
    },
    {
      "event": "subscribed",
      "id": 2102735504,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDI3MzU1MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2102735504",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T06:18:52Z"
    },
    {
      "event": "mentioned",
      "id": 2102735505,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwMjczNTUwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2102735505",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T06:18:52Z"
    },
    {
      "event": "subscribed",
      "id": 2102735506,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDI3MzU1MDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2102735506",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T06:18:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2102807585,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwMjgwNzU4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2102807585",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T07:11:50Z"
    },
    {
      "event": "mentioned",
      "id": 2103988398,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwMzk4ODM5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2103988398",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T15:33:54Z"
    },
    {
      "event": "subscribed",
      "id": 2103988400,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDM5ODg0MDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2103988400",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T15:33:54Z"
    },
    {
      "event": "commented",
      "id": 458618307,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODYxODMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458618307",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T16:55:04Z",
      "updated_at": "2019-01-29T16:55:04Z",
      "author_association": "MEMBER",
      "body": "@gwillen I'd avoid using exceptions to control flow. For instance, you have:\r\n```cpp\r\nbool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sighash_type = 1 /* SIGHASH_ALL */, bool sign = true, bool bip32derivs = false)\r\n```\r\nAnd looks like it returns `false` if it fails, but that's wrong. In fact, it throws if some error occurs and returns whether the transaction has a complete set of signatures.\r\n\r\nLooking the existing calls you see the semantic difference:\r\nhttps://github.com/bitcoin/bitcoin/blob/7275365c9bc7e7ebd6bbf7dcb251946aac44b5de/src/wallet/rpcwallet.cpp#L4035\r\nhttps://github.com/bitcoin/bitcoin/blob/7275365c9bc7e7ebd6bbf7dcb251946aac44b5de/src/wallet/rpcwallet.cpp#L4149",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-458618307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2104234194,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwNDIzNDE5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2104234194",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T16:55:09Z"
    },
    {
      "event": "subscribed",
      "id": 2104234198,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDQyMzQxOTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2104234198",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T16:55:09Z"
    },
    {
      "event": "reviewed",
      "id": 197798332,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk3Nzk4MzMy",
      "url": null,
      "actor": null,
      "commit_id": "ed465d8f9bddc16d4bfd9a183b2c69ff78a0f636",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-197798332",
      "submitted_at": "2019-01-29T21:40:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "commented",
      "id": 458821958,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODgyMTk1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458821958",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T05:56:57Z",
      "updated_at": "2019-01-30T05:57:18Z",
      "author_association": "MEMBER",
      "body": "@gwillen My preference is an enum over exceptions (but both are used in the codebase, so if others feel strongly, feel free to ignore me).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-458821958",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2105602642,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwNTYwMjY0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2105602642",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T05:56:57Z"
    },
    {
      "event": "subscribed",
      "id": 2105602643,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDU2MDI2NDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2105602643",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T05:56:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2105772165,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNTc3MjE2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2105772165",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T07:54:16Z"
    },
    {
      "event": "commented",
      "id": 458846994,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODg0Njk5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458846994",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T07:57:26Z",
      "updated_at": "2019-01-30T07:57:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think I've addressed everything except the error-handling / exceptions stuff, which I'm still thinking about and will punt to tomorrow.\r\n\r\nI significantly reworked the FinalizePSBT interface, so it deserves another look. Everything else was relatively minor.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-458846994",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "reviewed",
      "id": 198079167,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk4MDc5MTY3",
      "url": null,
      "actor": null,
      "commit_id": "21aeb8ebc77192ad5cb96db0cc90ba6fb7b2e91f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK f124a51 modulo the broken bench build on Travis (can't reproduce that on macOS)\r\n\r\nEnum error handling works for me too.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-198079167",
      "submitted_at": "2019-01-30T17:07:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "commented",
      "id": 459096637,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTA5NjYzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459096637",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T20:28:27Z",
      "updated_at": "2019-01-30T20:28:27Z",
      "author_association": "MEMBER",
      "body": "I agree that using an enum would be better. We already use enums for other errors  like script_error, etc. So I think it would make sense to continue that pattern here as well.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-459096637",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2108347339,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwODM0NzMzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2108347339",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T03:35:31Z"
    },
    {
      "event": "commented",
      "id": 459203945,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTIwMzk0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459203945",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T03:44:13Z",
      "updated_at": "2019-01-31T03:45:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ok, I ended up doing something that feels a little gross and unorthodox for the error handling.\r\n\r\nThe problems with a new enum are several-fold: Most notably, it would be at least two new enums, since BroadcastTransaction and the various PSBT functions are not really of the same sort, unless we want something like a general-purpose TransactionError type (which I wouldn't be totally against.) The ONLY consumer of error codes in any form (as far as I can tell) would be RPC callers, which means the only point of making a bunch of new error constants is to immediately turn around and define a mapping of them to RPC error constants.\r\n\r\n(ScriptErrors get handled a little differently, as far as I can tell -- they just get converted to strings when they are stuffed into RPC responses, and the numeric codes discarded. As far as I can tell, the _only_ other use for them is in tests. If we were going to go that route here, I would just advocate for pure string errors, since the constants wouldn't have any interesting producers or consumers at that point.)\r\n\r\nAnyway, on the theory that the only consumer of error codes is the RPC subsystem, my approach is this: I retained the use of RPCErrorCode and JSONRPCError. Instead of throwing the resulting UniValue objects, I am using out parameters for them. Then when I am back in the RPC codepath, I take the object and throw it. In the GUI codepath, I expect to extract the error message from it to display to the user, and ignore the code.\r\n\r\nThis is definitely a little bit crazy, but I was having trouble coming up with any better ideas. Thoughts?",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-459203945",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 459206704,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTIwNjcwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459206704",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T04:01:44Z",
      "updated_at": "2019-01-31T04:01:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Oh, and I think the Travis failure is real -- I think the problem is that actually BroadcastTransaction does NOT belong under wallet/ and needs to be linked even when the wallet is disabled. So right now disabling the wallet causes the link to fail.\r\n\r\nSuggestions for where to move it? Right now it's a pair of new files named wallet/transaction.{h,cpp}.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-459206704",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 459278864,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTI3ODg2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459278864",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T09:37:56Z",
      "updated_at": "2019-01-31T09:40:26Z",
      "author_association": "MEMBER",
      "body": "> The ONLY consumer of error codes in any form (as far as I can tell) would be RPC callers,\r\n\r\nIn #14912 I plan to move more code into the `ExternalSigner` class, which will be used by both RPC and the GUI.\r\n\r\n> general-purpose TransactionError type\r\n\r\nWorks for me\r\n\r\n> I retained the use of RPCErrorCode and JSONRPCError. Instead of throwing the resulting UniValue objects, I am using out parameters for them. Then when I am back in the RPC codepath, I take the object and throw it\r\n\r\nI like your previous approach better. I'm also not a fan of using `UniValue` outside of RPC input & output processing.\r\n \r\n> that actually BroadcastTransaction does NOT belong under `wallet/`\r\n\r\nIndeed it doesn't. Nodes without a wallet can also broadcast transactions and do various things with PSBT. Maybe `src/node/transaction.{h,c}`? @ryanofsky what makes sense given #10973? I'm assuming it doesn't really belong in `src/interfaces`?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-459278864",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2108883924,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwODg4MzkyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2108883924",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T09:37:57Z"
    },
    {
      "event": "subscribed",
      "id": 2108883926,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDg4ODM5MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2108883926",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T09:37:57Z"
    },
    {
      "event": "reviewed",
      "id": 198497755,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk4NDk3NzU1",
      "url": null,
      "actor": null,
      "commit_id": "eb1c459f40b74fb1e6fb054f950ba7dd7086980e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-198497755",
      "submitted_at": "2019-01-31T09:41:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "commented",
      "id": 459373984,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTM3Mzk4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459373984",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T14:56:00Z",
      "updated_at": "2019-01-31T14:59:52Z",
      "author_association": "MEMBER",
      "body": "> > that actually BroadcastTransaction does NOT belong under wallet/\r\n\r\n> Indeed it doesn't. Nodes without a wallet can also broadcast transactions and do various things with PSBT. Maybe src/node/transaction.{h,c}? @ryanofsky what makes sense given #10973? I'm assuming it doesn't really belong in src/interfaces?\r\n\r\nIt would be reasonable to make `BroadcastTransaction` an `interfaces::Chain` method. (`Chain` is the object a wallet process uses to communicate with a node process in #10102), and I've actually kind of done this already in 9eee26ef6071451ee426f71beb6b77184bc8b073 and 02022184aa98ad27ba4338dd0f7a8e4d20180818 from #15288. It would also be reasonable to move `BroadcastTransaction` somewhere else if it can't stay in wallet because it will be used by non-wallet code. Whatever you decide should be fine.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-459373984",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2109642611,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwOTY0MjYxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2109642611",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T14:56:01Z"
    },
    {
      "event": "subscribed",
      "id": 2109642612,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDk2NDI2MTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2109642612",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T14:56:01Z"
    },
    {
      "event": "commented",
      "id": 459566924,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTU2NjkyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459566924",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-01T01:03:07Z",
      "updated_at": "2019-02-01T01:03:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ryanofsky The reason I need something like BroadcastTransaction is that, currently, none of the interfaces:: stuff exports a way to broadcast a transaction that didn't come from the wallet (and I need the RPC-like ability to do it with a blob I was handed.) So probably these codepaths should eventually merge! :-)",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-459566924",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2111032234,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjExMTAzMjIzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2111032234",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-01T01:03:07Z"
    },
    {
      "event": "subscribed",
      "id": 2111032235,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMTEwMzIyMzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2111032235",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-01T01:03:07Z"
    },
    {
      "event": "commented",
      "id": 459714289,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTcxNDI4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459714289",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-01T12:56:53Z",
      "updated_at": "2019-02-01T12:56:53Z",
      "author_association": "MEMBER",
      "body": "By the way `wallet/transaction.{h,cpp}` is still useful, even if not for this PR. E.g. I have a need to move `FundTransaction(CWallet* const pwallet, CMutableTransaction& tx...` out of `rpcwallet.{h,cpp}`\r\n\r\nI would probably also wrap that inside a `FundPSBT` method in `wallet/psbtwallet.{h,cpp}`, so that `walletcreatefundedpsbt` doesn't have to deal directly with `CMutableTransaction`. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-459714289",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 460444291,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDQ0NDI5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460444291",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-04T22:48:18Z",
      "updated_at": "2019-02-04T23:03:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ryanofsky Now that I'm actually trying to do it -- why interfaces::Chain and not interfaces::Node? That seems like a better fit. (Especially since the GUI ClientModel object has a Node interface handy, but I don't see where the GUI easily gets access to a Chain, although I'm not totally sure where to look.)\r\n\r\n(Noting that specifically I need to do this in a non-wallet context, for a transaction that's not necessarily in or from the wallet.)",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-460444291",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2117085700,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjExNzA4NTcwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2117085700",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-04T22:48:19Z"
    },
    {
      "event": "subscribed",
      "id": 2117085701,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMTcwODU3MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2117085701",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-04T22:48:19Z"
    },
    {
      "event": "commented",
      "id": 460455108,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDQ1NTEwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460455108",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-04T23:28:42Z",
      "updated_at": "2019-02-04T23:31:23Z",
      "author_association": "MEMBER",
      "body": "> Why interfaces::Chain and not interfaces::Node? That seems like a better fit.\r\n\r\nYou're right. I didn't look at this PR closely enough and assumed that it was calling `BroadcastTransaction` from the wallet. In this case, a `Chain` method would have to be added at some point (like in #15288), because the `Chain` interface is the only way a separate wallet process can access the node process. After you had a `Chain` method, you could also allow the GUI to be able to broadcast transactions by adding a`Node` method which forwarded to `m_interfaces.chain->broadcastTransaction(...)`.\r\n\r\nBut actually looking at this PR, `BroadcastTransaction` isn't called from either the wallet or the gui, only from the `sendrawtransaction` RPC. So I think it makes most sense for `BroadcastTransaction` to remain a standalone function so it can be conveniently called from `sendrawtransaction`.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-460455108",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 460464163,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDQ2NDE2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460464163",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-05T00:10:45Z",
      "updated_at": "2019-02-05T00:10:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Oh, good point. So I'm going ahead with creating src/node for it to live in, and then later I will forward from interfaces::Node (when I actually add a GUI use of it.)",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-460464163",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 461217722,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTIxNzcyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461217722",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-06T22:42:58Z",
      "updated_at": "2019-02-06T22:43:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ok, I think I have fixed the issue with BroadcastTransaction linking, by moving it out of the wallet stuff.\r\n\r\nI have made another attempt at the error stuff. :-) This time we have a TransactionError enum, and a translation table from TransactionError to RPCErrorCode, as well as strings for each TransactionError.\r\n\r\nThe result is _almost_ faithful, for RPC clients, to how it was before, except:\r\n- I have reclassified syntactically-valid but semantically-invalid PSBTs, from RPC_DESERIALIZATION_ERROR to RPC_INVALID_PARAMETER, in one case (we were being inconsistent)\r\n- When AcceptToMemoryPool fails, we can extract a string from the failure using FormatStateMessage. But we no longer have an easy way to pass that message back to the RPC caller, so right now we don't. Probably I should add another out param to fix this or something. Yes? No?\r\n\r\nI think we are almost at the finish line. :-)",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-461217722",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2122653800,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEyMjY1MzgwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2122653800",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-06T22:45:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2123008375,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEyMzAwODM3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2123008375",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-07T03:15:42Z"
    },
    {
      "event": "commented",
      "id": 461275858,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTI3NTg1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461275858",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-07T03:27:36Z",
      "updated_at": "2019-02-07T09:25:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "In fact, it turns out that changing the error message wording of BroadcastTransaction at all breaks a bunch of functional tests. Working on it.\r\n\r\nEDIT: Yeah the tests definitely require the failure strings from FormatStateMessage. So I'm going to think about how to plumb those through.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-461275858",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2123748175,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEyMzc0ODE3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2123748175",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-07T11:11:14Z"
    },
    {
      "event": "commented",
      "id": 461390320,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTM5MDMyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461390320",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-07T11:57:28Z",
      "updated_at": "2019-02-07T11:57:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "There we go! Ready for another look.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-461390320",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "reviewed",
      "id": 201422403,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjAxNDIyNDAz",
      "url": null,
      "actor": null,
      "commit_id": "6a1570ad97ea6405a14e205bc05a7862808013c4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Also rough code review ACK, though I haven't verified code movement yet.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-201422403",
      "submitted_at": "2019-02-08T03:48:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "reviewed",
      "id": 201840933,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjAxODQwOTMz",
      "url": null,
      "actor": null,
      "commit_id": "acac678ebe6e105e0a775b6eff37b1583139bf21",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK acac678ebe6e105e0a775b6eff37b1583139bf21, only nits.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-201840933",
      "submitted_at": "2019-02-09T01:11:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2128564047,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEyODU2NDA0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2128564047",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-09T04:00:45Z"
    },
    {
      "event": "reviewed",
      "id": 201862403,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjAxODYyNDAz",
      "url": null,
      "actor": null,
      "commit_id": "9f2297d4decb3c6a19a74945696acae573ac2bd0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#pullrequestreview-201862403",
      "submitted_at": "2019-02-09T13:05:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2129052418,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEyOTA1MjQxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2129052418",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-10T05:09:21Z"
    },
    {
      "event": "commented",
      "id": 462144019,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE0NDAxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462144019",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-10T15:52:50Z",
      "updated_at": "2019-02-10T15:52:50Z",
      "author_association": "MEMBER",
      "body": "re-utACK 6097ae0, main changes since my last review:\r\n* moved `BroadcastTransaction` to `src/node` instead of `src/wallet/transaction.cpp`, because it's not a wallet thing.\r\n* switched away from exceptions d988f06\r\n* `CombinePSBTs` now returns boolean and has an `&out` and `&error` param",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-462144019",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "labeled",
      "id": 2130654210,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIxMzA2NTQyMTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2130654210",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-11T14:09:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNjJmZmVmZDJmNTYyMTY5NzI1NTU5OTA2NjAxYzI1YzU3OWFhOTFj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/162ffefd2f562169725559906601c25c579aa91c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/162ffefd2f562169725559906601c25c579aa91c",
      "tree": {
        "sha": "1ab7e3660d0a07d6e92dcabddc8875e392452aed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ab7e3660d0a07d6e92dcabddc8875e392452aed"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bc149d05b09d716723d2f091250fab38fd70fc2",
          "sha": "1bc149d05b09d716723d2f091250fab38fd70fc2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1bc149d05b09d716723d2f091250fab38fd70fc2"
        }
      ],
      "message": "Add pf_invalid arg to std::string DecodeBase{32,64}\n\nAdd support for the optional \"pf_invalid\" out parameter (which allows the caller\nto detect decoding failures) to the std::string versions of DecodeBase32 and\nDecodeBase64. The char* versions already have this feature.\n\nAlso, rename all uses of pfInvalid to pf_invalid to match style guidelines.",
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-02-11T20:23:14Z"
      },
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-01-29T06:44:11Z"
      },
      "sha": "162ffefd2f562169725559906601c25c579aa91c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzM0YWFhMTVkOTI0NDcwY2VjMGYxN2IwMGFkMmU0NzQ3MmI0NzFm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c734aaa15d924470cec0f17b00ad2e47472b471f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c734aaa15d924470cec0f17b00ad2e47472b471f",
      "tree": {
        "sha": "57a374ce9179e44ba453c2d48014b5375268f965",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57a374ce9179e44ba453c2d48014b5375268f965"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/162ffefd2f562169725559906601c25c579aa91c",
          "sha": "162ffefd2f562169725559906601c25c579aa91c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/162ffefd2f562169725559906601c25c579aa91c"
        }
      ],
      "message": "Split DecodePSBT into Base64 and Raw versions\n\nSplit up DecodePSBT, which both decodes base64 and then deserializes a\nPartiallySignedTransaction, into two functions: DecodeBase64PSBT, which retains\nthe old behavior, and DecodeRawPSBT, which only performs the deserialization.\n\nAdd a test for base64 decoding failure.",
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-02-11T20:23:14Z"
      },
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-01-30T05:32:38Z"
      },
      "sha": "c734aaa15d924470cec0f17b00ad2e47472b471f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MWNkOTU4ODQ4NGNiNGY0MDUwZWE0ZTIzOWRhMDY4MTExMTc5NWRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81cd9588484cb4f4050ea4e239da0681111795db",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/81cd9588484cb4f4050ea4e239da0681111795db",
      "tree": {
        "sha": "33f5789d3f2d831d2bfb4098b57a4dea3ec75aea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33f5789d3f2d831d2bfb4098b57a4dea3ec75aea"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c734aaa15d924470cec0f17b00ad2e47472b471f",
          "sha": "c734aaa15d924470cec0f17b00ad2e47472b471f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c734aaa15d924470cec0f17b00ad2e47472b471f"
        }
      ],
      "message": "Factor BroadcastTransaction out of sendrawtransaction\n\nFactor out a new BroadcastTransaction function, performing the core work of the\nsendrawtransaction rpc, so that it can be used from the GUI code. Move it from\nsrc/rpc/ to src/node/.",
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-02-11T20:23:14Z"
      },
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-01-09T06:16:50Z"
      },
      "sha": "81cd9588484cb4f4050ea4e239da0681111795db"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNmMzZDQyYTdkNmI1MjUxNDRmYzdmYzY2NTNjZDExMTM5ZDJiMzRh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6c3d42a7d6b525144fc7fc6653cd11139d2b34a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c6c3d42a7d6b525144fc7fc6653cd11139d2b34a",
      "tree": {
        "sha": "861f35c6e35fce6509182384fe42007fe864e88c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/861f35c6e35fce6509182384fe42007fe864e88c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81cd9588484cb4f4050ea4e239da0681111795db",
          "sha": "81cd9588484cb4f4050ea4e239da0681111795db",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/81cd9588484cb4f4050ea4e239da0681111795db"
        }
      ],
      "message": "Move PSBT definitions and code to separate files\n\nMove non-wallet PSBT code to src/psbt.{h,cpp}, and PSBT wallet code to\nsrc/wallet/psbtwallet.{h,cpp}. This commit contains only code movement (and\nadjustments to includes and Makefile.am.)",
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-02-11T20:23:14Z"
      },
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-01-09T10:06:29Z"
      },
      "sha": "c6c3d42a7d6b525144fc7fc6653cd11139d2b34a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDBkYmU4NzYzZmMzMDI5Y2Y5NjUzMWM5Y2NhYmEyODBiOTM5NDQ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd0dbe8763fc3029cf96531c9ccaba280b939445",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bd0dbe8763fc3029cf96531c9ccaba280b939445",
      "tree": {
        "sha": "f9ac966b3363bec18db36714ffc37ec3c36dd4be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9ac966b3363bec18db36714ffc37ec3c36dd4be"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6c3d42a7d6b525144fc7fc6653cd11139d2b34a",
          "sha": "c6c3d42a7d6b525144fc7fc6653cd11139d2b34a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c6c3d42a7d6b525144fc7fc6653cd11139d2b34a"
        }
      ],
      "message": "Switch away from exceptions in refactored tx code\n\nAfter refactoring general-purpose PSBT and transaction code out of RPC code,\nfor use in the GUI, it's no longer appropriate to throw exceptions. Instead we\nnow return bools for success, and take an output parameter for an error object.\nWe still use JSONRPCError() for the error objects, since only RPC callers\nactually care about the error codes.",
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-02-11T22:08:04Z"
      },
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-02-10T04:51:33Z"
      },
      "sha": "bd0dbe8763fc3029cf96531c9ccaba280b939445"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGI5ODkzZDAyMGU4YjEzNTE1NjVmMWFkYmY1OTFjYjMyZjZkYzkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78b9893d020e8b1351565f1adbf591cb32f6dc90",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/78b9893d020e8b1351565f1adbf591cb32f6dc90",
      "tree": {
        "sha": "599c5a1b8627fb1681b038d3b89aef07f3ea8663",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/599c5a1b8627fb1681b038d3b89aef07f3ea8663"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd0dbe8763fc3029cf96531c9ccaba280b939445",
          "sha": "bd0dbe8763fc3029cf96531c9ccaba280b939445",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bd0dbe8763fc3029cf96531c9ccaba280b939445"
        }
      ],
      "message": "Remove op== on PSBTs; check compatibility in Merge\n\nRemove the op== on PartiallySignedTransaction, which only checks that the\nCTransactions are equal. Instead, check this directly in Merge, and return\nfalse if the CTransactions are not equal (so the PSBTs cannot be merged.)",
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-02-11T22:08:04Z"
      },
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-01-30T06:51:56Z"
      },
      "sha": "78b9893d020e8b1351565f1adbf591cb32f6dc90"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDJmYWFkODFlZmExY2IxMmMyOWM0NjZjZmU4MWZjOGM3MzUxZTFk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "tree": {
        "sha": "7353c37cc34161eb350e41cac2f1a7e1e8b8ee23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7353c37cc34161eb350e41cac2f1a7e1e8b8ee23"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78b9893d020e8b1351565f1adbf591cb32f6dc90",
          "sha": "78b9893d020e8b1351565f1adbf591cb32f6dc90",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/78b9893d020e8b1351565f1adbf591cb32f6dc90"
        }
      ],
      "message": "Factor out combine / finalize / extract PSBT helpers\n\nRefactor the new CombinePSBT, FinalizePSBT, and FinalizeAndExtractPSBT\ngeneral-purpose functions out of the combinepsbt and finalizepsbt RPCs,\nfor use in the GUI code.",
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-02-11T22:08:04Z"
      },
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-01-09T11:08:32Z"
      },
      "sha": "102faad81efa1cb12c29c466cfe81fc8c7351e1d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2131961621,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEzMTk2MTYyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2131961621",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-11T22:22:30Z"
    },
    {
      "event": "commented",
      "id": 462519173,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjUxOTE3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462519173",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-11T22:23:26Z",
      "updated_at": "2019-02-11T22:23:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-462519173",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "unlabeled",
      "id": 2131989278,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjEzMTk4OTI3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2131989278",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-11T22:36:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 463461849,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzQ2MTg0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463461849",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T02:32:03Z",
      "updated_at": "2019-02-14T02:32:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can 1-2 people who already acked, but haven't looked in awhile, take a quick look and give a reack? I do not expect further changes unless I am forced to rebase again.",
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-463461849",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 463473599,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzQ3MzU5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463473599",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T03:28:10Z",
      "updated_at": "2019-02-14T03:28:10Z",
      "author_association": "MEMBER",
      "body": "utACK 102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-463473599",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "commented",
      "id": 463543262,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzU0MzI2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463543262",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T08:47:57Z",
      "updated_at": "2019-02-14T08:47:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "@gwillen thanks for being so proactive with addressing review comments :)",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#issuecomment-463543262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978"
    },
    {
      "event": "mentioned",
      "id": 2139012419,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEzOTAxMjQxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2139012419",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T08:47:57Z"
    },
    {
      "event": "subscribed",
      "id": 2139012420,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMzkwMTI0MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2139012420",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T08:47:57Z"
    },
    {
      "event": "merged",
      "id": 2139016199,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjEzOTAxNjE5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2139016199",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "created_at": "2019-02-14T08:49:44Z"
    },
    {
      "event": "closed",
      "id": 2139016204,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjEzOTAxNjIwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2139016204",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-14T08:49:44Z"
    },
    {
      "event": "referenced",
      "id": 2139016555,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxMzkwMTY1NTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2139016555",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2452c6cc0a236469629c919f8c693e14ca637a0a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2452c6cc0a236469629c919f8c693e14ca637a0a",
      "created_at": "2019-02-14T08:49:55Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 2141423443,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQyMTQxNDIzNDQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2141423443",
      "actor": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-15T03:01:23Z"
    },
    {
      "event": "referenced",
      "id": 2158288107,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxNTgyODgxMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2158288107",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "169dced9a42bd741b3265adee23e6a8d1f852227",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/169dced9a42bd741b3265adee23e6a8d1f852227",
      "created_at": "2019-02-22T16:15:27Z"
    },
    {
      "event": "referenced",
      "id": 2529626422,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI1Mjk2MjY0MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2529626422",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "be0e8b4bff88b421128239e7140fc6bfdb654806",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/be0e8b4bff88b421128239e7140fc6bfdb654806",
      "created_at": "2019-08-02T13:14:15Z"
    },
    {
      "event": "referenced",
      "id": 3234936918,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzQ5MzY5MTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3234936918",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6ed34f9cc7ccbea7aba7d626c861c5f46c1dd7be",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/6ed34f9cc7ccbea7aba7d626c861c5f46c1dd7be",
      "created_at": "2020-04-15T10:50:07Z"
    },
    {
      "event": "referenced",
      "id": 3234985305,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzQ5ODUzMDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3234985305",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2f3cc194c824c16f652cb65ba672919f28fe13a8",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/2f3cc194c824c16f652cb65ba672919f28fe13a8",
      "created_at": "2020-04-15T11:05:07Z"
    },
    {
      "event": "referenced",
      "id": 3239948123,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzk5NDgxMjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3239948123",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8e37f88fcb4e8e56d98a33830609f2f9dfa5f493",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/8e37f88fcb4e8e56d98a33830609f2f9dfa5f493",
      "created_at": "2020-04-16T13:35:07Z"
    },
    {
      "event": "referenced",
      "id": 3239948132,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzk5NDgxMzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3239948132",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8eef3ca0f3c7e10ea037e459178817a01d2eaccc",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/8eef3ca0f3c7e10ea037e459178817a01d2eaccc",
      "created_at": "2020-04-16T13:35:07Z"
    },
    {
      "event": "referenced",
      "id": 3240084696,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyNDAwODQ2OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3240084696",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "591897335623f9714a57a4dc44cb8390ba9b4d92",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/591897335623f9714a57a4dc44cb8390ba9b4d92",
      "created_at": "2020-04-16T14:05:07Z"
    },
    {
      "event": "referenced",
      "id": 3240084701,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyNDAwODQ3MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3240084701",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0a01c8cf9d86718d4567c8ba6e7e976b2275620c",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/0a01c8cf9d86718d4567c8ba6e7e976b2275620c",
      "created_at": "2020-04-16T14:05:07Z"
    },
    {
      "event": "referenced",
      "id": 3240084708,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyNDAwODQ3MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3240084708",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "082a077015c784dd888cdc345fb16738d39c45f6",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/082a077015c784dd888cdc345fb16738d39c45f6",
      "created_at": "2020-04-16T14:05:07Z"
    },
    {
      "event": "referenced",
      "id": 3660736220,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2NjA3MzYyMjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3660736220",
      "actor": {
        "login": "ftrader",
        "id": 16613123,
        "node_id": "MDQ6VXNlcjE2NjEzMTIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/16613123?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ftrader",
        "html_url": "https://github.com/ftrader",
        "followers_url": "https://api.github.com/users/ftrader/followers",
        "following_url": "https://api.github.com/users/ftrader/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ftrader/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ftrader/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ftrader/subscriptions",
        "organizations_url": "https://api.github.com/users/ftrader/orgs",
        "repos_url": "https://api.github.com/users/ftrader/repos",
        "events_url": "https://api.github.com/users/ftrader/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ftrader/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a3a5c178a4eae2b8ed7355bad61e3df0d1b01efb",
      "commit_url": "https://api.github.com/repos/bitcoin-cash-node/bitcoin-cash-node/commits/a3a5c178a4eae2b8ed7355bad61e3df0d1b01efb",
      "created_at": "2020-08-17T08:19:33Z"
    },
    {
      "event": "referenced",
      "id": 3660736609,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2NjA3MzY2MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3660736609",
      "actor": {
        "login": "ftrader",
        "id": 16613123,
        "node_id": "MDQ6VXNlcjE2NjEzMTIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/16613123?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ftrader",
        "html_url": "https://github.com/ftrader",
        "followers_url": "https://api.github.com/users/ftrader/followers",
        "following_url": "https://api.github.com/users/ftrader/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ftrader/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ftrader/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ftrader/subscriptions",
        "organizations_url": "https://api.github.com/users/ftrader/orgs",
        "repos_url": "https://api.github.com/users/ftrader/repos",
        "events_url": "https://api.github.com/users/ftrader/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ftrader/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "53d01afd0025f0dffb5251e97ec0e927531064fa",
      "commit_url": "https://api.github.com/repos/bitcoin-cash-node/bitcoin-cash-node/commits/53d01afd0025f0dffb5251e97ec0e927531064fa",
      "created_at": "2020-08-17T08:19:38Z"
    },
    {
      "event": "referenced",
      "id": 3660736997,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2NjA3MzY5OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3660736997",
      "actor": {
        "login": "ftrader",
        "id": 16613123,
        "node_id": "MDQ6VXNlcjE2NjEzMTIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/16613123?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ftrader",
        "html_url": "https://github.com/ftrader",
        "followers_url": "https://api.github.com/users/ftrader/followers",
        "following_url": "https://api.github.com/users/ftrader/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ftrader/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ftrader/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ftrader/subscriptions",
        "organizations_url": "https://api.github.com/users/ftrader/orgs",
        "repos_url": "https://api.github.com/users/ftrader/repos",
        "events_url": "https://api.github.com/users/ftrader/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ftrader/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ca3223e4480be09bcfb709fb361c76e80ededf7f",
      "commit_url": "https://api.github.com/repos/bitcoin-cash-node/bitcoin-cash-node/commits/ca3223e4480be09bcfb709fb361c76e80ededf7f",
      "created_at": "2020-08-17T08:19:44Z"
    },
    {
      "event": "referenced",
      "id": 3703373933,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3MDMzNzM5MzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3703373933",
      "actor": {
        "login": "ShengguangXiao",
        "id": 13334642,
        "node_id": "MDQ6VXNlcjEzMzM0NjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/13334642?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ShengguangXiao",
        "html_url": "https://github.com/ShengguangXiao",
        "followers_url": "https://api.github.com/users/ShengguangXiao/followers",
        "following_url": "https://api.github.com/users/ShengguangXiao/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ShengguangXiao/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ShengguangXiao/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ShengguangXiao/subscriptions",
        "organizations_url": "https://api.github.com/users/ShengguangXiao/orgs",
        "repos_url": "https://api.github.com/users/ShengguangXiao/repos",
        "events_url": "https://api.github.com/users/ShengguangXiao/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ShengguangXiao/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "517bfc1ac7ad9318c55a57c217a26e379d07d09e",
      "commit_url": "https://api.github.com/repos/DeFiCh/ain/commits/517bfc1ac7ad9318c55a57c217a26e379d07d09e",
      "created_at": "2020-08-28T10:38:15Z"
    },
    {
      "event": "referenced",
      "id": 4768289227,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NjgyODkyMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4768289227",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a136254822b637f15f7d6e36a8214e3d63f23a48",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/a136254822b637f15f7d6e36a8214e3d63f23a48",
      "created_at": "2021-05-19T17:37:09Z"
    },
    {
      "event": "referenced",
      "id": 4768297007,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NjgyOTcwMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4768297007",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a20dace3e2511545529ae4cd5ccd98965e82360a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/a20dace3e2511545529ae4cd5ccd98965e82360a",
      "created_at": "2021-05-19T17:38:49Z"
    },
    {
      "event": "referenced",
      "id": 4770389338,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NzAzODkzMzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4770389338",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e1a48ebcc71ec2d600b78d67e37ad69b1c65b01e",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/e1a48ebcc71ec2d600b78d67e37ad69b1c65b01e",
      "created_at": "2021-05-20T03:47:34Z"
    },
    {
      "event": "referenced",
      "id": 4770524314,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NzA1MjQzMTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4770524314",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2d3804e68e4401b1deb09cc8ebfcc9d67128ec47",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/2d3804e68e4401b1deb09cc8ebfcc9d67128ec47",
      "created_at": "2021-05-20T04:40:57Z"
    },
    {
      "event": "referenced",
      "id": 4770539588,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NzA1Mzk1ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4770539588",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4476a7e53394a4494cd83f66719b262afafb4c90",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/4476a7e53394a4494cd83f66719b262afafb4c90",
      "created_at": "2021-05-20T04:44:52Z"
    },
    {
      "event": "referenced",
      "id": 4770541851,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NzA1NDE4NTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4770541851",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e3443643f3a7779978ffc56ae6ed82aa143c64ed",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/e3443643f3a7779978ffc56ae6ed82aa143c64ed",
      "created_at": "2021-05-20T04:45:26Z"
    },
    {
      "event": "referenced",
      "id": 4781007283,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3ODEwMDcyODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4781007283",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b76e7fec1f76df08540d90ab6a142d7899f1b49b",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/b76e7fec1f76df08540d90ab6a142d7899f1b49b",
      "created_at": "2021-05-21T19:25:43Z"
    },
    {
      "event": "referenced",
      "id": 4969930407,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5Njk5MzA0MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4969930407",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "11045e8bc59eeac141e32a1e9467b78e06c22268",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/11045e8bc59eeac141e32a1e9467b78e06c22268",
      "created_at": "2021-07-02T07:48:02Z"
    },
    {
      "event": "referenced",
      "id": 4974818102,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NzQ4MTgxMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4974818102",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "00b472a2b9d7bb122a5fef86e73e890be4c33ccf",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/00b472a2b9d7bb122a5fef86e73e890be4c33ccf",
      "created_at": "2021-07-04T06:53:03Z"
    },
    {
      "event": "referenced",
      "id": 5001155698,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMDExNTU2OTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5001155698",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "90e298004edce148b9539f675beb2f57d91e776a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/90e298004edce148b9539f675beb2f57d91e776a",
      "created_at": "2021-07-09T16:02:24Z"
    },
    {
      "event": "referenced",
      "id": 5001162649,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMDExNjI2NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5001162649",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "21158a817c51d2b49598af5ee951fcf287929399",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/21158a817c51d2b49598af5ee951fcf287929399",
      "created_at": "2021-07-09T16:03:54Z"
    },
    {
      "event": "referenced",
      "id": 5026965081,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMjY5NjUwODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5026965081",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d2e2a21b82c9b8048fc8e304e3fb9e6e6c3192f2",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/d2e2a21b82c9b8048fc8e304e3fb9e6e6c3192f2",
      "created_at": "2021-07-15T17:57:34Z"
    },
    {
      "event": "referenced",
      "id": 5031177073,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMzExNzcwNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5031177073",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b88b35790d21d9876bb17fdb584be9f8751ba944",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/b88b35790d21d9876bb17fdb584be9f8751ba944",
      "created_at": "2021-07-16T14:15:52Z"
    },
    {
      "event": "referenced",
      "id": 5095632509,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwOTU2MzI1MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5095632509",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eb2bc0887a11223a8a8dc97b072f0c2685be388f",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/eb2bc0887a11223a8a8dc97b072f0c2685be388f",
      "created_at": "2021-08-01T16:22:56Z"
    },
    {
      "event": "referenced",
      "id": 5116571769,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMTY1NzE3Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5116571769",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a1f386c7ca6eb5398191328d1c5a4321b6de4d33",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/a1f386c7ca6eb5398191328d1c5a4321b6de4d33",
      "created_at": "2021-08-05T10:18:46Z"
    },
    {
      "event": "referenced",
      "id": 5116653722,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMTY2NTM3MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5116653722",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "08b203338ed19678ad8864e4999a9dd3dcc3a24f",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/08b203338ed19678ad8864e4999a9dd3dcc3a24f",
      "created_at": "2021-08-05T10:35:54Z"
    },
    {
      "event": "referenced",
      "id": 5116653768,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMTY2NTM3Njg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5116653768",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b7185f572063ad610c59194189a17023548c5816",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/b7185f572063ad610c59194189a17023548c5816",
      "created_at": "2021-08-05T10:35:55Z"
    },
    {
      "event": "referenced",
      "id": 5116697763,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMTY2OTc3NjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5116697763",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "600c9f891bd1ac57f90242c83df80a9c4e0306b4",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/600c9f891bd1ac57f90242c83df80a9c4e0306b4",
      "created_at": "2021-08-05T10:46:07Z"
    },
    {
      "event": "referenced",
      "id": 5116697801,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMTY2OTc4MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5116697801",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "784992232facf6d3666876a4207d310981897cf0",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/784992232facf6d3666876a4207d310981897cf0",
      "created_at": "2021-08-05T10:46:08Z"
    },
    {
      "event": "referenced",
      "id": 5116706080,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMTY3MDYwODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5116706080",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4a174359e9dd34c3dca4b9ee4cf4fb730a58cf8d",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/4a174359e9dd34c3dca4b9ee4cf4fb730a58cf8d",
      "created_at": "2021-08-05T10:47:55Z"
    },
    {
      "event": "referenced",
      "id": 5118335196,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMTgzMzUxOTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5118335196",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bf30d9ade770a5cba3ad856e69f544f6b6dc64f0",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/bf30d9ade770a5cba3ad856e69f544f6b6dc64f0",
      "created_at": "2021-08-05T15:47:29Z"
    },
    {
      "event": "referenced",
      "id": 5128000275,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMjgwMDAyNzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5128000275",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "522934703a7c23e39c064a04fd09586dbb146f12",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/522934703a7c23e39c064a04fd09586dbb146f12",
      "created_at": "2021-08-09T07:08:28Z"
    },
    {
      "event": "referenced",
      "id": 5137375285,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMzczNzUyODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5137375285",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7aebf156e9896cdafc0522f8bbaf1d49f72f79be",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/7aebf156e9896cdafc0522f8bbaf1d49f72f79be",
      "created_at": "2021-08-10T19:34:28Z"
    },
    {
      "event": "referenced",
      "id": 5149897187,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDk4OTcxODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5149897187",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1d9b4be020eaf0dd132a9a648279647c8b52cc2b",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/1d9b4be020eaf0dd132a9a648279647c8b52cc2b",
      "created_at": "2021-08-12T14:39:42Z"
    },
    {
      "event": "referenced",
      "id": 5149897261,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDk4OTcyNjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5149897261",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a2531f350024ff308fd9a6b9685fd9c4bb663ccb",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/a2531f350024ff308fd9a6b9685fd9c4bb663ccb",
      "created_at": "2021-08-12T14:39:43Z"
    },
    {
      "event": "referenced",
      "id": 5267272647,
      "node_id": "REFE_lADOABII584XVms7zwAAAAE59DPH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5267272647",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "010f5e8a4768ebac9208f302a4323ddd794983d1",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/010f5e8a4768ebac9208f302a4323ddd794983d1",
      "created_at": "2021-09-07T17:55:51Z"
    },
    {
      "event": "referenced",
      "id": 5357725375,
      "node_id": "REFE_lADOABII584XVms7zwAAAAE_WGa_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5357725375",
      "actor": {
        "login": "dzutto",
        "id": 88999501,
        "node_id": "MDQ6VXNlcjg4OTk5NTAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/88999501?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dzutto",
        "html_url": "https://github.com/dzutto",
        "followers_url": "https://api.github.com/users/dzutto/followers",
        "following_url": "https://api.github.com/users/dzutto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dzutto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dzutto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dzutto/subscriptions",
        "organizations_url": "https://api.github.com/users/dzutto/orgs",
        "repos_url": "https://api.github.com/users/dzutto/repos",
        "events_url": "https://api.github.com/users/dzutto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dzutto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4a317e2a934bf755f8690c0d65d9e86e93cabefc",
      "commit_url": "https://api.github.com/repos/dzutto/dash/commits/4a317e2a934bf755f8690c0d65d9e86e93cabefc",
      "created_at": "2021-09-24T18:28:04Z"
    },
    {
      "event": "referenced",
      "id": 5357731157,
      "node_id": "REFE_lADOABII584XVms7zwAAAAE_WH1V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5357731157",
      "actor": {
        "login": "dzutto",
        "id": 88999501,
        "node_id": "MDQ6VXNlcjg4OTk5NTAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/88999501?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dzutto",
        "html_url": "https://github.com/dzutto",
        "followers_url": "https://api.github.com/users/dzutto/followers",
        "following_url": "https://api.github.com/users/dzutto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dzutto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dzutto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dzutto/subscriptions",
        "organizations_url": "https://api.github.com/users/dzutto/orgs",
        "repos_url": "https://api.github.com/users/dzutto/repos",
        "events_url": "https://api.github.com/users/dzutto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dzutto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5c8485e1bfc7fc41b2e3386f79a2997bc47d1f7d",
      "commit_url": "https://api.github.com/repos/dzutto/dash/commits/5c8485e1bfc7fc41b2e3386f79a2997bc47d1f7d",
      "created_at": "2021-09-24T18:29:25Z"
    },
    {
      "event": "referenced",
      "id": 5358117451,
      "node_id": "REFE_lADOABII584XVms7zwAAAAE_XmJL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5358117451",
      "actor": {
        "login": "dzutto",
        "id": 88999501,
        "node_id": "MDQ6VXNlcjg4OTk5NTAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/88999501?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dzutto",
        "html_url": "https://github.com/dzutto",
        "followers_url": "https://api.github.com/users/dzutto/followers",
        "following_url": "https://api.github.com/users/dzutto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dzutto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dzutto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dzutto/subscriptions",
        "organizations_url": "https://api.github.com/users/dzutto/orgs",
        "repos_url": "https://api.github.com/users/dzutto/repos",
        "events_url": "https://api.github.com/users/dzutto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dzutto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9d84be1dd4c06f0529fbd853105f2efb3f761e94",
      "commit_url": "https://api.github.com/repos/dzutto/dash/commits/9d84be1dd4c06f0529fbd853105f2efb3f761e94",
      "created_at": "2021-09-24T20:01:35Z"
    },
    {
      "event": "referenced",
      "id": 5366854692,
      "node_id": "REFE_lADOABII584XVms7zwAAAAE_47Qk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5366854692",
      "actor": {
        "login": "dzutto",
        "id": 88999501,
        "node_id": "MDQ6VXNlcjg4OTk5NTAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/88999501?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dzutto",
        "html_url": "https://github.com/dzutto",
        "followers_url": "https://api.github.com/users/dzutto/followers",
        "following_url": "https://api.github.com/users/dzutto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dzutto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dzutto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dzutto/subscriptions",
        "organizations_url": "https://api.github.com/users/dzutto/orgs",
        "repos_url": "https://api.github.com/users/dzutto/repos",
        "events_url": "https://api.github.com/users/dzutto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dzutto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "46b7464d15632eb6bf95df1800f724ebe182bacc",
      "commit_url": "https://api.github.com/repos/dzutto/dash/commits/46b7464d15632eb6bf95df1800f724ebe182bacc",
      "created_at": "2021-09-27T16:24:14Z"
    },
    {
      "event": "referenced",
      "id": 5390837076,
      "node_id": "REFE_lADOABII584XVms7zwAAAAFBUaVU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5390837076",
      "actor": {
        "login": "dzutto",
        "id": 88999501,
        "node_id": "MDQ6VXNlcjg4OTk5NTAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/88999501?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dzutto",
        "html_url": "https://github.com/dzutto",
        "followers_url": "https://api.github.com/users/dzutto/followers",
        "following_url": "https://api.github.com/users/dzutto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dzutto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dzutto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dzutto/subscriptions",
        "organizations_url": "https://api.github.com/users/dzutto/orgs",
        "repos_url": "https://api.github.com/users/dzutto/repos",
        "events_url": "https://api.github.com/users/dzutto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dzutto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a9ce72a8bb759344bb1cc0bd12e3065f0aa1ff0b",
      "commit_url": "https://api.github.com/repos/dzutto/dash/commits/a9ce72a8bb759344bb1cc0bd12e3065f0aa1ff0b",
      "created_at": "2021-09-30T23:19:26Z"
    },
    {
      "event": "referenced",
      "id": 5446824859,
      "node_id": "REFE_lADOABII584XVms7zwAAAAFEp_Ob",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5446824859",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "963ceb0d92c78b400aa3d73a6f1100f61ff102eb",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/963ceb0d92c78b400aa3d73a6f1100f61ff102eb",
      "created_at": "2021-10-12T04:14:11Z"
    },
    {
      "event": "locked",
      "id": 5778892887,
      "node_id": "LOE_lADOABII584XVms7zwAAAAFYcuhX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778892887",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:50:51Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242032923",
      "pull_request_review_id": 185447650,
      "id": 242032923,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjAzMjkyMw==",
      "diff_hunk": "@@ -176,10 +177,20 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n+bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n {\n-    std::vector<unsigned char> tx_data = DecodeBase64(base64_tx.c_str());\n-    CDataStream ss_data(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n+    bool invalid;\n+    std::string tx_data = DecodeBase64(base64_tx, &invalid);\n+    if (invalid) {\n+        error = \"invalid base64\";\n+        return false;\n+    }\n+    return DecodeRawPSBT(psbt, tx_data, error);\n+}\n+\n+bool DecodeRawPSBT(PartiallySignedTransaction& psbt, const std::string& tx_data, std::string& error)\n+{\n+    CDataStream ss_data(tx_data.begin(), tx_data.end(), SER_NETWORK, PROTOCOL_VERSION);",
      "path": "src/core_read.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "3c91a3ddf583806b211f576a25994d2182d824df",
      "in_reply_to_id": null,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, I thought I was very clever converting this from a std::vector&lt;unsigned char&gt; to a std::string, but the reality appears to be that Clang is happy with this line and g++ hates it, so I'm going to have to massage this back towards the original version a bit, in order to get it to build anywhere but macOS.",
      "created_at": "2018-12-17T06:00:56Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r242032923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242032923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242119943",
      "pull_request_review_id": 185555227,
      "id": 242119943,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjExOTk0Mw==",
      "diff_hunk": "@@ -0,0 +1,562 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_PSBT_H\n+#define BITCOIN_PSBT_H\n+\n+#include <attributes.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+\n+// Magic bytes\n+static constexpr uint8_t PSBT_MAGIC_BYTES[5] = {'p', 's', 'b', 't', 0xff};\n+\n+// Global types\n+static constexpr uint8_t PSBT_GLOBAL_UNSIGNED_TX = 0x00;\n+\n+// Input types\n+static constexpr uint8_t PSBT_IN_NON_WITNESS_UTXO = 0x00;\n+static constexpr uint8_t PSBT_IN_WITNESS_UTXO = 0x01;\n+static constexpr uint8_t PSBT_IN_PARTIAL_SIG = 0x02;\n+static constexpr uint8_t PSBT_IN_SIGHASH = 0x03;\n+static constexpr uint8_t PSBT_IN_REDEEMSCRIPT = 0x04;\n+static constexpr uint8_t PSBT_IN_WITNESSSCRIPT = 0x05;\n+static constexpr uint8_t PSBT_IN_BIP32_DERIVATION = 0x06;\n+static constexpr uint8_t PSBT_IN_SCRIPTSIG = 0x07;\n+static constexpr uint8_t PSBT_IN_SCRIPTWITNESS = 0x08;\n+\n+// Output types\n+static constexpr uint8_t PSBT_OUT_REDEEMSCRIPT = 0x00;\n+static constexpr uint8_t PSBT_OUT_WITNESSSCRIPT = 0x01;\n+static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n+\n+// The separator is 0x00. Reading this in means that the unserializer can interpret it\n+// as a 0 length key which indicates that this is the separator. The separator has no value.\n+static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n+\n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {\n+    // expose superclass constructors\n+    using std::runtime_error::runtime_error;\n+};\n+\n+/** A structure for PSBTs which contain per-input information */\n+struct PSBTInput\n+{\n+    CTransactionRef non_witness_utxo;\n+    CTxOut witness_utxo;\n+    CScript redeem_script;\n+    CScript witness_script;\n+    CScript final_script_sig;\n+    CScriptWitness final_script_witness;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<CKeyID, SigPair> partial_sigs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+    int sighash_type = 0;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTInput& input);\n+    bool IsSane() const;\n+    PSBTInput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the utxo\n+        // If there is a non-witness utxo, then don't add the witness one.\n+        if (non_witness_utxo) {\n+            SerializeToVector(s, PSBT_IN_NON_WITNESS_UTXO);\n+            OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+            SerializeToVector(os, non_witness_utxo);\n+        } else if (!witness_utxo.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_WITNESS_UTXO);\n+            SerializeToVector(s, witness_utxo);\n+        }\n+\n+        if (final_script_sig.empty() && final_script_witness.IsNull()) {\n+            // Write any partial signatures\n+            for (auto sig_pair : partial_sigs) {\n+                SerializeToVector(s, PSBT_IN_PARTIAL_SIG, MakeSpan(sig_pair.second.first));\n+                s << sig_pair.second.second;\n+            }\n+\n+            // Write the sighash type\n+            if (sighash_type > 0) {\n+                SerializeToVector(s, PSBT_IN_SIGHASH);\n+                SerializeToVector(s, sighash_type);\n+            }\n+\n+            // Write the redeem script\n+            if (!redeem_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_REDEEMSCRIPT);\n+                s << redeem_script;\n+            }\n+\n+            // Write the witness script\n+            if (!witness_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_WITNESSSCRIPT);\n+                s << witness_script;\n+            }\n+\n+            // Write any hd keypaths\n+            SerializeHDKeypaths(s, hd_keypaths, PSBT_IN_BIP32_DERIVATION);\n+        }\n+\n+        // Write script sig\n+        if (!final_script_sig.empty()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTSIG);\n+            s << final_script_sig;\n+        }\n+        // write script witness\n+        if (!final_script_witness.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTWITNESS);\n+            SerializeToVector(s, final_script_witness.stack);\n+        }\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {",
      "path": "src/psbt.h",
      "position": 128,
      "original_position": 135,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "2fe27d6e4d78ccf2744be4bd52eb31a1e66f89f5",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Space before `(`. Applies throughout this PR.\r\n\r\nPlease run all new files through `clang-format` :-)",
      "created_at": "2018-12-17T11:57:12Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r242119943",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242119943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242232019",
      "pull_request_review_id": 185695567,
      "id": 242232019,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjIzMjAxOQ==",
      "diff_hunk": "@@ -0,0 +1,562 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_PSBT_H\n+#define BITCOIN_PSBT_H\n+\n+#include <attributes.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+\n+// Magic bytes\n+static constexpr uint8_t PSBT_MAGIC_BYTES[5] = {'p', 's', 'b', 't', 0xff};\n+\n+// Global types\n+static constexpr uint8_t PSBT_GLOBAL_UNSIGNED_TX = 0x00;\n+\n+// Input types\n+static constexpr uint8_t PSBT_IN_NON_WITNESS_UTXO = 0x00;\n+static constexpr uint8_t PSBT_IN_WITNESS_UTXO = 0x01;\n+static constexpr uint8_t PSBT_IN_PARTIAL_SIG = 0x02;\n+static constexpr uint8_t PSBT_IN_SIGHASH = 0x03;\n+static constexpr uint8_t PSBT_IN_REDEEMSCRIPT = 0x04;\n+static constexpr uint8_t PSBT_IN_WITNESSSCRIPT = 0x05;\n+static constexpr uint8_t PSBT_IN_BIP32_DERIVATION = 0x06;\n+static constexpr uint8_t PSBT_IN_SCRIPTSIG = 0x07;\n+static constexpr uint8_t PSBT_IN_SCRIPTWITNESS = 0x08;\n+\n+// Output types\n+static constexpr uint8_t PSBT_OUT_REDEEMSCRIPT = 0x00;\n+static constexpr uint8_t PSBT_OUT_WITNESSSCRIPT = 0x01;\n+static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n+\n+// The separator is 0x00. Reading this in means that the unserializer can interpret it\n+// as a 0 length key which indicates that this is the separator. The separator has no value.\n+static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n+\n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {\n+    // expose superclass constructors\n+    using std::runtime_error::runtime_error;\n+};\n+\n+/** A structure for PSBTs which contain per-input information */\n+struct PSBTInput\n+{\n+    CTransactionRef non_witness_utxo;\n+    CTxOut witness_utxo;\n+    CScript redeem_script;\n+    CScript witness_script;\n+    CScript final_script_sig;\n+    CScriptWitness final_script_witness;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<CKeyID, SigPair> partial_sigs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+    int sighash_type = 0;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTInput& input);\n+    bool IsSane() const;\n+    PSBTInput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the utxo\n+        // If there is a non-witness utxo, then don't add the witness one.\n+        if (non_witness_utxo) {\n+            SerializeToVector(s, PSBT_IN_NON_WITNESS_UTXO);\n+            OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+            SerializeToVector(os, non_witness_utxo);\n+        } else if (!witness_utxo.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_WITNESS_UTXO);\n+            SerializeToVector(s, witness_utxo);\n+        }\n+\n+        if (final_script_sig.empty() && final_script_witness.IsNull()) {\n+            // Write any partial signatures\n+            for (auto sig_pair : partial_sigs) {\n+                SerializeToVector(s, PSBT_IN_PARTIAL_SIG, MakeSpan(sig_pair.second.first));\n+                s << sig_pair.second.second;\n+            }\n+\n+            // Write the sighash type\n+            if (sighash_type > 0) {\n+                SerializeToVector(s, PSBT_IN_SIGHASH);\n+                SerializeToVector(s, sighash_type);\n+            }\n+\n+            // Write the redeem script\n+            if (!redeem_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_REDEEMSCRIPT);\n+                s << redeem_script;\n+            }\n+\n+            // Write the witness script\n+            if (!witness_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_WITNESSSCRIPT);\n+                s << witness_script;\n+            }\n+\n+            // Write any hd keypaths\n+            SerializeHDKeypaths(s, hd_keypaths, PSBT_IN_BIP32_DERIVATION);\n+        }\n+\n+        // Write script sig\n+        if (!final_script_sig.empty()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTSIG);\n+            s << final_script_sig;\n+        }\n+        // write script witness\n+        if (!final_script_witness.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTWITNESS);\n+            SerializeToVector(s, final_script_witness.stack);\n+        }\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {",
      "path": "src/psbt.h",
      "position": 128,
      "original_position": 135,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "2fe27d6e4d78ccf2744be4bd52eb31a1e66f89f5",
      "in_reply_to_id": 242119943,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is moved code, none of this code is new -- I expect I should not actually clang-format it, to preserve move-detection?",
      "created_at": "2018-12-17T17:01:27Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r242232019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242232019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242234962",
      "pull_request_review_id": 185699100,
      "id": 242234962,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjIzNDk2Mg==",
      "diff_hunk": "@@ -0,0 +1,562 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_PSBT_H\n+#define BITCOIN_PSBT_H\n+\n+#include <attributes.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+\n+// Magic bytes\n+static constexpr uint8_t PSBT_MAGIC_BYTES[5] = {'p', 's', 'b', 't', 0xff};\n+\n+// Global types\n+static constexpr uint8_t PSBT_GLOBAL_UNSIGNED_TX = 0x00;\n+\n+// Input types\n+static constexpr uint8_t PSBT_IN_NON_WITNESS_UTXO = 0x00;\n+static constexpr uint8_t PSBT_IN_WITNESS_UTXO = 0x01;\n+static constexpr uint8_t PSBT_IN_PARTIAL_SIG = 0x02;\n+static constexpr uint8_t PSBT_IN_SIGHASH = 0x03;\n+static constexpr uint8_t PSBT_IN_REDEEMSCRIPT = 0x04;\n+static constexpr uint8_t PSBT_IN_WITNESSSCRIPT = 0x05;\n+static constexpr uint8_t PSBT_IN_BIP32_DERIVATION = 0x06;\n+static constexpr uint8_t PSBT_IN_SCRIPTSIG = 0x07;\n+static constexpr uint8_t PSBT_IN_SCRIPTWITNESS = 0x08;\n+\n+// Output types\n+static constexpr uint8_t PSBT_OUT_REDEEMSCRIPT = 0x00;\n+static constexpr uint8_t PSBT_OUT_WITNESSSCRIPT = 0x01;\n+static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n+\n+// The separator is 0x00. Reading this in means that the unserializer can interpret it\n+// as a 0 length key which indicates that this is the separator. The separator has no value.\n+static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n+\n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {\n+    // expose superclass constructors\n+    using std::runtime_error::runtime_error;\n+};\n+\n+/** A structure for PSBTs which contain per-input information */\n+struct PSBTInput\n+{\n+    CTransactionRef non_witness_utxo;\n+    CTxOut witness_utxo;\n+    CScript redeem_script;\n+    CScript witness_script;\n+    CScript final_script_sig;\n+    CScriptWitness final_script_witness;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<CKeyID, SigPair> partial_sigs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+    int sighash_type = 0;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTInput& input);\n+    bool IsSane() const;\n+    PSBTInput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the utxo\n+        // If there is a non-witness utxo, then don't add the witness one.\n+        if (non_witness_utxo) {\n+            SerializeToVector(s, PSBT_IN_NON_WITNESS_UTXO);\n+            OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+            SerializeToVector(os, non_witness_utxo);\n+        } else if (!witness_utxo.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_WITNESS_UTXO);\n+            SerializeToVector(s, witness_utxo);\n+        }\n+\n+        if (final_script_sig.empty() && final_script_witness.IsNull()) {\n+            // Write any partial signatures\n+            for (auto sig_pair : partial_sigs) {\n+                SerializeToVector(s, PSBT_IN_PARTIAL_SIG, MakeSpan(sig_pair.second.first));\n+                s << sig_pair.second.second;\n+            }\n+\n+            // Write the sighash type\n+            if (sighash_type > 0) {\n+                SerializeToVector(s, PSBT_IN_SIGHASH);\n+                SerializeToVector(s, sighash_type);\n+            }\n+\n+            // Write the redeem script\n+            if (!redeem_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_REDEEMSCRIPT);\n+                s << redeem_script;\n+            }\n+\n+            // Write the witness script\n+            if (!witness_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_WITNESSSCRIPT);\n+                s << witness_script;\n+            }\n+\n+            // Write any hd keypaths\n+            SerializeHDKeypaths(s, hd_keypaths, PSBT_IN_BIP32_DERIVATION);\n+        }\n+\n+        // Write script sig\n+        if (!final_script_sig.empty()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTSIG);\n+            s << final_script_sig;\n+        }\n+        // write script witness\n+        if (!final_script_witness.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTWITNESS);\n+            SerializeToVector(s, final_script_witness.stack);\n+        }\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {",
      "path": "src/psbt.h",
      "position": 128,
      "original_position": 135,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "2fe27d6e4d78ccf2744be4bd52eb31a1e66f89f5",
      "in_reply_to_id": 242119943,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree.",
      "created_at": "2018-12-17T17:09:02Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r242234962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242234962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242236541",
      "pull_request_review_id": 185701028,
      "id": 242236541,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjIzNjU0MQ==",
      "diff_hunk": "@@ -0,0 +1,562 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_PSBT_H\n+#define BITCOIN_PSBT_H\n+\n+#include <attributes.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+\n+// Magic bytes\n+static constexpr uint8_t PSBT_MAGIC_BYTES[5] = {'p', 's', 'b', 't', 0xff};\n+\n+// Global types\n+static constexpr uint8_t PSBT_GLOBAL_UNSIGNED_TX = 0x00;\n+\n+// Input types\n+static constexpr uint8_t PSBT_IN_NON_WITNESS_UTXO = 0x00;\n+static constexpr uint8_t PSBT_IN_WITNESS_UTXO = 0x01;\n+static constexpr uint8_t PSBT_IN_PARTIAL_SIG = 0x02;\n+static constexpr uint8_t PSBT_IN_SIGHASH = 0x03;\n+static constexpr uint8_t PSBT_IN_REDEEMSCRIPT = 0x04;\n+static constexpr uint8_t PSBT_IN_WITNESSSCRIPT = 0x05;\n+static constexpr uint8_t PSBT_IN_BIP32_DERIVATION = 0x06;\n+static constexpr uint8_t PSBT_IN_SCRIPTSIG = 0x07;\n+static constexpr uint8_t PSBT_IN_SCRIPTWITNESS = 0x08;\n+\n+// Output types\n+static constexpr uint8_t PSBT_OUT_REDEEMSCRIPT = 0x00;\n+static constexpr uint8_t PSBT_OUT_WITNESSSCRIPT = 0x01;\n+static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n+\n+// The separator is 0x00. Reading this in means that the unserializer can interpret it\n+// as a 0 length key which indicates that this is the separator. The separator has no value.\n+static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n+\n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {\n+    // expose superclass constructors\n+    using std::runtime_error::runtime_error;\n+};\n+\n+/** A structure for PSBTs which contain per-input information */\n+struct PSBTInput\n+{\n+    CTransactionRef non_witness_utxo;\n+    CTxOut witness_utxo;\n+    CScript redeem_script;\n+    CScript witness_script;\n+    CScript final_script_sig;\n+    CScriptWitness final_script_witness;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<CKeyID, SigPair> partial_sigs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+    int sighash_type = 0;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTInput& input);\n+    bool IsSane() const;\n+    PSBTInput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the utxo\n+        // If there is a non-witness utxo, then don't add the witness one.\n+        if (non_witness_utxo) {\n+            SerializeToVector(s, PSBT_IN_NON_WITNESS_UTXO);\n+            OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+            SerializeToVector(os, non_witness_utxo);\n+        } else if (!witness_utxo.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_WITNESS_UTXO);\n+            SerializeToVector(s, witness_utxo);\n+        }\n+\n+        if (final_script_sig.empty() && final_script_witness.IsNull()) {\n+            // Write any partial signatures\n+            for (auto sig_pair : partial_sigs) {\n+                SerializeToVector(s, PSBT_IN_PARTIAL_SIG, MakeSpan(sig_pair.second.first));\n+                s << sig_pair.second.second;\n+            }\n+\n+            // Write the sighash type\n+            if (sighash_type > 0) {\n+                SerializeToVector(s, PSBT_IN_SIGHASH);\n+                SerializeToVector(s, sighash_type);\n+            }\n+\n+            // Write the redeem script\n+            if (!redeem_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_REDEEMSCRIPT);\n+                s << redeem_script;\n+            }\n+\n+            // Write the witness script\n+            if (!witness_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_WITNESSSCRIPT);\n+                s << witness_script;\n+            }\n+\n+            // Write any hd keypaths\n+            SerializeHDKeypaths(s, hd_keypaths, PSBT_IN_BIP32_DERIVATION);\n+        }\n+\n+        // Write script sig\n+        if (!final_script_sig.empty()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTSIG);\n+            s << final_script_sig;\n+        }\n+        // write script witness\n+        if (!final_script_witness.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTWITNESS);\n+            SerializeToVector(s, final_script_witness.stack);\n+        }\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {",
      "path": "src/psbt.h",
      "position": 128,
      "original_position": 135,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "2fe27d6e4d78ccf2744be4bd52eb31a1e66f89f5",
      "in_reply_to_id": 242119943,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense!",
      "created_at": "2018-12-17T17:13:01Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r242236541",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242236541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246489067",
      "pull_request_review_id": 190864363,
      "id": 246489067,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjQ4OTA2Nw==",
      "diff_hunk": "@@ -188,9 +188,9 @@ std::vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)\n     return ret;\n }\n \n-std::string DecodeBase64(const std::string& str)\n+std::string DecodeBase64(const std::string& str, bool* pfInvalid)",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "65cb85e625e11850d21ff133420259a6993d7992",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: variable name should be snake_case. See doc/developer-notes.md for naming convention.",
      "created_at": "2019-01-09T18:22:01Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r246489067",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246489067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246499022",
      "pull_request_review_id": 190864363,
      "id": 246499022,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjQ5OTAyMg==",
      "diff_hunk": "@@ -36,6 +36,14 @@ static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n // as a 0 length key which indicates that this is the separator. The separator has no value.\n static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n \n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 7,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "0edb99e6819fcf36d03558a6ed25a56aa46c936c",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This results in RPC errors with a code `RPC_MISC_ERROR`. I think it would be better if you could somehow make the error code more specific (the message still comes through).",
      "created_at": "2019-01-09T18:54:03Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r246499022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246499022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246574699",
      "pull_request_review_id": 190975008,
      "id": 246574699,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjU3NDY5OQ==",
      "diff_hunk": "@@ -188,9 +188,9 @@ std::vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)\n     return ret;\n }\n \n-std::string DecodeBase64(const std::string& str)\n+std::string DecodeBase64(const std::string& str, bool* pfInvalid)",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "65cb85e625e11850d21ff133420259a6993d7992",
      "in_reply_to_id": 246489067,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was copied from surrounding context (it just wraps the c_str version of the same function, which has the same parameter named the same thing, and I'm propagating it outwards to the wrapper.)",
      "created_at": "2019-01-09T22:43:14Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r246574699",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246574699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246575002",
      "pull_request_review_id": 190975384,
      "id": 246575002,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjU3NTAwMg==",
      "diff_hunk": "@@ -36,6 +36,14 @@ static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n // as a 0 length key which indicates that this is the separator. The separator has no value.\n static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n \n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 7,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "0edb99e6819fcf36d03558a6ed25a56aa46c936c",
      "in_reply_to_id": 246499022,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I'd love any thoughts on how to accomplish this without gunking up non-RPC code too much when it calls this codepath. I don't really want this to depend on the RPC stuff.",
      "created_at": "2019-01-09T22:44:21Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r246575002",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246575002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248217728",
      "pull_request_review_id": 193054911,
      "id": 248217728,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIxNzcyOA==",
      "diff_hunk": "@@ -176,10 +176,20 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n+bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n {\n-    std::vector<unsigned char> tx_data = DecodeBase64(base64_tx.c_str());\n-    CDataStream ss_data(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n+    bool invalid;\n+    std::string tx_data = DecodeBase64(base64_tx, &invalid);\n+    if (invalid) {\n+        error = \"invalid base64\";",
      "path": "src/core_read.cpp",
      "position": 20,
      "original_position": 12,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit 801333b\r\n\r\nCould add test for this new error?",
      "created_at": "2019-01-16T10:01:47Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248217728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248217728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 185,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248218346",
      "pull_request_review_id": 193054911,
      "id": 248218346,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIxODM0Ng==",
      "diff_hunk": "@@ -176,10 +176,20 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n+bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n {\n-    std::vector<unsigned char> tx_data = DecodeBase64(base64_tx.c_str());\n-    CDataStream ss_data(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n+    bool invalid;\n+    std::string tx_data = DecodeBase64(base64_tx, &invalid);\n+    if (invalid) {\n+        error = \"invalid base64\";\n+        return false;\n+    }\n+    return DecodeRawPSBT(psbt, tx_data, error);\n+}\n+\n+bool DecodeRawPSBT(PartiallySignedTransaction& psbt, const std::string& tx_data, std::string& error)\n+{\n+    CDataStream ss_data(tx_data.data(), tx_data.data() + tx_data.size(), SER_NETWORK, PROTOCOL_VERSION);",
      "path": "src/core_read.cpp",
      "position": 28,
      "original_position": 20,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit 801333b\r\n\r\nTo avoid changing this line you could add a commit before with something along:\r\n```diff\r\n--- a/src/streams.h\r\n+++ b/src/streams.h\r\n@@ -236,17 +236,8 @@ public:\r\n         Init(nTypeIn, nVersionIn);\r\n     }\r\n\r\n-    CDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\r\n-    {\r\n-        Init(nTypeIn, nVersionIn);\r\n-    }\r\n-\r\n-    CDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\r\n-    {\r\n-        Init(nTypeIn, nVersionIn);\r\n-    }\r\n-\r\n-    CDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\r\n+    template <typename T>\r\n+    CDataStream(const T& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\r\n     {\r\n         Init(nTypeIn, nVersionIn);\r\n     }\r\n```",
      "created_at": "2019-01-16T10:03:37Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248218346",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248218346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248220308",
      "pull_request_review_id": 193054911,
      "id": 248220308,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIyMDMwOA==",
      "diff_hunk": "@@ -37,7 +37,8 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);",
      "path": "src/core_io.h",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit 801333b\r\n\r\nnit, would be nice see brief comments.",
      "created_at": "2019-01-16T10:09:33Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248220308",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248220308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248220479",
      "pull_request_review_id": 193054911,
      "id": 248220479,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIyMDQ3OQ==",
      "diff_hunk": "@@ -37,7 +37,8 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodeRawPSBT(PartiallySignedTransaction& psbt, const std::string& tx_data, std::string& error);",
      "path": "src/core_io.h",
      "position": null,
      "original_position": 6,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit 801333b\r\n\r\nnit, s/tx_data/raw_tx?",
      "created_at": "2019-01-16T10:10:05Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248220479",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248220479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248222592",
      "pull_request_review_id": 193054911,
      "id": 248222592,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIyMjU5Mg==",
      "diff_hunk": "@@ -13,6 +13,9 @@ namespace interfaces {\n class Chain;\n } // namespace interfaces\n \n+/** Broadcast a transaction */\n+std::string BroadcastTransaction(CTransactionRef tx, bool allowhighfees = false);",
      "path": "src/rpc/rawtransaction.h",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit 745c540\r\n\r\nShouldn't this be elsewhere if the goal is to use in the GUI?\r\n\r\nI think this should return `uint256`.\r\n\r\nnit, could document that the transaction id is returned.\r\n\r\nnit, s/allowhighfees/allow_high_fees.",
      "created_at": "2019-01-16T10:16:35Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248222592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248222592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248223984",
      "pull_request_review_id": 193054911,
      "id": 248223984,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIyMzk4NA==",
      "diff_hunk": "@@ -1030,19 +1030,24 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    std::promise<void> promise;\n-\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n \n     // parse hex string from parameter\n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_str()))\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+\n+    bool allowhighfees = !request.params[1].isNull() && request.params[1].get_bool();",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit 745c540\r\n\r\nnit, despite being valid I think it's more readable in the form:\r\n```cpp\r\nbool allowhighfees = false;\r\nif (!request.params[1].isNull()) allowhighfees = request.params[1].get_bool();\r\n```\r\nBecause it is more clear the default value.",
      "created_at": "2019-01-16T10:20:11Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248223984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248223984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1042,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248233535",
      "pull_request_review_id": 193054911,
      "id": 248233535,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIzMzUzNQ==",
      "diff_hunk": "@@ -36,6 +36,14 @@ static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n // as a 0 length key which indicates that this is the separator. The separator has no value.\n static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n \n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 7,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "0edb99e6819fcf36d03558a6ed25a56aa46c936c",
      "in_reply_to_id": 246499022,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thread https://github.com/bitcoin/bitcoin/pull/14978/commits/617247cbc1622667a493772214fc8416066b3908#r246575002\r\n\r\nOne simple way this could be achieved is to add custom error handler to `CRPCCommand` which would translate this exception to the desired output.\r\n\r\nOne non intrusive way to add the error handler is to set it in\r\nhttps://github.com/bitcoin/bitcoin/blob/391a27376b30492f55b398fc220ee96cf3769a32/src/wallet/rpcwallet.cpp#L4194-L4197\r\n\r\nThis way all desired commands would share the same error handling and then we can start removing duplicate error messages in the code by introducing more specific exceptions.",
      "created_at": "2019-01-16T10:48:18Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248233535",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248233535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248234110",
      "pull_request_review_id": 193054911,
      "id": 248234110,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIzNDExMA==",
      "diff_hunk": "@@ -391,20 +391,15 @@ struct PartiallySignedTransaction\n     std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n \n     bool IsNull() const;\n-    void Merge(const PartiallySignedTransaction& psbt);\n+    NODISCARD bool Merge(const PartiallySignedTransaction& psbt);\n     bool IsSane() const;\n     PartiallySignedTransaction() {}\n     PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n     explicit PartiallySignedTransaction(const CTransaction& tx);\n \n-    // Only checks if they refer to the same transaction\n-    friend bool operator==(const PartiallySignedTransaction& a, const PartiallySignedTransaction &b)\n-    {\n-        return a.tx->GetHash() == b.tx->GetHash();\n-    }\n-    friend bool operator!=(const PartiallySignedTransaction& a, const PartiallySignedTransaction &b)\n-    {\n-        return !(a == b);\n+    // Checks if they refer to the same underlying CTransaction\n+    bool SameTx(const PartiallySignedTransaction& psbt) {",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 20,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "08ef528c044ecea74a4d1bff75389afbdd3b7a2f",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit 08ef528\r\n\r\nIf this is only used once and you now it's called from `Merge` then I suggest to inline it there.",
      "created_at": "2019-01-16T10:50:12Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248234110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248234110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 401,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248236086",
      "pull_request_review_id": 193054911,
      "id": 248236086,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIzNjA4Ng==",
      "diff_hunk": "@@ -391,20 +391,15 @@ struct PartiallySignedTransaction\n     std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n \n     bool IsNull() const;\n-    void Merge(const PartiallySignedTransaction& psbt);\n+    NODISCARD bool Merge(const PartiallySignedTransaction& psbt);",
      "path": "src/psbt.h",
      "position": 390,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "08ef528c044ecea74a4d1bff75389afbdd3b7a2f",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit 08ef528\r\n\r\nAdd comment explaining the return value.",
      "created_at": "2019-01-16T10:56:18Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248236086",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248236086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 390,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248238602",
      "pull_request_review_id": 193054911,
      "id": 248238602,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODIzODYwMg==",
      "diff_hunk": "@@ -232,3 +232,44 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n \n     return sig_complete;\n }\n+\n+void FinalizePSBT(PartiallySignedTransaction& psbtx, bool extract, std::string& result, bool& complete) {\n+    // Finalize input signatures -- in case we have partial signatures that add up to a complete\n+    //   signature, but have not combined them yet (e.g. because the combiner that created this\n+    //   PartiallySignedTransaction did not understand them), this will combine them into a final\n+    //   script.\n+    complete = true;\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, SIGHASH_ALL);\n+    }\n+\n+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+    if (complete && extract) {\n+        CMutableTransaction mtx(*psbtx.tx);\n+        for (unsigned int i = 0; i < mtx.vin.size(); ++i) {\n+            mtx.vin[i].scriptSig = psbtx.inputs[i].final_script_sig;\n+            mtx.vin[i].scriptWitness = psbtx.inputs[i].final_script_witness;\n+        }\n+        ssTx << mtx;\n+        result = HexStr(ssTx.str());\n+    } else {\n+        ssTx << psbtx;\n+        result = EncodeBase64(ssTx.str());\n+    }\n+}\n+\n+PartiallySignedTransaction CombinePSBTs(std::vector<PartiallySignedTransaction> psbtxs) {",
      "path": "src/psbt.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "c062d74e1187e481960ca6868a46642b8bbfbd2e",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit c062d74\r\n\r\nMake the argument a const reference.\r\n\r\nnit, brace on new line.",
      "created_at": "2019-01-16T11:04:13Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248238602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248238602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248499054",
      "pull_request_review_id": 193412608,
      "id": 248499054,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODQ5OTA1NA==",
      "diff_hunk": "@@ -188,9 +188,9 @@ std::vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)\n     return ret;\n }\n \n-std::string DecodeBase64(const std::string& str)\n+std::string DecodeBase64(const std::string& str, bool* pfInvalid)",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "65cb85e625e11850d21ff133420259a6993d7992",
      "in_reply_to_id": 246489067,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md:\r\n\r\n> When writing patches, favor the new style over attempting to mimic the surrounding style, except for move-only commits.",
      "created_at": "2019-01-17T00:11:44Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248499054",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248499054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248499937",
      "pull_request_review_id": 193412608,
      "id": 248499937,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODQ5OTkzNw==",
      "diff_hunk": "@@ -13,6 +13,9 @@ namespace interfaces {\n class Chain;\n } // namespace interfaces\n \n+/** Broadcast a transaction */\n+std::string BroadcastTransaction(CTransactionRef tx, bool allowhighfees = false);",
      "path": "src/rpc/rawtransaction.h",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 248222592,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Returning uint256 seems more natural indeed.",
      "created_at": "2019-01-17T00:16:14Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248499937",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248499937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248500788",
      "pull_request_review_id": 193412608,
      "id": 248500788,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODUwMDc4OA==",
      "diff_hunk": "@@ -36,6 +36,14 @@ static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n // as a 0 length key which indicates that this is the separator. The separator has no value.\n static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n \n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 7,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "0edb99e6819fcf36d03558a6ed25a56aa46c936c",
      "in_reply_to_id": 246499022,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm slightly worried about the use of exceptions in code that use usable in more places than just RPC, as C++ can't guarantee that all possible exceptions are being dealt with at the right layer.\r\n\r\nWould an enum with PSBT-related error codes, plus a enum to string conversion function (like in script/script_error) make sense?",
      "created_at": "2019-01-17T00:21:12Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r248500788",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248500788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249129561",
      "pull_request_review_id": 194209720,
      "id": 249129561,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTEyOTU2MQ==",
      "diff_hunk": "@@ -188,9 +188,9 @@ std::vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)\n     return ret;\n }\n \n-std::string DecodeBase64(const std::string& str)\n+std::string DecodeBase64(const std::string& str, bool* pfInvalid)",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "65cb85e625e11850d21ff133420259a6993d7992",
      "in_reply_to_id": 246489067,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: we're only calling `DecodeBase64` in a handful of places, so you could also change the return type to `bool` and pass the output string as a reference param. Though it also makes sense to remain consistent with the existing (char*) methods.",
      "created_at": "2019-01-18T17:45:42Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r249129561",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249129561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249132854",
      "pull_request_review_id": 194209720,
      "id": 249132854,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTEzMjg1NA==",
      "diff_hunk": "@@ -37,7 +37,8 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodeRawPSBT(PartiallySignedTransaction& psbt, const std::string& tx_data, std::string& error);",
      "path": "src/core_io.h",
      "position": null,
      "original_position": 6,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": 248220479,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Both `tx_data` and `raw_tx` suggest a transaction hex. Something like `raw_psbt` is probably more clear, and consistent with the function name.",
      "created_at": "2019-01-18T17:56:36Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r249132854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249132854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249133382",
      "pull_request_review_id": 194209720,
      "id": 249133382,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTEzMzM4Mg==",
      "diff_hunk": "@@ -37,7 +37,8 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);",
      "path": "src/core_io.h",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": 248220308,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `base64_psbt` (see next comment)",
      "created_at": "2019-01-18T17:58:27Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r249133382",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249133382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249134420",
      "pull_request_review_id": 194209720,
      "id": 249134420,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTEzNDQyMA==",
      "diff_hunk": "@@ -1030,19 +1030,24 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    std::promise<void> promise;",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 31,
      "original_position": 4,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Currently in 745c540d05f4a21810eccc5e9450e9b321560560, wrong commit?",
      "created_at": "2019-01-18T18:01:54Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r249134420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249134420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1044,
      "original_line": 1044,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249134860",
      "pull_request_review_id": 194209720,
      "id": 249134860,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTEzNDg2MA==",
      "diff_hunk": "@@ -13,6 +13,9 @@ namespace interfaces {\n class Chain;\n } // namespace interfaces\n \n+/** Broadcast a transaction */\n+std::string BroadcastTransaction(CTransactionRef tx, bool allowhighfees = false);",
      "path": "src/rpc/rawtransaction.h",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 248222592,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I also need access to this function in #14912 from other wallet RPC methods. Not really an issue, because I can always include `src/rpc/rawtransaction.h`. But perhaps create a new `src/wallet/transaction.cpp`?\r\n\r\nI might add `BroadcastTransaction(PartiallySignedTransaction psbt, bool allowhighfees = false)` in my own PR.",
      "created_at": "2019-01-18T18:03:38Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r249134860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249134860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250597281",
      "pull_request_review_id": 196018112,
      "id": 250597281,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDU5NzI4MQ==",
      "diff_hunk": "@@ -0,0 +1,562 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_PSBT_H\n+#define BITCOIN_PSBT_H\n+\n+#include <attributes.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+\n+// Magic bytes\n+static constexpr uint8_t PSBT_MAGIC_BYTES[5] = {'p', 's', 'b', 't', 0xff};\n+\n+// Global types\n+static constexpr uint8_t PSBT_GLOBAL_UNSIGNED_TX = 0x00;\n+\n+// Input types\n+static constexpr uint8_t PSBT_IN_NON_WITNESS_UTXO = 0x00;\n+static constexpr uint8_t PSBT_IN_WITNESS_UTXO = 0x01;\n+static constexpr uint8_t PSBT_IN_PARTIAL_SIG = 0x02;\n+static constexpr uint8_t PSBT_IN_SIGHASH = 0x03;\n+static constexpr uint8_t PSBT_IN_REDEEMSCRIPT = 0x04;\n+static constexpr uint8_t PSBT_IN_WITNESSSCRIPT = 0x05;\n+static constexpr uint8_t PSBT_IN_BIP32_DERIVATION = 0x06;\n+static constexpr uint8_t PSBT_IN_SCRIPTSIG = 0x07;\n+static constexpr uint8_t PSBT_IN_SCRIPTWITNESS = 0x08;\n+\n+// Output types\n+static constexpr uint8_t PSBT_OUT_REDEEMSCRIPT = 0x00;\n+static constexpr uint8_t PSBT_OUT_WITNESSSCRIPT = 0x01;\n+static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n+\n+// The separator is 0x00. Reading this in means that the unserializer can interpret it\n+// as a 0 length key which indicates that this is the separator. The separator has no value.\n+static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n+\n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {\n+    // expose superclass constructors\n+    using std::runtime_error::runtime_error;\n+};\n+\n+/** A structure for PSBTs which contain per-input information */\n+struct PSBTInput\n+{\n+    CTransactionRef non_witness_utxo;\n+    CTxOut witness_utxo;\n+    CScript redeem_script;\n+    CScript witness_script;\n+    CScript final_script_sig;\n+    CScriptWitness final_script_witness;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<CKeyID, SigPair> partial_sigs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+    int sighash_type = 0;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTInput& input);\n+    bool IsSane() const;\n+    PSBTInput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the utxo\n+        // If there is a non-witness utxo, then don't add the witness one.\n+        if (non_witness_utxo) {\n+            SerializeToVector(s, PSBT_IN_NON_WITNESS_UTXO);\n+            OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+            SerializeToVector(os, non_witness_utxo);\n+        } else if (!witness_utxo.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_WITNESS_UTXO);\n+            SerializeToVector(s, witness_utxo);\n+        }\n+\n+        if (final_script_sig.empty() && final_script_witness.IsNull()) {\n+            // Write any partial signatures\n+            for (auto sig_pair : partial_sigs) {\n+                SerializeToVector(s, PSBT_IN_PARTIAL_SIG, MakeSpan(sig_pair.second.first));\n+                s << sig_pair.second.second;\n+            }\n+\n+            // Write the sighash type\n+            if (sighash_type > 0) {\n+                SerializeToVector(s, PSBT_IN_SIGHASH);\n+                SerializeToVector(s, sighash_type);\n+            }\n+\n+            // Write the redeem script\n+            if (!redeem_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_REDEEMSCRIPT);\n+                s << redeem_script;\n+            }\n+\n+            // Write the witness script\n+            if (!witness_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_WITNESSSCRIPT);\n+                s << witness_script;\n+            }\n+\n+            // Write any hd keypaths\n+            SerializeHDKeypaths(s, hd_keypaths, PSBT_IN_BIP32_DERIVATION);\n+        }\n+\n+        // Write script sig\n+        if (!final_script_sig.empty()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTSIG);\n+            s << final_script_sig;\n+        }\n+        // write script witness\n+        if (!final_script_witness.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTWITNESS);\n+            SerializeToVector(s, final_script_witness.stack);\n+        }\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_IN_NON_WITNESS_UTXO:\n+                {\n+                    if (non_witness_utxo) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input non-witness utxo already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Non-witness utxo key is more than one byte type\");\n+                    }\n+                    // Set the stream to unserialize with witness since this is always a valid network transaction\n+                    OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() & ~SERIALIZE_TRANSACTION_NO_WITNESS);\n+                    UnserializeFromVector(os, non_witness_utxo);\n+                    break;\n+                }\n+                case PSBT_IN_WITNESS_UTXO:\n+                    if (!witness_utxo.IsNull()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input witness utxo already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Witness utxo key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, witness_utxo);\n+                    break;\n+                case PSBT_IN_PARTIAL_SIG:\n+                {\n+                    // Make sure that the key is the size of pubkey + 1\n+                    if (key.size() != CPubKey::PUBLIC_KEY_SIZE + 1 && key.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1) {\n+                        throw std::ios_base::failure(\"Size of key was not the expected size for the type partial signature pubkey\");\n+                    }\n+                    // Read in the pubkey from key\n+                    CPubKey pubkey(key.begin() + 1, key.end());\n+                    if (!pubkey.IsFullyValid()) {\n+                       throw std::ios_base::failure(\"Invalid pubkey\");\n+                    }\n+                    if (partial_sigs.count(pubkey.GetID()) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input partial signature for pubkey already provided\");\n+                    }\n+\n+                    // Read in the signature from value\n+                    std::vector<unsigned char> sig;\n+                    s >> sig;\n+\n+                    // Add to list\n+                    partial_sigs.emplace(pubkey.GetID(), SigPair(pubkey, std::move(sig)));\n+                    break;\n+                }\n+                case PSBT_IN_SIGHASH:\n+                    if (sighash_type > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input sighash type already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Sighash type key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, sighash_type);\n+                    break;\n+                case PSBT_IN_REDEEMSCRIPT:\n+                {\n+                    if (!redeem_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input redeemScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Input redeemScript key is more than one byte type\");\n+                    }\n+                    s >> redeem_script;\n+                    break;\n+                }\n+                case PSBT_IN_WITNESSSCRIPT:\n+                {\n+                    if (!witness_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input witnessScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Input witnessScript key is more than one byte type\");\n+                    }\n+                    s >> witness_script;\n+                    break;\n+                }\n+                case PSBT_IN_BIP32_DERIVATION:\n+                {\n+                    DeserializeHDKeypaths(s, key, hd_keypaths);\n+                    break;\n+                }\n+                case PSBT_IN_SCRIPTSIG:\n+                {\n+                    if (!final_script_sig.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input final scriptSig already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Final scriptSig key is more than one byte type\");\n+                    }\n+                    s >> final_script_sig;\n+                    break;\n+                }\n+                case PSBT_IN_SCRIPTWITNESS:\n+                {\n+                    if (!final_script_witness.IsNull()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input final scriptWitness already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Final scriptWitness key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, final_script_witness.stack);\n+                    break;\n+                }\n+                // Unknown stuff\n+                default:\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                    break;\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an input map\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PSBTInput(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** A structure for PSBTs which contains per output information */\n+struct PSBTOutput\n+{\n+    CScript redeem_script;\n+    CScript witness_script;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTOutput& output);\n+    bool IsSane() const;\n+    PSBTOutput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the redeem script\n+        if (!redeem_script.empty()) {\n+            SerializeToVector(s, PSBT_OUT_REDEEMSCRIPT);\n+            s << redeem_script;\n+        }\n+\n+        // Write the witness script\n+        if (!witness_script.empty()) {\n+            SerializeToVector(s, PSBT_OUT_WITNESSSCRIPT);\n+            s << witness_script;\n+        }\n+\n+        // Write any hd keypaths\n+        SerializeHDKeypaths(s, hd_keypaths, PSBT_OUT_BIP32_DERIVATION);\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_OUT_REDEEMSCRIPT:\n+                {\n+                    if (!redeem_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, output redeemScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Output redeemScript key is more than one byte type\");\n+                    }\n+                    s >> redeem_script;\n+                    break;\n+                }\n+                case PSBT_OUT_WITNESSSCRIPT:\n+                {\n+                    if (!witness_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, output witnessScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Output witnessScript key is more than one byte type\");\n+                    }\n+                    s >> witness_script;\n+                    break;\n+                }\n+                case PSBT_OUT_BIP32_DERIVATION:\n+                {\n+                    DeserializeHDKeypaths(s, key, hd_keypaths);\n+                    break;\n+                }\n+                // Unknown stuff\n+                default: {\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                    break;\n+                }\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an output map\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PSBTOutput(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** A version of CTransaction with the PSBT format*/\n+struct PartiallySignedTransaction\n+{\n+    boost::optional<CMutableTransaction> tx;\n+    std::vector<PSBTInput> inputs;\n+    std::vector<PSBTOutput> outputs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+\n+    bool IsNull() const;\n+    NODISCARD bool Merge(const PartiallySignedTransaction& psbt);\n+    bool IsSane() const;\n+    PartiallySignedTransaction() {}\n+    PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n+    explicit PartiallySignedTransaction(const CTransaction& tx);\n+\n+    // Checks if they refer to the same underlying CTransaction\n+    bool SameTx(const PartiallySignedTransaction& psbt) {\n+        return tx->GetHash() == psbt.tx->GetHash();\n+    }\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+\n+        // magic bytes\n+        s << PSBT_MAGIC_BYTES;\n+\n+        // unsigned tx flag\n+        SerializeToVector(s, PSBT_GLOBAL_UNSIGNED_TX);\n+\n+        // Write serialized tx to a stream\n+        OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+        SerializeToVector(os, *tx);\n+\n+        // Write the unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        // Separator\n+        s << PSBT_SEPARATOR;\n+\n+        // Write inputs\n+        for (const PSBTInput& input : inputs) {\n+            s << input;\n+        }\n+        // Write outputs\n+        for (const PSBTOutput& output : outputs) {\n+            s << output;\n+        }\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read the magic bytes\n+        uint8_t magic[5];\n+        s >> magic;\n+        if (!std::equal(magic, magic + 5, PSBT_MAGIC_BYTES)) {\n+            throw std::ios_base::failure(\"Invalid PSBT magic bytes\");\n+        }\n+\n+        // Read global data\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_GLOBAL_UNSIGNED_TX:\n+                {\n+                    if (tx) {\n+                        throw std::ios_base::failure(\"Duplicate Key, unsigned tx already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Global unsigned tx key is more than one byte type\");\n+                    }\n+                    CMutableTransaction mtx;\n+                    // Set the stream to serialize with non-witness since this should always be non-witness\n+                    OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+                    UnserializeFromVector(os, mtx);\n+                    tx = std::move(mtx);\n+                    // Make sure that all scriptSigs and scriptWitnesses are empty\n+                    for (const CTxIn& txin : tx->vin) {\n+                        if (!txin.scriptSig.empty() || !txin.scriptWitness.IsNull()) {\n+                            throw std::ios_base::failure(\"Unsigned tx does not have empty scriptSigs and scriptWitnesses.\");\n+                        }\n+                    }\n+                    break;\n+                }\n+                // Unknown stuff\n+                default: {\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                }\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of the global map\");\n+        }\n+\n+        // Make sure that we got an unsigned tx\n+        if (!tx) {\n+            throw std::ios_base::failure(\"No unsigned transcation was provided\");\n+        }\n+\n+        // Read input data\n+        unsigned int i = 0;\n+        while (!s.empty() && i < tx->vin.size()) {\n+            PSBTInput input;\n+            s >> input;\n+            inputs.push_back(input);\n+\n+            // Make sure the non-witness utxo matches the outpoint\n+            if (input.non_witness_utxo && input.non_witness_utxo->GetHash() != tx->vin[i].prevout.hash) {\n+                throw std::ios_base::failure(\"Non-witness UTXO does not match outpoint hash\");\n+            }\n+            ++i;\n+        }\n+        // Make sure that the number of inputs matches the number of inputs in the transaction\n+        if (inputs.size() != tx->vin.size()) {\n+            throw std::ios_base::failure(\"Inputs provided does not match the number of inputs in transaction.\");\n+        }\n+\n+        // Read output data\n+        i = 0;\n+        while (!s.empty() && i < tx->vout.size()) {\n+            PSBTOutput output;\n+            s >> output;\n+            outputs.push_back(output);\n+            ++i;\n+        }\n+        // Make sure that the number of outputs matches the number of outputs in the transaction\n+        if (outputs.size() != tx->vout.size()) {\n+            throw std::ios_base::failure(\"Outputs provided does not match the number of outputs in transaction.\");\n+        }\n+        // Sanity check\n+        if (!IsSane()) {\n+            throw std::ios_base::failure(\"PSBT is not sane.\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PartiallySignedTransaction(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** Checks whether a PSBTInput is already signed. */\n+bool PSBTInputSigned(PSBTInput& input);\n+\n+/** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash = SIGHASH_ALL);\n+\n+/** Finalizes a PSBT if possible, combining partial signatures and optionally extracting to a signed transaction ready for sending. */",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 556,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "c062d74e1187e481960ca6868a46642b8bbfbd2e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you add parameter info here? Try:\r\n\r\n```cpp\r\n/**\r\n * Finalizes a PSBT if possible, combining partial signatures and optionally\r\n * extracting to a signed transaction ready for sending.\r\n *\r\n * @param[in] &psbtx  reference to PartiallySignedTransaction\r\n * @param[in] extract whether to extract the transaction as a hex string\r\n * @param[in] &result PSBT as base64 or transaction as hex string\r\n * @param[in] &complete  \r\n */\r\n```\r\n\r\nAlso, in some other places in the code I see a convention of starting with output parameters and moving optional stuff to the end. So in that case maybe switch `complete` with `extract`.\r\n\r\nFinally I think `extract_tx` would be more clear. Would also rather leave result empty if extract is false. In that case `std::string& result` can be renamed to `tx_hex`.\r\n\r\nThough maybe that's too much refactoring for this PR.",
      "created_at": "2019-01-24T13:07:00Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r250597281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250597281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 556,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250610209",
      "pull_request_review_id": 196018112,
      "id": 250610209,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDYxMDIwOQ==",
      "diff_hunk": "@@ -1030,19 +1030,24 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    std::promise<void> promise;\n-\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n \n     // parse hex string from parameter\n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_str()))\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+\n+    bool allowhighfees = !request.params[1].isNull() && request.params[1].get_bool();\n+    return BroadcastTransaction(tx, allowhighfees);\n+}\n+\n+std::string BroadcastTransaction(CTransactionRef tx, bool allowhighfees) {",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: const params",
      "created_at": "2019-01-24T13:46:44Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r250610209",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250610209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1046,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251696573",
      "pull_request_review_id": 197383327,
      "id": 251696573,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTY5NjU3Mw==",
      "diff_hunk": "@@ -188,9 +188,9 @@ std::vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)\n     return ret;\n }\n \n-std::string DecodeBase64(const std::string& str)\n+std::string DecodeBase64(const std::string& str, bool* pfInvalid)",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "65cb85e625e11850d21ff133420259a6993d7992",
      "in_reply_to_id": 246489067,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I will fix the argument name, but otherwise leave things alone unless you would strongly prefer the more invasive changes. (I am changing pfInvalid to pf_invalid everywhere in the surrounding context, because it will drive me completely nuts to make it inconsistent. Please don't make me do that.)",
      "created_at": "2019-01-29T05:33:21Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251696573",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251696573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251703558",
      "pull_request_review_id": 197391347,
      "id": 251703558,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTcwMzU1OA==",
      "diff_hunk": "@@ -1030,19 +1030,24 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    std::promise<void> promise;",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 31,
      "original_position": 4,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 249134420,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's the right commit? It moves into BroadcastTransaction.",
      "created_at": "2019-01-29T06:16:52Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251703558",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251703558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1044,
      "original_line": 1044,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251712255",
      "pull_request_review_id": 197401608,
      "id": 251712255,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTcxMjI1NQ==",
      "diff_hunk": "@@ -176,10 +176,20 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n+bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n {\n-    std::vector<unsigned char> tx_data = DecodeBase64(base64_tx.c_str());\n-    CDataStream ss_data(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n+    bool invalid;\n+    std::string tx_data = DecodeBase64(base64_tx, &invalid);\n+    if (invalid) {\n+        error = \"invalid base64\";\n+        return false;\n+    }\n+    return DecodeRawPSBT(psbt, tx_data, error);\n+}\n+\n+bool DecodeRawPSBT(PartiallySignedTransaction& psbt, const std::string& tx_data, std::string& error)\n+{\n+    CDataStream ss_data(tx_data.data(), tx_data.data() + tx_data.size(), SER_NETWORK, PROTOCOL_VERSION);",
      "path": "src/core_read.cpp",
      "position": 28,
      "original_position": 20,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": 248218346,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this safe (does it not \"prove too much\")? Certainly I can imagine it might cause worse error messages in some cases. I assume it wasn't done that way for some reason originally?",
      "created_at": "2019-01-29T07:04:07Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251712255",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251712255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251712533",
      "pull_request_review_id": 197401950,
      "id": 251712533,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTcxMjUzMw==",
      "diff_hunk": "@@ -13,6 +13,9 @@ namespace interfaces {\n class Chain;\n } // namespace interfaces\n \n+/** Broadcast a transaction */\n+std::string BroadcastTransaction(CTransactionRef tx, bool allowhighfees = false);",
      "path": "src/rpc/rawtransaction.h",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 248222592,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed that this should be elsewhere, I will create src/wallet/transaction.cpp for it. (I was reluctant to be too original just to move a single function, but I prefer it that way also.) And agree regarding the return value, will change it.\r\n\r\nI don't think there's too much additional value in taking a PartiallySignedTransaction, since finalization always results in a CTransaction.",
      "created_at": "2019-01-29T07:05:38Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251712533",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251712533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251713802",
      "pull_request_review_id": 197403378,
      "id": 251713802,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTcxMzgwMg==",
      "diff_hunk": "@@ -37,7 +37,8 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);",
      "path": "src/core_io.h",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": 248220308,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2019-01-29T07:11:54Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251713802",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251713802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251713815",
      "pull_request_review_id": 197403398,
      "id": 251713815,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTcxMzgxNQ==",
      "diff_hunk": "@@ -37,7 +37,8 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodeRawPSBT(PartiallySignedTransaction& psbt, const std::string& tx_data, std::string& error);",
      "path": "src/core_io.h",
      "position": null,
      "original_position": 6,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": 248220479,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2019-01-29T07:11:59Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251713815",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251713815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251713828",
      "pull_request_review_id": 197403416,
      "id": 251713828,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTcxMzgyOA==",
      "diff_hunk": "@@ -176,10 +176,20 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n+bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n {\n-    std::vector<unsigned char> tx_data = DecodeBase64(base64_tx.c_str());\n-    CDataStream ss_data(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n+    bool invalid;\n+    std::string tx_data = DecodeBase64(base64_tx, &invalid);\n+    if (invalid) {\n+        error = \"invalid base64\";",
      "path": "src/core_read.cpp",
      "position": 20,
      "original_position": 12,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": 248217728,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2019-01-29T07:12:04Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251713828",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251713828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 185,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251883895",
      "pull_request_review_id": 197617203,
      "id": 251883895,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTg4Mzg5NQ==",
      "diff_hunk": "@@ -188,9 +188,9 @@ std::vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)\n     return ret;\n }\n \n-std::string DecodeBase64(const std::string& str)\n+std::string DecodeBase64(const std::string& str, bool* pfInvalid)",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "65cb85e625e11850d21ff133420259a6993d7992",
      "in_reply_to_id": 246489067,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, let's not do too much in this PR.",
      "created_at": "2019-01-29T15:33:03Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251883895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251883895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251884271",
      "pull_request_review_id": 197617703,
      "id": 251884271,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTg4NDI3MQ==",
      "diff_hunk": "@@ -176,10 +176,20 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n+bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n {\n-    std::vector<unsigned char> tx_data = DecodeBase64(base64_tx.c_str());\n-    CDataStream ss_data(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n+    bool invalid;\n+    std::string tx_data = DecodeBase64(base64_tx, &invalid);\n+    if (invalid) {\n+        error = \"invalid base64\";\n+        return false;\n+    }\n+    return DecodeRawPSBT(psbt, tx_data, error);\n+}\n+\n+bool DecodeRawPSBT(PartiallySignedTransaction& psbt, const std::string& tx_data, std::string& error)\n+{\n+    CDataStream ss_data(tx_data.data(), tx_data.data() + tx_data.size(), SER_NETWORK, PROTOCOL_VERSION);",
      "path": "src/core_read.cpp",
      "position": 28,
      "original_position": 20,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": 248218346,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@achow101 thoughts?",
      "created_at": "2019-01-29T15:33:54Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251884271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251884271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251884855",
      "pull_request_review_id": 197618467,
      "id": 251884855,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTg4NDg1NQ==",
      "diff_hunk": "@@ -13,6 +13,9 @@ namespace interfaces {\n class Chain;\n } // namespace interfaces\n \n+/** Broadcast a transaction */\n+std::string BroadcastTransaction(CTransactionRef tx, bool allowhighfees = false);",
      "path": "src/rpc/rawtransaction.h",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 248222592,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(agree with the latter, I ended up with a different approach too, the seperate file is useful enough)",
      "created_at": "2019-01-29T15:35:07Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r251884855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251884855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252028851",
      "pull_request_review_id": 197798332,
      "id": 252028851,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjAyODg1MQ==",
      "diff_hunk": "@@ -37,7 +37,11 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+\n+// Decode a base64ed PSBT into a PartiallySignedTransaction\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& decoded_psbt, const std::string& base64_psbt, std::string& error);\n+// Decode a raw (binary blob) PSBT into a PartiallySignedTransaction",
      "path": "src/core_io.h",
      "position": null,
      "original_position": 8,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "ed465d8f9bddc16d4bfd9a183b2c69ff78a0f636",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: use `//!` or equivalent for doxygen",
      "created_at": "2019-01-29T21:40:13Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252028851",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252028851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252121272",
      "pull_request_review_id": 197909819,
      "id": 252121272,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyMTI3Mg==",
      "diff_hunk": "@@ -37,7 +37,11 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+\n+// Decode a base64ed PSBT into a PartiallySignedTransaction\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& decoded_psbt, const std::string& base64_psbt, std::string& error);\n+// Decode a raw (binary blob) PSBT into a PartiallySignedTransaction",
      "path": "src/core_io.h",
      "position": null,
      "original_position": 8,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "ed465d8f9bddc16d4bfd9a183b2c69ff78a0f636",
      "in_reply_to_id": 252028851,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Aha, right. Done.",
      "created_at": "2019-01-30T05:32:21Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252121272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252121272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252122624",
      "pull_request_review_id": 197911429,
      "id": 252122624,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyMjYyNA==",
      "diff_hunk": "@@ -176,10 +176,20 @@ bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n     return true;\n }\n \n-bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n+bool DecodeBase64PSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error)\n {\n-    std::vector<unsigned char> tx_data = DecodeBase64(base64_tx.c_str());\n-    CDataStream ss_data(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n+    bool invalid;\n+    std::string tx_data = DecodeBase64(base64_tx, &invalid);\n+    if (invalid) {\n+        error = \"invalid base64\";\n+        return false;\n+    }\n+    return DecodeRawPSBT(psbt, tx_data, error);\n+}\n+\n+bool DecodeRawPSBT(PartiallySignedTransaction& psbt, const std::string& tx_data, std::string& error)\n+{\n+    CDataStream ss_data(tx_data.data(), tx_data.data() + tx_data.size(), SER_NETWORK, PROTOCOL_VERSION);",
      "path": "src/core_read.cpp",
      "position": 28,
      "original_position": 20,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "801333b36360e7137d682836041b61883f70909e",
      "in_reply_to_id": 248218346,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just for fun, I went and checked -- this code is essentially unchanged since the repo was first imported to github in 2009. So the rationale is probably lost to history...",
      "created_at": "2019-01-30T05:41:56Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252122624",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252122624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252122891",
      "pull_request_review_id": 197911745,
      "id": 252122891,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyMjg5MQ==",
      "diff_hunk": "@@ -1030,19 +1030,24 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    std::promise<void> promise;\n-\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n \n     // parse hex string from parameter\n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_str()))\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+\n+    bool allowhighfees = !request.params[1].isNull() && request.params[1].get_bool();",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 248223984,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense, done.",
      "created_at": "2019-01-30T05:44:03Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252122891",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252122891"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1042,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252123372",
      "pull_request_review_id": 197912307,
      "id": 252123372,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyMzM3Mg==",
      "diff_hunk": "@@ -1030,19 +1030,24 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    std::promise<void> promise;\n-\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n \n     // parse hex string from parameter\n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_str()))\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+\n+    bool allowhighfees = !request.params[1].isNull() && request.params[1].get_bool();\n+    return BroadcastTransaction(tx, allowhighfees);\n+}\n+\n+std::string BroadcastTransaction(CTransactionRef tx, bool allowhighfees) {",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 250610209,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you clarify? These are both by-value, so I wouldn't ordinarily bother marking them const. Am I supposed to?",
      "created_at": "2019-01-30T05:47:11Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252123372",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252123372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1046,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252124825",
      "pull_request_review_id": 197914062,
      "id": 252124825,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyNDgyNQ==",
      "diff_hunk": "@@ -1030,19 +1030,24 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    std::promise<void> promise;\n-\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n \n     // parse hex string from parameter\n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_str()))\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+\n+    bool allowhighfees = !request.params[1].isNull() && request.params[1].get_bool();\n+    return BroadcastTransaction(tx, allowhighfees);\n+}\n+\n+std::string BroadcastTransaction(CTransactionRef tx, bool allowhighfees) {",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 250610209,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is little point in doing so, as constness of by-value arguments doesn't even affect the function signature.\r\n\r\nYou can if you really want to make sure the local variables associated with them don't change during the function execution, but that's unusual in our codebase, and not very important.",
      "created_at": "2019-01-30T05:56:15Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252124825",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252124825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1046,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130275",
      "pull_request_review_id": 197920370,
      "id": 252130275,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMDI3NQ==",
      "diff_hunk": "@@ -13,6 +13,9 @@ namespace interfaces {\n class Chain;\n } // namespace interfaces\n \n+/** Broadcast a transaction */\n+std::string BroadcastTransaction(CTransactionRef tx, bool allowhighfees = false);",
      "path": "src/rpc/rawtransaction.h",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 248222592,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, but this now makes it more obvious that BroadcastTransaction has the same question as the PSBT functions as to how it shall signal an error, since right now it throws UniValues like the other RPC stuff.",
      "created_at": "2019-01-30T06:28:46Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252130275",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131014",
      "pull_request_review_id": 197921295,
      "id": 252131014,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMTAxNA==",
      "diff_hunk": "@@ -391,20 +391,15 @@ struct PartiallySignedTransaction\n     std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n \n     bool IsNull() const;\n-    void Merge(const PartiallySignedTransaction& psbt);\n+    NODISCARD bool Merge(const PartiallySignedTransaction& psbt);\n     bool IsSane() const;\n     PartiallySignedTransaction() {}\n     PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n     explicit PartiallySignedTransaction(const CTransaction& tx);\n \n-    // Only checks if they refer to the same transaction\n-    friend bool operator==(const PartiallySignedTransaction& a, const PartiallySignedTransaction &b)\n-    {\n-        return a.tx->GetHash() == b.tx->GetHash();\n-    }\n-    friend bool operator!=(const PartiallySignedTransaction& a, const PartiallySignedTransaction &b)\n-    {\n-        return !(a == b);\n+    // Checks if they refer to the same underlying CTransaction\n+    bool SameTx(const PartiallySignedTransaction& psbt) {",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 20,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "08ef528c044ecea74a4d1bff75389afbdd3b7a2f",
      "in_reply_to_id": 248234110,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense, done.",
      "created_at": "2019-01-30T06:33:20Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252131014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 401,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131768",
      "pull_request_review_id": 197922314,
      "id": 252131768,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMTc2OA==",
      "diff_hunk": "@@ -391,20 +391,15 @@ struct PartiallySignedTransaction\n     std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n \n     bool IsNull() const;\n-    void Merge(const PartiallySignedTransaction& psbt);\n+    NODISCARD bool Merge(const PartiallySignedTransaction& psbt);",
      "path": "src/psbt.h",
      "position": 390,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "08ef528c044ecea74a4d1bff75389afbdd3b7a2f",
      "in_reply_to_id": 248236086,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2019-01-30T06:38:30Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252131768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 390,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252135154",
      "pull_request_review_id": 197926544,
      "id": 252135154,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzNTE1NA==",
      "diff_hunk": "@@ -232,3 +232,44 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n \n     return sig_complete;\n }\n+\n+void FinalizePSBT(PartiallySignedTransaction& psbtx, bool extract, std::string& result, bool& complete) {\n+    // Finalize input signatures -- in case we have partial signatures that add up to a complete\n+    //   signature, but have not combined them yet (e.g. because the combiner that created this\n+    //   PartiallySignedTransaction did not understand them), this will combine them into a final\n+    //   script.\n+    complete = true;\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, SIGHASH_ALL);\n+    }\n+\n+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+    if (complete && extract) {\n+        CMutableTransaction mtx(*psbtx.tx);\n+        for (unsigned int i = 0; i < mtx.vin.size(); ++i) {\n+            mtx.vin[i].scriptSig = psbtx.inputs[i].final_script_sig;\n+            mtx.vin[i].scriptWitness = psbtx.inputs[i].final_script_witness;\n+        }\n+        ssTx << mtx;\n+        result = HexStr(ssTx.str());\n+    } else {\n+        ssTx << psbtx;\n+        result = EncodeBase64(ssTx.str());\n+    }\n+}\n+\n+PartiallySignedTransaction CombinePSBTs(std::vector<PartiallySignedTransaction> psbtxs) {",
      "path": "src/psbt.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "c062d74e1187e481960ca6868a46642b8bbfbd2e",
      "in_reply_to_id": 248238602,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2019-01-30T06:58:09Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252135154",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252135154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252145692",
      "pull_request_review_id": 197939619,
      "id": 252145692,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE0NTY5Mg==",
      "diff_hunk": "@@ -0,0 +1,562 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_PSBT_H\n+#define BITCOIN_PSBT_H\n+\n+#include <attributes.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+\n+// Magic bytes\n+static constexpr uint8_t PSBT_MAGIC_BYTES[5] = {'p', 's', 'b', 't', 0xff};\n+\n+// Global types\n+static constexpr uint8_t PSBT_GLOBAL_UNSIGNED_TX = 0x00;\n+\n+// Input types\n+static constexpr uint8_t PSBT_IN_NON_WITNESS_UTXO = 0x00;\n+static constexpr uint8_t PSBT_IN_WITNESS_UTXO = 0x01;\n+static constexpr uint8_t PSBT_IN_PARTIAL_SIG = 0x02;\n+static constexpr uint8_t PSBT_IN_SIGHASH = 0x03;\n+static constexpr uint8_t PSBT_IN_REDEEMSCRIPT = 0x04;\n+static constexpr uint8_t PSBT_IN_WITNESSSCRIPT = 0x05;\n+static constexpr uint8_t PSBT_IN_BIP32_DERIVATION = 0x06;\n+static constexpr uint8_t PSBT_IN_SCRIPTSIG = 0x07;\n+static constexpr uint8_t PSBT_IN_SCRIPTWITNESS = 0x08;\n+\n+// Output types\n+static constexpr uint8_t PSBT_OUT_REDEEMSCRIPT = 0x00;\n+static constexpr uint8_t PSBT_OUT_WITNESSSCRIPT = 0x01;\n+static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n+\n+// The separator is 0x00. Reading this in means that the unserializer can interpret it\n+// as a 0 length key which indicates that this is the separator. The separator has no value.\n+static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n+\n+/** An exception in PSBT processing that represents a problem with the input data --\n+    when the input data is user-supplied, it is appropriate to catch() this and use\n+    e.what() to retrieve a human-readable error message. */\n+class PSBTException: public std::runtime_error {\n+    // expose superclass constructors\n+    using std::runtime_error::runtime_error;\n+};\n+\n+/** A structure for PSBTs which contain per-input information */\n+struct PSBTInput\n+{\n+    CTransactionRef non_witness_utxo;\n+    CTxOut witness_utxo;\n+    CScript redeem_script;\n+    CScript witness_script;\n+    CScript final_script_sig;\n+    CScriptWitness final_script_witness;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<CKeyID, SigPair> partial_sigs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+    int sighash_type = 0;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTInput& input);\n+    bool IsSane() const;\n+    PSBTInput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the utxo\n+        // If there is a non-witness utxo, then don't add the witness one.\n+        if (non_witness_utxo) {\n+            SerializeToVector(s, PSBT_IN_NON_WITNESS_UTXO);\n+            OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+            SerializeToVector(os, non_witness_utxo);\n+        } else if (!witness_utxo.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_WITNESS_UTXO);\n+            SerializeToVector(s, witness_utxo);\n+        }\n+\n+        if (final_script_sig.empty() && final_script_witness.IsNull()) {\n+            // Write any partial signatures\n+            for (auto sig_pair : partial_sigs) {\n+                SerializeToVector(s, PSBT_IN_PARTIAL_SIG, MakeSpan(sig_pair.second.first));\n+                s << sig_pair.second.second;\n+            }\n+\n+            // Write the sighash type\n+            if (sighash_type > 0) {\n+                SerializeToVector(s, PSBT_IN_SIGHASH);\n+                SerializeToVector(s, sighash_type);\n+            }\n+\n+            // Write the redeem script\n+            if (!redeem_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_REDEEMSCRIPT);\n+                s << redeem_script;\n+            }\n+\n+            // Write the witness script\n+            if (!witness_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_WITNESSSCRIPT);\n+                s << witness_script;\n+            }\n+\n+            // Write any hd keypaths\n+            SerializeHDKeypaths(s, hd_keypaths, PSBT_IN_BIP32_DERIVATION);\n+        }\n+\n+        // Write script sig\n+        if (!final_script_sig.empty()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTSIG);\n+            s << final_script_sig;\n+        }\n+        // write script witness\n+        if (!final_script_witness.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTWITNESS);\n+            SerializeToVector(s, final_script_witness.stack);\n+        }\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_IN_NON_WITNESS_UTXO:\n+                {\n+                    if (non_witness_utxo) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input non-witness utxo already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Non-witness utxo key is more than one byte type\");\n+                    }\n+                    // Set the stream to unserialize with witness since this is always a valid network transaction\n+                    OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() & ~SERIALIZE_TRANSACTION_NO_WITNESS);\n+                    UnserializeFromVector(os, non_witness_utxo);\n+                    break;\n+                }\n+                case PSBT_IN_WITNESS_UTXO:\n+                    if (!witness_utxo.IsNull()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input witness utxo already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Witness utxo key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, witness_utxo);\n+                    break;\n+                case PSBT_IN_PARTIAL_SIG:\n+                {\n+                    // Make sure that the key is the size of pubkey + 1\n+                    if (key.size() != CPubKey::PUBLIC_KEY_SIZE + 1 && key.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1) {\n+                        throw std::ios_base::failure(\"Size of key was not the expected size for the type partial signature pubkey\");\n+                    }\n+                    // Read in the pubkey from key\n+                    CPubKey pubkey(key.begin() + 1, key.end());\n+                    if (!pubkey.IsFullyValid()) {\n+                       throw std::ios_base::failure(\"Invalid pubkey\");\n+                    }\n+                    if (partial_sigs.count(pubkey.GetID()) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input partial signature for pubkey already provided\");\n+                    }\n+\n+                    // Read in the signature from value\n+                    std::vector<unsigned char> sig;\n+                    s >> sig;\n+\n+                    // Add to list\n+                    partial_sigs.emplace(pubkey.GetID(), SigPair(pubkey, std::move(sig)));\n+                    break;\n+                }\n+                case PSBT_IN_SIGHASH:\n+                    if (sighash_type > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input sighash type already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Sighash type key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, sighash_type);\n+                    break;\n+                case PSBT_IN_REDEEMSCRIPT:\n+                {\n+                    if (!redeem_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input redeemScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Input redeemScript key is more than one byte type\");\n+                    }\n+                    s >> redeem_script;\n+                    break;\n+                }\n+                case PSBT_IN_WITNESSSCRIPT:\n+                {\n+                    if (!witness_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input witnessScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Input witnessScript key is more than one byte type\");\n+                    }\n+                    s >> witness_script;\n+                    break;\n+                }\n+                case PSBT_IN_BIP32_DERIVATION:\n+                {\n+                    DeserializeHDKeypaths(s, key, hd_keypaths);\n+                    break;\n+                }\n+                case PSBT_IN_SCRIPTSIG:\n+                {\n+                    if (!final_script_sig.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input final scriptSig already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Final scriptSig key is more than one byte type\");\n+                    }\n+                    s >> final_script_sig;\n+                    break;\n+                }\n+                case PSBT_IN_SCRIPTWITNESS:\n+                {\n+                    if (!final_script_witness.IsNull()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input final scriptWitness already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Final scriptWitness key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, final_script_witness.stack);\n+                    break;\n+                }\n+                // Unknown stuff\n+                default:\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                    break;\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an input map\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PSBTInput(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** A structure for PSBTs which contains per output information */\n+struct PSBTOutput\n+{\n+    CScript redeem_script;\n+    CScript witness_script;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTOutput& output);\n+    bool IsSane() const;\n+    PSBTOutput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the redeem script\n+        if (!redeem_script.empty()) {\n+            SerializeToVector(s, PSBT_OUT_REDEEMSCRIPT);\n+            s << redeem_script;\n+        }\n+\n+        // Write the witness script\n+        if (!witness_script.empty()) {\n+            SerializeToVector(s, PSBT_OUT_WITNESSSCRIPT);\n+            s << witness_script;\n+        }\n+\n+        // Write any hd keypaths\n+        SerializeHDKeypaths(s, hd_keypaths, PSBT_OUT_BIP32_DERIVATION);\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_OUT_REDEEMSCRIPT:\n+                {\n+                    if (!redeem_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, output redeemScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Output redeemScript key is more than one byte type\");\n+                    }\n+                    s >> redeem_script;\n+                    break;\n+                }\n+                case PSBT_OUT_WITNESSSCRIPT:\n+                {\n+                    if (!witness_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, output witnessScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Output witnessScript key is more than one byte type\");\n+                    }\n+                    s >> witness_script;\n+                    break;\n+                }\n+                case PSBT_OUT_BIP32_DERIVATION:\n+                {\n+                    DeserializeHDKeypaths(s, key, hd_keypaths);\n+                    break;\n+                }\n+                // Unknown stuff\n+                default: {\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                    break;\n+                }\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an output map\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PSBTOutput(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** A version of CTransaction with the PSBT format*/\n+struct PartiallySignedTransaction\n+{\n+    boost::optional<CMutableTransaction> tx;\n+    std::vector<PSBTInput> inputs;\n+    std::vector<PSBTOutput> outputs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+\n+    bool IsNull() const;\n+    NODISCARD bool Merge(const PartiallySignedTransaction& psbt);\n+    bool IsSane() const;\n+    PartiallySignedTransaction() {}\n+    PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n+    explicit PartiallySignedTransaction(const CTransaction& tx);\n+\n+    // Checks if they refer to the same underlying CTransaction\n+    bool SameTx(const PartiallySignedTransaction& psbt) {\n+        return tx->GetHash() == psbt.tx->GetHash();\n+    }\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+\n+        // magic bytes\n+        s << PSBT_MAGIC_BYTES;\n+\n+        // unsigned tx flag\n+        SerializeToVector(s, PSBT_GLOBAL_UNSIGNED_TX);\n+\n+        // Write serialized tx to a stream\n+        OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+        SerializeToVector(os, *tx);\n+\n+        // Write the unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        // Separator\n+        s << PSBT_SEPARATOR;\n+\n+        // Write inputs\n+        for (const PSBTInput& input : inputs) {\n+            s << input;\n+        }\n+        // Write outputs\n+        for (const PSBTOutput& output : outputs) {\n+            s << output;\n+        }\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read the magic bytes\n+        uint8_t magic[5];\n+        s >> magic;\n+        if (!std::equal(magic, magic + 5, PSBT_MAGIC_BYTES)) {\n+            throw std::ios_base::failure(\"Invalid PSBT magic bytes\");\n+        }\n+\n+        // Read global data\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_GLOBAL_UNSIGNED_TX:\n+                {\n+                    if (tx) {\n+                        throw std::ios_base::failure(\"Duplicate Key, unsigned tx already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Global unsigned tx key is more than one byte type\");\n+                    }\n+                    CMutableTransaction mtx;\n+                    // Set the stream to serialize with non-witness since this should always be non-witness\n+                    OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+                    UnserializeFromVector(os, mtx);\n+                    tx = std::move(mtx);\n+                    // Make sure that all scriptSigs and scriptWitnesses are empty\n+                    for (const CTxIn& txin : tx->vin) {\n+                        if (!txin.scriptSig.empty() || !txin.scriptWitness.IsNull()) {\n+                            throw std::ios_base::failure(\"Unsigned tx does not have empty scriptSigs and scriptWitnesses.\");\n+                        }\n+                    }\n+                    break;\n+                }\n+                // Unknown stuff\n+                default: {\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                }\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of the global map\");\n+        }\n+\n+        // Make sure that we got an unsigned tx\n+        if (!tx) {\n+            throw std::ios_base::failure(\"No unsigned transcation was provided\");\n+        }\n+\n+        // Read input data\n+        unsigned int i = 0;\n+        while (!s.empty() && i < tx->vin.size()) {\n+            PSBTInput input;\n+            s >> input;\n+            inputs.push_back(input);\n+\n+            // Make sure the non-witness utxo matches the outpoint\n+            if (input.non_witness_utxo && input.non_witness_utxo->GetHash() != tx->vin[i].prevout.hash) {\n+                throw std::ios_base::failure(\"Non-witness UTXO does not match outpoint hash\");\n+            }\n+            ++i;\n+        }\n+        // Make sure that the number of inputs matches the number of inputs in the transaction\n+        if (inputs.size() != tx->vin.size()) {\n+            throw std::ios_base::failure(\"Inputs provided does not match the number of inputs in transaction.\");\n+        }\n+\n+        // Read output data\n+        i = 0;\n+        while (!s.empty() && i < tx->vout.size()) {\n+            PSBTOutput output;\n+            s >> output;\n+            outputs.push_back(output);\n+            ++i;\n+        }\n+        // Make sure that the number of outputs matches the number of outputs in the transaction\n+        if (outputs.size() != tx->vout.size()) {\n+            throw std::ios_base::failure(\"Outputs provided does not match the number of outputs in transaction.\");\n+        }\n+        // Sanity check\n+        if (!IsSane()) {\n+            throw std::ios_base::failure(\"PSBT is not sane.\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PartiallySignedTransaction(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** Checks whether a PSBTInput is already signed. */\n+bool PSBTInputSigned(PSBTInput& input);\n+\n+/** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash = SIGHASH_ALL);\n+\n+/** Finalizes a PSBT if possible, combining partial signatures and optionally extracting to a signed transaction ready for sending. */",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 556,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "c062d74e1187e481960ca6868a46642b8bbfbd2e",
      "in_reply_to_id": 250597281,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">Though maybe that's too much refactoring for this PR.\r\n\r\nNo, it's too late, you've got me thinking about it now. The \"finalize and maybe extract\" interface is kind of weird as it stands, and the string-handling stuff belongs in the rpc handler, not in the general-purpose functions. I clearly drew the abstraction boundaries in the wrong place.\r\n\r\nI've reworked this in a way that feels a bit better to me. It's not perfect but it no longer obviously feels to me like I can improve it.",
      "created_at": "2019-01-30T07:50:08Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252145692",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252145692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 556,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252258040",
      "pull_request_review_id": 198079167,
      "id": 252258040,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjI1ODA0MA==",
      "diff_hunk": "@@ -1030,19 +1030,24 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n-    std::promise<void> promise;",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 31,
      "original_position": 4,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "745c540d05f4a21810eccc5e9450e9b321560560",
      "in_reply_to_id": 249134420,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right, looks good.",
      "created_at": "2019-01-30T13:37:04Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252258040",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252258040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1044,
      "original_line": 1044,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252594448",
      "pull_request_review_id": 198497755,
      "id": 252594448,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjU5NDQ0OA==",
      "diff_hunk": "@@ -2,14 +2,14 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <rpc/protocol.h>\n+#include <rpc/protocol.h> // For JSONRPCError and RPCErrorCode",
      "path": "src/wallet/psbtwallet.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "eb1c459f40b74fb1e6fb054f950ba7dd7086980e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yuck pseudo-circular dependency? :-) ",
      "created_at": "2019-01-31T09:41:04Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r252594448",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252594448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254947978",
      "pull_request_review_id": 201422403,
      "id": 254947978,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDk0Nzk3OA==",
      "diff_hunk": "@@ -37,7 +37,11 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+\n+//! Decode a base64ed PSBT into a PartiallySignedTransaction\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& decoded_psbt, const std::string& base64_psbt, std::string& error);\n+//! Decode a raw (binary blob) PSBT into a PartiallySignedTransaction\n+NODISCARD bool DecodeRawPSBT(PartiallySignedTransaction& decoded_psbt, const std::string& raw_psbt, std::string& error);",
      "path": "src/core_io.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "6a1570ad97ea6405a14e205bc05a7862808013c4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems a bit strange that `raw_psbt` is a string and not a `std::vector<unsigned char>`. The `DecodeBase64` call below also returns a `std::vector<unsigned char>`, so changing this would avoid a conversion (which I'm a bit surprised happens automatically).",
      "created_at": "2019-02-08T03:40:58Z",
      "updated_at": "2019-02-11T22:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r254947978",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254947978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254948713",
      "pull_request_review_id": 201422403,
      "id": 254948713,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDk0ODcxMw==",
      "diff_hunk": "@@ -139,6 +139,8 @@ RPCErrorCode RPCErrorFromTransactionError(TransactionError terr)\n         case TRANSACTION_ERR_P2P_DISABLED:\n             return RPC_CLIENT_P2P_DISABLED;\n         case TRANSACTION_ERR_INVALID_PSBT:\n+        case TRANSACTION_ERR_PSBT_MISMATCH:",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "acac678ebe6e105e0a775b6eff37b1583139bf21",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This changes the error code for TRANSACTION_ERR_INVALID_PSBT from RPC_DESERIALIZATION_ERROR to RPC_INVALID_PARAMETER. Is that intentional?",
      "created_at": "2019-02-08T03:48:06Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r254948713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254948713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254966363",
      "pull_request_review_id": 201444770,
      "id": 254966363,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDk2NjM2Mw==",
      "diff_hunk": "@@ -139,6 +139,8 @@ RPCErrorCode RPCErrorFromTransactionError(TransactionError terr)\n         case TRANSACTION_ERR_P2P_DISABLED:\n             return RPC_CLIENT_P2P_DISABLED;\n         case TRANSACTION_ERR_INVALID_PSBT:\n+        case TRANSACTION_ERR_PSBT_MISMATCH:",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "acac678ebe6e105e0a775b6eff37b1583139bf21",
      "in_reply_to_id": 254948713,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, because there are two cases where we return an RPC error for a PSBT being semantically invalid, and we were returning DESERIALIZATION_ERROR in one case (when the invalid PSBT was given as a parameter) and INVALID_PARAMETER in the other (when the invalid PSBT was the result of a merge), and the I though the latter seemed more reasonable. My sense was that DESERIALIZATION_ERROR is only meant for syntactically invalid arguments? I'd be willing to change it back though. It would be easier if the two cases were treated the same.",
      "created_at": "2019-02-08T06:28:50Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r254966363",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254966363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254971323",
      "pull_request_review_id": 201450565,
      "id": 254971323,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDk3MTMyMw==",
      "diff_hunk": "@@ -139,6 +139,8 @@ RPCErrorCode RPCErrorFromTransactionError(TransactionError terr)\n         case TRANSACTION_ERR_P2P_DISABLED:\n             return RPC_CLIENT_P2P_DISABLED;\n         case TRANSACTION_ERR_INVALID_PSBT:\n+        case TRANSACTION_ERR_PSBT_MISMATCH:",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "acac678ebe6e105e0a775b6eff37b1583139bf21",
      "in_reply_to_id": 254948713,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't have any strong opinion on the RPC codes. I just wanted to make sure this was intentional (as it could easily have been a copypaste error or so).",
      "created_at": "2019-02-08T07:03:45Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r254971323",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254971323"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254974356",
      "pull_request_review_id": 201454280,
      "id": 254974356,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDk3NDM1Ng==",
      "diff_hunk": "@@ -37,7 +37,11 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+\n+//! Decode a base64ed PSBT into a PartiallySignedTransaction\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& decoded_psbt, const std::string& base64_psbt, std::string& error);\n+//! Decode a raw (binary blob) PSBT into a PartiallySignedTransaction\n+NODISCARD bool DecodeRawPSBT(PartiallySignedTransaction& decoded_psbt, const std::string& raw_psbt, std::string& error);",
      "path": "src/core_io.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "6a1570ad97ea6405a14e205bc05a7862808013c4",
      "in_reply_to_id": 254947978,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In fact, DecodeBase64 does not return a vector&lt;uchar>, it does return a std::string when given a std::string, which I imagine is why I ended up doing it this way, to avoid having to convert it. (When given a char*, it returns a vector&lt;uchar>. Your guess why it was done this way is as good as mine.)\r\n\r\nI did carefully check that std::string is just a binary-safe as vector&lt;uchar>. I'm fine leaving it or changing it as you prefer.",
      "created_at": "2019-02-08T07:23:51Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r254974356",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254974356"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255276868",
      "pull_request_review_id": 201838420,
      "id": 255276868,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTI3Njg2OA==",
      "diff_hunk": "@@ -37,7 +37,11 @@ bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n  */\n bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+\n+//! Decode a base64ed PSBT into a PartiallySignedTransaction\n+NODISCARD bool DecodeBase64PSBT(PartiallySignedTransaction& decoded_psbt, const std::string& base64_psbt, std::string& error);\n+//! Decode a raw (binary blob) PSBT into a PartiallySignedTransaction\n+NODISCARD bool DecodeRawPSBT(PartiallySignedTransaction& decoded_psbt, const std::string& raw_psbt, std::string& error);",
      "path": "src/core_io.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "6a1570ad97ea6405a14e205bc05a7862808013c4",
      "in_reply_to_id": 254947978,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, you're right. That's weird, but probably out of scope for this PR. I'm fine with leaving this as is.",
      "created_at": "2019-02-09T00:45:50Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r255276868",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255276868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255279060",
      "pull_request_review_id": 201840933,
      "id": 255279060,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTI3OTA2MA==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_TRANSACTION_H\n+#define BITCOIN_NODE_TRANSACTION_H\n+\n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n+typedef enum TransactionError_t {",
      "path": "src/node/transaction.h",
      "position": null,
      "original_position": 11,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "acac678ebe6e105e0a775b6eff37b1583139bf21",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This looks like a C-ism. You can just use `enum TransactionError { ... };` in C++ with (I think) the same effect.",
      "created_at": "2019-02-09T01:08:12Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r255279060",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255279060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255279289",
      "pull_request_review_id": 201840933,
      "id": 255279289,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTI3OTI4OQ==",
      "diff_hunk": "@@ -0,0 +1,574 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_PSBT_H\n+#define BITCOIN_PSBT_H\n+\n+#include <attributes.h>\n+#include <node/transaction.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+\n+// Magic bytes\n+static constexpr uint8_t PSBT_MAGIC_BYTES[5] = {'p', 's', 'b', 't', 0xff};\n+\n+// Global types\n+static constexpr uint8_t PSBT_GLOBAL_UNSIGNED_TX = 0x00;\n+\n+// Input types\n+static constexpr uint8_t PSBT_IN_NON_WITNESS_UTXO = 0x00;\n+static constexpr uint8_t PSBT_IN_WITNESS_UTXO = 0x01;\n+static constexpr uint8_t PSBT_IN_PARTIAL_SIG = 0x02;\n+static constexpr uint8_t PSBT_IN_SIGHASH = 0x03;\n+static constexpr uint8_t PSBT_IN_REDEEMSCRIPT = 0x04;\n+static constexpr uint8_t PSBT_IN_WITNESSSCRIPT = 0x05;\n+static constexpr uint8_t PSBT_IN_BIP32_DERIVATION = 0x06;\n+static constexpr uint8_t PSBT_IN_SCRIPTSIG = 0x07;\n+static constexpr uint8_t PSBT_IN_SCRIPTWITNESS = 0x08;\n+\n+// Output types\n+static constexpr uint8_t PSBT_OUT_REDEEMSCRIPT = 0x00;\n+static constexpr uint8_t PSBT_OUT_WITNESSSCRIPT = 0x01;\n+static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n+\n+// The separator is 0x00. Reading this in means that the unserializer can interpret it\n+// as a 0 length key which indicates that this is the separator. The separator has no value.\n+static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n+\n+/** A structure for PSBTs which contain per-input information */\n+struct PSBTInput\n+{\n+    CTransactionRef non_witness_utxo;\n+    CTxOut witness_utxo;\n+    CScript redeem_script;\n+    CScript witness_script;\n+    CScript final_script_sig;\n+    CScriptWitness final_script_witness;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<CKeyID, SigPair> partial_sigs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+    int sighash_type = 0;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTInput& input);\n+    bool IsSane() const;\n+    PSBTInput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the utxo\n+        // If there is a non-witness utxo, then don't add the witness one.\n+        if (non_witness_utxo) {\n+            SerializeToVector(s, PSBT_IN_NON_WITNESS_UTXO);\n+            OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+            SerializeToVector(os, non_witness_utxo);\n+        } else if (!witness_utxo.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_WITNESS_UTXO);\n+            SerializeToVector(s, witness_utxo);\n+        }\n+\n+        if (final_script_sig.empty() && final_script_witness.IsNull()) {\n+            // Write any partial signatures\n+            for (auto sig_pair : partial_sigs) {\n+                SerializeToVector(s, PSBT_IN_PARTIAL_SIG, MakeSpan(sig_pair.second.first));\n+                s << sig_pair.second.second;\n+            }\n+\n+            // Write the sighash type\n+            if (sighash_type > 0) {\n+                SerializeToVector(s, PSBT_IN_SIGHASH);\n+                SerializeToVector(s, sighash_type);\n+            }\n+\n+            // Write the redeem script\n+            if (!redeem_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_REDEEMSCRIPT);\n+                s << redeem_script;\n+            }\n+\n+            // Write the witness script\n+            if (!witness_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_WITNESSSCRIPT);\n+                s << witness_script;\n+            }\n+\n+            // Write any hd keypaths\n+            SerializeHDKeypaths(s, hd_keypaths, PSBT_IN_BIP32_DERIVATION);\n+        }\n+\n+        // Write script sig\n+        if (!final_script_sig.empty()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTSIG);\n+            s << final_script_sig;\n+        }\n+        // write script witness\n+        if (!final_script_witness.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTWITNESS);\n+            SerializeToVector(s, final_script_witness.stack);\n+        }\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_IN_NON_WITNESS_UTXO:\n+                {\n+                    if (non_witness_utxo) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input non-witness utxo already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Non-witness utxo key is more than one byte type\");\n+                    }\n+                    // Set the stream to unserialize with witness since this is always a valid network transaction\n+                    OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() & ~SERIALIZE_TRANSACTION_NO_WITNESS);\n+                    UnserializeFromVector(os, non_witness_utxo);\n+                    break;\n+                }\n+                case PSBT_IN_WITNESS_UTXO:\n+                    if (!witness_utxo.IsNull()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input witness utxo already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Witness utxo key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, witness_utxo);\n+                    break;\n+                case PSBT_IN_PARTIAL_SIG:\n+                {\n+                    // Make sure that the key is the size of pubkey + 1\n+                    if (key.size() != CPubKey::PUBLIC_KEY_SIZE + 1 && key.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1) {\n+                        throw std::ios_base::failure(\"Size of key was not the expected size for the type partial signature pubkey\");\n+                    }\n+                    // Read in the pubkey from key\n+                    CPubKey pubkey(key.begin() + 1, key.end());\n+                    if (!pubkey.IsFullyValid()) {\n+                       throw std::ios_base::failure(\"Invalid pubkey\");\n+                    }\n+                    if (partial_sigs.count(pubkey.GetID()) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input partial signature for pubkey already provided\");\n+                    }\n+\n+                    // Read in the signature from value\n+                    std::vector<unsigned char> sig;\n+                    s >> sig;\n+\n+                    // Add to list\n+                    partial_sigs.emplace(pubkey.GetID(), SigPair(pubkey, std::move(sig)));\n+                    break;\n+                }\n+                case PSBT_IN_SIGHASH:\n+                    if (sighash_type > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input sighash type already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Sighash type key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, sighash_type);\n+                    break;\n+                case PSBT_IN_REDEEMSCRIPT:\n+                {\n+                    if (!redeem_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input redeemScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Input redeemScript key is more than one byte type\");\n+                    }\n+                    s >> redeem_script;\n+                    break;\n+                }\n+                case PSBT_IN_WITNESSSCRIPT:\n+                {\n+                    if (!witness_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input witnessScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Input witnessScript key is more than one byte type\");\n+                    }\n+                    s >> witness_script;\n+                    break;\n+                }\n+                case PSBT_IN_BIP32_DERIVATION:\n+                {\n+                    DeserializeHDKeypaths(s, key, hd_keypaths);\n+                    break;\n+                }\n+                case PSBT_IN_SCRIPTSIG:\n+                {\n+                    if (!final_script_sig.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input final scriptSig already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Final scriptSig key is more than one byte type\");\n+                    }\n+                    s >> final_script_sig;\n+                    break;\n+                }\n+                case PSBT_IN_SCRIPTWITNESS:\n+                {\n+                    if (!final_script_witness.IsNull()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input final scriptWitness already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Final scriptWitness key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, final_script_witness.stack);\n+                    break;\n+                }\n+                // Unknown stuff\n+                default:\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                    break;\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an input map\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PSBTInput(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** A structure for PSBTs which contains per output information */\n+struct PSBTOutput\n+{\n+    CScript redeem_script;\n+    CScript witness_script;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTOutput& output);\n+    bool IsSane() const;\n+    PSBTOutput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the redeem script\n+        if (!redeem_script.empty()) {\n+            SerializeToVector(s, PSBT_OUT_REDEEMSCRIPT);\n+            s << redeem_script;\n+        }\n+\n+        // Write the witness script\n+        if (!witness_script.empty()) {\n+            SerializeToVector(s, PSBT_OUT_WITNESSSCRIPT);\n+            s << witness_script;\n+        }\n+\n+        // Write any hd keypaths\n+        SerializeHDKeypaths(s, hd_keypaths, PSBT_OUT_BIP32_DERIVATION);\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_OUT_REDEEMSCRIPT:\n+                {\n+                    if (!redeem_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, output redeemScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Output redeemScript key is more than one byte type\");\n+                    }\n+                    s >> redeem_script;\n+                    break;\n+                }\n+                case PSBT_OUT_WITNESSSCRIPT:\n+                {\n+                    if (!witness_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, output witnessScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Output witnessScript key is more than one byte type\");\n+                    }\n+                    s >> witness_script;\n+                    break;\n+                }\n+                case PSBT_OUT_BIP32_DERIVATION:\n+                {\n+                    DeserializeHDKeypaths(s, key, hd_keypaths);\n+                    break;\n+                }\n+                // Unknown stuff\n+                default: {\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                    break;\n+                }\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an output map\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PSBTOutput(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** A version of CTransaction with the PSBT format*/\n+struct PartiallySignedTransaction\n+{\n+    boost::optional<CMutableTransaction> tx;\n+    std::vector<PSBTInput> inputs;\n+    std::vector<PSBTOutput> outputs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+\n+    bool IsNull() const;\n+\n+    /** Merge psbt into this. The two psbts must have the same underlying CTransaction (i.e. the\n+      * same actual Bitcoin transaction.) Returns true if the merge succeeded, false otherwise. */\n+    NODISCARD bool Merge(const PartiallySignedTransaction& psbt);\n+    bool IsSane() const;\n+    PartiallySignedTransaction() {}\n+    PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n+    explicit PartiallySignedTransaction(const CMutableTransaction& tx);\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+\n+        // magic bytes\n+        s << PSBT_MAGIC_BYTES;\n+\n+        // unsigned tx flag\n+        SerializeToVector(s, PSBT_GLOBAL_UNSIGNED_TX);\n+\n+        // Write serialized tx to a stream\n+        OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+        SerializeToVector(os, *tx);\n+\n+        // Write the unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        // Separator\n+        s << PSBT_SEPARATOR;\n+\n+        // Write inputs\n+        for (const PSBTInput& input : inputs) {\n+            s << input;\n+        }\n+        // Write outputs\n+        for (const PSBTOutput& output : outputs) {\n+            s << output;\n+        }\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read the magic bytes\n+        uint8_t magic[5];\n+        s >> magic;\n+        if (!std::equal(magic, magic + 5, PSBT_MAGIC_BYTES)) {\n+            throw std::ios_base::failure(\"Invalid PSBT magic bytes\");\n+        }\n+\n+        // Read global data\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_GLOBAL_UNSIGNED_TX:\n+                {\n+                    if (tx) {\n+                        throw std::ios_base::failure(\"Duplicate Key, unsigned tx already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Global unsigned tx key is more than one byte type\");\n+                    }\n+                    CMutableTransaction mtx;\n+                    // Set the stream to serialize with non-witness since this should always be non-witness\n+                    OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+                    UnserializeFromVector(os, mtx);\n+                    tx = std::move(mtx);\n+                    // Make sure that all scriptSigs and scriptWitnesses are empty\n+                    for (const CTxIn& txin : tx->vin) {\n+                        if (!txin.scriptSig.empty() || !txin.scriptWitness.IsNull()) {\n+                            throw std::ios_base::failure(\"Unsigned tx does not have empty scriptSigs and scriptWitnesses.\");\n+                        }\n+                    }\n+                    break;\n+                }\n+                // Unknown stuff\n+                default: {\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                }\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of the global map\");\n+        }\n+\n+        // Make sure that we got an unsigned tx\n+        if (!tx) {\n+            throw std::ios_base::failure(\"No unsigned transcation was provided\");\n+        }\n+\n+        // Read input data\n+        unsigned int i = 0;\n+        while (!s.empty() && i < tx->vin.size()) {\n+            PSBTInput input;\n+            s >> input;\n+            inputs.push_back(input);\n+\n+            // Make sure the non-witness utxo matches the outpoint\n+            if (input.non_witness_utxo && input.non_witness_utxo->GetHash() != tx->vin[i].prevout.hash) {\n+                throw std::ios_base::failure(\"Non-witness UTXO does not match outpoint hash\");\n+            }\n+            ++i;\n+        }\n+        // Make sure that the number of inputs matches the number of inputs in the transaction\n+        if (inputs.size() != tx->vin.size()) {\n+            throw std::ios_base::failure(\"Inputs provided does not match the number of inputs in transaction.\");\n+        }\n+\n+        // Read output data\n+        i = 0;\n+        while (!s.empty() && i < tx->vout.size()) {\n+            PSBTOutput output;\n+            s >> output;\n+            outputs.push_back(output);\n+            ++i;\n+        }\n+        // Make sure that the number of outputs matches the number of outputs in the transaction\n+        if (outputs.size() != tx->vout.size()) {\n+            throw std::ios_base::failure(\"Outputs provided does not match the number of outputs in transaction.\");\n+        }\n+        // Sanity check\n+        if (!IsSane()) {\n+            throw std::ios_base::failure(\"PSBT is not sane.\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PartiallySignedTransaction(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** Checks whether a PSBTInput is already signed. */\n+bool PSBTInputSigned(PSBTInput& input);\n+\n+/** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash = SIGHASH_ALL);\n+\n+/**\n+ * Finalizes a PSBT if possible, combining partial signatures.\n+ *\n+ * @param[in,out] &psbtx reference to PartiallySignedTransaction to finalize\n+ * return True if the PSBT is now complete, false otherwise\n+ */\n+bool FinalizePSBT(PartiallySignedTransaction& psbtx);\n+\n+/**\n+ * Finalizes a PSBT if possible, and extracts it to a CTransaction if it could be finalized.",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 556,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "acac678ebe6e105e0a775b6eff37b1583139bf21",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `CMutableTransaction`.",
      "created_at": "2019-02-09T01:10:57Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r255279289",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255279289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 556,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255286183",
      "pull_request_review_id": 201849264,
      "id": 255286183,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTI4NjE4Mw==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_TRANSACTION_H\n+#define BITCOIN_NODE_TRANSACTION_H\n+\n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n+typedef enum TransactionError_t {",
      "path": "src/node/transaction.h",
      "position": null,
      "original_position": 11,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "acac678ebe6e105e0a775b6eff37b1583139bf21",
      "in_reply_to_id": 255279060,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In my defense I copied it from ScriptError_t. I'll change it.",
      "created_at": "2019-02-09T03:45:35Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r255286183",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255286183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255286215",
      "pull_request_review_id": 201849295,
      "id": 255286215,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTI4NjIxNQ==",
      "diff_hunk": "@@ -0,0 +1,574 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_PSBT_H\n+#define BITCOIN_PSBT_H\n+\n+#include <attributes.h>\n+#include <node/transaction.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+\n+// Magic bytes\n+static constexpr uint8_t PSBT_MAGIC_BYTES[5] = {'p', 's', 'b', 't', 0xff};\n+\n+// Global types\n+static constexpr uint8_t PSBT_GLOBAL_UNSIGNED_TX = 0x00;\n+\n+// Input types\n+static constexpr uint8_t PSBT_IN_NON_WITNESS_UTXO = 0x00;\n+static constexpr uint8_t PSBT_IN_WITNESS_UTXO = 0x01;\n+static constexpr uint8_t PSBT_IN_PARTIAL_SIG = 0x02;\n+static constexpr uint8_t PSBT_IN_SIGHASH = 0x03;\n+static constexpr uint8_t PSBT_IN_REDEEMSCRIPT = 0x04;\n+static constexpr uint8_t PSBT_IN_WITNESSSCRIPT = 0x05;\n+static constexpr uint8_t PSBT_IN_BIP32_DERIVATION = 0x06;\n+static constexpr uint8_t PSBT_IN_SCRIPTSIG = 0x07;\n+static constexpr uint8_t PSBT_IN_SCRIPTWITNESS = 0x08;\n+\n+// Output types\n+static constexpr uint8_t PSBT_OUT_REDEEMSCRIPT = 0x00;\n+static constexpr uint8_t PSBT_OUT_WITNESSSCRIPT = 0x01;\n+static constexpr uint8_t PSBT_OUT_BIP32_DERIVATION = 0x02;\n+\n+// The separator is 0x00. Reading this in means that the unserializer can interpret it\n+// as a 0 length key which indicates that this is the separator. The separator has no value.\n+static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n+\n+/** A structure for PSBTs which contain per-input information */\n+struct PSBTInput\n+{\n+    CTransactionRef non_witness_utxo;\n+    CTxOut witness_utxo;\n+    CScript redeem_script;\n+    CScript witness_script;\n+    CScript final_script_sig;\n+    CScriptWitness final_script_witness;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<CKeyID, SigPair> partial_sigs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+    int sighash_type = 0;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTInput& input);\n+    bool IsSane() const;\n+    PSBTInput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the utxo\n+        // If there is a non-witness utxo, then don't add the witness one.\n+        if (non_witness_utxo) {\n+            SerializeToVector(s, PSBT_IN_NON_WITNESS_UTXO);\n+            OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+            SerializeToVector(os, non_witness_utxo);\n+        } else if (!witness_utxo.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_WITNESS_UTXO);\n+            SerializeToVector(s, witness_utxo);\n+        }\n+\n+        if (final_script_sig.empty() && final_script_witness.IsNull()) {\n+            // Write any partial signatures\n+            for (auto sig_pair : partial_sigs) {\n+                SerializeToVector(s, PSBT_IN_PARTIAL_SIG, MakeSpan(sig_pair.second.first));\n+                s << sig_pair.second.second;\n+            }\n+\n+            // Write the sighash type\n+            if (sighash_type > 0) {\n+                SerializeToVector(s, PSBT_IN_SIGHASH);\n+                SerializeToVector(s, sighash_type);\n+            }\n+\n+            // Write the redeem script\n+            if (!redeem_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_REDEEMSCRIPT);\n+                s << redeem_script;\n+            }\n+\n+            // Write the witness script\n+            if (!witness_script.empty()) {\n+                SerializeToVector(s, PSBT_IN_WITNESSSCRIPT);\n+                s << witness_script;\n+            }\n+\n+            // Write any hd keypaths\n+            SerializeHDKeypaths(s, hd_keypaths, PSBT_IN_BIP32_DERIVATION);\n+        }\n+\n+        // Write script sig\n+        if (!final_script_sig.empty()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTSIG);\n+            s << final_script_sig;\n+        }\n+        // write script witness\n+        if (!final_script_witness.IsNull()) {\n+            SerializeToVector(s, PSBT_IN_SCRIPTWITNESS);\n+            SerializeToVector(s, final_script_witness.stack);\n+        }\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_IN_NON_WITNESS_UTXO:\n+                {\n+                    if (non_witness_utxo) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input non-witness utxo already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Non-witness utxo key is more than one byte type\");\n+                    }\n+                    // Set the stream to unserialize with witness since this is always a valid network transaction\n+                    OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() & ~SERIALIZE_TRANSACTION_NO_WITNESS);\n+                    UnserializeFromVector(os, non_witness_utxo);\n+                    break;\n+                }\n+                case PSBT_IN_WITNESS_UTXO:\n+                    if (!witness_utxo.IsNull()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input witness utxo already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Witness utxo key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, witness_utxo);\n+                    break;\n+                case PSBT_IN_PARTIAL_SIG:\n+                {\n+                    // Make sure that the key is the size of pubkey + 1\n+                    if (key.size() != CPubKey::PUBLIC_KEY_SIZE + 1 && key.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1) {\n+                        throw std::ios_base::failure(\"Size of key was not the expected size for the type partial signature pubkey\");\n+                    }\n+                    // Read in the pubkey from key\n+                    CPubKey pubkey(key.begin() + 1, key.end());\n+                    if (!pubkey.IsFullyValid()) {\n+                       throw std::ios_base::failure(\"Invalid pubkey\");\n+                    }\n+                    if (partial_sigs.count(pubkey.GetID()) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input partial signature for pubkey already provided\");\n+                    }\n+\n+                    // Read in the signature from value\n+                    std::vector<unsigned char> sig;\n+                    s >> sig;\n+\n+                    // Add to list\n+                    partial_sigs.emplace(pubkey.GetID(), SigPair(pubkey, std::move(sig)));\n+                    break;\n+                }\n+                case PSBT_IN_SIGHASH:\n+                    if (sighash_type > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input sighash type already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Sighash type key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, sighash_type);\n+                    break;\n+                case PSBT_IN_REDEEMSCRIPT:\n+                {\n+                    if (!redeem_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input redeemScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Input redeemScript key is more than one byte type\");\n+                    }\n+                    s >> redeem_script;\n+                    break;\n+                }\n+                case PSBT_IN_WITNESSSCRIPT:\n+                {\n+                    if (!witness_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input witnessScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Input witnessScript key is more than one byte type\");\n+                    }\n+                    s >> witness_script;\n+                    break;\n+                }\n+                case PSBT_IN_BIP32_DERIVATION:\n+                {\n+                    DeserializeHDKeypaths(s, key, hd_keypaths);\n+                    break;\n+                }\n+                case PSBT_IN_SCRIPTSIG:\n+                {\n+                    if (!final_script_sig.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input final scriptSig already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Final scriptSig key is more than one byte type\");\n+                    }\n+                    s >> final_script_sig;\n+                    break;\n+                }\n+                case PSBT_IN_SCRIPTWITNESS:\n+                {\n+                    if (!final_script_witness.IsNull()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, input final scriptWitness already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Final scriptWitness key is more than one byte type\");\n+                    }\n+                    UnserializeFromVector(s, final_script_witness.stack);\n+                    break;\n+                }\n+                // Unknown stuff\n+                default:\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                    break;\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an input map\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PSBTInput(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** A structure for PSBTs which contains per output information */\n+struct PSBTOutput\n+{\n+    CScript redeem_script;\n+    CScript witness_script;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+\n+    bool IsNull() const;\n+    void FillSignatureData(SignatureData& sigdata) const;\n+    void FromSignatureData(const SignatureData& sigdata);\n+    void Merge(const PSBTOutput& output);\n+    bool IsSane() const;\n+    PSBTOutput() {}\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        // Write the redeem script\n+        if (!redeem_script.empty()) {\n+            SerializeToVector(s, PSBT_OUT_REDEEMSCRIPT);\n+            s << redeem_script;\n+        }\n+\n+        // Write the witness script\n+        if (!witness_script.empty()) {\n+            SerializeToVector(s, PSBT_OUT_WITNESSSCRIPT);\n+            s << witness_script;\n+        }\n+\n+        // Write any hd keypaths\n+        SerializeHDKeypaths(s, hd_keypaths, PSBT_OUT_BIP32_DERIVATION);\n+\n+        // Write unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        s << PSBT_SEPARATOR;\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read loop\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_OUT_REDEEMSCRIPT:\n+                {\n+                    if (!redeem_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, output redeemScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Output redeemScript key is more than one byte type\");\n+                    }\n+                    s >> redeem_script;\n+                    break;\n+                }\n+                case PSBT_OUT_WITNESSSCRIPT:\n+                {\n+                    if (!witness_script.empty()) {\n+                        throw std::ios_base::failure(\"Duplicate Key, output witnessScript already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Output witnessScript key is more than one byte type\");\n+                    }\n+                    s >> witness_script;\n+                    break;\n+                }\n+                case PSBT_OUT_BIP32_DERIVATION:\n+                {\n+                    DeserializeHDKeypaths(s, key, hd_keypaths);\n+                    break;\n+                }\n+                // Unknown stuff\n+                default: {\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                    break;\n+                }\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an output map\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PSBTOutput(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** A version of CTransaction with the PSBT format*/\n+struct PartiallySignedTransaction\n+{\n+    boost::optional<CMutableTransaction> tx;\n+    std::vector<PSBTInput> inputs;\n+    std::vector<PSBTOutput> outputs;\n+    std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n+\n+    bool IsNull() const;\n+\n+    /** Merge psbt into this. The two psbts must have the same underlying CTransaction (i.e. the\n+      * same actual Bitcoin transaction.) Returns true if the merge succeeded, false otherwise. */\n+    NODISCARD bool Merge(const PartiallySignedTransaction& psbt);\n+    bool IsSane() const;\n+    PartiallySignedTransaction() {}\n+    PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n+    explicit PartiallySignedTransaction(const CMutableTransaction& tx);\n+\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+\n+        // magic bytes\n+        s << PSBT_MAGIC_BYTES;\n+\n+        // unsigned tx flag\n+        SerializeToVector(s, PSBT_GLOBAL_UNSIGNED_TX);\n+\n+        // Write serialized tx to a stream\n+        OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+        SerializeToVector(os, *tx);\n+\n+        // Write the unknown things\n+        for (auto& entry : unknown) {\n+            s << entry.first;\n+            s << entry.second;\n+        }\n+\n+        // Separator\n+        s << PSBT_SEPARATOR;\n+\n+        // Write inputs\n+        for (const PSBTInput& input : inputs) {\n+            s << input;\n+        }\n+        // Write outputs\n+        for (const PSBTOutput& output : outputs) {\n+            s << output;\n+        }\n+    }\n+\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        // Read the magic bytes\n+        uint8_t magic[5];\n+        s >> magic;\n+        if (!std::equal(magic, magic + 5, PSBT_MAGIC_BYTES)) {\n+            throw std::ios_base::failure(\"Invalid PSBT magic bytes\");\n+        }\n+\n+        // Read global data\n+        bool found_sep = false;\n+        while(!s.empty()) {\n+            // Read\n+            std::vector<unsigned char> key;\n+            s >> key;\n+\n+            // the key is empty if that was actually a separator byte\n+            // This is a special case for key lengths 0 as those are not allowed (except for separator)\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n+\n+            // First byte of key is the type\n+            unsigned char type = key[0];\n+\n+            // Do stuff based on type\n+            switch(type) {\n+                case PSBT_GLOBAL_UNSIGNED_TX:\n+                {\n+                    if (tx) {\n+                        throw std::ios_base::failure(\"Duplicate Key, unsigned tx already provided\");\n+                    } else if (key.size() != 1) {\n+                        throw std::ios_base::failure(\"Global unsigned tx key is more than one byte type\");\n+                    }\n+                    CMutableTransaction mtx;\n+                    // Set the stream to serialize with non-witness since this should always be non-witness\n+                    OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n+                    UnserializeFromVector(os, mtx);\n+                    tx = std::move(mtx);\n+                    // Make sure that all scriptSigs and scriptWitnesses are empty\n+                    for (const CTxIn& txin : tx->vin) {\n+                        if (!txin.scriptSig.empty() || !txin.scriptWitness.IsNull()) {\n+                            throw std::ios_base::failure(\"Unsigned tx does not have empty scriptSigs and scriptWitnesses.\");\n+                        }\n+                    }\n+                    break;\n+                }\n+                // Unknown stuff\n+                default: {\n+                    if (unknown.count(key) > 0) {\n+                        throw std::ios_base::failure(\"Duplicate Key, key for unknown value already provided\");\n+                    }\n+                    // Read in the value\n+                    std::vector<unsigned char> val_bytes;\n+                    s >> val_bytes;\n+                    unknown.emplace(std::move(key), std::move(val_bytes));\n+                }\n+            }\n+        }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of the global map\");\n+        }\n+\n+        // Make sure that we got an unsigned tx\n+        if (!tx) {\n+            throw std::ios_base::failure(\"No unsigned transcation was provided\");\n+        }\n+\n+        // Read input data\n+        unsigned int i = 0;\n+        while (!s.empty() && i < tx->vin.size()) {\n+            PSBTInput input;\n+            s >> input;\n+            inputs.push_back(input);\n+\n+            // Make sure the non-witness utxo matches the outpoint\n+            if (input.non_witness_utxo && input.non_witness_utxo->GetHash() != tx->vin[i].prevout.hash) {\n+                throw std::ios_base::failure(\"Non-witness UTXO does not match outpoint hash\");\n+            }\n+            ++i;\n+        }\n+        // Make sure that the number of inputs matches the number of inputs in the transaction\n+        if (inputs.size() != tx->vin.size()) {\n+            throw std::ios_base::failure(\"Inputs provided does not match the number of inputs in transaction.\");\n+        }\n+\n+        // Read output data\n+        i = 0;\n+        while (!s.empty() && i < tx->vout.size()) {\n+            PSBTOutput output;\n+            s >> output;\n+            outputs.push_back(output);\n+            ++i;\n+        }\n+        // Make sure that the number of outputs matches the number of outputs in the transaction\n+        if (outputs.size() != tx->vout.size()) {\n+            throw std::ios_base::failure(\"Outputs provided does not match the number of outputs in transaction.\");\n+        }\n+        // Sanity check\n+        if (!IsSane()) {\n+            throw std::ios_base::failure(\"PSBT is not sane.\");\n+        }\n+    }\n+\n+    template <typename Stream>\n+    PartiallySignedTransaction(deserialize_type, Stream& s) {\n+        Unserialize(s);\n+    }\n+};\n+\n+/** Checks whether a PSBTInput is already signed. */\n+bool PSBTInputSigned(PSBTInput& input);\n+\n+/** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash = SIGHASH_ALL);\n+\n+/**\n+ * Finalizes a PSBT if possible, combining partial signatures.\n+ *\n+ * @param[in,out] &psbtx reference to PartiallySignedTransaction to finalize\n+ * return True if the PSBT is now complete, false otherwise\n+ */\n+bool FinalizePSBT(PartiallySignedTransaction& psbtx);\n+\n+/**\n+ * Finalizes a PSBT if possible, and extracts it to a CTransaction if it could be finalized.",
      "path": "src/psbt.h",
      "position": null,
      "original_position": 556,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "acac678ebe6e105e0a775b6eff37b1583139bf21",
      "in_reply_to_id": 255279289,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, you're right, I think I had to change it for #14906 and forgot to change the comment. Will fix.",
      "created_at": "2019-02-09T03:46:40Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r255286215",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255286215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 556,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255298221",
      "pull_request_review_id": 201862403,
      "id": 255298221,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTI5ODIyMQ==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_TRANSACTION_H\n+#define BITCOIN_NODE_TRANSACTION_H\n+\n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n+enum TransactionError {",
      "path": "src/node/transaction.h",
      "position": null,
      "original_position": 11,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "9f2297d4decb3c6a19a74945696acae573ac2bd0",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be `enum class`?",
      "created_at": "2019-02-09T13:05:41Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r255298221",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255298221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255323007",
      "pull_request_review_id": 201887918,
      "id": 255323007,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTMyMzAwNw==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_TRANSACTION_H\n+#define BITCOIN_NODE_TRANSACTION_H\n+\n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n+enum TransactionError {",
      "path": "src/node/transaction.h",
      "position": null,
      "original_position": 11,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "9f2297d4decb3c6a19a74945696acae573ac2bd0",
      "in_reply_to_id": 255298221,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, I've never used that before but it looks cool.\r\n\r\nIt looks like if I made that change, all references to the enum constants would have to be qualified with the name of the enum? So I should remove all the TRANSACTION_ERR prefixes, so e.g. TRANSACTION_ERR_MISSING_INPUTS would become TransactionError::MISSING_INPUTS?\r\n\r\nI'm always in favor of adding more compile-time checks when it's easy, so I'm happy to make the change if that's the preferred approach.",
      "created_at": "2019-02-10T04:18:05Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r255323007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255323007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255323715",
      "pull_request_review_id": 201888717,
      "id": 255323715,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTMyMzcxNQ==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_TRANSACTION_H\n+#define BITCOIN_NODE_TRANSACTION_H\n+\n+#include <primitives/transaction.h>\n+#include <uint256.h>\n+\n+enum TransactionError {",
      "path": "src/node/transaction.h",
      "position": null,
      "original_position": 11,
      "commit_id": "102faad81efa1cb12c29c466cfe81fc8c7351e1d",
      "original_commit_id": "9f2297d4decb3c6a19a74945696acae573ac2bd0",
      "in_reply_to_id": 255298221,
      "user": {
        "login": "gwillen",
        "id": 458997,
        "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwillen",
        "html_url": "https://github.com/gwillen",
        "followers_url": "https://api.github.com/users/gwillen/followers",
        "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
        "organizations_url": "https://api.github.com/users/gwillen/orgs",
        "repos_url": "https://api.github.com/users/gwillen/repos",
        "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gwillen/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated.",
      "created_at": "2019-02-10T05:10:12Z",
      "updated_at": "2019-02-11T22:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14978#discussion_r255323715",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255323715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    }
  ]
}