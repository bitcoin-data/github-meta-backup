{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555",
    "id": 1132604219,
    "node_id": "PR_kwDOABII585Dgis7",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26555",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26555.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26555.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/6553331efaff4fb67ad1be468f7c6302919c40ec",
    "number": 26555,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: generalize MuHash calculation in `feature_utxo_set_hash.py`",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right now the MuHash calculation in the functional test `feature_utxo_set_hash.py` is dependent on the specific chain we generate, e.g. it only works as long as the only spent coin is created in block number 1 (and no other UTXO is created in that same block) and uses that quirk to avoid the need to ever remove anything from the MuHash object.\r\n\r\nThis PR generalizes the MuHash calculation by systematically going through all blocks and taking all spent/created coins into account (reflecting the actual behaviour on the coinstatsindex), which allows to potentially create more complex test-cases for UTXO set hashes in the future.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2022-11-23T00:53:07Z",
    "updated_at": "2023-02-09T15:32:26Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "d173faa2b1cad7f97d1531eb20cd15e80535f482",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "theStack:test-generic_muhash_calculation",
      "ref": "test-generic_muhash_calculation",
      "sha": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 204970720,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMDQ5NzA3MjA=",
        "name": "bitcoin",
        "full_name": "theStack/bitcoin",
        "owner": {
          "login": "theStack",
          "id": 91535,
          "node_id": "MDQ6VXNlcjkxNTM1",
          "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/theStack",
          "html_url": "https://github.com/theStack",
          "followers_url": "https://api.github.com/users/theStack/followers",
          "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
          "organizations_url": "https://api.github.com/users/theStack/orgs",
          "repos_url": "https://api.github.com/users/theStack/repos",
          "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/theStack/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/theStack/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/theStack/bitcoin",
        "archive_url": "https://api.github.com/repos/theStack/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/theStack/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/theStack/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/theStack/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/theStack/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/theStack/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/theStack/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/theStack/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/theStack/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/theStack/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/theStack/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/theStack/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/theStack/bitcoin/events",
        "forks_url": "https://api.github.com/repos/theStack/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/theStack/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/theStack/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/theStack/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/theStack/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/theStack/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/theStack/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/theStack/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/theStack/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/theStack/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/theStack/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/theStack/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/theStack/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/theStack/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/theStack/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/theStack/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:theStack/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/theStack/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/theStack/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/theStack/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/theStack/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/theStack/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/theStack/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/theStack/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/theStack/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/theStack/bitcoin/hooks",
        "svn_url": "https://github.com/theStack/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 217436,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:15:21Z",
        "created_at": "2019-08-28T15:59:29Z",
        "updated_at": "2022-12-07T18:05:55Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9c47eb450346937b3d7ee21b9e669b5c91a7ed6c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:15:46Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 32,
    "deletions": 33,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 15,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 1324415919,
      "node_id": "IC_kwDOABII585O8Puv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1324415919",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-23T00:53:10Z",
      "updated_at": "2022-11-27T23:07:29Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/26555#pullrequestreview-1193010616) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#issuecomment-1324415919",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555"
    },
    {
      "event": "labeled",
      "id": 7872722372,
      "node_id": "LE_lADOABII585XEZbnzwAAAAHVQDXE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7872722372",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-23T00:53:12Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7872726500,
      "node_id": "HRFPE_lADOABII585XEZbnzwAAAAHVQEXk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7872726500",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-23T00:54:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7872731017,
      "node_id": "HRFPE_lADOABII585XEZbnzwAAAAHVQFeJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7872731017",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-23T00:55:49Z"
    },
    {
      "event": "reviewed",
      "id": 1193010616,
      "node_id": "PRR_kwDOABII585HG-W4",
      "url": null,
      "actor": null,
      "commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThe new code is easier to read imo, and makes it easier to extend in the future. I think the comment and PR description could be improved a bit by highlighting that the generalization introduced here is just the fact that we're now also removing consumed outputs from the muhash. It is mentioned, but wasn't immediately clear to me that this should be the only functional change.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#pullrequestreview-1193010616",
      "submitted_at": "2022-11-24T16:59:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
    },
    {
      "event": "commented",
      "id": 1326803135,
      "node_id": "IC_kwDOABII585PFWi_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1326803135",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-24T19:55:16Z",
      "updated_at": "2022-11-24T19:55:16Z",
      "author_association": "MEMBER",
      "body": "> Right now the MuHash calculation in the functional test `feature_utxo_set_hash.py` is dependent on the specific chain we generate, e.g. it only works as long as the only spent coin is created in block number 1 (and no other UTXO is created in that same block) and uses that quirk to avoid the need to ever remove anything from the MuHash object.\r\n\r\nThe test still depends on the specifc chain because the resulting muhash is tested against a static value at the end. The whole point of this test is have a test against a static value to make sure the muhash results are consistent across refactors.\r\n\r\n> This PR generalizes the MuHash calculation by systematically going through all blocks and taking all spent/created coins into account (reflecting the actual behaviour on the coinstatsindex), which allows to potentially create more complex test-cases for UTXO set hashes in the future.\r\n\r\nCan you give examples what test cases you want to build?\r\n\r\n",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#issuecomment-1326803135",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555"
    },
    {
      "event": "commented",
      "id": 1327658815,
      "node_id": "IC_kwDOABII585PInc_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1327658815",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-25T16:04:19Z",
      "updated_at": "2022-11-25T16:04:19Z",
      "author_association": "MEMBER",
      "body": "@stickies-v: Thanks for the thorough review, will tackle the comments within the next days. Most suggestions look good at a first glance. The batching idea is very nice (I wasn't even aware that this is possible), but maybe a candidate for a follow-up PR, considering that it doesn't change runtime significantly with this small block chain.\r\n\r\n> > Right now the MuHash calculation in the functional test `feature_utxo_set_hash.py` is dependent on the specific chain we generate, e.g. it only works as long as the only spent coin is created in block number 1 (and no other UTXO is created in that same block) and uses that quirk to avoid the need to ever remove anything from the MuHash object.\r\n> \r\n> The test still depends on the specifc chain because the resulting muhash is tested against a static value at the end. The whole point of this test is have a test against a static value to make sure the muhash results are consistent across refactors.\r\n\r\n@fjahr: Yes, I was specifically referring to the MuHash calculation part (i.e. the [creation of the `muhash`/`finalized` objects in the test](https://github.com/bitcoin/bitcoin/blob/38d06e1561013f4ca845fd5ba6ffcc64de67f9c0/test/functional/feature_utxo_set_hash.py#L43-L66)), not the test as a whole. If the test is extended in the future leading to a different UTXO set, then the hard-coded hash value has to be adapted, obviously.\r\n> \r\n> > This PR generalizes the MuHash calculation by systematically going through all blocks and taking all spent/created coins into account (reflecting the actual behaviour on the coinstatsindex), which allows to potentially create more complex test-cases for UTXO set hashes in the future.\r\n> \r\n> Can you give examples what test cases you want to build?\r\n\r\nSome ideas:\r\n- test that the MuHash calculation for invalidating blocks / reorgs is correct (`CoinStatsIndex::ReverseBlock` doesn't seem to have test coverage regarding MuHash)\r\n- creating/spending UTXOs  with different outpoint index (right now they all have n=0)\r\n- sending to OP_RETURN outputs (i.e. verify that nulldata outputs are not taken into account for the UTXO set hash calculation)\r\n\r\nTo make a point for the latter two points -- currently, the following modifications would still pass the test:\r\n```diff\r\ndiff --git a/src/index/coinstatsindex.cpp b/src/index/coinstatsindex.cpp\r\nindex d3559b1b75..7ff144a8d2 100644\r\n--- a/src/index/coinstatsindex.cpp\r\n+++ b/src/index/coinstatsindex.cpp\r\n@@ -166,7 +166,7 @@ bool CoinStatsIndex::CustomAppend(const interfaces::BlockInfo& block)\r\n                 COutPoint outpoint{tx->GetHash(), j};\r\n\r\n                 // Skip unspendable coins\r\n-                if (coin.out.scriptPubKey.IsUnspendable()) {\r\n+                if (tx->IsCoinBase() && coin.out.scriptPubKey.IsUnspendable()) {\r\n                     m_total_unspendable_amount += coin.out.nValue;\r\n                     m_total_unspendables_scripts += coin.out.nValue;\r\n                     continue;\r\ndiff --git a/src/kernel/coinstats.cpp b/src/kernel/coinstats.cpp\r\nindex 06a4b8c974..7ab58b11c9 100644\r\n--- a/src/kernel/coinstats.cpp\r\n+++ b/src/kernel/coinstats.cpp\r\n@@ -50,7 +50,7 @@ uint64_t GetBogoSize(const CScript& script_pub_key)\r\n\r\n CDataStream TxOutSer(const COutPoint& outpoint, const Coin& coin) {\r\n     CDataStream ss(SER_DISK, PROTOCOL_VERSION);\r\n-    ss << outpoint;\r\n+    ss << COutPoint(outpoint.hash, 0);\r\n     ss << static_cast<uint32_t>(coin.nHeight * 2 + coin.fCoinBase);\r\n     ss << coin.out;\r\n     return ss;\r\n```",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#issuecomment-1327658815",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555"
    },
    {
      "event": "mentioned",
      "id": 7894157486,
      "node_id": "MEE_lADOABII585XEZbnzwAAAAHWh0iu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7894157486",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-25T16:04:20Z"
    },
    {
      "event": "subscribed",
      "id": 7894157496,
      "node_id": "SE_lADOABII585XEZbnzwAAAAHWh0i4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7894157496",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-25T16:04:20Z"
    },
    {
      "event": "mentioned",
      "id": 7894157506,
      "node_id": "MEE_lADOABII585XEZbnzwAAAAHWh0jC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7894157506",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-25T16:04:20Z"
    },
    {
      "event": "subscribed",
      "id": 7894157519,
      "node_id": "SE_lADOABII585XEZbnzwAAAAHWh0jP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7894157519",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-25T16:04:20Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY1NTMzMzFlZmFmZjRmYjY3YWQxYmU0NjhmN2M2MzAyOTE5YzQwZWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6553331efaff4fb67ad1be468f7c6302919c40ec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6553331efaff4fb67ad1be468f7c6302919c40ec",
      "tree": {
        "sha": "dd298b926d6d3ea705d409ef124e8d5140550bed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd298b926d6d3ea705d409ef124e8d5140550bed"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38d06e1561013f4ca845fd5ba6ffcc64de67f9c0",
          "sha": "38d06e1561013f4ca845fd5ba6ffcc64de67f9c0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/38d06e1561013f4ca845fd5ba6ffcc64de67f9c0"
        }
      ],
      "message": "test: generalize MuHash calculation in `feature_utxo_set_hash.py`\n\nRight now the MuHash calculation in the functional test\n`feature_utxo_set_hash.py` is dependent on the specific chain we\ngenerate, e.g. it only works as long as the only spent coin is created\nin block number 1 (and no other UTXO is created in that same block) and\nuses that quirk to avoid the need to ever remove anything from the\nMuHash object.\n\nThis PR generalizes the MuHash calculation by systematically going\nthrough all blocks and taking all spent/created coins into account\n(reflecting the actual behaviour on the coinstatsindex), which allows to\npotentially create more complex test-cases for UTXO set hashes in the\nfuture.",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2022-11-27T00:31:13Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2022-11-23T00:31:23Z"
      },
      "sha": "6553331efaff4fb67ad1be468f7c6302919c40ec"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7896875575,
      "node_id": "HRFPE_lADOABII585XEZbnzwAAAAHWsMI3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7896875575",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T00:34:00Z"
    },
    {
      "event": "commented",
      "id": 1328142677,
      "node_id": "IC_kwDOABII585PKdlV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1328142677",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T00:49:22Z",
      "updated_at": "2022-11-27T00:49:22Z",
      "author_association": "MEMBER",
      "body": "Force-pushed with some suggestions taken from @stickies-v.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#issuecomment-1328142677",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555"
    },
    {
      "event": "mentioned",
      "id": 7896885567,
      "node_id": "MEE_lADOABII585XEZbnzwAAAAHWsOk_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7896885567",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T00:49:22Z"
    },
    {
      "event": "subscribed",
      "id": 7896885568,
      "node_id": "SE_lADOABII585XEZbnzwAAAAHWsOlA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7896885568",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T00:49:22Z"
    },
    {
      "event": "commented",
      "id": 1328144035,
      "node_id": "IC_kwDOABII585PKd6j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1328144035",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T01:00:54Z",
      "updated_at": "2022-11-27T01:00:54Z",
      "author_association": "MEMBER",
      "body": "> @fjahr: Yes, I was specifically referring to the MuHash calculation part (i.e. the [creation of the muhash/finalized objects in the test](https://github.com/bitcoin/bitcoin/blob/38d06e1561013f4ca845fd5ba6ffcc64de67f9c0/test/functional/feature_utxo_set_hash.py#L43-L66)), not the test as a whole. If the test is extended in the future leading to a different UTXO set, then the hard-coded hash value has to be adapted, obviously.\r\n\r\nWe need to have some tests that make sure that the results stay consistent across refactors for deterministic cases. So I would be against removing all checks against static values if that is what you mean by adapting.\r\n\r\n> Some ideas:\r\n> \r\n> * test that the MuHash calculation for invalidating blocks / reorgs is correct (`CoinStatsIndex::ReverseBlock` doesn't seem to have test coverage regarding MuHash)\r\n> * creating/spending UTXOs  with different outpoint index (right now they all have n=0)\r\n> * sending to OP_RETURN outputs (i.e. verify that nulldata outputs are not taken into account for the UTXO set hash calculation)\r\n\r\nI think some, if not all, of these code path are covered in `feature_coinstatsindex.py`. There the Muhash result is dynamically checked for internal consistency. I would suggest to make further checks against a python reimplementation in there as well and not reimplement them here. It will save a lot of work and prevents duplication plus the functional test suite will run faster as a whole (fewer nodes running, fewer blocks mined).",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#issuecomment-1328144035",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555"
    },
    {
      "event": "mentioned",
      "id": 7896893171,
      "node_id": "MEE_lADOABII585XEZbnzwAAAAHWsQbz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7896893171",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T01:00:54Z"
    },
    {
      "event": "subscribed",
      "id": 7896893176,
      "node_id": "SE_lADOABII585XEZbnzwAAAAHWsQb4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7896893176",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T01:00:54Z"
    },
    {
      "event": "commented",
      "id": 1328229103,
      "node_id": "IC_kwDOABII585PKyrv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1328229103",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T11:48:13Z",
      "updated_at": "2022-11-27T11:48:13Z",
      "author_association": "MEMBER",
      "body": "> > @fjahr: Yes, I was specifically referring to the MuHash calculation part (i.e. the [creation of the muhash/finalized objects in the test](https://github.com/bitcoin/bitcoin/blob/38d06e1561013f4ca845fd5ba6ffcc64de67f9c0/test/functional/feature_utxo_set_hash.py#L43-L66)), not the test as a whole. If the test is extended in the future leading to a different UTXO set, then the hard-coded hash value has to be adapted, obviously.\r\n> \r\n> We need to have some tests that make sure that the results stay consistent across refactors for deterministic cases. So I would be against removing all checks against static values if that is what you mean by adapting.\r\n\r\nNo plan of removing the static check, by \"adapting\" I merely mean changing the hardcoded hash if needed in the future -- it's not that this hash is set in stone forever, there have been three previous adaptions before: 041abfebe49ae5e3e882c00cc5caea1365a27a49, f30041c9143d0added18105c9f0c4ae3f340efbc and fa38b1c8bd29e2c792737f6481ab928e46396b7e. I agree though that there should be a very good reason for changes that cause an adaption of the hash. Note that this PR does _not_ change or remove the static hash check, it's for now just a refactor for a more systematic Python Muhash calculation approach and (IMHO) slightly improved readability.\r\n\r\n> \r\n> > Some ideas:\r\n> > \r\n> > * test that the MuHash calculation for invalidating blocks / reorgs is correct (`CoinStatsIndex::ReverseBlock` doesn't seem to have test coverage regarding MuHash)\r\n> > * creating/spending UTXOs  with different outpoint index (right now they all have n=0)\r\n> > * sending to OP_RETURN outputs (i.e. verify that nulldata outputs are not taken into account for the UTXO set hash calculation)\r\n> \r\n> I think some, if not all, of these code path are covered in `feature_coinstatsindex.py`. There the Muhash result is dynamically checked for internal consistency. I would suggest to make further checks against a python reimplementation in there as well and not reimplement them here. It will save a lot of work and prevents duplication plus the functional test suite will run faster as a whole (fewer nodes running, fewer blocks mined).\r\n\r\nGood point, will take a closer look there. Not sure about the \"fewer nodes running\" argument, I don't see why this `feature_utxo_set_hash.py` test would ever need more than a single node.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#issuecomment-1328229103",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555"
    },
    {
      "event": "mentioned",
      "id": 7897439562,
      "node_id": "MEE_lADOABII585XEZbnzwAAAAHWuV1K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7897439562",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T11:48:13Z"
    },
    {
      "event": "subscribed",
      "id": 7897439563,
      "node_id": "SE_lADOABII585XEZbnzwAAAAHWuV1L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7897439563",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-27T11:48:13Z"
    },
    {
      "event": "commented",
      "id": 1422352717,
      "node_id": "IC_kwDOABII585Ux2FN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1422352717",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T10:13:40Z",
      "updated_at": "2023-02-08T10:13:40Z",
      "author_association": "MEMBER",
      "body": "@theStack @fjahr what are the next steps here? Is this blocked on other changes?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#issuecomment-1422352717",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555"
    },
    {
      "event": "mentioned",
      "id": 8467060897,
      "node_id": "MEE_lADOABII585XEZbnzwAAAAH4rRih",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8467060897",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T10:13:41Z"
    },
    {
      "event": "subscribed",
      "id": 8467060911,
      "node_id": "SE_lADOABII585XEZbnzwAAAAH4rRiv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8467060911",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T10:13:41Z"
    },
    {
      "event": "mentioned",
      "id": 8467060927,
      "node_id": "MEE_lADOABII585XEZbnzwAAAAH4rRi_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8467060927",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T10:13:41Z"
    },
    {
      "event": "subscribed",
      "id": 8467060946,
      "node_id": "SE_lADOABII585XEZbnzwAAAAH4rRjS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8467060946",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T10:13:41Z"
    },
    {
      "event": "commented",
      "id": 1423139553,
      "node_id": "IC_kwDOABII585U02Lh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1423139553",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T19:36:34Z",
      "updated_at": "2023-02-08T19:36:34Z",
      "author_association": "MEMBER",
      "body": "> @theStack @fjahr what are the next steps here? Is this blocked on other changes?\r\n\r\nMy comment from above stands, I think this change as is doesn't hold much value if the intention is to implement additional test cases that would be a better fit for `feature_coinstatsindex.py`. @theStack wanted to take a look into that and that seems to be still pending.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#issuecomment-1423139553",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555"
    },
    {
      "event": "mentioned",
      "id": 8472367523,
      "node_id": "MEE_lADOABII585XEZbnzwAAAAH4_hGj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8472367523",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T19:36:34Z"
    },
    {
      "event": "subscribed",
      "id": 8472367531,
      "node_id": "SE_lADOABII585XEZbnzwAAAAH4_hGr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8472367531",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T19:36:34Z"
    },
    {
      "event": "mentioned",
      "id": 8472367548,
      "node_id": "MEE_lADOABII585XEZbnzwAAAAH4_hG8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8472367548",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T19:36:34Z"
    },
    {
      "event": "subscribed",
      "id": 8472367556,
      "node_id": "SE_lADOABII585XEZbnzwAAAAH4_hHE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8472367556",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-08T19:36:35Z"
    },
    {
      "event": "convert_to_draft",
      "id": 8480739364,
      "node_id": "CTDE_lADOABII585XEZbnzwAAAAH5fdAk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8480739364",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-09T15:32:14Z"
    },
    {
      "event": "commented",
      "id": 1424381158,
      "node_id": "IC_kwDOABII585U5lTm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424381158",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-09T15:32:25Z",
      "updated_at": "2023-02-09T15:32:25Z",
      "author_association": "MEMBER",
      "body": "Moved to draft for the moment.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#issuecomment-1424381158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26555"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031410193",
      "pull_request_review_id": 1193010616,
      "id": 1031410193,
      "node_id": "PRRC_kwDOABII5849ehIR",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 73,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: both are accepted but `verbosity` is the documented kwargs since it became an integer type so I'd go with that?\r\n```suggestion\r\n            for tx in node.getblock(blockhash=node.getblockhash(height), verbosity=3)['tx']:\r\n```",
      "created_at": "2022-11-24T11:35:45Z",
      "updated_at": "2022-11-24T16:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1031410193",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031410193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031417827",
      "pull_request_review_id": 1193010616,
      "id": 1031417827,
      "node_id": "PRRC_kwDOABII5849ei_j",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:\n+                # add created coins\n+                is_coinbase_tx = 'coinbase' in tx['vin'][0]\n+                for o in tx['vout']:\n+                    if o['scriptPubKey']['type'] != 'nulldata':\n+                        muhash.insert(txout_serialize(tx['txid'], o['n'], height, is_coinbase_tx,\n+                                                      o['value'], o['scriptPubKey']['hex']))\n+                # remove spent coins\n+                if not is_coinbase_tx:\n+                    for i in tx['vin']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": 85,
      "original_position": 82,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                    for vin in tx['vin']:\r\n```",
      "created_at": "2022-11-24T11:44:41Z",
      "updated_at": "2022-11-24T16:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1031417827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031417827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 60,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031417903",
      "pull_request_review_id": 1193010616,
      "id": 1031417903,
      "node_id": "PRRC_kwDOABII5849ejAv",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:\n+                # add created coins\n+                is_coinbase_tx = 'coinbase' in tx['vin'][0]\n+                for o in tx['vout']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": 79,
      "original_position": 76,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                for vout in tx['vout']:\r\n```",
      "created_at": "2022-11-24T11:44:48Z",
      "updated_at": "2022-11-24T16:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1031417903",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031417903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031425288",
      "pull_request_review_id": 1193010616,
      "id": 1031425288,
      "node_id": "PRRC_kwDOABII5849ek0I",
      "diff_hunk": "@@ -3,19 +3,24 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test UTXO set hash value calculation in gettxoutsetinfo.\"\"\"\n-\n-import struct\n-\n from test_framework.messages import (\n-    CBlock,\n+    COIN,\n     COutPoint,\n-    from_hex,\n+    CTxOut,\n )\n from test_framework.muhash import MuHash3072\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal\n from test_framework.wallet import MiniWallet\n \n+\n+def txout_serialize(txid_hex, n, height, is_coinbase, value, scriptPubKey_hex):",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 20,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry, here I am again with the type hint nits. Also renamed `n` -> `output_index`\r\n\r\nnit: `serialize_txout` seems like a more natural sounding name but bike shedding\r\n```suggestion\r\ndef txout_serialize(txid_hex: str, output_index: int, height: int, is_coinbase: bool, value: float,\r\n                    scriptPubKey_hex: str) -> bytes:\r\n```",
      "created_at": "2022-11-24T11:53:15Z",
      "updated_at": "2022-11-24T16:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1031425288",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031425288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031638793",
      "pull_request_review_id": 1193010616,
      "id": 1031638793,
      "node_id": "PRRC_kwDOABII5849fY8J",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 73,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "tl;dr - could be improved with batch requests but shouldn't be a blocker for this pull, current approach is very reasonable.\r\n\r\nThis would benefit from a batch request approach, albeit quite modestly.  On my machine, test runtime decreased from \\~0.35s to \\~0.33s. Overall runtime is very short so I don't think we need to go out of our way to optimize here, but would be a best practice. I'm thinking we should add streamlined batch request handling (~`send_batch_request` as implemented here) on the `AuthServiceProxy` level so tests can use it with minimal overhead. But I guess I should just make a separate pull for that - there's probably room for improvement in other tests that iterate over single requests.\r\n\r\n<details>\r\n<summary>git diff on 3accc773c</summary>\r\n\r\n```diff\r\ndiff --git a/test/functional/feature_utxo_set_hash.py b/test/functional/feature_utxo_set_hash.py\r\nindex 46a1813d4..a328d6805 100755\r\n--- a/test/functional/feature_utxo_set_hash.py\r\n+++ b/test/functional/feature_utxo_set_hash.py\r\n@@ -9,13 +9,16 @@ from test_framework.messages import (\r\n     CTxOut,\r\n )\r\n from test_framework.muhash import MuHash3072\r\n-from test_framework.test_framework import BitcoinTestFramework\r\n+from test_framework.test_framework import BitcoinTestFramework, TestNode\r\n from test_framework.util import assert_equal\r\n from test_framework.wallet import MiniWallet\r\n \r\n+from typing import Dict, List, Any\r\n \r\n-def txout_serialize(txid_hex, n, height, is_coinbase, value, scriptPubKey_hex):\r\n-    data = COutPoint(int(txid_hex, 16), n).serialize()\r\n+\r\n+def txout_serialize(txid_hex: str, output_index: int, height: int, is_coinbase: bool, value: float,\r\n+                    scriptPubKey_hex: str) -> bytes:\r\n+    data = COutPoint(int(txid_hex, 16), output_index).serialize()\r\n     data += (height * 2 + is_coinbase).to_bytes(4, 'little')\r\n     data += CTxOut(int(value * COIN), bytes.fromhex(scriptPubKey_hex)).serialize()\r\n     return data\r\n@@ -43,20 +46,23 @@ class UTXOSetHashTest(BitcoinTestFramework):\r\n         # apply (add/remove) them to the MuHash object accordingly\r\n         muhash = MuHash3072()\r\n \r\n-        for height in range(1, node.getblockcount() + 1):\r\n-            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:\r\n+        hashes = send_batch_request(node, \"getblockhash\", [[i] for i in range(1, node.getblockcount() + 1)])\r\n+        blocks = send_batch_request(node, \"getblock\", [{\"blockhash\": h, \"verbosity\": 3} for h in hashes])\r\n+        for block in blocks:\r\n+            height = block[\"height\"]\r\n+            for tx in block[\"tx\"]:\r\n                 # add created coins\r\n                 is_coinbase_tx = 'coinbase' in tx['vin'][0]\r\n                 for o in tx['vout']:\r\n                     if o['scriptPubKey']['type'] != 'nulldata':\r\n                         muhash.insert(txout_serialize(tx['txid'], o['n'], height, is_coinbase_tx,\r\n-                                                      o['value'], o['scriptPubKey']['hex']))\r\n+                                                        o['value'], o['scriptPubKey']['hex']))\r\n                 # remove spent coins\r\n                 if not is_coinbase_tx:\r\n                     for i in tx['vin']:\r\n                         prev = i['prevout']\r\n                         muhash.remove(txout_serialize(i['txid'], i['vout'], prev['height'], prev['generated'],\r\n-                                                      prev['value'], prev['scriptPubKey']['hex']))\r\n+                                                        prev['value'], prev['scriptPubKey']['hex']))\r\n \r\n         finalized = muhash.digest()\r\n         node_muhash = node.gettxoutsetinfo(\"muhash\")['muhash']\r\n@@ -71,5 +77,17 @@ class UTXOSetHashTest(BitcoinTestFramework):\r\n         self.test_muhash_implementation()\r\n \r\n \r\n+def send_batch_request(node: TestNode, method: str, params: List[Any]) -> List[Any]:\r\n+    \"\"\"Send batch request and parse all results\"\"\"\r\n+    data = [{\"method\": method, \"params\": p} for p in params]\r\n+    response = node.batch(data)\r\n+    result = []\r\n+    for item in response:\r\n+        assert item[\"error\"] is None, item[\"error\"]\r\n+        result.append(item[\"result\"])\r\n+\r\n+    return result\r\n+\r\n+\r\n if __name__ == '__main__':\r\n     UTXOSetHashTest().main()\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>benchmark results</summary>\r\n\r\n```sh\r\nunpatched (3accc773c)\r\n------------------------\r\n% repeat 5 time ./test/functional/feature_utxo_set_hash.py > /dev/null\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.34s user 0.10s system 35% cpu 1.235 total\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.35s user 0.09s system 33% cpu 1.315 total\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.35s user 0.09s system 35% cpu 1.231 total\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.35s user 0.09s system 37% cpu 1.183 total\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.35s user 0.09s system 35% cpu 1.247 total\r\n\r\npatch (diff above)\r\n------------------\r\n% repeat 5 time ./test/functional/feature_utxo_set_hash.py > /dev/null\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.32s user 0.08s system 28% cpu 1.406 total\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.33s user 0.08s system 27% cpu 1.508 total\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.33s user 0.08s system 34% cpu 1.207 total\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.32s user 0.09s system 27% cpu 1.490 total\r\n./test/functional/feature_utxo_set_hash.py > /dev/null  0.32s user 0.08s system 33% cpu 1.211 total\r\n```\r\n</details>",
      "created_at": "2022-11-24T15:31:18Z",
      "updated_at": "2022-11-24T16:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1031638793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031638793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": 46,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031680032",
      "pull_request_review_id": 1193010616,
      "id": 1031680032,
      "node_id": "PRRC_kwDOABII5849fjAg",
      "diff_hunk": "@@ -3,19 +3,24 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test UTXO set hash value calculation in gettxoutsetinfo.\"\"\"\n-\n-import struct\n-\n from test_framework.messages import (\n-    CBlock,\n+    COIN,\n     COutPoint,\n-    from_hex,\n+    CTxOut,\n )\n from test_framework.muhash import MuHash3072\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal\n from test_framework.wallet import MiniWallet\n \n+\n+def txout_serialize(txid_hex, n, height, is_coinbase, value, scriptPubKey_hex):",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 20,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": 1031425288,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Okay, I guess you just used snake case of the `TxOutSer` function name. On that note, I think it would be good to explicitly reference `TxOutSer` (name is fine imo) here so it's easier for people where this logic is coming from?",
      "created_at": "2022-11-24T16:19:21Z",
      "updated_at": "2022-11-24T16:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1031680032",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031680032"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031711125",
      "pull_request_review_id": 1193010616,
      "id": 1031711125,
      "node_id": "PRRC_kwDOABII5849fqmV",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 50,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit to make the link with the next sentence a bit more clear\r\n```suggestion\r\n        # Serialize (created/spent) transaction outputs in each block and\r\n```",
      "created_at": "2022-11-24T16:58:34Z",
      "updated_at": "2022-11-24T16:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1031711125",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1031711125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032848942",
      "pull_request_review_id": 1194919272,
      "id": 1032848942,
      "node_id": "PRRC_kwDOABII5849kAYu",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 73,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": 1031410193,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done.",
      "created_at": "2022-11-27T00:35:07Z",
      "updated_at": "2022-11-27T00:35:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1032848942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032848942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849256",
      "pull_request_review_id": 1194919543,
      "id": 1032849256,
      "node_id": "PRRC_kwDOABII5849kAdo",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:\n+                # add created coins\n+                is_coinbase_tx = 'coinbase' in tx['vin'][0]\n+                for o in tx['vout']:\n+                    if o['scriptPubKey']['type'] != 'nulldata':\n+                        muhash.insert(txout_serialize(tx['txid'], o['n'], height, is_coinbase_tx,\n+                                                      o['value'], o['scriptPubKey']['hex']))\n+                # remove spent coins\n+                if not is_coinbase_tx:\n+                    for i in tx['vin']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": 85,
      "original_position": 82,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": 1031417827,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This doesn't seem appropriate, since `vin` (and `vout`) doesn't denote a single input/output, but rather a collection of them. I assume the `v` prefix stems from `vector`, see e.g. https://github.com/bitcoin/bitcoin/blob/9c47eb450346937b3d7ee21b9e669b5c91a7ed6c/src/primitives/transaction.h#L298-L299\r\nI was thinking only using `in`/`out`, but `in` is a reserved word in Python (`for in in ...` would look weird), `input`/`output` is IMHO too long, so I decided to just stick with `i`/`o`.",
      "created_at": "2022-11-27T00:40:39Z",
      "updated_at": "2022-11-27T00:40:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1032849256",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 60,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849361",
      "pull_request_review_id": 1194919579,
      "id": 1032849361,
      "node_id": "PRRC_kwDOABII5849kAfR",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:\n+                # add created coins\n+                is_coinbase_tx = 'coinbase' in tx['vin'][0]\n+                for o in tx['vout']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": 79,
      "original_position": 76,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": 1031417903,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See comment above (https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1031417827).",
      "created_at": "2022-11-27T00:41:09Z",
      "updated_at": "2022-11-27T00:41:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1032849361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849554",
      "pull_request_review_id": 1194919714,
      "id": 1032849554,
      "node_id": "PRRC_kwDOABII5849kAiS",
      "diff_hunk": "@@ -3,19 +3,24 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test UTXO set hash value calculation in gettxoutsetinfo.\"\"\"\n-\n-import struct\n-\n from test_framework.messages import (\n-    CBlock,\n+    COIN,\n     COutPoint,\n-    from_hex,\n+    CTxOut,\n )\n from test_framework.muhash import MuHash3072\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal\n from test_framework.wallet import MiniWallet\n \n+\n+def txout_serialize(txid_hex, n, height, is_coinbase, value, scriptPubKey_hex):",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 20,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": 1031425288,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good ideas, applied both the type hints and the s/n/output_index rename. Also add a small comment referring to the original serialization function `TxOutSer`.",
      "created_at": "2022-11-27T00:43:40Z",
      "updated_at": "2022-11-27T00:43:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1032849554",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849600",
      "pull_request_review_id": 1194919758,
      "id": 1032849600,
      "node_id": "PRRC_kwDOABII5849kAjA",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 50,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": 1031711125,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done.",
      "created_at": "2022-11-27T00:44:25Z",
      "updated_at": "2022-11-27T00:44:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1032849600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849891",
      "pull_request_review_id": 1194919953,
      "id": 1032849891,
      "node_id": "PRRC_kwDOABII5849kAnj",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 73,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": 1031638793,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since the run-time difference is insignificant, I think that would be a nice candidate for a follow-up. Even if this PR doesn't get merged, in general it would be nice to investigate which tests could be sped up by using this batch request approach.",
      "created_at": "2022-11-27T00:48:03Z",
      "updated_at": "2022-11-27T00:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1032849891",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1032849891"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": 46,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1033026569",
      "pull_request_review_id": 1195070700,
      "id": 1033026569,
      "node_id": "PRRC_kwDOABII5849krwJ",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:\n+                # add created coins\n+                is_coinbase_tx = 'coinbase' in tx['vin'][0]\n+                for o in tx['vout']:\n+                    if o['scriptPubKey']['type'] != 'nulldata':\n+                        muhash.insert(txout_serialize(tx['txid'], o['n'], height, is_coinbase_tx,\n+                                                      o['value'], o['scriptPubKey']['hex']))\n+                # remove spent coins\n+                if not is_coinbase_tx:\n+                    for i in tx['vin']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": 85,
      "original_position": 82,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": 1031417827,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're absolutely right about `vin`/`vout` being inappropriate for a single input/output, my bad. I don't agree with `input`/`output` being too long though, especially here when we have multiple layers of nesting. However, it's also not important enough and probably too much personal preference to bikeshed over so I'll leave it up to you.",
      "created_at": "2022-11-27T23:07:26Z",
      "updated_at": "2022-11-27T23:07:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1033026569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1033026569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 60,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034066899",
      "pull_request_review_id": 1196574582,
      "id": 1034066899,
      "node_id": "PRRC_kwDOABII5849opvT",
      "diff_hunk": "@@ -29,39 +34,29 @@ def test_muhash_implementation(self):\n         mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n         node.setmocktime(mocktime)\n \n-        # Generate 100 blocks and remove the first since we plan to spend its\n-        # coinbase\n-        block_hashes = self.generate(wallet, 1) + self.generate(node, 99)\n-        blocks = list(map(lambda block: from_hex(CBlock(), node.getblock(block, False)), block_hashes))\n-        blocks.pop(0)\n-\n-        # Create a spending transaction and mine a block which includes it\n+        # Generate 100 blocks, create spending transaction and mine another block\n+        self.generate(wallet, 1) + self.generate(node, 99)\n         txid = wallet.send_self_transfer(from_node=node)['txid']\n-        tx_block = self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n-        blocks.append(from_hex(CBlock(), node.getblock(tx_block['hash'], False)))\n+        self.generateblock(node, output=wallet.get_address(), transactions=[txid])\n \n-        # Serialize the outputs that should be in the UTXO set and add them to\n-        # a MuHash object\n+        # Serialize created/spent transaction outputs in each block and\n+        # apply (add/remove) them to the MuHash object accordingly\n         muhash = MuHash3072()\n \n-        for height, block in enumerate(blocks):\n-            # The Genesis block coinbase is not part of the UTXO set and we\n-            # spent the first mined block\n-            height += 2\n-\n-            for tx in block.vtx:\n-                for n, tx_out in enumerate(tx.vout):\n-                    coinbase = 1 if not tx.vin[0].prevout.hash else 0\n-\n-                    # Skip witness commitment\n-                    if (coinbase and n > 0):\n-                        continue\n-\n-                    data = COutPoint(int(tx.rehash(), 16), n).serialize()\n-                    data += struct.pack(\"<i\", height * 2 + coinbase)\n-                    data += tx_out.serialize()\n-\n-                    muhash.insert(data)\n+        for height in range(1, node.getblockcount() + 1):\n+            for tx in node.getblock(blockhash=node.getblockhash(height), verbose=3)['tx']:",
      "path": "test/functional/feature_utxo_set_hash.py",
      "position": null,
      "original_position": 73,
      "commit_id": "6553331efaff4fb67ad1be468f7c6302919c40ec",
      "original_commit_id": "3accc773c99fbcfbdbb3acff779bf302f7dfbbdd",
      "in_reply_to_id": 1031638793,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "FYI: I looked at quite a few/most of the long-running tests and couldn't identify any significant enough improvements because of batching so I'm not going to look further into it for now myself - comment can be marked resolved.",
      "created_at": "2022-11-28T21:30:51Z",
      "updated_at": "2022-11-28T21:30:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26555#discussion_r1034066899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034066899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26555"
        }
      },
      "start_line": null,
      "original_start_line": 46,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    }
  ]
}