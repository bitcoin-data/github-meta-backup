{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494",
    "id": 41275766,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDEyNzU3NjY=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6494",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/6494.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/6494.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/9fa8c48abbee1fe9d765705897e105274421d385",
    "number": 6494,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Allow block announcements with headers",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is an implementation of #5982 (and based off @sipa's commit in #5307, which has been squashed into this commit).\n\nCurrently new blocks are announced via `inv` messages.  Since headers-first download was introduced in 0.10, blocks are not processed unless the headers for the block connect to known, valid headers, so peers receiving `inv` messages respond with a `getheaders` and a `getdata`: the expectation is that the announcing peer will send the headers for the block and any parents unknown to the peer before delivering the new block.\n\nIn the case of a reorg, nodes currently announce only the new tip, and not the blocks that lead to the tip.  This means that an extra round-trip is required to relay a reorg, because the peer receiving the `inv` for the tip must wait for the response to the `getheaders` message before being able to request the missing blocks.  (For additional reasons discussed in https://github.com/bitcoin/bitcoin/pull/5307#issuecomment-93785348, it's not optimal to `inv` all the blocks added in the reorg to a headers-first peer, because this results in needless traffic due to the way `getheaders` requests are generated when direct-fetching `inv`'ed blocks.)\n\nThis pull implements a new `sendheaders` p2p message, which a node sends to its peers to indicate that the node prefers to receive new block announcements via a `headers` message rather than an inv.  This implementation does a few things:\n- When announcing a new block to a peer that prefers headers, try to announce all the blocks that are being added, back to the last fork point, by sending headers for each.\n- Avoid sending headers for blocks that are already known to the peer (determined by checking `pindexBestKnownBlock` and `pindexBestHeaderSent` and their ancestors).\n  - pindexBestKnownBlock is updated based on `inv` messages, `headers` sent from that peer, and `getheaders` messages sent from the peer.\n  - `pindexBestHeaderSent` is a new variable that tracks the best header we have sent to the peer\n- Avoid sending more than 8 headers to the peer.  This code is designed to be optimized for relaying at the tip, so a large reorg is some kind of error condition; in that case avoid spamming the peer with a lot of headers and instead fall back to the old `inv` mechanism.\n- If the headers to be announced aren't known to connect to headers that the peer has, then revert to sending an `inv` at the tip instead.  This is designed to avoid DoS points from sending headers that don't connect.  Since every new block should generally be announced by one peer in any pair of peers, it's expected that once headers-announcement begins on a link (ie once two nodes are known to be synced), it should be able to continue.\n- After #6148 is merged, this would allow pruning nodes to generally be able to relay reorgs to peers via headers announcements.  The code that implements direct fetching upon receipt of a headers message will send `getdata` requests to any peer that announces a block via a headers message.\n\nThis pull includes a new python p2p test exercising the new functionality.\n\nBIP 130 describes the proposed new `sendheaders` p2p message here:\nhttps://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki \n",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/19",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/19",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/19/labels",
      "id": 1092458,
      "node_id": "MDk6TWlsZXN0b25lMTA5MjQ1OA==",
      "number": 19,
      "state": "closed",
      "title": "0.12.0",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 78,
      "created_at": "2015-05-01T12:31:35Z",
      "updated_at": "2016-09-26T14:08:41Z",
      "closed_at": "2016-08-16T10:17:40Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2015-07-30T20:03:49Z",
    "updated_at": "2021-09-08T12:03:47Z",
    "closed_at": "2015-11-29T12:06:49Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "4a9f51c92b9af44934bcc5864bb643cc86dd147a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "sdaftuar:direct-headers-announcement",
      "ref": "direct-headers-announcement",
      "sha": "9fa8c48abbee1fe9d765705897e105274421d385",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 28761781,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODc2MTc4MQ==",
        "name": "bitcoin",
        "full_name": "sdaftuar/bitcoin",
        "owner": {
          "login": "sdaftuar",
          "id": 7463573,
          "node_id": "MDQ6VXNlcjc0NjM1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sdaftuar",
          "html_url": "https://github.com/sdaftuar",
          "followers_url": "https://api.github.com/users/sdaftuar/followers",
          "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
          "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
          "repos_url": "https://api.github.com/users/sdaftuar/repos",
          "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sdaftuar/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sdaftuar/bitcoin",
        "archive_url": "https://api.github.com/repos/sdaftuar/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sdaftuar/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sdaftuar/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sdaftuar/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sdaftuar/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sdaftuar/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sdaftuar/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sdaftuar/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sdaftuar/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sdaftuar/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sdaftuar/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sdaftuar/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sdaftuar/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sdaftuar/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sdaftuar/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sdaftuar/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sdaftuar/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sdaftuar/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sdaftuar/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sdaftuar/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sdaftuar/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sdaftuar/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sdaftuar/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sdaftuar/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sdaftuar/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sdaftuar/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sdaftuar/bitcoin/hooks",
        "svn_url": "https://github.com/sdaftuar/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 245655,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-01T00:45:13Z",
        "created_at": "2015-01-04T02:52:13Z",
        "updated_at": "2023-02-11T10:16:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0b0fc179ab8795463e0a0f07e989ec6f592a1f90",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 780,
    "deletions": 12,
    "changed_files": 8,
    "commits": 1,
    "review_comments": 15,
    "comments": 30
  },
  "events": [
    {
      "event": "mentioned",
      "id": 369859890,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY5ODU5ODkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/369859890",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-30T20:03:49Z"
    },
    {
      "event": "subscribed",
      "id": 369859891,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2OTg1OTg5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/369859891",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-30T20:03:49Z"
    },
    {
      "event": "commented",
      "id": 126483990,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ4Mzk5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/126483990",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-30T20:55:02Z",
      "updated_at": "2015-07-30T20:55:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "This isn't really needed is it? If a node is already sending \"getheaders\" then presumably a node can assume it prefers headers rather than invs, perhaps?\n",
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-126483990",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 126529816,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjUyOTgxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/126529816",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-31T00:28:35Z",
      "updated_at": "2015-07-31T00:28:35Z",
      "author_association": "MEMBER",
      "body": "@rebroad  Sorry, I just realized I should have emphasized more clearly that this PR also includes code to enable direct-fetching of blocks based on headers messages.  Without that change, nodes that received a headers message would otherwise wait to download blocks through the existing parallel fetch mechanism, which would generally make headers-announcement inferior to inv-announcements (because we have direct-fetch code in the inv-processing logic, which means we'd be quicker to request a new block).\n\nConsequently I think it makes sense for nodes to somehow opt-in to the new behavior.  0.10 and 0.11 nodes should continue to receive inv's even after this code is merged.\n\nOne thing that wasn't clear to me was whether it's really necessary to do the protocol version bump in order to deploy the new p2p message, given that the new message is backwards compatible -- nodes are free to ignore it.  However I'm not sure I have a good grasp of how the protocol versions should be thought about.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-126529816",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 370056328,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzcwMDU2MzI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/370056328",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-31T00:28:35Z"
    },
    {
      "event": "subscribed",
      "id": 370056329,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3MDA1NjMyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/370056329",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-31T00:28:35Z"
    },
    {
      "event": "labeled",
      "id": 370266147,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3MDI2NjE0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/370266147",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-31T08:11:42Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 126661302,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjY2MTMwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/126661302",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-31T11:35:05Z",
      "updated_at": "2015-07-31T11:35:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sdaftuar Why not use the existing parallel fetch mechanism? I don't see any advantage in fetching the block outside of that.\n",
      "user": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-126661302",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 370419071,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzcwNDE5MDcx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/370419071",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-31T11:35:05Z"
    },
    {
      "event": "subscribed",
      "id": 370419072,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3MDQxOTA3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/370419072",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-31T11:35:05Z"
    },
    {
      "event": "commented",
      "id": 126677054,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjY3NzA1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/126677054",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-31T12:37:47Z",
      "updated_at": "2015-07-31T12:37:47Z",
      "author_association": "MEMBER",
      "body": "The existing parallel fetch mechanism has a delay and an extra roundtrip,\nbecause it first needs to ask for headers before it can start fetching any\nblock.\n\nSending all headers immediately when announcing the block avoids that\nround-trip, potentially improving propagation speed significantly over\nhigh-latency links.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-126677054",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 372246579,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcyMjQ2NTc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/372246579",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-03T17:42:29Z"
    },
    {
      "event": "commented",
      "id": 127344879,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzM0NDg3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/127344879",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-03T17:44:09Z",
      "updated_at": "2015-08-03T17:44:09Z",
      "author_association": "MEMBER",
      "body": "Fixed @casey's nits\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-127344879",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 372248507,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzcyMjQ4NTA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/372248507",
      "actor": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-03T17:44:09Z"
    },
    {
      "event": "subscribed",
      "id": 372248508,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3MjI0ODUwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/372248508",
      "actor": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-03T17:44:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 405028332,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA1MDI4MzMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/405028332",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-09T16:33:24Z"
    },
    {
      "event": "commented",
      "id": 138978021,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODk3ODAyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/138978021",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-09T17:09:18Z",
      "updated_at": "2015-09-09T17:09:18Z",
      "author_association": "MEMBER",
      "body": "Rebased.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-138978021",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 416014897,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE2MDE0ODk3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/416014897",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-22T15:53:06Z"
    },
    {
      "event": "commented",
      "id": 142966413,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjk2NjQxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142966413",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-24T15:38:00Z",
      "updated_at": "2015-09-24T15:38:00Z",
      "author_association": "MEMBER",
      "body": "I'm planning to send the draft BIP out to the mailing list for comments, but before I do so, does anyone here have any guidance about whether it is necessary to bump the protocol version to introduce the new `sendheaders` p2p message?  It is safe to ignore the message, but I'm not sure if its generally considered helpful to change the protocol version when adding even an optional message...\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-142966413",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 142972322,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjk3MjMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142972322",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-24T15:58:02Z",
      "updated_at": "2015-09-24T15:58:02Z",
      "author_association": "MEMBER",
      "body": "I think it's helpful to bump the protocol version in this case. Although it's only an optional hint, it may provide more clarity (eg when documenting) and help troubleshooting.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-142972322",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 145803573,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTgwMzU3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145803573",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T09:52:50Z",
      "updated_at": "2015-10-06T09:52:50Z",
      "author_association": "MEMBER",
      "body": "How is the BIP for this coming along? Need any help?\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-145803573",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 145875499,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTg3NTQ5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145875499",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T14:34:39Z",
      "updated_at": "2015-10-06T14:34:39Z",
      "author_association": "MEMBER",
      "body": "@theuni suggested some alternate ideas to the \"sendheaders\" p2p message: either extend the version message to include a bool that indicates the preference to receive headers announcements, or even just allocate a service bit that indicates that preference.\n\nBetween those 3 options I don't feel strongly about the best way to deploy -- and in particular I can understand why it might not be great to go with adding a new p2p message that causes node state/behavior to change.  @theuni mentioned he might respond on-list with his alternate suggestions; any thoughts here on those ideas?\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-145875499",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 428016716,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI4MDE2NzE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/428016716",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T14:34:39Z"
    },
    {
      "event": "subscribed",
      "id": 428016717,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyODAxNjcxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/428016717",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T14:34:39Z"
    },
    {
      "event": "commented",
      "id": 145878356,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTg3ODM1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145878356",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T14:42:21Z",
      "updated_at": "2015-10-06T14:42:21Z",
      "author_association": "MEMBER",
      "body": "@sdaftuar @theuni Extending \"version\" continuously isn't a very scalable approach, and requires pretty strong consensus to do, as the order of entries matters. I don't really understand why we kept doing that for so long.\n\nA service bit has the same \"synchronization\" problem, but does have the extra advantage of making the property searchable.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-145878356",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 428027113,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI4MDI3MTEz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/428027113",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T14:42:21Z"
    },
    {
      "event": "subscribed",
      "id": 428027114,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyODAyNzExNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/428027114",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T14:42:21Z"
    },
    {
      "event": "mentioned",
      "id": 428027115,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI4MDI3MTE1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/428027115",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T14:42:21Z"
    },
    {
      "event": "subscribed",
      "id": 428027116,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyODAyNzExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/428027116",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T14:42:21Z"
    },
    {
      "event": "commented",
      "id": 145918734,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTkxODczNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145918734",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-06T16:25:27Z",
      "updated_at": "2015-10-06T16:25:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "I don't think it's important that the property is searchable.  For me I'd ask should this be its own message, or should we define a \"flags\" message, for sending more, non-searchable capabilities.\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-145918734",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 146395507,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjM5NTUwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146395507",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-08T02:16:40Z",
      "updated_at": "2015-10-08T02:16:40Z",
      "author_association": "MEMBER",
      "body": "@sipa @gmaxwell My preference for not sending a new messages comes from an event-driven implementor's POV. If a remote nodes are allowed to switch preferences mid-stream, it can greatly (and needlessly) complicate the local node's sending logic.\n\nThe easy way to avoid that is to disallow changing the preference _back_ once set (this seems to be the case in @sdaftuar's BIP). Taking that a step further, it also makes sense to only accept the message early in the connection process, say directly after version/verack, and before any inv. And if that's the case, it may as well just be considered as part of the handshake.\n\nEssentially, I would much prefer to avoid making life-of-the-connection properties stateful unless necessary. Extending the version message makes sense to me, but I understand @sipa's objection there. \n\n@gmaxwell's suggestion seems reasonable, assuming that the \"flags\" message had the requirement of being sent directly after version/verack. Absence of the message would actively (though perhaps unknowingly) communicate the desire for default flags (historic behavior). Again, this just seems like an extension of the version message to me, but if changes there are deemed problematic, this would be my preference.\n",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-146395507",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 429831198,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI5ODMxMTk4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/429831198",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-08T02:16:40Z"
    },
    {
      "event": "subscribed",
      "id": 429831199,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyOTgzMTE5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/429831199",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-08T02:16:40Z"
    },
    {
      "event": "mentioned",
      "id": 429831200,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI5ODMxMjAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/429831200",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-08T02:16:40Z"
    },
    {
      "event": "subscribed",
      "id": 429831201,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyOTgzMTIwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/429831201",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-08T02:16:40Z"
    },
    {
      "event": "mentioned",
      "id": 429831202,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI5ODMxMjAy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/429831202",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-08T02:16:40Z"
    },
    {
      "event": "subscribed",
      "id": 429831203,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyOTgzMTIwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/429831203",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-08T02:16:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 437825435,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM3ODI1NDM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/437825435",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-16T18:25:48Z"
    },
    {
      "event": "commented",
      "id": 148794761,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODc5NDc2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148794761",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-16T18:27:45Z",
      "updated_at": "2015-10-16T18:27:45Z",
      "author_association": "MEMBER",
      "body": "Rebased.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-148794761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 150002489,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDAwMjQ4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150002489",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-21T19:34:17Z",
      "updated_at": "2015-10-21T19:35:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "This significantly speeds up new block propagation in the normal, build-on-the-best-chain case.\n\nBenchmark numbers from a 5-node, 4-network-hop test network I created that relays empty blocks from massachusetts to los angeles and back, twice (round-trip latency of 100 msec):\n\nBefore:  1,300 msec latency from first block-creating node sending an 'inv' to last node in the chain receiving the 'block' message\n\nWith this pull:  670 msec\n\nSo concept ACK: I haven't reviewed the code yet, and have no opinion on bumping protocol version versus new message.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-150002489",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 150057108,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDA1NzEwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150057108",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-21T23:56:42Z",
      "updated_at": "2015-10-21T23:56:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "@gavinandresen Any chance you could repeat your test with the code in #6867?  (This change is great, and we should do it, but I expect that almost all of the improvement in that benchmark will be from setting TCP_NODELAY.)\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-150057108",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 442121954,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQyMTIxOTU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/442121954",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-21T23:56:42Z"
    },
    {
      "event": "subscribed",
      "id": 442121956,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MjEyMTk1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/442121956",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-21T23:56:42Z"
    },
    {
      "event": "commented",
      "id": 150061027,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDA2MTAyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150061027",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T00:18:14Z",
      "updated_at": "2015-10-22T00:18:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, I'll re-run tomorrow when I'm back in my office.\n\n## \n\nGavin Andresen\n\n> On Oct 21, 2015, at 7:56 PM, Gregory Maxwell notifications@github.com wrote:\n> \n> @gavinandresen Any chance you could repeat your test with the code in #6867? (This change is great, and we should do it, but I expect that almost all of the improvement in that benchmark will be from setting TCP_NODELAY.)\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-150061027",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 442133765,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQyMTMzNzY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/442133765",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T00:18:14Z"
    },
    {
      "event": "subscribed",
      "id": 442133766,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MjEzMzc2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/442133766",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-22T00:18:14Z"
    },
    {
      "event": "commented",
      "id": 150686158,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDY4NjE1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150686158",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-10-23T20:46:39Z",
      "updated_at": "2015-10-23T20:46:49Z",
      "author_association": "MEMBER",
      "body": "I believe this is ready for review; so far it doesn't seem like the BIP (which relates to activation/deployment only) is likely to change substantively from what was originally proposed (see bitcoin/bips#221).  It would be great to get this merged for 0.12 if possible.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-150686158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "milestoned",
      "id": 456160085,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDQ1NjE2MDA4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/456160085",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-05T20:06:36Z",
      "milestone": {
        "title": "0.12.0"
      }
    },
    {
      "event": "commented",
      "id": 156417477,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjQxNzQ3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156417477",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T12:22:30Z",
      "updated_at": "2015-11-13T13:20:41Z",
      "author_association": "MEMBER",
      "body": "> I don't think it's important that the property is searchable. For me I'd ask should this be its own message, or should we define a \"flags\" message, for sending more, non-searchable capabilities.\n\nLate to the party, but I prefer the way how it is implemented now - to have a separate message for requesting this feature - to a generic 'flags' message, as well as to adding a version bit.\n\nRationale: If centralization bottlenecks can be avoided (\"another set of flags to allocate\"), that's strongly preferable.\n\nutACK, intend to test.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-156417477",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE3MTI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE3MTQ6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 156478436,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjQ3ODQzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156478436",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T16:22:39Z",
      "updated_at": "2015-11-13T16:22:58Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Thorough code review ACK with one small nit. Lightly tested (two peers with this pull succesfully relay blocks across the internet, verified with -debug=net).\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-156478436",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 156479219,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjQ3OTIxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156479219",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T16:25:44Z",
      "updated_at": "2015-11-13T16:25:44Z",
      "author_association": "MEMBER",
      "body": "Needs rebase.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-156479219",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 463862867,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYzODYyODY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/463862867",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T18:01:06Z"
    },
    {
      "event": "commented",
      "id": 156509115,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjUwOTExNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156509115",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-13T18:25:12Z",
      "updated_at": "2015-11-13T18:25:12Z",
      "author_association": "MEMBER",
      "body": "Rebased and added log message when trying to announce a stale block.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-156509115",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 157185700,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzE4NTcwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157185700",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-16T22:03:47Z",
      "updated_at": "2015-11-16T22:03:47Z",
      "author_association": "MEMBER",
      "body": "I'm looking into an issue @morcos noticed this afternoon; it seems problematic to update pindexBestKnownBlock from a locator received with a getheaders message, because that would imply we can download such blocks from our peer. Yet our peer can generate locators from headers they have rather than from blocks they have.\n\nI am testing just removing that block of code; will update this PR once I confirm that is safe.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-157185700",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 466004388,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY2MDA0Mzg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/466004388",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-16T22:03:47Z"
    },
    {
      "event": "subscribed",
      "id": 466004389,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NjAwNDM4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/466004389",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-16T22:03:47Z"
    },
    {
      "event": "commented",
      "id": 157195256,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzE5NTI1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157195256",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-16T22:42:08Z",
      "updated_at": "2015-11-16T22:42:08Z",
      "author_association": "MEMBER",
      "body": "@sdaftuar @morcos Good catch, and too bad. I doubt it matters much.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-157195256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 466041512,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY2MDQxNTEy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/466041512",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-16T22:42:08Z"
    },
    {
      "event": "subscribed",
      "id": 466041513,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NjA0MTUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/466041513",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-16T22:42:08Z"
    },
    {
      "event": "mentioned",
      "id": 466041516,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY2MDQxNTE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/466041516",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-16T22:42:08Z"
    },
    {
      "event": "subscribed",
      "id": 466041517,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NjA0MTUxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/466041517",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-16T22:42:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 466820422,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY2ODIwNDIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/466820422",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T15:36:53Z"
    },
    {
      "event": "commented",
      "id": 157407642,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzQwNzY0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157407642",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-17T15:40:41Z",
      "updated_at": "2015-11-17T16:02:59Z",
      "author_association": "MEMBER",
      "body": "Updated this PR to eliminate updating `pindexBestKnownBlock` from the locator, and squashed back down to one commit.\n\nThe reason I had put this in initially was that I was concerned about there being a potential bootstrapping problem, but after further thought and some light testing I don't think there's a problem.  The initial getheaders sync that happens after a connection is established should ensure that headers announcements start flowing immediately.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-157407642",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE3MTk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE3MjI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE3MjY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE3Mjg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE3MzA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE3MzM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 157709651,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzcwOTY1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157709651",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T13:17:32Z",
      "updated_at": "2015-11-18T13:17:32Z",
      "author_association": "MEMBER",
      "body": "Pushed a commit to address @morcos' comments.\n\nIn cleaning up the RPC test I was surprised with what happens to `pindexBestHeaderSent` when a peer sends a getheaders with a locator that is up-to-date with our tip.  Though I took out the code to parse the locator and update `pindexBestKnownBlock`, it turns out that if we generate no headers to return then we will end up setting `pindexBestHeaderSent` to equal `chainActive.Tip()`.  \n\nThis behavior was just due to a quirk in the code (the test that does that is checking to see if we've walked off the end of chainActive and assumes that if we're at a NULL pointer then we must have returned our tip to the peer), but I believe this is correct behavior.  I added a comment to the code explaining this quirk, but am leaving it in because I think it's correct and beneficial.\n\nOn a separate note: I was reminded when I looked at this again that if a peer sends us a getheaders with a locator that is caught up to our tip, then we'll send back an empty headers message.  Is it important that this behavior be preserved?  I left it unchanged for now, but I can clean this up and suppress an empty response if it's safe to do so, either in this pull or separately.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-157709651",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 467916933,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY3OTE2OTMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467916933",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T13:17:32Z"
    },
    {
      "event": "subscribed",
      "id": 467916934,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NzkxNjkzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/467916934",
      "actor": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-18T13:17:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 472530551,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcyNTMwNTUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/472530551",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-23T20:39:26Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmE4YzQ4YWJiZWUxZmU5ZDc2NTcwNTg5N2UxMDUyNzQ0MjFkMzg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fa8c48abbee1fe9d765705897e105274421d385",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9fa8c48abbee1fe9d765705897e105274421d385",
      "tree": {
        "sha": "eeca2bab4afba7c1f3d199f77180f720f1501b6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eeca2bab4afba7c1f3d199f77180f720f1501b6c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24c4841d16862c201bf62218280c2194a85a81ca",
          "sha": "24c4841d16862c201bf62218280c2194a85a81ca",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/24c4841d16862c201bf62218280c2194a85a81ca"
        }
      ],
      "message": "Allow block announcements with headers\n\nThis replaces using inv messages to announce new blocks, when a peer requests\n(via the new \"sendheaders\" message) that blocks be announced with headers\ninstead of inv's.\n\nSince headers-first was introduced, peers send getheaders messages in response\nto an inv, which requires generating a block locator that is large compared to\nthe size of the header being requested, and requires an extra round-trip before\na reorg can be relayed.  Save time by tracking headers that a peer is likely to\nknow about, and send a headers chain that would connect to a peer's known\nheaders, unless the chain would be too big, in which case we revert to sending\nan inv instead.\n\nBased off of @sipa's commit to announce all blocks in a reorg via inv,\nwhich has been squashed into this commit.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-11-23T20:42:40Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2014-11-18T21:16:32Z"
      },
      "sha": "9fa8c48abbee1fe9d765705897e105274421d385"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 472533960,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcyNTMzOTYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/472533960",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-23T20:43:11Z"
    },
    {
      "event": "commented",
      "id": 159060094,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTA2MDA5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159060094",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-23T20:49:18Z",
      "updated_at": "2015-11-23T20:49:18Z",
      "author_association": "MEMBER",
      "body": "I discovered there were some problems in the direct fetch logic.\n\nThe code was structured so that we could only direct fetch blocks which were announced in a set of headers.  However, in the case of a reorg, we may have some of the headers on the reorged-to-chain, which our peers will not re-announce to us -- meaning that the direct-fetch logic wouldn't request needed missing blocks immediately.\n\nI've restructured the direct fetch logic so that if we want to download towards the latest block a peer has announced to us, then we walk back from that tip and consider every block until we find one that is on our current chain.  (We try to download every block that we don't have that is not already in-flight, and we bail out if we're walking back too many blocks.)\n\nI also realized that `sendheaders.py` had no tests for the direct fetch logic, so I updated it to exercise that part of the code as well.\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-159060094",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 159124255,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTEyNDI1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159124255",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-24T01:39:01Z",
      "updated_at": "2015-11-24T01:39:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Great work @sdaftuar \n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-159124255",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "mentioned",
      "id": 472784793,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcyNzg0Nzkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/472784793",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-24T01:39:01Z"
    },
    {
      "event": "subscribed",
      "id": 472784794,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3Mjc4NDc5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/472784794",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-24T01:39:01Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE3MzY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 160294074,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDI5NDA3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160294074",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-28T13:03:55Z",
      "updated_at": "2015-11-28T13:03:55Z",
      "author_association": "MEMBER",
      "body": "Needs rebase.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-160294074",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "commented",
      "id": 160411793,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQxMTc5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160411793",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-29T12:06:49Z",
      "updated_at": "2015-11-29T12:06:49Z",
      "author_association": "MEMBER",
      "body": "Closed via #7129.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#issuecomment-160411793",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6494"
    },
    {
      "event": "closed",
      "id": 477054100,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDc3MDU0MTAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/477054100",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-29T12:06:49Z"
    },
    {
      "event": "referenced",
      "id": 885083976,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDg4NTA4Mzk3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/885083976",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "44fd3250dab36f2c1a77f2baebe3628c8fdb3022",
      "commit_url": "https://api.github.com/repos/rebroad/bitcoin/commits/44fd3250dab36f2c1a77f2baebe3628c8fdb3022",
      "created_at": "2016-12-07T11:20:56Z"
    },
    {
      "event": "locked",
      "id": 5271851627,
      "node_id": "LOE_lADOABII584F2zPWzwAAAAE6OhJr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271851627",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:03:47Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44799570",
      "pull_request_review_id": null,
      "id": 44799570,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5NTcw",
      "diff_hunk": "@@ -4439,6 +4527,28 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             pfrom->PushMessage(\"getheaders\", chainActive.GetLocator(pindexLast), uint256());\n         }\n \n+        CNodeState *nodestate = State(pfrom->GetId());\n+        // If this set of headers is valid and ends in a block with more work",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 243,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "83602363a391633f0fdb9a836c5d40e94ec8db98",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can't this result in duplicate in-flights? The fact that it's not yet our tip does not imply we're not downloading it yet.\n\nEDIT: nevermind, those aren't added to vToFetch.\n",
      "created_at": "2015-11-13T16:10:59Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r44799570",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44799570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44800419",
      "pull_request_review_id": null,
      "id": 44800419,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwNDE5",
      "diff_hunk": "@@ -4970,6 +5080,92 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         }\n \n         //\n+        // Try sending block announcements via headers\n+        //\n+        {\n+            // If we have less than MAX_BLOCKS_TO_ANNOUNCE in our\n+            // list of block hashes we're relaying, and our peer wants\n+            // headers announcements, then find the first header\n+            // not yet known to our peer but would connect, and send.\n+            // If no header would connect, or if we have too many\n+            // blocks, or if the peer doesn't want headers, just\n+            // add all to the inv queue.\n+            LOCK(pto->cs_inventory);\n+            vector<CBlock> vHeaders;\n+            bool fRevertToInv = (!state.fPreferHeaders || pto->vBlockHashesToAnnounce.size() > MAX_BLOCKS_TO_ANNOUNCE);\n+            CBlockIndex *pBestIndex = NULL; // last header queued for delivery\n+            ProcessBlockAvailability(pto->id); // ensure pindexBestKnownBlock is up-to-date\n+\n+            if (!fRevertToInv) {\n+                bool fFoundStartingHeader = false;\n+                // Try to find first header that our peer doesn't have, and\n+                // then send all headers past that one.  If we come across any\n+                // headers that aren't on chainActive, give up.\n+                BOOST_FOREACH(const uint256 &hash, pto->vBlockHashesToAnnounce) {\n+                    BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                    assert(mi != mapBlockIndex.end());\n+                    CBlockIndex *pindex = mi->second;\n+                    if (chainActive[pindex->nHeight] != pindex) {\n+                        // Bail out if we reorged away from this block",
      "path": "src/main.cpp",
      "position": 275,
      "original_position": 297,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "83602363a391633f0fdb9a836c5d40e94ec8db98",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do we still want to inv in this case?\n",
      "created_at": "2015-11-13T16:17:20Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r44800419",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44800419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5223,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44812615",
      "pull_request_review_id": null,
      "id": 44812615,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNjE1",
      "diff_hunk": "@@ -4970,6 +5080,92 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         }\n \n         //\n+        // Try sending block announcements via headers\n+        //\n+        {\n+            // If we have less than MAX_BLOCKS_TO_ANNOUNCE in our\n+            // list of block hashes we're relaying, and our peer wants\n+            // headers announcements, then find the first header\n+            // not yet known to our peer but would connect, and send.\n+            // If no header would connect, or if we have too many\n+            // blocks, or if the peer doesn't want headers, just\n+            // add all to the inv queue.\n+            LOCK(pto->cs_inventory);\n+            vector<CBlock> vHeaders;\n+            bool fRevertToInv = (!state.fPreferHeaders || pto->vBlockHashesToAnnounce.size() > MAX_BLOCKS_TO_ANNOUNCE);\n+            CBlockIndex *pBestIndex = NULL; // last header queued for delivery\n+            ProcessBlockAvailability(pto->id); // ensure pindexBestKnownBlock is up-to-date\n+\n+            if (!fRevertToInv) {\n+                bool fFoundStartingHeader = false;\n+                // Try to find first header that our peer doesn't have, and\n+                // then send all headers past that one.  If we come across any\n+                // headers that aren't on chainActive, give up.\n+                BOOST_FOREACH(const uint256 &hash, pto->vBlockHashesToAnnounce) {\n+                    BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                    assert(mi != mapBlockIndex.end());\n+                    CBlockIndex *pindex = mi->second;\n+                    if (chainActive[pindex->nHeight] != pindex) {\n+                        // Bail out if we reorged away from this block",
      "path": "src/main.cpp",
      "position": 275,
      "original_position": 297,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "83602363a391633f0fdb9a836c5d40e94ec8db98",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's possible (probable?) that the last entry in vBlockHashesToAnnounce is our current tip (so we do want to inv it), but it is also possible that it hasn't made it there yet, and that last entry is some old tip that has now been reorged out.\n\nI think it would be safe to add a check below to only inv the last item if it's an ancestor of our current tip; does that sound right?  \n",
      "created_at": "2015-11-13T17:58:21Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r44812615",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44812615"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5223,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44813816",
      "pull_request_review_id": null,
      "id": 44813816,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzODE2",
      "diff_hunk": "@@ -4970,6 +5080,92 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         }\n \n         //\n+        // Try sending block announcements via headers\n+        //\n+        {\n+            // If we have less than MAX_BLOCKS_TO_ANNOUNCE in our\n+            // list of block hashes we're relaying, and our peer wants\n+            // headers announcements, then find the first header\n+            // not yet known to our peer but would connect, and send.\n+            // If no header would connect, or if we have too many\n+            // blocks, or if the peer doesn't want headers, just\n+            // add all to the inv queue.\n+            LOCK(pto->cs_inventory);\n+            vector<CBlock> vHeaders;\n+            bool fRevertToInv = (!state.fPreferHeaders || pto->vBlockHashesToAnnounce.size() > MAX_BLOCKS_TO_ANNOUNCE);\n+            CBlockIndex *pBestIndex = NULL; // last header queued for delivery\n+            ProcessBlockAvailability(pto->id); // ensure pindexBestKnownBlock is up-to-date\n+\n+            if (!fRevertToInv) {\n+                bool fFoundStartingHeader = false;\n+                // Try to find first header that our peer doesn't have, and\n+                // then send all headers past that one.  If we come across any\n+                // headers that aren't on chainActive, give up.\n+                BOOST_FOREACH(const uint256 &hash, pto->vBlockHashesToAnnounce) {\n+                    BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                    assert(mi != mapBlockIndex.end());\n+                    CBlockIndex *pindex = mi->second;\n+                    if (chainActive[pindex->nHeight] != pindex) {\n+                        // Bail out if we reorged away from this block",
      "path": "src/main.cpp",
      "position": 275,
      "original_position": 297,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "83602363a391633f0fdb9a836c5d40e94ec8db98",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's harmless, as the current code in this PR mimicks the old behaviour. But if we're doing the check anyway, I think we can skip the entry.\n",
      "created_at": "2015-11-13T18:09:19Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r44813816",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44813816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5223,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44814050",
      "pull_request_review_id": null,
      "id": 44814050,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE0MDUw",
      "diff_hunk": "@@ -4970,6 +5080,92 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         }\n \n         //\n+        // Try sending block announcements via headers\n+        //\n+        {\n+            // If we have less than MAX_BLOCKS_TO_ANNOUNCE in our\n+            // list of block hashes we're relaying, and our peer wants\n+            // headers announcements, then find the first header\n+            // not yet known to our peer but would connect, and send.\n+            // If no header would connect, or if we have too many\n+            // blocks, or if the peer doesn't want headers, just\n+            // add all to the inv queue.\n+            LOCK(pto->cs_inventory);\n+            vector<CBlock> vHeaders;\n+            bool fRevertToInv = (!state.fPreferHeaders || pto->vBlockHashesToAnnounce.size() > MAX_BLOCKS_TO_ANNOUNCE);\n+            CBlockIndex *pBestIndex = NULL; // last header queued for delivery\n+            ProcessBlockAvailability(pto->id); // ensure pindexBestKnownBlock is up-to-date\n+\n+            if (!fRevertToInv) {\n+                bool fFoundStartingHeader = false;\n+                // Try to find first header that our peer doesn't have, and\n+                // then send all headers past that one.  If we come across any\n+                // headers that aren't on chainActive, give up.\n+                BOOST_FOREACH(const uint256 &hash, pto->vBlockHashesToAnnounce) {\n+                    BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                    assert(mi != mapBlockIndex.end());\n+                    CBlockIndex *pindex = mi->second;\n+                    if (chainActive[pindex->nHeight] != pindex) {\n+                        // Bail out if we reorged away from this block",
      "path": "src/main.cpp",
      "position": 275,
      "original_position": 297,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "83602363a391633f0fdb9a836c5d40e94ec8db98",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the code to address this edge case is easy to write, but I believe this situation is so rare that it might be better to not add this code that we can't really test?  (At least I can't figure out how I'd test it...)\n\nI think it might be better to just add a `LogPrint(\"net\", ...)` debug message in the event that we're sending an inv for a block that is not on the main chain, rather than change network behavior.  The downside to sending an extra inv in what we think is a rare situation is quite small, whereas if there's a bug in this code somehow and it overly suppresses inv's that could be both problematic and difficult to track down.\n",
      "created_at": "2015-11-13T18:11:46Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r44814050",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44814050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5223,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44814190",
      "pull_request_review_id": null,
      "id": 44814190,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE0MTkw",
      "diff_hunk": "@@ -4970,6 +5080,92 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         }\n \n         //\n+        // Try sending block announcements via headers\n+        //\n+        {\n+            // If we have less than MAX_BLOCKS_TO_ANNOUNCE in our\n+            // list of block hashes we're relaying, and our peer wants\n+            // headers announcements, then find the first header\n+            // not yet known to our peer but would connect, and send.\n+            // If no header would connect, or if we have too many\n+            // blocks, or if the peer doesn't want headers, just\n+            // add all to the inv queue.\n+            LOCK(pto->cs_inventory);\n+            vector<CBlock> vHeaders;\n+            bool fRevertToInv = (!state.fPreferHeaders || pto->vBlockHashesToAnnounce.size() > MAX_BLOCKS_TO_ANNOUNCE);\n+            CBlockIndex *pBestIndex = NULL; // last header queued for delivery\n+            ProcessBlockAvailability(pto->id); // ensure pindexBestKnownBlock is up-to-date\n+\n+            if (!fRevertToInv) {\n+                bool fFoundStartingHeader = false;\n+                // Try to find first header that our peer doesn't have, and\n+                // then send all headers past that one.  If we come across any\n+                // headers that aren't on chainActive, give up.\n+                BOOST_FOREACH(const uint256 &hash, pto->vBlockHashesToAnnounce) {\n+                    BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                    assert(mi != mapBlockIndex.end());\n+                    CBlockIndex *pindex = mi->second;\n+                    if (chainActive[pindex->nHeight] != pindex) {\n+                        // Bail out if we reorged away from this block",
      "path": "src/main.cpp",
      "position": 275,
      "original_position": 297,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "83602363a391633f0fdb9a836c5d40e94ec8db98",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fair enough. It won't hurt.\n",
      "created_at": "2015-11-13T18:13:10Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r44814190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/44814190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5223,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45095904",
      "pull_request_review_id": null,
      "id": 45095904,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk1OTA0",
      "diff_hunk": "@@ -4515,12 +4574,21 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         }\n \n         CBlockIndex *pindexLast = NULL;\n+        std::vector<CBlockIndex *> vToFetch;\n+        bool fCanDirectFetch = CanDirectFetch(chainparams.GetConsensus());\n         BOOST_FOREACH(const CBlockHeader& header, headers) {\n             CValidationState state;\n             if (pindexLast != NULL && header.hashPrevBlock != pindexLast->GetBlockHash()) {\n                 Misbehaving(pfrom->GetId(), 20);\n                 return error(\"non-continuous headers sequence\");\n             }\n+            BlockMap::iterator it = mapBlockIndex.find(header.GetHash());\n+            if (it != mapBlockIndex.end()) {",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 192,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "4faca45a67b7a075813c748fb98c60d3d9f41482",
      "in_reply_to_id": null,
      "user": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It might be better to delete this check.  pindexLast shouldn't be set to a block that returns false from AcceptBlockHeader even if we already have the header.\n",
      "created_at": "2015-11-17T18:10:35Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r45095904",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45095904"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45097901",
      "pull_request_review_id": null,
      "id": 45097901,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk3OTAx",
      "diff_hunk": "@@ -4515,12 +4574,21 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         }\n \n         CBlockIndex *pindexLast = NULL;\n+        std::vector<CBlockIndex *> vToFetch;\n+        bool fCanDirectFetch = CanDirectFetch(chainparams.GetConsensus());",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 184,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "4faca45a67b7a075813c748fb98c60d3d9f41482",
      "in_reply_to_id": null,
      "user": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "add !fimporting && !fReindex\n",
      "created_at": "2015-11-17T18:24:50Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r45097901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45097901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45098001",
      "pull_request_review_id": null,
      "id": 45098001,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4MDAx",
      "diff_hunk": "@@ -4542,6 +4616,28 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             pfrom->PushMessage(\"getheaders\", chainActive.GetLocator(pindexLast), uint256());\n         }\n \n+        CNodeState *nodestate = State(pfrom->GetId());\n+        // If this set of headers is valid and ends in a block with more work\n+        // than our tip, download as much as possible.\n+        if (fCanDirectFetch && pindexLast->IsValid(BLOCK_VALID_TREE) && chainActive.Tip()->nChainWork < pindexLast->nChainWork) {",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 221,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "4faca45a67b7a075813c748fb98c60d3d9f41482",
      "in_reply_to_id": null,
      "user": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: already checked fCanDirectFetch above.   maybe check vToFetch.size() \n",
      "created_at": "2015-11-17T18:25:28Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r45098001",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45098001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45111900",
      "pull_request_review_id": null,
      "id": 45111900,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTExOTAw",
      "diff_hunk": "@@ -0,0 +1,425 @@\n+#!/usr/bin/env python2\n+#\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from test_framework.blocktools import create_block, create_coinbase\n+\n+'''\n+SendHeadersTest -- test behavior of headers messages to announce blocks.\n+\n+Setup: \n+\n+- Two nodes, two p2p connections to node0. One p2p connection should only ever\n+  receive inv's (omitted from testing description below, this is our control).\n+  Second node is used for creating reorgs.\n+\n+Part 1: No headers announcements before \"sendheaders\"\n+a. node mines a block [expect: inv]\n+   send getdata for the block [expect: block]\n+b. node mines another block [expect: inv]\n+   send getheaders and getdata [expect: headers, then block]\n+c. node mines another block [expect: inv]",
      "path": "qa/rpc-tests/sendheaders.py",
      "position": 27,
      "original_position": 27,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "4faca45a67b7a075813c748fb98c60d3d9f41482",
      "in_reply_to_id": null,
      "user": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "comment incorrect\n",
      "created_at": "2015-11-17T19:59:07Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r45111900",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45111900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45112773",
      "pull_request_review_id": null,
      "id": 45112773,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyNzcz",
      "diff_hunk": "@@ -0,0 +1,425 @@\n+#!/usr/bin/env python2\n+#\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from test_framework.blocktools import create_block, create_coinbase\n+\n+'''\n+SendHeadersTest -- test behavior of headers messages to announce blocks.\n+\n+Setup: \n+\n+- Two nodes, two p2p connections to node0. One p2p connection should only ever\n+  receive inv's (omitted from testing description below, this is our control).\n+  Second node is used for creating reorgs.\n+\n+Part 1: No headers announcements before \"sendheaders\"\n+a. node mines a block [expect: inv]\n+   send getdata for the block [expect: block]\n+b. node mines another block [expect: inv]\n+   send getheaders and getdata [expect: headers, then block]\n+c. node mines another block [expect: inv]\n+   send getheaders/getdata [expect headers, then block]\n+   peer mines a block, announces with header [expect: getdata]\n+d. node mines another block [expect: inv]\n+\n+Part 2: After \"sendheaders\", headers announcements should generally work.\n+a. peer sends sendheaders [expect: no response]\n+   peer sends getheaders with current tip [expect: no response]\n+b. node mines a block [expect: tip header]\n+   peer sends getdata [expect: block]\n+c. for N in 1, ..., 10:\n+   * for announce-type in {inv, header}\n+     - peer mines N blocks, announces with announce-type\n+       [ expect: getheaders/getdata or getdata, deliver block(s) ]\n+     - node mines a block [ expect: 1 header ]\n+\n+Part 3: Headers announcements stop after large reorg and resume after getheaders or inv from peer.\n+- For response-type in {inv, getheaders}\n+  * node mines a 7 block reorg [ expect: headers announcement of 8 blocks ]\n+  * node mines an 8-block reorg [ expect: inv at tip ]\n+  * peer responds with getblocks/getdata [expect: inv, blocks ]\n+  * node mines another block [ expect: inv at tip, peer sends getdata, expect: block ]\n+  * node mines another block at tip [ expect: inv ]\n+  * peer responds with getheaders with an old hashstop more than 8 blocks back [expect: headers]\n+  * peer requests block [ expect: block ]\n+  * node mines another block at tip [ expect: inv, peer sends getdata, expect: block ]\n+  * peer sends response-type [expect headers if getheaders, getheaders/getdata if mining new block]\n+  * node mines 1 block [expect: 1 header, peer responds with getdata]\n+'''\n+\n+class BaseNode(NodeConnCB):\n+    def __init__(self):\n+        NodeConnCB.__init__(self)\n+        self.create_callback_map()\n+        self.connection = None\n+        self.last_inv = None\n+        self.last_headers = None\n+        self.last_block = None\n+        self.ping_counter = 1\n+        self.last_pong = msg_pong(0)\n+        self.last_getdata = None\n+        self.sleep_time = 0.05\n+        self.block_announced = False\n+\n+    def clear_last_announcement(self):\n+        with mininode_lock:\n+            self.block_announced = False\n+            self.last_inv = None\n+            self.last_headers = None\n+\n+    def add_connection(self, conn):\n+        self.connection = conn\n+\n+    # Request data for a list of block hashes\n+    def get_data(self, block_hashes):\n+        msg = msg_getdata()\n+        for x in block_hashes:\n+            msg.inv.append(CInv(2, x))\n+        self.connection.send_message(msg)\n+\n+    def get_headers(self, locator, hashstop):\n+        msg = msg_getheaders()\n+        msg.locator.vHave = locator\n+        msg.hashstop = hashstop\n+        self.connection.send_message(msg)\n+\n+    def send_block_inv(self, blockhash):\n+        msg = msg_inv()\n+        msg.inv = [CInv(2, blockhash)]\n+        self.connection.send_message(msg)\n+\n+    # Wrapper for the NodeConn's send_message function\n+    def send_message(self, message):\n+        self.connection.send_message(message)\n+\n+    def on_inv(self, conn, message):\n+        self.last_inv = message\n+        self.block_announced = True\n+\n+    def on_headers(self, conn, message):\n+        self.last_headers = message\n+        self.block_announced = True\n+\n+    def on_block(self, conn, message):\n+        self.last_block = message.block\n+        self.last_block.calc_sha256()\n+\n+    def on_getdata(self, conn, message):\n+        self.last_getdata = message\n+\n+    def on_pong(self, conn, message):\n+        self.last_pong = message\n+\n+    # Test whether the last announcement we received had the\n+    # right header or the right inv\n+    # inv and headers should be lists of block hashes\n+    def check_last_announcement(self, headers=None, inv=None):\n+        expect_headers = headers if headers != None else []\n+        expect_inv = inv if inv != None else []\n+        test_function = lambda: self.block_announced\n+        self.sync(test_function)\n+        with mininode_lock:\n+            self.block_announced = False\n+\n+            success = True\n+            compare_inv = []\n+            if self.last_inv != None:\n+                compare_inv = [x.hash for x in self.last_inv.inv]\n+            if compare_inv != expect_inv:\n+                success = False\n+\n+            hash_headers = []\n+            if self.last_headers != None:\n+                # treat headers as a list of block hashes\n+                hash_headers = [ x.sha256 for x in self.last_headers.headers ]\n+            if hash_headers != expect_headers:\n+                success = False\n+\n+            self.last_inv = None\n+            self.last_headers = None\n+        return success\n+\n+    # Syncing helpers\n+    def sync(self, test_function, timeout=60):\n+        while timeout > 0:\n+            with mininode_lock:\n+                if test_function():\n+                    return\n+            time.sleep(self.sleep_time)\n+            timeout -= self.sleep_time\n+        raise AssertionError(\"Sync failed to complete\")\n+        \n+    def sync_with_ping(self, timeout=60):\n+        self.send_message(msg_ping(nonce=self.ping_counter))\n+        test_function = lambda: self.last_pong.nonce == self.ping_counter\n+        self.sync(test_function, timeout)\n+        self.ping_counter += 1\n+        return\n+\n+    def wait_for_block(self, blockhash, timeout=60):\n+        test_function = lambda: self.last_block != None and self.last_block.sha256 == blockhash\n+        self.sync(test_function, timeout)\n+        return\n+\n+    def wait_for_getdata(self, hash_list, timeout=60):\n+        if hash_list == []:\n+            return\n+\n+        test_function = lambda: self.last_getdata != None and [x.hash for x in self.last_getdata.inv] == hash_list\n+        self.sync(test_function, timeout)\n+        return\n+\n+    def send_header_for_blocks(self, new_blocks):\n+        headers_message = msg_headers()\n+        headers_message.headers = [ CBlockHeader(b) for b in new_blocks ]\n+        self.send_message(headers_message)\n+\n+    def send_getblocks(self, locator):\n+        getblocks_message = msg_getblocks()\n+        getblocks_message.locator.vHave = locator\n+        self.send_message(getblocks_message)\n+\n+# InvNode: This peer should only ever receive inv's, because it doesn't ever send a\n+# \"sendheaders\" message.\n+class InvNode(BaseNode):\n+    def __init__(self):\n+        BaseNode.__init__(self)\n+\n+# TestNode: This peer is the one we use for most of the testing.\n+class TestNode(BaseNode):\n+    def __init__(self):\n+        BaseNode.__init__(self)\n+\n+class SendHeadersTest(BitcoinTestFramework):\n+    def setup_chain(self):\n+        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes = start_nodes(2, self.options.tmpdir, [[\"-debug\"]]*2)\n+        connect_nodes(self.nodes[0], 1)\n+\n+    # mine count blocks and return the new tip\n+    def mine_blocks(self, count):\n+        self.nodes[0].generate(count)\n+        return int(\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+\n+    # mine a reorg that invalidates length blocks (replacing them with\n+    # length+1 blocks).\n+    # peers is the p2p nodes we're using; we clear their state after the\n+    # to-be-reorged-out blocks are mined, so that we don't break later tests.\n+    # return the list of block hashes newly mined\n+    def mine_reorg(self, length, peers):\n+        self.nodes[0].generate(length) # make sure all invalidated blocks are node0's\n+        sync_blocks(self.nodes, wait=0.1)\n+        [x.clear_last_announcement() for x in peers]\n+\n+        tip_height = self.nodes[1].getblockcount()\n+        hash_to_invalidate = self.nodes[1].getblockhash(tip_height-(length-1))\n+        self.nodes[1].invalidateblock(hash_to_invalidate)\n+        all_hashes = self.nodes[1].generate(length+1) # Must be longer than the orig chain\n+        sync_blocks(self.nodes, wait=0.1)\n+        return [int(\"0x\" + x + \"L\", 0) for x in all_hashes]\n+\n+    def run_test(self):\n+        # Setup the p2p connections and start up the network thread.\n+        inv_node = InvNode()\n+        test_node = TestNode()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], inv_node))\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], test_node))\n+        inv_node.add_connection(connections[0])\n+        test_node.add_connection(connections[1])\n+\n+        NetworkThread().start() # Start up network handling in another thread\n+\n+        # Test logic begins here\n+        inv_node.wait_for_verack()\n+        test_node.wait_for_verack()\n+\n+        tip = int(\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+\n+        # PART 1\n+        # 1. Mine a block; expect inv announcements each time\n+        print \"Part 1: headers don't start before sendheaders message...\"\n+        for i in xrange(4):\n+            old_tip = tip\n+            tip = self.mine_blocks(1)\n+            assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+            assert_equal(test_node.check_last_announcement(inv=[tip]), True)\n+            # Try a few different responses; none should affect next announcement\n+            if i == 0:\n+                # first request the block\n+                test_node.get_data([tip])\n+                test_node.wait_for_block(tip, timeout=5)\n+            elif i == 1:\n+                # next try requesting header and block\n+                test_node.get_headers(locator=[old_tip], hashstop=tip)\n+                test_node.get_data([tip])\n+                test_node.wait_for_block(tip)\n+                test_node.clear_last_announcement() # since we requested headers...\n+            elif i == 2:\n+                # this time announce own block via headers\n+                height = self.nodes[0].getblockcount()\n+                last_time = self.nodes[0].getblock(self.nodes[0].getbestblockhash())['time']\n+                block_time = last_time + 1\n+                new_block = create_block(tip, create_coinbase(height+1), block_time)\n+                new_block.solve()\n+                test_node.send_header_for_blocks([new_block])\n+                test_node.wait_for_getdata([new_block.sha256], timeout=5)\n+                test_node.send_message(msg_block(new_block))\n+                test_node.sync_with_ping() # make sure this block is processed\n+                inv_node.clear_last_announcement()\n+                test_node.clear_last_announcement()\n+\n+        print \"Part 1: success!\"\n+        print \"Part 2: announce blocks with headers after sendheaders message...\"\n+        # PART 2\n+        # 2. Send a sendheaders message and test that headers announcements\n+        # commence and keep working.\n+        test_node.send_message(msg_sendheaders())\n+        prev_tip = int(\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+        test_node.get_headers(locator=[prev_tip], hashstop=0L)",
      "path": "qa/rpc-tests/sendheaders.py",
      "position": null,
      "original_position": 290,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "4faca45a67b7a075813c748fb98c60d3d9f41482",
      "in_reply_to_id": null,
      "user": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this shouldn't be necessary\n",
      "created_at": "2015-11-17T20:04:34Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r45112773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45112773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 305,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45112859",
      "pull_request_review_id": null,
      "id": 45112859,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyODU5",
      "diff_hunk": "@@ -0,0 +1,425 @@\n+#!/usr/bin/env python2\n+#\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from test_framework.blocktools import create_block, create_coinbase\n+\n+'''\n+SendHeadersTest -- test behavior of headers messages to announce blocks.\n+\n+Setup: \n+\n+- Two nodes, two p2p connections to node0. One p2p connection should only ever\n+  receive inv's (omitted from testing description below, this is our control).\n+  Second node is used for creating reorgs.\n+\n+Part 1: No headers announcements before \"sendheaders\"\n+a. node mines a block [expect: inv]\n+   send getdata for the block [expect: block]\n+b. node mines another block [expect: inv]\n+   send getheaders and getdata [expect: headers, then block]\n+c. node mines another block [expect: inv]\n+   send getheaders/getdata [expect headers, then block]\n+   peer mines a block, announces with header [expect: getdata]\n+d. node mines another block [expect: inv]\n+\n+Part 2: After \"sendheaders\", headers announcements should generally work.\n+a. peer sends sendheaders [expect: no response]\n+   peer sends getheaders with current tip [expect: no response]\n+b. node mines a block [expect: tip header]\n+   peer sends getdata [expect: block]\n+c. for N in 1, ..., 10:\n+   * for announce-type in {inv, header}\n+     - peer mines N blocks, announces with announce-type\n+       [ expect: getheaders/getdata or getdata, deliver block(s) ]\n+     - node mines a block [ expect: 1 header ]\n+\n+Part 3: Headers announcements stop after large reorg and resume after getheaders or inv from peer.\n+- For response-type in {inv, getheaders}\n+  * node mines a 7 block reorg [ expect: headers announcement of 8 blocks ]\n+  * node mines an 8-block reorg [ expect: inv at tip ]\n+  * peer responds with getblocks/getdata [expect: inv, blocks ]\n+  * node mines another block [ expect: inv at tip, peer sends getdata, expect: block ]\n+  * node mines another block at tip [ expect: inv ]\n+  * peer responds with getheaders with an old hashstop more than 8 blocks back [expect: headers]\n+  * peer requests block [ expect: block ]\n+  * node mines another block at tip [ expect: inv, peer sends getdata, expect: block ]\n+  * peer sends response-type [expect headers if getheaders, getheaders/getdata if mining new block]\n+  * node mines 1 block [expect: 1 header, peer responds with getdata]\n+'''\n+\n+class BaseNode(NodeConnCB):\n+    def __init__(self):\n+        NodeConnCB.__init__(self)\n+        self.create_callback_map()\n+        self.connection = None\n+        self.last_inv = None\n+        self.last_headers = None\n+        self.last_block = None\n+        self.ping_counter = 1\n+        self.last_pong = msg_pong(0)\n+        self.last_getdata = None\n+        self.sleep_time = 0.05\n+        self.block_announced = False\n+\n+    def clear_last_announcement(self):\n+        with mininode_lock:\n+            self.block_announced = False\n+            self.last_inv = None\n+            self.last_headers = None\n+\n+    def add_connection(self, conn):\n+        self.connection = conn\n+\n+    # Request data for a list of block hashes\n+    def get_data(self, block_hashes):\n+        msg = msg_getdata()\n+        for x in block_hashes:\n+            msg.inv.append(CInv(2, x))\n+        self.connection.send_message(msg)\n+\n+    def get_headers(self, locator, hashstop):\n+        msg = msg_getheaders()\n+        msg.locator.vHave = locator\n+        msg.hashstop = hashstop\n+        self.connection.send_message(msg)\n+\n+    def send_block_inv(self, blockhash):\n+        msg = msg_inv()\n+        msg.inv = [CInv(2, blockhash)]\n+        self.connection.send_message(msg)\n+\n+    # Wrapper for the NodeConn's send_message function\n+    def send_message(self, message):\n+        self.connection.send_message(message)\n+\n+    def on_inv(self, conn, message):\n+        self.last_inv = message\n+        self.block_announced = True\n+\n+    def on_headers(self, conn, message):\n+        self.last_headers = message\n+        self.block_announced = True\n+\n+    def on_block(self, conn, message):\n+        self.last_block = message.block\n+        self.last_block.calc_sha256()\n+\n+    def on_getdata(self, conn, message):\n+        self.last_getdata = message\n+\n+    def on_pong(self, conn, message):\n+        self.last_pong = message\n+\n+    # Test whether the last announcement we received had the\n+    # right header or the right inv\n+    # inv and headers should be lists of block hashes\n+    def check_last_announcement(self, headers=None, inv=None):\n+        expect_headers = headers if headers != None else []\n+        expect_inv = inv if inv != None else []\n+        test_function = lambda: self.block_announced\n+        self.sync(test_function)\n+        with mininode_lock:\n+            self.block_announced = False\n+\n+            success = True\n+            compare_inv = []\n+            if self.last_inv != None:\n+                compare_inv = [x.hash for x in self.last_inv.inv]\n+            if compare_inv != expect_inv:\n+                success = False\n+\n+            hash_headers = []\n+            if self.last_headers != None:\n+                # treat headers as a list of block hashes\n+                hash_headers = [ x.sha256 for x in self.last_headers.headers ]\n+            if hash_headers != expect_headers:\n+                success = False\n+\n+            self.last_inv = None\n+            self.last_headers = None\n+        return success\n+\n+    # Syncing helpers\n+    def sync(self, test_function, timeout=60):\n+        while timeout > 0:\n+            with mininode_lock:\n+                if test_function():\n+                    return\n+            time.sleep(self.sleep_time)\n+            timeout -= self.sleep_time\n+        raise AssertionError(\"Sync failed to complete\")\n+        \n+    def sync_with_ping(self, timeout=60):\n+        self.send_message(msg_ping(nonce=self.ping_counter))\n+        test_function = lambda: self.last_pong.nonce == self.ping_counter\n+        self.sync(test_function, timeout)\n+        self.ping_counter += 1\n+        return\n+\n+    def wait_for_block(self, blockhash, timeout=60):\n+        test_function = lambda: self.last_block != None and self.last_block.sha256 == blockhash\n+        self.sync(test_function, timeout)\n+        return\n+\n+    def wait_for_getdata(self, hash_list, timeout=60):\n+        if hash_list == []:\n+            return\n+\n+        test_function = lambda: self.last_getdata != None and [x.hash for x in self.last_getdata.inv] == hash_list\n+        self.sync(test_function, timeout)\n+        return\n+\n+    def send_header_for_blocks(self, new_blocks):\n+        headers_message = msg_headers()\n+        headers_message.headers = [ CBlockHeader(b) for b in new_blocks ]\n+        self.send_message(headers_message)\n+\n+    def send_getblocks(self, locator):\n+        getblocks_message = msg_getblocks()\n+        getblocks_message.locator.vHave = locator\n+        self.send_message(getblocks_message)\n+\n+# InvNode: This peer should only ever receive inv's, because it doesn't ever send a\n+# \"sendheaders\" message.\n+class InvNode(BaseNode):\n+    def __init__(self):\n+        BaseNode.__init__(self)\n+\n+# TestNode: This peer is the one we use for most of the testing.\n+class TestNode(BaseNode):\n+    def __init__(self):\n+        BaseNode.__init__(self)\n+\n+class SendHeadersTest(BitcoinTestFramework):\n+    def setup_chain(self):\n+        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes = start_nodes(2, self.options.tmpdir, [[\"-debug\"]]*2)\n+        connect_nodes(self.nodes[0], 1)\n+\n+    # mine count blocks and return the new tip\n+    def mine_blocks(self, count):\n+        self.nodes[0].generate(count)\n+        return int(\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+\n+    # mine a reorg that invalidates length blocks (replacing them with\n+    # length+1 blocks).\n+    # peers is the p2p nodes we're using; we clear their state after the\n+    # to-be-reorged-out blocks are mined, so that we don't break later tests.\n+    # return the list of block hashes newly mined\n+    def mine_reorg(self, length, peers):\n+        self.nodes[0].generate(length) # make sure all invalidated blocks are node0's\n+        sync_blocks(self.nodes, wait=0.1)\n+        [x.clear_last_announcement() for x in peers]\n+\n+        tip_height = self.nodes[1].getblockcount()\n+        hash_to_invalidate = self.nodes[1].getblockhash(tip_height-(length-1))\n+        self.nodes[1].invalidateblock(hash_to_invalidate)\n+        all_hashes = self.nodes[1].generate(length+1) # Must be longer than the orig chain\n+        sync_blocks(self.nodes, wait=0.1)\n+        return [int(\"0x\" + x + \"L\", 0) for x in all_hashes]\n+\n+    def run_test(self):\n+        # Setup the p2p connections and start up the network thread.\n+        inv_node = InvNode()\n+        test_node = TestNode()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], inv_node))\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], test_node))\n+        inv_node.add_connection(connections[0])\n+        test_node.add_connection(connections[1])\n+\n+        NetworkThread().start() # Start up network handling in another thread\n+\n+        # Test logic begins here\n+        inv_node.wait_for_verack()\n+        test_node.wait_for_verack()\n+\n+        tip = int(\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+\n+        # PART 1\n+        # 1. Mine a block; expect inv announcements each time\n+        print \"Part 1: headers don't start before sendheaders message...\"\n+        for i in xrange(4):\n+            old_tip = tip\n+            tip = self.mine_blocks(1)\n+            assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+            assert_equal(test_node.check_last_announcement(inv=[tip]), True)\n+            # Try a few different responses; none should affect next announcement\n+            if i == 0:\n+                # first request the block\n+                test_node.get_data([tip])\n+                test_node.wait_for_block(tip, timeout=5)\n+            elif i == 1:\n+                # next try requesting header and block\n+                test_node.get_headers(locator=[old_tip], hashstop=tip)\n+                test_node.get_data([tip])\n+                test_node.wait_for_block(tip)\n+                test_node.clear_last_announcement() # since we requested headers...\n+            elif i == 2:\n+                # this time announce own block via headers\n+                height = self.nodes[0].getblockcount()\n+                last_time = self.nodes[0].getblock(self.nodes[0].getbestblockhash())['time']\n+                block_time = last_time + 1\n+                new_block = create_block(tip, create_coinbase(height+1), block_time)\n+                new_block.solve()\n+                test_node.send_header_for_blocks([new_block])\n+                test_node.wait_for_getdata([new_block.sha256], timeout=5)\n+                test_node.send_message(msg_block(new_block))\n+                test_node.sync_with_ping() # make sure this block is processed\n+                inv_node.clear_last_announcement()\n+                test_node.clear_last_announcement()\n+\n+        print \"Part 1: success!\"\n+        print \"Part 2: announce blocks with headers after sendheaders message...\"\n+        # PART 2\n+        # 2. Send a sendheaders message and test that headers announcements\n+        # commence and keep working.\n+        test_node.send_message(msg_sendheaders())\n+        prev_tip = int(\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+        test_node.get_headers(locator=[prev_tip], hashstop=0L)\n+        test_node.sync_with_ping()\n+        test_node.clear_last_announcement() # Clear out empty headers response\n+\n+        # Now that we've synced headers, headers announcements should work\n+        tip = self.mine_blocks(1)\n+        assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+        assert_equal(test_node.check_last_announcement(headers=[tip]), True)\n+        test_node.get_data([tip])",
      "path": "qa/rpc-tests/sendheaders.py",
      "position": null,
      "original_position": 298,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "4faca45a67b7a075813c748fb98c60d3d9f41482",
      "in_reply_to_id": null,
      "user": {
        "login": "morcos",
        "id": 4360349,
        "node_id": "MDQ6VXNlcjQzNjAzNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morcos",
        "html_url": "https://github.com/morcos",
        "followers_url": "https://api.github.com/users/morcos/followers",
        "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
        "organizations_url": "https://api.github.com/users/morcos/orgs",
        "repos_url": "https://api.github.com/users/morcos/repos",
        "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morcos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why do you do this?\n",
      "created_at": "2015-11-17T20:05:17Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r45112859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45112859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45117256",
      "pull_request_review_id": null,
      "id": 45117256,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3MjU2",
      "diff_hunk": "@@ -4515,12 +4574,21 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         }\n \n         CBlockIndex *pindexLast = NULL;\n+        std::vector<CBlockIndex *> vToFetch;\n+        bool fCanDirectFetch = CanDirectFetch(chainparams.GetConsensus());",
      "path": "src/main.cpp",
      "position": null,
      "original_position": 184,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "4faca45a67b7a075813c748fb98c60d3d9f41482",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This block of code already has a guard so that we don't process headers received while importing/reindexing.\n",
      "created_at": "2015-11-17T20:40:45Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r45117256",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45117256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45120068",
      "pull_request_review_id": null,
      "id": 45120068,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIwMDY4",
      "diff_hunk": "@@ -0,0 +1,425 @@\n+#!/usr/bin/env python2\n+#\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from test_framework.blocktools import create_block, create_coinbase\n+\n+'''\n+SendHeadersTest -- test behavior of headers messages to announce blocks.\n+\n+Setup: \n+\n+- Two nodes, two p2p connections to node0. One p2p connection should only ever\n+  receive inv's (omitted from testing description below, this is our control).\n+  Second node is used for creating reorgs.\n+\n+Part 1: No headers announcements before \"sendheaders\"\n+a. node mines a block [expect: inv]\n+   send getdata for the block [expect: block]\n+b. node mines another block [expect: inv]\n+   send getheaders and getdata [expect: headers, then block]\n+c. node mines another block [expect: inv]\n+   send getheaders/getdata [expect headers, then block]\n+   peer mines a block, announces with header [expect: getdata]\n+d. node mines another block [expect: inv]\n+\n+Part 2: After \"sendheaders\", headers announcements should generally work.\n+a. peer sends sendheaders [expect: no response]\n+   peer sends getheaders with current tip [expect: no response]\n+b. node mines a block [expect: tip header]\n+   peer sends getdata [expect: block]\n+c. for N in 1, ..., 10:\n+   * for announce-type in {inv, header}\n+     - peer mines N blocks, announces with announce-type\n+       [ expect: getheaders/getdata or getdata, deliver block(s) ]\n+     - node mines a block [ expect: 1 header ]\n+\n+Part 3: Headers announcements stop after large reorg and resume after getheaders or inv from peer.\n+- For response-type in {inv, getheaders}\n+  * node mines a 7 block reorg [ expect: headers announcement of 8 blocks ]\n+  * node mines an 8-block reorg [ expect: inv at tip ]\n+  * peer responds with getblocks/getdata [expect: inv, blocks ]\n+  * node mines another block [ expect: inv at tip, peer sends getdata, expect: block ]\n+  * node mines another block at tip [ expect: inv ]\n+  * peer responds with getheaders with an old hashstop more than 8 blocks back [expect: headers]\n+  * peer requests block [ expect: block ]\n+  * node mines another block at tip [ expect: inv, peer sends getdata, expect: block ]\n+  * peer sends response-type [expect headers if getheaders, getheaders/getdata if mining new block]\n+  * node mines 1 block [expect: 1 header, peer responds with getdata]\n+'''\n+\n+class BaseNode(NodeConnCB):\n+    def __init__(self):\n+        NodeConnCB.__init__(self)\n+        self.create_callback_map()\n+        self.connection = None\n+        self.last_inv = None\n+        self.last_headers = None\n+        self.last_block = None\n+        self.ping_counter = 1\n+        self.last_pong = msg_pong(0)\n+        self.last_getdata = None\n+        self.sleep_time = 0.05\n+        self.block_announced = False\n+\n+    def clear_last_announcement(self):\n+        with mininode_lock:\n+            self.block_announced = False\n+            self.last_inv = None\n+            self.last_headers = None\n+\n+    def add_connection(self, conn):\n+        self.connection = conn\n+\n+    # Request data for a list of block hashes\n+    def get_data(self, block_hashes):\n+        msg = msg_getdata()\n+        for x in block_hashes:\n+            msg.inv.append(CInv(2, x))\n+        self.connection.send_message(msg)\n+\n+    def get_headers(self, locator, hashstop):\n+        msg = msg_getheaders()\n+        msg.locator.vHave = locator\n+        msg.hashstop = hashstop\n+        self.connection.send_message(msg)\n+\n+    def send_block_inv(self, blockhash):\n+        msg = msg_inv()\n+        msg.inv = [CInv(2, blockhash)]\n+        self.connection.send_message(msg)\n+\n+    # Wrapper for the NodeConn's send_message function\n+    def send_message(self, message):\n+        self.connection.send_message(message)\n+\n+    def on_inv(self, conn, message):\n+        self.last_inv = message\n+        self.block_announced = True\n+\n+    def on_headers(self, conn, message):\n+        self.last_headers = message\n+        self.block_announced = True\n+\n+    def on_block(self, conn, message):\n+        self.last_block = message.block\n+        self.last_block.calc_sha256()\n+\n+    def on_getdata(self, conn, message):\n+        self.last_getdata = message\n+\n+    def on_pong(self, conn, message):\n+        self.last_pong = message\n+\n+    # Test whether the last announcement we received had the\n+    # right header or the right inv\n+    # inv and headers should be lists of block hashes\n+    def check_last_announcement(self, headers=None, inv=None):\n+        expect_headers = headers if headers != None else []\n+        expect_inv = inv if inv != None else []\n+        test_function = lambda: self.block_announced\n+        self.sync(test_function)\n+        with mininode_lock:\n+            self.block_announced = False\n+\n+            success = True\n+            compare_inv = []\n+            if self.last_inv != None:\n+                compare_inv = [x.hash for x in self.last_inv.inv]\n+            if compare_inv != expect_inv:\n+                success = False\n+\n+            hash_headers = []\n+            if self.last_headers != None:\n+                # treat headers as a list of block hashes\n+                hash_headers = [ x.sha256 for x in self.last_headers.headers ]\n+            if hash_headers != expect_headers:\n+                success = False\n+\n+            self.last_inv = None\n+            self.last_headers = None\n+        return success\n+\n+    # Syncing helpers\n+    def sync(self, test_function, timeout=60):\n+        while timeout > 0:\n+            with mininode_lock:\n+                if test_function():\n+                    return\n+            time.sleep(self.sleep_time)\n+            timeout -= self.sleep_time\n+        raise AssertionError(\"Sync failed to complete\")\n+        \n+    def sync_with_ping(self, timeout=60):\n+        self.send_message(msg_ping(nonce=self.ping_counter))\n+        test_function = lambda: self.last_pong.nonce == self.ping_counter\n+        self.sync(test_function, timeout)\n+        self.ping_counter += 1\n+        return\n+\n+    def wait_for_block(self, blockhash, timeout=60):\n+        test_function = lambda: self.last_block != None and self.last_block.sha256 == blockhash\n+        self.sync(test_function, timeout)\n+        return\n+\n+    def wait_for_getdata(self, hash_list, timeout=60):\n+        if hash_list == []:\n+            return\n+\n+        test_function = lambda: self.last_getdata != None and [x.hash for x in self.last_getdata.inv] == hash_list\n+        self.sync(test_function, timeout)\n+        return\n+\n+    def send_header_for_blocks(self, new_blocks):\n+        headers_message = msg_headers()\n+        headers_message.headers = [ CBlockHeader(b) for b in new_blocks ]\n+        self.send_message(headers_message)\n+\n+    def send_getblocks(self, locator):\n+        getblocks_message = msg_getblocks()\n+        getblocks_message.locator.vHave = locator\n+        self.send_message(getblocks_message)\n+\n+# InvNode: This peer should only ever receive inv's, because it doesn't ever send a\n+# \"sendheaders\" message.\n+class InvNode(BaseNode):\n+    def __init__(self):\n+        BaseNode.__init__(self)\n+\n+# TestNode: This peer is the one we use for most of the testing.\n+class TestNode(BaseNode):\n+    def __init__(self):\n+        BaseNode.__init__(self)\n+\n+class SendHeadersTest(BitcoinTestFramework):\n+    def setup_chain(self):\n+        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes = start_nodes(2, self.options.tmpdir, [[\"-debug\"]]*2)\n+        connect_nodes(self.nodes[0], 1)\n+\n+    # mine count blocks and return the new tip\n+    def mine_blocks(self, count):\n+        self.nodes[0].generate(count)\n+        return int(\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+\n+    # mine a reorg that invalidates length blocks (replacing them with\n+    # length+1 blocks).\n+    # peers is the p2p nodes we're using; we clear their state after the\n+    # to-be-reorged-out blocks are mined, so that we don't break later tests.\n+    # return the list of block hashes newly mined\n+    def mine_reorg(self, length, peers):\n+        self.nodes[0].generate(length) # make sure all invalidated blocks are node0's\n+        sync_blocks(self.nodes, wait=0.1)\n+        [x.clear_last_announcement() for x in peers]\n+\n+        tip_height = self.nodes[1].getblockcount()\n+        hash_to_invalidate = self.nodes[1].getblockhash(tip_height-(length-1))\n+        self.nodes[1].invalidateblock(hash_to_invalidate)\n+        all_hashes = self.nodes[1].generate(length+1) # Must be longer than the orig chain\n+        sync_blocks(self.nodes, wait=0.1)\n+        return [int(\"0x\" + x + \"L\", 0) for x in all_hashes]\n+\n+    def run_test(self):\n+        # Setup the p2p connections and start up the network thread.\n+        inv_node = InvNode()\n+        test_node = TestNode()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], inv_node))\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], test_node))\n+        inv_node.add_connection(connections[0])\n+        test_node.add_connection(connections[1])\n+\n+        NetworkThread().start() # Start up network handling in another thread\n+\n+        # Test logic begins here\n+        inv_node.wait_for_verack()\n+        test_node.wait_for_verack()\n+\n+        tip = int(\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+\n+        # PART 1\n+        # 1. Mine a block; expect inv announcements each time\n+        print \"Part 1: headers don't start before sendheaders message...\"\n+        for i in xrange(4):\n+            old_tip = tip\n+            tip = self.mine_blocks(1)\n+            assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+            assert_equal(test_node.check_last_announcement(inv=[tip]), True)\n+            # Try a few different responses; none should affect next announcement\n+            if i == 0:\n+                # first request the block\n+                test_node.get_data([tip])\n+                test_node.wait_for_block(tip, timeout=5)\n+            elif i == 1:\n+                # next try requesting header and block\n+                test_node.get_headers(locator=[old_tip], hashstop=tip)\n+                test_node.get_data([tip])\n+                test_node.wait_for_block(tip)\n+                test_node.clear_last_announcement() # since we requested headers...\n+            elif i == 2:\n+                # this time announce own block via headers\n+                height = self.nodes[0].getblockcount()\n+                last_time = self.nodes[0].getblock(self.nodes[0].getbestblockhash())['time']\n+                block_time = last_time + 1\n+                new_block = create_block(tip, create_coinbase(height+1), block_time)\n+                new_block.solve()\n+                test_node.send_header_for_blocks([new_block])\n+                test_node.wait_for_getdata([new_block.sha256], timeout=5)\n+                test_node.send_message(msg_block(new_block))\n+                test_node.sync_with_ping() # make sure this block is processed\n+                inv_node.clear_last_announcement()\n+                test_node.clear_last_announcement()\n+\n+        print \"Part 1: success!\"\n+        print \"Part 2: announce blocks with headers after sendheaders message...\"\n+        # PART 2\n+        # 2. Send a sendheaders message and test that headers announcements\n+        # commence and keep working.\n+        test_node.send_message(msg_sendheaders())\n+        prev_tip = int(\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+        test_node.get_headers(locator=[prev_tip], hashstop=0L)",
      "path": "qa/rpc-tests/sendheaders.py",
      "position": null,
      "original_position": 290,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "4faca45a67b7a075813c748fb98c60d3d9f41482",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Surprisingly, this code is necessary to make the test work.  Turns out there's an unusual feature in the getheaders handling, where we set `pindexBestHeaderSent` to `chainActive.Tip()` in two situations: if we actually are sending the tip, or if we have nothing to send.  I think the latter case can only happen if our peer has our tip in their locator, so I believe this behavior is desirable, if surprising.\n\nI've added a comment to the relevant line of code in main.cpp explaining this behavior.\n",
      "created_at": "2015-11-17T21:02:29Z",
      "updated_at": "2015-11-23T20:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r45120068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45120068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 305,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45733142",
      "pull_request_review_id": null,
      "id": 45733142,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMzMTQy",
      "diff_hunk": "@@ -4521,6 +4584,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 Misbehaving(pfrom->GetId(), 20);\n                 return error(\"non-continuous headers sequence\");\n             }\n+            BlockMap::iterator it = mapBlockIndex.find(header.GetHash());",
      "path": "src/main.cpp",
      "position": 187,
      "original_position": 187,
      "commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "original_commit_id": "9fa8c48abbee1fe9d765705897e105274421d385",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like I forgot to remove this.\n",
      "created_at": "2015-11-24T13:18:42Z",
      "updated_at": "2015-11-24T13:18:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/6494#discussion_r45733142",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45733142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6494"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4587,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}