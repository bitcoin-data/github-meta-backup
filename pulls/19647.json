{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647",
    "id": 461871043,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDYxODcxMDQz",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19647",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19647.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19647.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/343b93b45d468a4c747b0b5f7dd397aaf30081f0",
    "number": 19647,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add thread safety annotations to CTxMemPool methods",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Split out from #19306.\r\n\r\nOnly trivial thread safety annotations and lock assertions added. No new locks. No behavior change.\r\n\r\nThis is a step to make `CTxMemPool::cs` an instance of `Mutex` rather `RecursiveMutex`.",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-08-02T22:42:29Z",
    "updated_at": "2022-02-15T10:48:36Z",
    "closed_at": "2020-09-01T09:50:03Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "c453a26b965cddd768e5d3799c0b5d1e11acfbcb",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "hebasto:200802-mmx-1",
      "ref": "200802-mmx-1",
      "sha": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143212778,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMyMTI3Nzg=",
        "name": "bitcoin",
        "full_name": "hebasto/bitcoin",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hebasto/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/bitcoin",
        "archive_url": "https://api.github.com/repos/hebasto/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hebasto/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hebasto/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hebasto/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hebasto/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hebasto/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hebasto/bitcoin/hooks",
        "svn_url": "https://github.com/hebasto/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 13,
        "watchers_count": 13,
        "size": 248693,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [
          "bitcoin-core"
        ],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:20:02Z",
        "created_at": "2018-08-01T21:59:57Z",
        "updated_at": "2023-03-29T06:21:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "34eb2362581d4d8f0bfd3baa12ba750afaf85c62",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 21,
    "deletions": 18,
    "changed_files": 2,
    "commits": 3,
    "review_comments": 16,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 667734282,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzczNDI4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667734282",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:26Z",
      "updated_at": "2020-08-02T22:45:26Z",
      "author_association": "MEMBER",
      "body": "@ajtowns @jnewbery @vasild @JeremyRubin \r\n\r\nMind reviewing?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-667734282",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "mentioned",
      "id": 3613735794,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxMzczNTc5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735794",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:26Z"
    },
    {
      "event": "subscribed",
      "id": 3613735796,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTM3MzU3OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735796",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "mentioned",
      "id": 3613735798,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxMzczNTc5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735798",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "subscribed",
      "id": 3613735799,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTM3MzU3OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735799",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "mentioned",
      "id": 3613735800,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxMzczNTgwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735800",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "subscribed",
      "id": 3613735801,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTM3MzU4MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735801",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "mentioned",
      "id": 3613735802,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxMzczNTgwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735802",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "subscribed",
      "id": 3613735804,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTM3MzU4MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613735804",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:45:27Z"
    },
    {
      "event": "commented",
      "id": 667735326,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzczNTMyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667735326",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T22:58:14Z",
      "updated_at": "2020-08-02T22:58:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "this looks correct, concept and like cr ack.\r\n\r\n",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-667735326",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "labeled",
      "id": 3613779969,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MTM3Nzk5Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613779969",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T23:45:51Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "commented",
      "id": 667762107,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2Nzc2MjEwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667762107",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T01:50:18Z",
      "updated_at": "2020-08-31T19:59:50Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-667762107",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "commented",
      "id": 667948870,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2Nzk0ODg3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667948870",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T10:37:27Z",
      "updated_at": "2020-08-03T10:37:27Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Annotating the existing locking logic is always useful.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-667948870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "reviewed",
      "id": 459955680,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTU1Njgw",
      "url": null,
      "actor": null,
      "commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#pullrequestreview-459955680",
      "submitted_at": "2020-08-03T11:36:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
    },
    {
      "event": "reviewed",
      "id": 459958949,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTU4OTQ5",
      "url": null,
      "actor": null,
      "commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Shouldn't this PR also add `GUARDED_BY(cs)` to all the other non-static, non-atomic data members?",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#pullrequestreview-459958949",
      "submitted_at": "2020-08-03T12:42:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
    },
    {
      "event": "commented",
      "id": 668009614,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODAwOTYxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668009614",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T13:01:38Z",
      "updated_at": "2020-08-03T13:01:38Z",
      "author_association": "MEMBER",
      "body": "@ajtowns \r\n> Concept ACK. Shouldn't this PR also add `GUARDED_BY(cs)` to all the other non-static, non-atomic data members?\r\n\r\nThis PR split out from #19306 to make it small and easy to review.\r\nMaking other non-static, non-atomic data members `GUARDED_BY(cs)` is a design-change decision that I'd leave out of this PR scope.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-668009614",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "mentioned",
      "id": 3615815656,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxNTgxNTY1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3615815656",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T13:01:39Z"
    },
    {
      "event": "subscribed",
      "id": 3615815659,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTU4MTU2NTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3615815659",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T13:01:39Z"
    },
    {
      "event": "commented",
      "id": 668097334,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODA5NzMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668097334",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T15:48:36Z",
      "updated_at": "2020-08-03T15:48:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK: thanks for adding thread-safety annotations!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-668097334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGJkNTdmY2E5ZDMyNGRkNDY4ZDBlZTYyNzM5MmJkNzg4NjA2YmQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dbd57fca9d324dd468d0ee627392bd788606bd8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6dbd57fca9d324dd468d0ee627392bd788606bd8",
      "tree": {
        "sha": "3cb281c26af6473af8a098baafcb5090f001de31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3cb281c26af6473af8a098baafcb5090f001de31"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3cb281c26af6473af8a098baafcb5090f001de31\nparent a78742830aa35bf57bcb0a4730977a1e5a1876bc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596405475 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596469768 +0300\n\nrefactor: Add more thread safety annotations to CTxMemPool\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8oMggACgkQQQEIES5+\nqB9TShAAntqtGyaXxyapTe4lVO2347kU+LJjKsKPn3qJ8B1JQpMnTC5LGRfxrNhT\nNoGRdh5Uv8BdMmk+Q9SjXYq1X5x/qUit70Vj2ZcsflxbsMMA6nNeae+uY1SJwESY\nzsyjcZCS6wt0V9WIGpxjJ+uOYj6R5EcFvB+FCZhaSzwq2eTfdj/vrTfX0eDwk/pJ\nPmKHEemtjrsPLnZLB+1pO5ZYqXUUwIfSMZzC01T+gsexU3ksD75DpH+EDXXtfvlE\nwZIFlqoKLKNNQtUvQy14C1jB6sI4I9YEXtFpndPv7Kkq8PPsrnVE9kWf+yElqtM6\nQkGvyA5y8rrxASkOYQ3M1EL+gcEK9g9QcAvx9jf7sN1n8eVGTHQmawM2AsXYMpFB\nR84LkW9IyXiZfBNTiX4+Nrs4mrKLHu5Hv0/3QIcAGDgCBh9JWt/zRjasySMYYZfK\njy/a9zG8bV6DHzLI0ic9T3/0c7GCi5i3XYrs4BoIi964Jgyff9mszA8XvgqvwThS\nLC0GPaxN/AFC918WFaxhh2OlJyToELc57XK8+S4HqNwNcK1Shtt2gTyBdvJ0jtM6\nIkemCmTuPA7ZDBF0heRvTT8y17jKZcUksQBMO0HJkt2igIj7ruCm4XlT4yzilIQt\n0cz8W5mO6dVCHzmXqOLy+X+hQBlsZwRYmShLx3K/36z7h1OP4xg=\n=mcUP\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a78742830aa35bf57bcb0a4730977a1e5a1876bc",
          "sha": "a78742830aa35bf57bcb0a4730977a1e5a1876bc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a78742830aa35bf57bcb0a4730977a1e5a1876bc"
        }
      ],
      "message": "refactor: Add more thread safety annotations to CTxMemPool",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T15:49:28Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-02T21:57:55Z"
      },
      "sha": "6dbd57fca9d324dd468d0ee627392bd788606bd8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzdkNGNiNTI4NjlkNTk0M2MyZjM2YjNiOGE5MWJiNjAzNDQyNzRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
      "tree": {
        "sha": "898bfafa3bad90f697556d0ba50d84e3b02ad5b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/898bfafa3bad90f697556d0ba50d84e3b02ad5b2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 898bfafa3bad90f697556d0ba50d84e3b02ad5b2\nparent 6dbd57fca9d324dd468d0ee627392bd788606bd8\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596405487 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596469839 +0300\n\nrefactor: Make CTxMemPool::ClearPrioritisation() private\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8oMk8ACgkQQQEIES5+\nqB+GIg//c0ChifhyGbYHJY0NqSIgN6oXlNwJhWWi/+JJGOlWVN/ONE94l63J8eqc\nX5vcqyN73WC0xauAtKekWmpcDvkdGvqDDHuBYdMWBN5hyIeQVLt5erE7Udrkqiix\nwVetRe+pv93TARg8wmvFRxamYREJjBUr9SCBpGdr5MvDxaIg7K7Ajbzt8CeuUIc8\n+CUNIJHf3aILTgFD5GP1TheTxs8CtvK5TnW4KsnhmRLdqubD/4mMIJG3jlYR8qE5\nldP34pDHvuRrtGXKf7IXJjDwYMPQXcsz2QlOkI/ARerBXio+21tl5ZWZo0h+wvv6\nw4/9Cr7LNTmiwA7HBbvy1RjOFGMOdzGUQVtDCe4MdInqKpIwC6FIRBPHKO0c1raU\nvAGCk9frS/XQzu9LMua3Y2KxKaHiwLeDwbUG552DjmIqEtKXpnmVnWz9jWfOvzSd\nKM0V0AVrW8Q8kdq8tmSajtrth9fPNTncrAtAw1lAzQ93Rt9bfTCsdSAmDadKT0J3\nq3zXddPPrAehwx46RmK1LsP9cIiuJoypC2oWkerUp1SPEdQGuaAYyTV4UksGyUpj\nfCspP2/n51WkDgeUuJlB1X668nL8scvPd8Br9D2tNw2Oh4THP96cGWU3BVQ0vNAg\nFxb6uZTas8MGLQWfoFS9rEqo59GZjRrTuRBOSEbciCtClkP2YE4=\n=PhgI\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dbd57fca9d324dd468d0ee627392bd788606bd8",
          "sha": "6dbd57fca9d324dd468d0ee627392bd788606bd8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6dbd57fca9d324dd468d0ee627392bd788606bd8"
        }
      ],
      "message": "refactor: Make CTxMemPool::ClearPrioritisation() private",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T15:50:39Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-02T21:58:07Z"
      },
      "sha": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDNiOTNiNDVkNDY4YTRjNzQ3YjBiNWY3ZGQzOTdhYWYzMDA4MWYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "tree": {
        "sha": "3339454ec7b59acbafc86fa33585fbbb20cb9509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3339454ec7b59acbafc86fa33585fbbb20cb9509"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3339454ec7b59acbafc86fa33585fbbb20cb9509\nparent 3c7d4cb52869d5943c2f36b3b8a91bb60344274c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596406661 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596470072 +0300\n\nrefactor: Add negative thread safety annotations to CTxMemPool\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8oMzgACgkQQQEIES5+\nqB/QhA//ROJ2lqLf4W4Bhs0U7U2lRImT3ET8aSB2Dte0yqsOIZ7BYLglM/r/WILv\nMtPQ4FsMza3okSvPQv1mZoTNyG1nNOtK++GjuTP0enhkKEy4K2ssJKZxQP9AdGlW\ndK3KYDUU0kDvJMMiANTTpa/PgZ/uyPArglJSlmca7XrCSVhWUclNCbtjU6/4Xwja\npmXxXsWWRpVG4fY2yAJ354XtMPiCTkzcwTzfSIDWhQv21Wpvt6oAaPqbbG+UTHtw\nMWOyndHzoAUVNBBoHUeT1y3qrdbHho8IL4AvvO/T6khAvUKcM44lQhvdAMLoFtVr\nvX2Bja6K84sT/8iGIRSCzSz/jv8xvg4NCxXQ7hV/pB8UJ+fVV+VFc3FzljMkaXwK\njK+JPn3f1VGKNuUbt+L2f9BAbWQa60Ed5QD1h87vSZBWx4GjjpyXHMms2FjSXoWG\nBdJqmnzbzjmTjo/ouPpEXaoJgTtT/qhrBnhrkLbOkszQls3yr2U19/MdLcJaeHb0\nO8XYjyMXmPTJS7yk22FE97JQnGrgb9gYBkTKzZpD778SgLYEkFewsVkcOVUJevGQ\n2OUEvIBBOpGBAjClRc1KsgB/WopQ3+J3NQPt/+oW8DvDzBk+RmOjD/2w8RTzsRp2\n2/kGzK0XSvvZ1qXtE2eATD4aMYi0VzQXjl876YK8TPLjcjTnXeM=\n=rN0I\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
          "sha": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3c7d4cb52869d5943c2f36b3b8a91bb60344274c"
        }
      ],
      "message": "refactor: Add negative thread safety annotations to CTxMemPool",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T15:54:32Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-02T22:17:41Z"
      },
      "sha": "343b93b45d468a4c747b0b5f7dd397aaf30081f0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3616583989,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYxNjU4Mzk4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3616583989",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T16:02:12Z"
    },
    {
      "event": "commented",
      "id": 668106705,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODEwNjcwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668106705",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T16:06:38Z",
      "updated_at": "2020-08-03T16:06:38Z",
      "author_association": "MEMBER",
      "body": "Updated f084aacb6eb57f638d6314cf44b267b77e84c4e4  -> 343b93b45d468a4c747b0b5f7dd397aaf30081f0 ([pr19647.01](https://github.com/hebasto/bitcoin/commits/pr19647.01) -> [pr19647.02](https://github.com/hebasto/bitcoin/commits/pr19647.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19647.01..pr19647.02)):\r\n\r\n- addressed @ajtowns' [comment](https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464360474):\r\n> `AssertLockHeld` is annotated with `ASSERT_EXCLUSIVE_LOCK` which disables clang's compile time checks that the lock was acquired beforehand. Wouldn't it be better just to rely on the compile time checks?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-668106705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "mentioned",
      "id": 3616601534,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYxNjYwMTUzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3616601534",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T16:06:38Z"
    },
    {
      "event": "subscribed",
      "id": 3616601539,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MTY2MDE1Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3616601539",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T16:06:38Z"
    },
    {
      "event": "reviewed",
      "id": 464892389,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0ODkyMzg5",
      "url": null,
      "actor": null,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks good except the [suggestion below](https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468442853).\r\n\r\nIt was tedious to check the callers of e.g. `ApplyDelta()` and their callers and their callers etc until finding either `LOCK(cs)` or `AssertLockHeld(cs)` to ensure that the mutex is indeed held in all places where `ApplyDelta()` is called.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#pullrequestreview-464892389",
      "submitted_at": "2020-08-11T09:27:07Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
    },
    {
      "event": "reviewed",
      "id": 464926376,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTI2Mzc2",
      "url": null,
      "actor": null,
      "commit_id": "6dbd57fca9d324dd468d0ee627392bd788606bd8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 343b93b45d468a4c747b0b5f7dd397aaf30081f0.\r\n\r\n> > `AssertLockNotHeld` is called immediately in `info(gtxid)` seems unnecessary to repeat it?\r\n> \r\n> When a thread safety annotation is a part of function member declaration, I found it very convenient having a corresponding `AssertLock{Not}Held()` statement in its definition.\r\n> \r\n> Also this assertion would be really helpful when `CTxMemPool::cs` will actually transit from `RecursiveMutex` to `Mutex`.\r\n\r\nLet's not make a wave of pulls adding negative thread safety annotations everywhere.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#pullrequestreview-464926376",
      "submitted_at": "2020-08-11T10:18:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
    },
    {
      "event": "commented",
      "id": 673402636,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzQwMjYzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673402636",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T10:39:28Z",
      "updated_at": "2020-08-13T10:39:28Z",
      "author_association": "MEMBER",
      "body": "Fellow reviewers! It seems there is a consensus that adding thread safety annotations would be much safer and more convenient after `AssertLockHeldInternal()` improving. Therefore, begging for #19668 review at first :)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-673402636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "commented",
      "id": 684687403,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDY4NzQwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684687403",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T09:50:03Z",
      "updated_at": "2020-09-01T09:50:03Z",
      "author_association": "MEMBER",
      "body": "Closed in favor of #19854.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-684687403",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19647"
    },
    {
      "event": "closed",
      "id": 3713919015,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzcxMzkxOTAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3713919015",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T09:50:03Z"
    },
    {
      "event": "referenced",
      "id": 3729277403,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3MjkyNzc0MDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3729277403",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "99a8eb60518050c22bbfc634a1a90cbae29aff03",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99a8eb60518050c22bbfc634a1a90cbae29aff03",
      "created_at": "2020-09-04T11:20:54Z"
    },
    {
      "event": "referenced",
      "id": 3748105677,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3NDgxMDU2Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3748105677",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "45b8840fd375e5489cf75d4cf9e1bf50e465c737",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/45b8840fd375e5489cf75d4cf9e1bf50e465c737",
      "created_at": "2020-09-09T22:40:32Z"
    },
    {
      "event": "locked",
      "id": 6073909174,
      "node_id": "LOE_lADOABII584oCWNvzwAAAAFqCH-2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073909174",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:48:36Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464357745",
      "pull_request_review_id": 459955680,
      "id": 464357745,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1Nzc0NQ==",
      "diff_hunk": "@@ -813,17 +815,23 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n \n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n+    AssertLockNotHeld(cs);\n     LOCK(cs);\n     indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n     if (i == mapTx.end())\n         return TxMempoolInfo();\n     return GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n+TxMempoolInfo CTxMemPool::info(const uint256& txid) const\n+{\n+    AssertLockNotHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Excluding locks in getters makes it impossible to get more than one consistent mempool entry, as the state of the second might change after the first one has been returned.",
      "created_at": "2020-08-03T11:36:19Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464357745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464357745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464360474",
      "pull_request_review_id": 459958949,
      "id": 464360474,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM2MDQ3NA==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`AssertLockHeld` is annotated with `ASSERT_EXCLUSIVE_LOCK` which disables clang's compile time checks that the lock was acquired beforehand. Wouldn't it be better just to rely on the compile time checks? As it stands, `AssertLockHeld` could hide bugs (if `ApplyDelta` lost its annotation, it could then be called from somewhere without the lock held and without raising errors if it called other functions expecting cs to be held, or accessed data structures guarded by cs, this would now only be found if someone ran the code with DEBUG_LOCKORDER enabled).\r\n\r\n(Alternatively could introduce a `RequireLockHeld` in sync.h that does the runtime checks while expecting the compile time checks to already be satisfied; but I'm not sure there's much benefit in that)",
      "created_at": "2020-08-03T11:42:19Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464360474",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464360474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464380249",
      "pull_request_review_id": 459958949,
      "id": 464380249,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MDI0OQ==",
      "diff_hunk": "@@ -813,17 +815,23 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n \n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n+    AssertLockNotHeld(cs);\n     LOCK(cs);\n     indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n     if (i == mapTx.end())\n         return TxMempoolInfo();\n     return GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n+TxMempoolInfo CTxMemPool::info(const uint256& txid) const\n+{\n+    AssertLockNotHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "in_reply_to_id": 464357745,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`AssertLockNotHeld` is called immediately in `info(gtxid)` seems unnecessary to repeat it?\r\n\r\nWe've got `infoAll` for a consistent look at all mempool entries (used by DumpMempool), and apparently don't use `info` for consistent views otherwise, so excluding the lock seems okay to me.",
      "created_at": "2020-08-03T12:26:32Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464380249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464380249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464381841",
      "pull_request_review_id": 459985489,
      "id": 464381841,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MTg0MQ==",
      "diff_hunk": "@@ -813,17 +815,23 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n \n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n+    AssertLockNotHeld(cs);\n     LOCK(cs);\n     indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n     if (i == mapTx.end())\n         return TxMempoolInfo();\n     return GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n+TxMempoolInfo CTxMemPool::info(const uint256& txid) const\n+{\n+    AssertLockNotHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "in_reply_to_id": 464357745,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To get consistent values the external locking of `CTxMemPool::cs` should be used.\r\n\r\nAnyway, this PR does not change locking behavior.",
      "created_at": "2020-08-03T12:29:51Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464381841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464381841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464395858",
      "pull_request_review_id": 460003600,
      "id": 464395858,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5NTg1OA==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#assert-capability-and-assert-shared-capability:\r\n> These are attributes on a function or method that does a run-time test to see whether the calling thread holds the given capability.\r\n\r\nHow this could disable clang's compile time checks?\r\n\r\n> ... if `ApplyDelta` lost its annotation, it could then be called from somewhere without the lock held and without raising errors if it called other functions expecting cs to be held...\r\n\r\nWhy `ApplyDelta` could lost its annotation?\r\nLocking a recursive mutex in any site where we think it should be locked seems worse than using a non-recursive mutex with annotated functions and data members, no?\r\n\r\n",
      "created_at": "2020-08-03T12:57:49Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464395858",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464395858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464400811",
      "pull_request_review_id": 460010079,
      "id": 464400811,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQwMDgxMQ==",
      "diff_hunk": "@@ -813,17 +815,23 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n \n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n+    AssertLockNotHeld(cs);\n     LOCK(cs);\n     indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n     if (i == mapTx.end())\n         return TxMempoolInfo();\n     return GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n+TxMempoolInfo CTxMemPool::info(const uint256& txid) const\n+{\n+    AssertLockNotHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "f084aacb6eb57f638d6314cf44b267b77e84c4e4",
      "in_reply_to_id": 464357745,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `AssertLockNotHeld` is called immediately in `info(gtxid)` seems unnecessary to repeat it?\r\n\r\nWhen a thread safety annotation is a part of function member declaration, I found it very convenient having a corresponding `AssertLock{Not}Held()` statement in its definition.\r\n\r\nAlso this assertion would be really helpful when `CTxMemPool::cs` will actually transit from `RecursiveMutex` to `Mutex`.",
      "created_at": "2020-08-03T13:07:11Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464400811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464400811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464438092",
      "pull_request_review_id": 460058468,
      "id": 464438092,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQzODA5Mg==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> How this could disable clang's compile time checks?\r\n\r\nThey're attributes for a function that does a runtime test and unwinds the stack, ie a function like `f(lock) { if (!lock) throw; }`, at which point it's safe to assume that the lock is held after the function returns, so the compile time checks are no longer necessary, so disabling the compile time checks is the whole point. (That's true for `AssertLockHeldInternal` when `DEBUG_LOCK_ORDER` is defined, but not when it's not defined)\r\n\r\nYou can see this if you change `LOCK(cs)` in `CTxMemPool::isSpent()` to `AssertLockHeld(cs)`. Suddenly dispite the `GUARDED_BY(cs)`, access to `mapNextTx` is allowed at compile time, and you'll only get an error at runtime, and then only if you compile with `DEBUG_LOCK_ORDER`.\r\n\r\nThis feature is needed by net_processing.cpp in `MaybeSetPeerAsAnnouncingHeaderAndIDs` where it passes a lambda to `connman.ForNode` where the lambda needs to know a lock is held to access `lNodesAnnouncingHeaderAndIDs`, but `ForNode` is too general to be able to assure the lambda that the lock is held.\r\n\r\n> Why `ApplyDelta` could lost its annotation?\r\n\r\nSomeone makes a typo; it's not especially likely, but with a `GUARDED_BY` and without `AssertLockHeld` the missing annotation would be caught at compile time.\r\n\r\n> Locking a recursive mutex in any site where we think it should be locked seems worse than using a non-recursive mutex with annotated functions and data members, no?\r\n\r\nNo, no -- your locking changes make sense, just saying that the `AssertLockHeldInternal` annotation isn't helpful here. (There's lots of other places where it's not helpful too)",
      "created_at": "2020-08-03T14:10:06Z",
      "updated_at": "2020-08-03T16:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464438092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464438092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464511843",
      "pull_request_review_id": 460153499,
      "id": 464511843,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxMTg0Mw==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/19647#issuecomment-668106705).",
      "created_at": "2020-08-03T16:07:39Z",
      "updated_at": "2020-08-03T16:07:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r464511843",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464511843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468442853",
      "pull_request_review_id": 464892389,
      "id": 468442853,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ0Mjg1Mw==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here and in `CTxMemPool::ClearPrioritisation()`, `CTxMemPool::GetTotalTxSize()` and `CTxMemPool::IsUnbroadcastTx()` I would strongly advise to add `AssertLockHeld(cs)` where `LOCK(cs)` is removed. And in general in every function that is annotated `EXCLUSIVE_LOCKS_REQUIRED()`. It would serve as documentation to the reader and also ensure that the code does not get executed without holding the mutex.\r\n\r\nThe clang compile time checks are good, but I would say not to be the sole protection - they get silenced in an unexpected way if `EXCLUSIVE_LOCKS_REQUIRED()` and `ASSERT_EXCLUSIVE_LOCK()` are both used, do not work with gcc and produce only compile warnings with clang (could be missed if -Werror is not used). I would say they are an addition, but not replacement of run-time asserts.",
      "created_at": "2020-08-11T09:18:55Z",
      "updated_at": "2020-08-11T09:27:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468442853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468442853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468451198",
      "pull_request_review_id": 464902705,
      "id": 468451198,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1MTE5OA==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Wouldn't it be better just to rely on the compile time checks?\r\n\r\nI find this scary. Those compile time checks do not look mature enough to me - see how the behavior changes depending on the order of the attributes: https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467045878. Also, they do not work with gcc and even with clang produce only a compile time warnings which could be missed if -Werror is not used.",
      "created_at": "2020-08-11T09:33:21Z",
      "updated_at": "2020-08-11T09:33:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468451198",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468451198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468469845",
      "pull_request_review_id": 464926376,
      "id": 468469845,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2OTg0NQ==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": 468442853,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "6dbd57fca9d324dd468d0ee627392bd788606bd8\r\n\r\n> they get silenced in an unexpected way\r\n\r\n@vasild do you have a code sample?\r\n\r\n> I would say they are an addition\r\n\r\nAgree.",
      "created_at": "2020-08-11T10:06:37Z",
      "updated_at": "2020-08-11T10:18:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468469845",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468469845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468471022",
      "pull_request_review_id": 464926376,
      "id": 468471022,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3MTAyMg==",
      "diff_hunk": "@@ -579,6 +579,8 @@ class CTxMemPool\n      */\n     std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);\n \n+    void ClearPrioritisation(const uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(cs);",
      "path": "src/txmempool.h",
      "position": 15,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c\r\n\r\nnit, could refactor to `const uint256&?`",
      "created_at": "2020-08-11T10:08:54Z",
      "updated_at": "2020-08-11T10:18:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468471022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468471022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 582,
      "original_line": 582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468546095",
      "pull_request_review_id": 465021258,
      "id": 468546095,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0NjA5NQ==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": 468442853,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > they get silenced in an unexpected way\r\n> \r\n> @vasild do you have a code sample?\r\n\r\nYes, see https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467045878. There are two unexpected things:\r\n\r\n1. The warnings differ depending on the order of the attributes (if more than one is specified):\r\n  ```cpp\r\n  void f() EXCLUSIVE_LOCKS_REQUIRED(cs) ASSERT_EXCLUSIVE_LOCK(cs);\r\n  // vs\r\n  void f() ASSERT_EXCLUSIVE_LOCK(cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\r\n  ```\r\n\r\n2. The presence of `ASSERT_EXCLUSIVE_LOCK()` alters the behavior of `EXCLUSIVE_LOCKS_REQUIRED()`.",
      "created_at": "2020-08-11T12:36:19Z",
      "updated_at": "2020-08-11T12:36:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468546095",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468546095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468592007",
      "pull_request_review_id": 465081206,
      "id": 468592007,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU5MjAwNw==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": 468442853,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Annotating both `ASSERT_EXCLUSIVE_LOCK` and `EXCLUSIVE_LOCKS_REQUIRED` on the same function makes no sense. The only reason to do the `ASSERT_EXCLUSIVE_LOCK` is if you're relying on the test having succeeded for execution to continue as far as later compile-time checks are concerned, but if you've satisfied `EXCLUSIVE_LOCKS_REQUIRED` already, then there's no need to hint the later compile-time checks, they're already satisfied.",
      "created_at": "2020-08-11T13:47:25Z",
      "updated_at": "2020-08-11T13:47:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468592007",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468592007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468595989",
      "pull_request_review_id": 465086292,
      "id": 468595989,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU5NTk4OQ==",
      "diff_hunk": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);",
      "path": "src/txmempool.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "in_reply_to_id": 468442853,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It was tedious to check the callers of e.g. `ApplyDelta()` and their callers and their callers etc until finding either `LOCK(cs)` or `AssertLockHeld(cs)` to ensure that the mutex is indeed held in all places where `ApplyDelta()` is called.\r\n\r\nThe whole point of the compile time annotations is to have the compiler do the work of checking that the callers have a `LOCK(cs)`. Note that an `AssertLockHeld(cs)` isn't sufficient -- any time that's called without having the lock already held would also be a bug; and until the `ASSERT_EXCLUSIVE_LOCK` annotation is removed from `AssertLockHeld`, `AssertLockHeld` may in fact prevent the compiler from doing adequate checking...\r\n\r\n\r\n",
      "created_at": "2020-08-11T13:52:40Z",
      "updated_at": "2020-08-11T13:52:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r468595989",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468595989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480983533",
      "pull_request_review_id": 479538000,
      "id": 480983533,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk4MzUzMw==",
      "diff_hunk": "@@ -854,7 +854,8 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "original_commit_id": "24668ade194406150991083431ce1ccdeeb7193d",
      "in_reply_to_id": 464360474,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `AssertLockHeld` is annotated with `ASSERT_EXCLUSIVE_LOCK` which disables clang's compile time checks that the lock was acquired beforehand.\r\n\r\nIt is fixed in #19668.",
      "created_at": "2020-09-01T09:00:52Z",
      "updated_at": "2020-09-01T09:00:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19647#discussion_r480983533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480983533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    }
  ]
}