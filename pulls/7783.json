{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783",
    "id": 64959925,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ5NTk5MjU=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7783",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/7783.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/7783.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
    "number": 7783,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "[Qt] RPC-Console: support nested commands and simple value queries",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "**this is currently limited to the QT RPC Console, but I'm happy to extend/refactor this to make it useable in bitcoin-cli**\n\nCommands can be executed with bracket syntax, example: `getwalletinfo()`.\nCommands can be nested, example: `sendtoaddress(getnewaddress(), 10)`.\nSimple queries are possible: `listunspent()[0][txid]`\nObject values are accessed with a non-quoted string, example: `[txid]`.\n\nFully backward compatible.\n`generate 101` is identical to `generate(101)`\nResult value queries indicated with `[]` require the new brackets syntax.\nComma as argument separator is now also possible: `sendtoaddress,<address>,<amount>`\nSpace as argument separator works also with the bracket syntax, example: `sendtoaddress(getnewaddress() 10)`\n\nNo dept limitation, complex commands are possible:\n`decoderawtransaction(getrawtransaction(getblock(getbestblockhash())[tx][0]))[vout][0][value]`\n\n<img width=\"1336\" alt=\"bildschirmfoto 2016-04-01 um 17 13 08\" src=\"https://cloud.githubusercontent.com/assets/178464/14211198/07825dca-f82d-11e5-90c4-1a44b715b2f3.png\">\n",
    "labels": [
      {
        "id": 135946,
        "node_id": "MDU6TGFiZWwxMzU5NDY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
        "name": "GUI",
        "color": "02d7e1",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2016-04-01T15:15:03Z",
    "updated_at": "2022-02-15T11:09:08Z",
    "closed_at": "2016-09-20T12:15:46Z",
    "mergeable_state": "unknown",
    "merged_at": "2016-09-20T12:15:46Z",
    "merge_commit_sha": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jonasschnelli:2016/04/qt_console_nested",
      "ref": "2016/04/qt_console_nested",
      "sha": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 9264454,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjY0NDU0",
        "name": "bitcoin",
        "full_name": "jonasschnelli/bitcoin",
        "owner": {
          "login": "jonasschnelli",
          "id": 178464,
          "node_id": "MDQ6VXNlcjE3ODQ2NA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonasschnelli",
          "html_url": "https://github.com/jonasschnelli",
          "followers_url": "https://api.github.com/users/jonasschnelli/followers",
          "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
          "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
          "repos_url": "https://api.github.com/users/jonasschnelli/repos",
          "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonasschnelli/bitcoin",
        "fork": true,
        "url": "https://api.github.com/repos/jonasschnelli/bitcoin",
        "archive_url": "https://api.github.com/repos/jonasschnelli/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonasschnelli/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonasschnelli/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonasschnelli/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonasschnelli/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jonasschnelli/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jonasschnelli/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonasschnelli/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonasschnelli/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonasschnelli/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonasschnelli/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonasschnelli/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jonasschnelli/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jonasschnelli/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonasschnelli/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonasschnelli/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonasschnelli/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonasschnelli/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jonasschnelli/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jonasschnelli/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jonasschnelli/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jonasschnelli/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jonasschnelli/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonasschnelli/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jonasschnelli/bitcoin/hooks",
        "svn_url": "https://github.com/jonasschnelli/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 5,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 194164,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-08-07T18:33:53Z",
        "created_at": "2013-04-06T18:21:51Z",
        "updated_at": "2023-05-19T06:34:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "41d8e78f94c5ad54684f1f15efb0264036418e71",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T22:16:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 300,
    "deletions": 71,
    "changed_files": 6,
    "commits": 1,
    "review_comments": 13,
    "comments": 29
  },
  "events": [
    {
      "event": "labeled",
      "id": 611403484,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDYxMTQwMzQ4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/611403484",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-01T15:15:03Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "commented",
      "id": 204506292,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDUwNjI5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/204506292",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-01T18:34:10Z",
      "updated_at": "2016-04-01T18:34:10Z",
      "author_association": "MEMBER",
      "body": "Isn't this going a bit overboard for debugging tools? (OTOH, it's only about 150 LOC...)\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-204506292",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 204513734,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDUxMzczNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/204513734",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-01T18:44:55Z",
      "updated_at": "2016-04-01T18:44:55Z",
      "author_association": "MEMBER",
      "body": "I think this is useful. An alternative proposed was to use variables `a = getnewaddress` `sendtoaddress a 10`, but this pull is fine as well.\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-204513734",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 204521501,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDUyMTUwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/204521501",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-01T18:53:33Z",
      "updated_at": "2016-04-01T18:53:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Isn't this going a bit overboard for debugging tools? (OTOH, it's only about 150 LOC...)\n\nIt is a \"luxury extension\", right. But given the time some of us have spent in the console repeating and copy-pasting commands out- and input, I think it worth taking this in.\nAlso, I don't see critical risks for this.\n\nIMO we should also extend bitcoin-cli to support nested commands. It simply increases productivity with that tool.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-204521501",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 204650396,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDY1MDM5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/204650396",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-02T05:41:05Z",
      "updated_at": "2016-04-02T05:41:05Z",
      "author_association": "MEMBER",
      "body": "I like this concept. I initially had @luke-jr 's concern as well. But only a bit of code added, and it's well-contained.\n\nIt's not just luxury: it's useful for cases like #7599 where someone wants to insert the output of a previous command into a new one, but it's too long for copy pasting.\n\n> IMO we should also extend bitcoin-cli to support nested commands. It simply increases productivity with that tool.\n\nNot sure there. `bitcoin-cli` is simply an entry point and you can use whatever scripting you want in the shell that calls it.\n\nFor the GUI debug console, which is essentially it's own `bash`, this makes more sense.\n\nI'm all for a fancy ncurses-based interactive client, but that should not be `bitcoin-cli`.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-204650396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "mentioned",
      "id": 612062038,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NjEyMDYyMDM4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/612062038",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-02T05:41:05Z"
    },
    {
      "event": "subscribed",
      "id": 612062039,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDYxMjA2MjAzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/612062039",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-02T05:41:05Z"
    },
    {
      "event": "commented",
      "id": 204693463,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDY5MzQ2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/204693463",
      "actor": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-02T10:52:22Z",
      "updated_at": "2016-04-02T10:52:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "On the other hand, many advices read 'Run getsomething' and so. This will bring another \"fork\" - you have to also add that you have to run this in Debug console or via `bitcoin-cli`, because the syntax will \"fork\".\n\nConcept ACK (I'd also like to see this in `bitcoin-cli`)\n",
      "user": {
        "login": "paveljanik",
        "id": 6848764,
        "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paveljanik",
        "html_url": "https://github.com/paveljanik",
        "followers_url": "https://api.github.com/users/paveljanik/followers",
        "following_url": "https://api.github.com/users/paveljanik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paveljanik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paveljanik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
        "organizations_url": "https://api.github.com/users/paveljanik/orgs",
        "repos_url": "https://api.github.com/users/paveljanik/repos",
        "events_url": "https://api.github.com/users/paveljanik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paveljanik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-204693463",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 204694359,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDY5NDM1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/204694359",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-02T10:57:52Z",
      "updated_at": "2016-04-02T10:57:52Z",
      "author_association": "MEMBER",
      "body": "Almost tempting to make it server-side, if we're using long output-inputs... but this seems fine (Concept ACK) as-is; further improvement can wait for another PR.\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-204694359",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 223303447,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMwMzQ0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/223303447",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-02T14:10:51Z",
      "updated_at": "2016-06-02T14:10:51Z",
      "author_association": "MEMBER",
      "body": "Would it be possible to abstract out this functionality in a separate commit (including the existing RPC parsing logic from the Qt console) and move it to rpc/server.cpp, as an actual RPC call that just takes a string argument with a command to parse?\n\nThat would make it both more usable (by exposing it as RPC, bitcoin-cli and other tools can use it too), and more testable (we can have RPC tests for it), without complicating the change much.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-223303447",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 223304571,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMwNDU3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/223304571",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-02T14:14:26Z",
      "updated_at": "2016-06-02T14:14:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have though about that but I wasn't sure if we should delegate the parsing/executing of nested command to the server. This PR would do the parsing \"client side\". We could also factor out the parsing and use it client-side (Qt / bitcoin-cli).\n\nBut I agree, it could be useful server-side.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-223304571",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 223306700,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMwNjcwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/223306700",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-02T14:21:23Z",
      "updated_at": "2016-06-02T14:21:40Z",
      "author_association": "MEMBER",
      "body": "Yes, I agree having it client side is useful. My main reason for suggesting abstracting it out it because I don't think it's very hard, and would make the parsing logic much easier to test.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-223306700",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 233533678,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzUzMzY3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/233533678",
      "actor": {
        "login": "UniQredit",
        "id": 20367272,
        "node_id": "MDQ6VXNlcjIwMzY3Mjcy",
        "avatar_url": "https://avatars.githubusercontent.com/u/20367272?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UniQredit",
        "html_url": "https://github.com/UniQredit",
        "followers_url": "https://api.github.com/users/UniQredit/followers",
        "following_url": "https://api.github.com/users/UniQredit/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UniQredit/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UniQredit/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UniQredit/subscriptions",
        "organizations_url": "https://api.github.com/users/UniQredit/orgs",
        "repos_url": "https://api.github.com/users/UniQredit/repos",
        "events_url": "https://api.github.com/users/UniQredit/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UniQredit/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-07-19T05:08:31Z",
      "updated_at": "2016-07-19T05:08:31Z",
      "author_association": "NONE",
      "body": "This would save a hell lot of time and copy/pasting \n",
      "user": {
        "login": "UniQredit",
        "id": 20367272,
        "node_id": "MDQ6VXNlcjIwMzY3Mjcy",
        "avatar_url": "https://avatars.githubusercontent.com/u/20367272?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UniQredit",
        "html_url": "https://github.com/UniQredit",
        "followers_url": "https://api.github.com/users/UniQredit/followers",
        "following_url": "https://api.github.com/users/UniQredit/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UniQredit/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UniQredit/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UniQredit/subscriptions",
        "organizations_url": "https://api.github.com/users/UniQredit/orgs",
        "repos_url": "https://api.github.com/users/UniQredit/repos",
        "events_url": "https://api.github.com/users/UniQredit/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UniQredit/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-233533678",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 727692191,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzI3NjkyMTkx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/727692191",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-07-19T15:15:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 727700021,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzI3NzAwMDIx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/727700021",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-07-19T15:20:55Z"
    },
    {
      "event": "commented",
      "id": 233667907,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzY2NzkwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/233667907",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-07-19T15:22:34Z",
      "updated_at": "2016-07-19T15:22:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "- Finally rebased this great PR and refactored the parsing logic into `rpc/server.cpp`\n- Added some unit tests\n\nThis could now be simply extended to the RPC server, although, nested commands could be resource and time hungry.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-233667907",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODAyOTA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODAyOTI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "head_ref_force_pushed",
      "id": 728968865,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzI4OTY4ODY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/728968865",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-07-20T13:26:39Z"
    },
    {
      "event": "commented",
      "id": 233948349,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzk0ODM0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/233948349",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-07-20T13:27:26Z",
      "updated_at": "2016-07-20T13:27:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed nits. Had to add `client.cpp` to `libbitcoin_server_a`. Should that be a problem @theuni?\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-233948349",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "mentioned",
      "id": 728969798,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NzI4OTY5Nzk4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/728969798",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-07-20T13:27:26Z"
    },
    {
      "event": "subscribed",
      "id": 728969799,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDcyODk2OTc5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/728969799",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-07-20T13:27:26Z"
    },
    {
      "event": "commented",
      "id": 239439614,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQzOTYxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/239439614",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-12T13:00:29Z",
      "updated_at": "2016-08-12T13:07:44Z",
      "author_association": "MEMBER",
      "body": "> Would it be possible to abstract out this functionality in a separate commit (including the existing RPC parsing logic from the Qt console) and move it to rpc/server.cpp,\n\nSorry to be contrary, but IMO, functionality related to parsing and not dispatching should be in `rpc/client.cpp` instead of `rpc/server.cpp`. Note that bitcoin-cli links the client library, not the server one.\n\n(another reason that it doesn't belong server-side is that it doesn't act on univalue/JSON objects, but on command line strings. Wouldn't  want string parsing on the server side, as this makes the JSON-RPC API unclear, and introduces potential vulnerabilities and DoS possibilities etc)\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-239439614",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODAyOTY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 239441380,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQ0MTM4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/239441380",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-12T13:08:38Z",
      "updated_at": "2016-08-12T13:08:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Having it in `rpc/client.cpp` instead of `server.cpp` would be good I guess. The only restriction would then be, that we cannot allow (later) server side nested commands (which would probably perform slightly faster). But I'm not sure if we really want server side nested commands with the current locking behavior.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-239441380",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 239442267,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQ0MjI2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/239442267",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-12T13:12:41Z",
      "updated_at": "2016-08-13T09:54:30Z",
      "author_association": "MEMBER",
      "body": "Server-side nested commands are not part of the JSON-RPC standard. It is an interesting thought but that would be a completely different proposal, and I don't think it would share any code with this. I'd imagine it would work something akin to batching (but w/ nested structures), not by parsing/formatting expression strings. Seeing how little even simple batching is used, I'm also not sure there is enough demand for that kind of advanced behavior, but that aside.\n\nEdit: Looked it up a bit,  'nested remote function call' in RPC protocols is commonly implemented in the form of 'promise pipelining', a strategy to reduce round-trips. A call can return a handle, which is essentially a temporary variable, which can be passed as argument to other calls before the result is known. This allows more versatile manipulation than just nesting (e.g. a DAG instead of a tree). In any case this is something to be found in the more advanced RPC frameworks, I couldn't find anyone having bolted it into JSON-RPC. As said, an issue for another time :)\n\nEdit.2: Had a try at a proposal here: https://github.com/bitcoin/bitcoin/pull/8457#issuecomment-239611262\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-239442267",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 239518801,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTUxODgwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/239518801",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-12T18:07:30Z",
      "updated_at": "2016-08-12T18:07:30Z",
      "author_association": "MEMBER",
      "body": "Agreed with keeping parsing client-side. Let's not tangle up the dependencies.\n\nI really like this idea btw.\n",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-239518801",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 762023055,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzYyMDIzMDU1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/762023055",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-20T09:20:37Z"
    },
    {
      "event": "commented",
      "id": 241189243,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE4OTI0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241189243",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-20T09:21:55Z",
      "updated_at": "2016-08-20T09:21:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Removed all changes from the core classes.\nIt's now a GUI only change.\nAdded Qt unit tests for the nested commands.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-241189243",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 241253645,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTI1MzY0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241253645",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-21T12:02:10Z",
      "updated_at": "2016-08-21T12:02:10Z",
      "author_association": "MEMBER",
      "body": "qt-test fail on travis, apparently.\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-241253645",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 763009893,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzYzMDA5ODkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/763009893",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-22T13:30:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 763081141,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzYzMDgxMTQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/763081141",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-22T14:19:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 763105487,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzYzMTA1NDg3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/763105487",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-22T14:35:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 764043541,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzY0MDQzNTQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/764043541",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T06:57:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 764044591,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzY0MDQ0NTkx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/764044591",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T06:59:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 764105960,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzY0MTA1OTYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/764105960",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T08:03:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 764106847,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzY0MTA2ODQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/764106847",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T08:04:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 764107151,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzY0MTA3MTUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/764107151",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T08:04:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 764111970,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzY0MTExOTcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/764111970",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T08:09:42Z"
    },
    {
      "event": "commented",
      "id": 241680531,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTY4MDUzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241680531",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T09:43:39Z",
      "updated_at": "2016-08-23T09:43:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed the travis Qt-Test issue.\nThis PR is looking for reviewers.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-241680531",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODAyOTk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODAzMDI6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODAzMDU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODAzMDc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODAzMDk6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODAzMTE6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "head_ref_force_pushed",
      "id": 764469769,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzY0NDY5NzY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/764469769",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T13:32:18Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTg2MDQ0OGQzOGJhN2E0MzZjZjdjMDhmYTVjMDEzMmZlMTBmOGQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "tree": {
        "sha": "b83a993e822d79cb21dd067e4c460de4a52949b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b83a993e822d79cb21dd067e4c460de4a52949b1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b83a993e822d79cb21dd067e4c460de4a52949b1\nparent 41d8e78f94c5ad54684f1f15efb0264036418e71\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1471684775 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1471959159 +0200\n\n[Qt] RPC-Console: support nested commands and simple value queries\n\nCommands can be executed with bracket syntax, example: `getwalletinfo()`.\nCommands can be nested, example: `sendtoaddress(getnewaddress(), 10)`.\nSimple queries are possible: `listunspent()[0][txid]`\nObject values are accessed with a non-quoted string, example: [txid].\n\nFully backward compatible.\n`generate 101` is identical to `generate(101)`\nResult value queries indicated with `[]` require the new brackets syntax.\nComma as argument separator is now also possible: `sendtoaddress,<address>,<amount>`\nSpace as argument separator works also with the bracket syntax, example: `sendtoaddress(getnewaddress() 10)\n\nNo dept limitation, complex commands are possible:\n`decoderawtransaction(getrawtransaction(getblock(getbestblockhash())[tx][0]))[vout][0][value]`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXvFB4AAoJECnUvLZBb1PsGdwP/1TB/Ve9oGMbI8F1/SnLZbqs\naBNf0V4udKi2j3CZtUaMzQRVVPZKKRVs6oJ+emnO3l7O6Bt60H/cjyJeJPb+oLH5\noMsUTpn78KB1nOVQ2mznEHrHdLJc1GWZ2M7aSujSMpCX6fCfol9Nau8JObJkwklD\n5416Ibzy9qrm5YldpS2Cj23IGqTSpvV57UHglMkf/+cXZGs514fs1ZBIwLFeiE9I\nVvp6HpNTK6wIJflgth8cICVivJPiRX9LJXoUZy91I6EhUPxrS0M2uzwswero1Hw6\n7AMNvIXb4UfMQGWly1GMf2u/3nTXSKl1Jc4Q2MHDbu4SrL27ibu6Frnix5S2W/Z5\nyUtKwTK0QiRN5CEHDIk6Pd5pHS/00XTDa4s9nnxMBuj06KWJ6f2KVraN+SPvRfaT\nQYumC/NJhBftfY1pUEF+y5S1cKyWzmx/1+T8SvoGYi0tJdorxPlj+/fNkvBZxcjk\nz+QmXebzhsdu9Q452lECiAg0PLou59X+95T+TVccU5dlXQuswel+nzJYYqpYPtmG\nmU1ZHnFpuddO9moPmqzCqC/xCXrwCK0ZKU7MXPl0pNsQ09ak+1AVcKbYn7aW5xOx\nHw9rApxaM6FHOo9Dy4jSEAGWDD4u2Otky1eWUz3aZa0+w40wZbI0YWFmka0aM7AH\n4FaaU9+L6nEUsKX4dvCv\n=lVv2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41d8e78f94c5ad54684f1f15efb0264036418e71",
          "sha": "41d8e78f94c5ad54684f1f15efb0264036418e71",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/41d8e78f94c5ad54684f1f15efb0264036418e71"
        }
      ],
      "message": "[Qt] RPC-Console: support nested commands and simple value queries\n\nCommands can be executed with bracket syntax, example: `getwalletinfo()`.\nCommands can be nested, example: `sendtoaddress(getnewaddress(), 10)`.\nSimple queries are possible: `listunspent()[0][txid]`\nObject values are accessed with a non-quoted string, example: [txid].\n\nFully backward compatible.\n`generate 101` is identical to `generate(101)`\nResult value queries indicated with `[]` require the new brackets syntax.\nComma as argument separator is now also possible: `sendtoaddress,<address>,<amount>`\nSpace as argument separator works also with the bracket syntax, example: `sendtoaddress(getnewaddress() 10)\n\nNo dept limitation, complex commands are possible:\n`decoderawtransaction(getrawtransaction(getblock(getbestblockhash())[tx][0]))[vout][0][value]`",
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-08-23T13:32:39Z"
      },
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-08-20T09:19:35Z"
      },
      "sha": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 764470442,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NzY0NDcwNDQy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/764470442",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T13:32:43Z"
    },
    {
      "event": "commented",
      "id": 241731569,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTczMTU2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/241731569",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-23T13:32:59Z",
      "updated_at": "2016-08-23T13:32:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed nits, added cleanup of Qt test data.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-241731569",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 246922574,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjkyMjU3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246922574",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-14T06:54:16Z",
      "updated_at": "2016-09-14T06:54:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK\n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-246922574",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 248274853,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI3NDg1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248274853",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:27:59Z",
      "updated_at": "2016-09-20T11:27:59Z",
      "author_association": "MEMBER",
      "body": "utACK.\n\nI do think this needs documentation. Not necessarily in this pull, but currently the debug console help consists of two lines \"Use up and down arrows to navigate history, and Ctrl-L to clear screen. Type help for an overview of available commands.\". \n\nMaybe add a debug-console-only command like `help` that shows how to use nested commands and potentially other advanced tricks, and add 'for more information on using this console type XXX'.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-248274853",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 248275264,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI3NTI2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248275264",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:30:15Z",
      "updated_at": "2016-09-20T11:30:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I do think this needs documentation.  [...]\n\nGood point. I try something. Maybe not in this PR.\nCould – maybe – be combined with this https://github.com/bitcoin/bitcoin/issues/8544#issuecomment-240970925\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-248275264",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 248275655,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI3NTY1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248275655",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:32:15Z",
      "updated_at": "2016-09-20T11:32:15Z",
      "author_association": "MEMBER",
      "body": "`getwalletinfo()[\"walletversion\"]` doesn't work - can't it index into objects?\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-248275655",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "commented",
      "id": 248275908,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI3NTkwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248275908",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:33:27Z",
      "updated_at": "2016-09-20T11:33:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj: I guess you need to use `getwalletinfo()[walletversion]` (without double-quotes).\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-248275908",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "mentioned",
      "id": 795506305,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Nzk1NTA2MzA1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/795506305",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:33:27Z"
    },
    {
      "event": "subscribed",
      "id": 795506306,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDc5NTUwNjMwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/795506306",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:33:27Z"
    },
    {
      "event": "commented",
      "id": 248276046,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI3NjA0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248276046",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:34:17Z",
      "updated_at": "2016-09-20T11:34:17Z",
      "author_association": "MEMBER",
      "body": "@jonasschnelli awesome, that works. So that's why we need documentation :)\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-248276046",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "mentioned",
      "id": 795507248,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Nzk1NTA3MjQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/795507248",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:34:17Z"
    },
    {
      "event": "subscribed",
      "id": 795507249,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDc5NTUwNzI0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/795507249",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:34:17Z"
    },
    {
      "event": "commented",
      "id": 248276477,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI3NjQ3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248276477",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:36:33Z",
      "updated_at": "2016-09-20T11:36:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj: Agree on the documentation. The dropped `\"`(double quotes) for an index access is quite uncommon, but can make sense because all our JSON properties are pure ASCII without whitespace.\n\nAllowing the double-quotes (ignore them while parsing) could be a useful addition.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-248276477",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "mentioned",
      "id": 795509470,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Nzk1NTA5NDcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/795509470",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:36:33Z"
    },
    {
      "event": "subscribed",
      "id": 795509471,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDc5NTUwOTQ3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/795509471",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:36:33Z"
    },
    {
      "event": "commented",
      "id": 248279533,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI3OTUzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248279533",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T11:52:46Z",
      "updated_at": "2016-09-20T11:59:37Z",
      "author_association": "MEMBER",
      "body": "For testing this it's useful to add an `echo` command that simply returns what is passed to it, and `echon` which does the same but is marked to receive numbers/booleans/objects in `vRPCConvertParams`:\n\n``` patch\ndiff --git a/src/rpc/client.cpp b/src/rpc/client.cpp\nindex c14d9d6..4e09249 100644\n--- a/src/rpc/client.cpp\n+++ b/src/rpc/client.cpp\n@@ -109,6 +109,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"setban\", 3 },\n     { \"getmempoolancestors\", 1 },\n     { \"getmempooldescendants\", 1 },\n+    { \"echon\", 0}, { \"echon\", 1}, { \"echon\", 2}, { \"echon\", 3}, { \"echon\", 4}, { \"echon\", 5}, { \"echon\", 6}, { \"echon\", 7}, { \"echon\", 8}, { \"echon\", 9},\n };\n\n class CRPCConvertTable\ndiff --git a/src/rpc/misc.cpp b/src/rpc/misc.cpp\nindex 5afcf63..e3b4550 100644\n--- a/src/rpc/misc.cpp\n+++ b/src/rpc/misc.cpp\n@@ -417,6 +417,17 @@ UniValue signmessagewithprivkey(const UniValue& params, bool fHelp)\n     return EncodeBase64(&vchSig[0], vchSig.size());\n }\n\n+UniValue echo(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp)\n+        throw runtime_error(\n+            \"echo \\\"message\\\" ...\\n\"\n+            \"\\nSimply echo back the input arguments\\n\"\n+        );\n+\n+    return params;\n+}\n+\n UniValue setmocktime(const UniValue& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -454,6 +465,8 @@ static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n     { \"control\",            \"getinfo\",                &getinfo,                true  }, /* uses wallet if enabled */\n+    { \"control\",            \"echo\",                   &echo,                   true  },\n+    { \"control\",            \"echon\",                  &echo,                   true  },\n     { \"util\",               \"validateaddress\",        &validateaddress,        true  }, /* uses wallet if enabled */\n     { \"util\",               \"createmultisig\",         &createmultisig,         true  },\n     { \"util\",               \"verifymessage\",          &verifymessage,          true  },\n```\n\n> Allowing the double-quotes (ignore them while parsing) could be a useful addition.\n\nYes, would be useful to add, maybe in a later pull. Somehow I keep typing [] accidentally, and being surprised I get 'null'.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-248279533",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "merged",
      "id": 795550068,
      "node_id": "MDExOk1lcmdlZEV2ZW50Nzk1NTUwMDY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/795550068",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "created_at": "2016-09-20T12:15:46Z"
    },
    {
      "event": "closed",
      "id": 795550070,
      "node_id": "MDExOkNsb3NlZEV2ZW50Nzk1NTUwMDcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/795550070",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T12:15:46Z"
    },
    {
      "event": "commented",
      "id": 248284007,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODI4NDAwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/248284007",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-20T12:15:49Z",
      "updated_at": "2016-09-20T12:15:49Z",
      "author_association": "MEMBER",
      "body": "ACK 2ca6b9d\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#issuecomment-248284007",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7783"
    },
    {
      "event": "referenced",
      "id": 795550188,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDc5NTU1MDE4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/795550188",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4335d5a41bc244cc69f6ba76cfbc8d56cb06e108",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4335d5a41bc244cc69f6ba76cfbc8d56cb06e108",
      "created_at": "2016-09-20T12:15:56Z"
    },
    {
      "event": "reviewed",
      "id": 850514,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODUwNTE0",
      "url": null,
      "actor": null,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#pullrequestreview-850514",
      "submitted_at": "2016-09-20T22:06:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
    },
    {
      "event": "reviewed",
      "id": 851050,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODUxMDUw",
      "url": null,
      "actor": null,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#pullrequestreview-851050",
      "submitted_at": "2016-09-20T22:10:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
    },
    {
      "event": "reviewed",
      "id": 851633,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODUxNjMz",
      "url": null,
      "actor": null,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#pullrequestreview-851633",
      "submitted_at": "2016-09-20T22:14:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
    },
    {
      "event": "referenced",
      "id": 901148803,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDkwMTE0ODgwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/901148803",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9db5e22749b0da89d6aabeea4b58230e812dcbf0",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/9db5e22749b0da89d6aabeea4b58230e812dcbf0",
      "created_at": "2016-12-21T05:56:58Z"
    },
    {
      "event": "referenced",
      "id": 1255585710,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyNTU1ODU3MTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1255585710",
      "actor": {
        "login": "codablock",
        "id": 1884269,
        "node_id": "MDQ6VXNlcjE4ODQyNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1884269?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codablock",
        "html_url": "https://github.com/codablock",
        "followers_url": "https://api.github.com/users/codablock/followers",
        "following_url": "https://api.github.com/users/codablock/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/codablock/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/codablock/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/codablock/subscriptions",
        "organizations_url": "https://api.github.com/users/codablock/orgs",
        "repos_url": "https://api.github.com/users/codablock/repos",
        "events_url": "https://api.github.com/users/codablock/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/codablock/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "89b7509a001991f49422f15081d6cd0f0fd5710c",
      "commit_url": "https://api.github.com/repos/codablock/dash/commits/89b7509a001991f49422f15081d6cd0f0fd5710c",
      "created_at": "2017-09-19T14:38:19Z"
    },
    {
      "event": "referenced",
      "id": 1348739227,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNDg3MzkyMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1348739227",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7293d064133aeafd9f0ae0bdbb2ed74a44d91ecc",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7293d064133aeafd9f0ae0bdbb2ed74a44d91ecc",
      "created_at": "2017-11-19T12:05:30Z"
    },
    {
      "event": "referenced",
      "id": 1419799778,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MTk3OTk3Nzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1419799778",
      "actor": {
        "login": "codablock",
        "id": 1884269,
        "node_id": "MDQ6VXNlcjE4ODQyNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1884269?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codablock",
        "html_url": "https://github.com/codablock",
        "followers_url": "https://api.github.com/users/codablock/followers",
        "following_url": "https://api.github.com/users/codablock/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/codablock/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/codablock/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/codablock/subscriptions",
        "organizations_url": "https://api.github.com/users/codablock/orgs",
        "repos_url": "https://api.github.com/users/codablock/repos",
        "events_url": "https://api.github.com/users/codablock/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/codablock/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "387201712a3ad77a6146b5068b7ad24e7b1cd139",
      "commit_url": "https://api.github.com/repos/codablock/dash/commits/387201712a3ad77a6146b5068b7ad24e7b1cd139",
      "created_at": "2018-01-11T13:47:39Z"
    },
    {
      "event": "referenced",
      "id": 2056235092,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIwNTYyMzUwOTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2056235092",
      "actor": {
        "login": "andvgal",
        "id": 6080632,
        "node_id": "MDQ6VXNlcjYwODA2MzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6080632?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andvgal",
        "html_url": "https://github.com/andvgal",
        "followers_url": "https://api.github.com/users/andvgal/followers",
        "following_url": "https://api.github.com/users/andvgal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andvgal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andvgal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andvgal/subscriptions",
        "organizations_url": "https://api.github.com/users/andvgal/orgs",
        "repos_url": "https://api.github.com/users/andvgal/repos",
        "events_url": "https://api.github.com/users/andvgal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andvgal/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bf6bf4e902dab55233b8d10ad89c01ebc139a949",
      "commit_url": "https://api.github.com/repos/energicryptocurrency/gen2-energi/commits/bf6bf4e902dab55233b8d10ad89c01ebc139a949",
      "created_at": "2019-01-06T10:40:09Z"
    },
    {
      "event": "referenced",
      "id": 2442393887,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI0NDIzOTM4ODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2442393887",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3077f11dadffbc8f2575449fc0177c91a9c3e046",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3077f11dadffbc8f2575449fc0177c91a9c3e046",
      "created_at": "2019-06-26T22:33:57Z"
    },
    {
      "event": "referenced",
      "id": 2958583031,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NTg1ODMwMzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2958583031",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7ffbf8143d97b624c27989d3fbcaff31583c96f7",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/7ffbf8143d97b624c27989d3fbcaff31583c96f7",
      "created_at": "2020-01-17T15:40:43Z"
    },
    {
      "event": "referenced",
      "id": 2970426324,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NzA0MjYzMjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2970426324",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "29ec248a03ccd691ea6ad898382838d267155a92",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/29ec248a03ccd691ea6ad898382838d267155a92",
      "created_at": "2020-01-22T15:12:42Z"
    },
    {
      "event": "referenced",
      "id": 2970478912,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NzA0Nzg5MTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2970478912",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9733330f7809c7277812e2fa74af33ed87f9fdab",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/9733330f7809c7277812e2fa74af33ed87f9fdab",
      "created_at": "2020-01-22T15:25:28Z"
    },
    {
      "event": "referenced",
      "id": 2990776033,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5OTA3NzYwMzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2990776033",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "97adc728da7a296ef405ea5e77a59ac3c44176d7",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/97adc728da7a296ef405ea5e77a59ac3c44176d7",
      "created_at": "2020-01-29T19:23:22Z"
    },
    {
      "event": "referenced",
      "id": 2991317556,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5OTEzMTc1NTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2991317556",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "89771185998cd448e9f8810330446953025d5243",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/89771185998cd448e9f8810330446953025d5243",
      "created_at": "2020-01-29T22:23:34Z"
    },
    {
      "event": "referenced",
      "id": 2991335231,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5OTEzMzUyMzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2991335231",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c7b8b2b35c05c5b42aca62fb2539bfc040edc07b",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/c7b8b2b35c05c5b42aca62fb2539bfc040edc07b",
      "created_at": "2020-01-29T22:29:53Z"
    },
    {
      "event": "referenced",
      "id": 4517981791,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1MTc5ODE3OTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4517981791",
      "actor": {
        "login": "ckti",
        "id": 7046769,
        "node_id": "MDQ6VXNlcjcwNDY3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7046769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ckti",
        "html_url": "https://github.com/ckti",
        "followers_url": "https://api.github.com/users/ckti/followers",
        "following_url": "https://api.github.com/users/ckti/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ckti/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ckti/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ckti/subscriptions",
        "organizations_url": "https://api.github.com/users/ckti/orgs",
        "repos_url": "https://api.github.com/users/ckti/repos",
        "events_url": "https://api.github.com/users/ckti/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ckti/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "953ed598064cd160478d833303d0f1770d324442",
      "commit_url": "https://api.github.com/repos/ckti-ioncore-current/ion/commits/953ed598064cd160478d833303d0f1770d324442",
      "created_at": "2021-03-28T10:03:05Z"
    },
    {
      "event": "referenced",
      "id": 4563169018,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1NjMxNjkwMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4563169018",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cb4e9396e5b9171130fc4f4da88614ae4ab49694",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/cb4e9396e5b9171130fc4f4da88614ae4ab49694",
      "created_at": "2021-04-07T15:15:03Z"
    },
    {
      "event": "referenced",
      "id": 5558608506,
      "node_id": "REFE_lADOABII584Ip6_2zwAAAAFLUaJ6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5558608506",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2ae4f24a5c921442a5655126974e72a0392ccfe5",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/2ae4f24a5c921442a5655126974e72a0392ccfe5",
      "created_at": "2021-11-02T22:41:40Z"
    },
    {
      "event": "referenced",
      "id": 5558780256,
      "node_id": "REFE_lADOABII584Ip6_2zwAAAAFLVEFg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5558780256",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "de99f19b98ac868d9cb10381fdb64c0afcd09e52",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/de99f19b98ac868d9cb10381fdb64c0afcd09e52",
      "created_at": "2021-11-02T23:41:30Z"
    },
    {
      "event": "referenced",
      "id": 5569307238,
      "node_id": "REFE_lADOABII584Ip6_2zwAAAAFL9OJm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5569307238",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "067f0a4605dfd3e651758c8dcb7f105da22c798e",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/067f0a4605dfd3e651758c8dcb7f105da22c798e",
      "created_at": "2021-11-04T15:58:59Z"
    },
    {
      "event": "referenced",
      "id": 5576107735,
      "node_id": "REFE_lADOABII584Ip6_2zwAAAAFMXKbX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5576107735",
      "actor": {
        "login": "malbit",
        "id": 35476352,
        "node_id": "MDQ6VXNlcjM1NDc2MzUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/35476352?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/malbit",
        "html_url": "https://github.com/malbit",
        "followers_url": "https://api.github.com/users/malbit/followers",
        "following_url": "https://api.github.com/users/malbit/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/malbit/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/malbit/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/malbit/subscriptions",
        "organizations_url": "https://api.github.com/users/malbit/orgs",
        "repos_url": "https://api.github.com/users/malbit/repos",
        "events_url": "https://api.github.com/users/malbit/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/malbit/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b1d0da31489702666992c17d3dc0c5db40f0a404",
      "commit_url": "https://api.github.com/repos/malbit/raptoreum/commits/b1d0da31489702666992c17d3dc0c5db40f0a404",
      "created_at": "2021-11-05T18:34:04Z"
    },
    {
      "event": "referenced",
      "id": 5625843055,
      "node_id": "REFE_lADOABII584Ip6_2zwAAAAFPU41v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5625843055",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3bc1982862c9ffe4b6055495651689d967beadff",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/3bc1982862c9ffe4b6055495651689d967beadff",
      "created_at": "2021-11-16T15:30:01Z"
    },
    {
      "event": "referenced",
      "id": 5641316421,
      "node_id": "REFE_lADOABII584Ip6_2zwAAAAFQP6hF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5641316421",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "716f124b00e56c79ff1d94ca0d1a7108803bad99",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/716f124b00e56c79ff1d94ca0d1a7108803bad99",
      "created_at": "2021-11-18T20:31:08Z"
    },
    {
      "event": "referenced",
      "id": 5976964074,
      "node_id": "REFE_lADOABII584Ip6_2zwAAAAFkQTvq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5976964074",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "46c7363d9b01707b53229fc19bbdd82f4bd0ddf1",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/46c7363d9b01707b53229fc19bbdd82f4bd0ddf1",
      "created_at": "2022-01-30T20:11:54Z"
    },
    {
      "event": "locked",
      "id": 6074047363,
      "node_id": "LOE_lADOABII584Ip6_2zwAAAAFqCpuD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6074047363",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T11:09:08Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/71362237",
      "pull_request_review_id": null,
      "id": 71362237,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxMzYyMjM3",
      "diff_hunk": "@@ -332,4 +332,49 @@ BOOST_AUTO_TEST_CASE(rpc_convert_values_generatetoaddress)\n     BOOST_CHECK_EQUAL(result[2].get_int(), 9);\n }\n \n+BOOST_AUTO_TEST_CASE(rpc_nested_command_line)\n+{\n+    UniValue jsonRPCError;\n+\n+    SetRPCWarmupFinished();\n+    \n+    std::string result;\n+    std::string result2;\n+    RPCExecuteCommandLine(result, \"getblockchaininfo()[chain]\"); //simple result filtering with path\n+    BOOST_CHECK_EQUAL(result, \"main\");\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblock(getbestblockhash())\")); //simple 2 level nesting\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblock(getblock(getbestblockhash())[hash], true)\"));\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblock( getblock( getblock(getbestblockhash())[hash] )[hash], true)\")); //4 level nesting with whitespace, filtering path and boolean parameter\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblockchaininfo\"));\n+    BOOST_CHECK_EQUAL(result.substr(0,1), \"{\");\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblockchaininfo()\"));\n+    BOOST_CHECK_EQUAL(result.substr(0,1), \"{\");\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblockchaininfo\")); //whitespace at the end will be tolerated",
      "path": "src/test/rpc_tests.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "b5ba8fb2ed3e8d7e656608113f2a191694ead88d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is no whitespace at the end?\n",
      "created_at": "2016-07-19T15:29:35Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r71362237",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/71362237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/71362470",
      "pull_request_review_id": null,
      "id": 71362470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxMzYyNDcw",
      "diff_hunk": "@@ -332,4 +332,49 @@ BOOST_AUTO_TEST_CASE(rpc_convert_values_generatetoaddress)\n     BOOST_CHECK_EQUAL(result[2].get_int(), 9);\n }\n \n+BOOST_AUTO_TEST_CASE(rpc_nested_command_line)\n+{\n+    UniValue jsonRPCError;\n+\n+    SetRPCWarmupFinished();\n+    \n+    std::string result;\n+    std::string result2;\n+    RPCExecuteCommandLine(result, \"getblockchaininfo()[chain]\"); //simple result filtering with path\n+    BOOST_CHECK_EQUAL(result, \"main\");\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblock(getbestblockhash())\")); //simple 2 level nesting\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblock(getblock(getbestblockhash())[hash], true)\"));\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblock( getblock( getblock(getbestblockhash())[hash] )[hash], true)\")); //4 level nesting with whitespace, filtering path and boolean parameter\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblockchaininfo\"));\n+    BOOST_CHECK_EQUAL(result.substr(0,1), \"{\");\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblockchaininfo()\"));\n+    BOOST_CHECK_EQUAL(result.substr(0,1), \"{\");\n+\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblockchaininfo\")); //whitespace at the end will be tolerated\n+    BOOST_CHECK_EQUAL(result.substr(0,1), \"{\");\n+\n+    BOOST_CHECK_THROW(RPCExecuteCommandLine(result, \"getblockchaininfo() .\\n\"), runtime_error); //invalid syntax\n+    BOOST_CHECK_THROW(RPCExecuteCommandLine(result, \"getblockchaininfo() getblockchaininfo()\"), runtime_error); //invalid syntax\n+    BOOST_CHECK_NO_THROW(RPCExecuteCommandLine(result, \"getblockchaininfo(\")); //tollerate non closing brackets if we have no arguments",
      "path": "src/test/rpc_tests.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "b5ba8fb2ed3e8d7e656608113f2a191694ead88d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`:%s/toller/toler/g`\n",
      "created_at": "2016-07-19T15:30:53Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r71362470",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/71362470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/74586915",
      "pull_request_review_id": null,
      "id": 74586915,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NTg2OTE1",
      "diff_hunk": "@@ -181,6 +181,7 @@ libbitcoin_server_a_SOURCES = \\\n   pow.cpp \\\n   rest.cpp \\\n   rpc/blockchain.cpp \\\n+  rpc/client.cpp \\",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 4,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "05a958e32db2fe417304c1736cf9f6aaea07440d",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "client.cpp is part of `libbitcoin_cli`, which is \"cli: shared between bitcoin-cli and bitcoin-qt\" if you need access to that then link that library. Don't include the compilation unit in two libraries.\n",
      "created_at": "2016-08-12T13:06:34Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r74586915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/74586915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75838482",
      "pull_request_review_id": null,
      "id": 75838482,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1ODM4NDgy",
      "diff_hunk": "@@ -113,117 +113,211 @@ class QtRPCTimerInterface: public RPCTimerInterface\n #include \"rpcconsole.moc\"\n \n /**\n- * Split shell command line into a list of arguments. Aims to emulate \\c bash and friends.\n+ * Split shell command line into a list of arguments and execute the command(s).\n+ * Aims to emulate \\c bash and friends.\n  *\n- * - Arguments are delimited with whitespace\n+ * - Command nesting is possible with brackets [example: validateaddress(getnewaddress())]\n+ * - Arguments are delimited with whitespace or comma\n  * - Extra whitespace at the beginning and end and between arguments will be ignored\n  * - Text can be \"double\" or 'single' quoted\n  * - The backslash \\c \\ is used as escape character\n  *   - Outside quotes, any character can be escaped\n  *   - Within double quotes, only escape \\c \" and backslashes before a \\c \" or another backslash\n  *   - Within single quotes, no escaping is possible and no special interpretation takes place\n  *\n- * @param[out]   args        Parsed arguments will be appended to this list\n+ * @param[out]   result      stringified Result from the executed command(chain)\n  * @param[in]    strCommand  Command line to split\n  */\n-bool parseCommandLine(std::vector<std::string> &args, const std::string &strCommand)\n+\n+bool RPCConsole::RPCExecuteCommandLine(std::string &strResult, const std::string &strCommand)\n {\n+    std::vector< std::vector<std::string> > stack;\n+    stack.push_back(std::vector<std::string>());\n+\n     enum CmdParseState\n     {\n         STATE_EATING_SPACES,\n         STATE_ARGUMENT,\n         STATE_SINGLEQUOTED,\n         STATE_DOUBLEQUOTED,\n         STATE_ESCAPE_OUTER,\n-        STATE_ESCAPE_DOUBLEQUOTED\n+        STATE_ESCAPE_DOUBLEQUOTED,\n+        STATE_COMMAND_EXECUTED,\n+        STATE_COMMAND_EXECUTED_INNER\n     } state = STATE_EATING_SPACES;\n     std::string curarg;\n-    Q_FOREACH(char ch, strCommand)\n+    UniValue lastResult;\n+\n+    std::string strCommandTerminated = strCommand;\n+    if (strCommandTerminated.back() != '\\n')\n+        strCommandTerminated += \"\\n\";\n+    for(char ch: strCommandTerminated)\n     {\n         switch(state)\n         {\n-        case STATE_ARGUMENT: // In or after argument\n-        case STATE_EATING_SPACES: // Handle runs of whitespace\n-            switch(ch)\n+            case STATE_COMMAND_EXECUTED_INNER:\n+            case STATE_COMMAND_EXECUTED:\n             {\n-            case '\"': state = STATE_DOUBLEQUOTED; break;\n-            case '\\'': state = STATE_SINGLEQUOTED; break;\n-            case '\\\\': state = STATE_ESCAPE_OUTER; break;\n-            case ' ': case '\\n': case '\\t':\n-                if(state == STATE_ARGUMENT) // Space ends argument\n+                bool breakParsing = true;\n+                switch(ch)\n                 {\n-                    args.push_back(curarg);\n-                    curarg.clear();\n+                    case '[': curarg.clear(); state = STATE_COMMAND_EXECUTED_INNER; break;\n+                    default:\n+                        if (state == STATE_COMMAND_EXECUTED_INNER)\n+                        {\n+                            if (ch == ']')\n+                            {\n+                                if (curarg.size())\n+                                {\n+                                    // if we have a value query, query arrays with index and objects with a string key\n+                                    UniValue subelement;\n+                                    if (curarg.size() && lastResult.isArray())",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "e492505329bcb2e15add191accca0f16f25de046",
      "in_reply_to_id": null,
      "user": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`curarg.size()` should already be ok since it's checked in line 170\n",
      "created_at": "2016-08-23T10:19:07Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r75838482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75838482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75838520",
      "pull_request_review_id": null,
      "id": 75838520,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1ODM4NTIw",
      "diff_hunk": "@@ -113,117 +113,211 @@ class QtRPCTimerInterface: public RPCTimerInterface\n #include \"rpcconsole.moc\"\n \n /**\n- * Split shell command line into a list of arguments. Aims to emulate \\c bash and friends.\n+ * Split shell command line into a list of arguments and execute the command(s).\n+ * Aims to emulate \\c bash and friends.\n  *\n- * - Arguments are delimited with whitespace\n+ * - Command nesting is possible with brackets [example: validateaddress(getnewaddress())]\n+ * - Arguments are delimited with whitespace or comma\n  * - Extra whitespace at the beginning and end and between arguments will be ignored\n  * - Text can be \"double\" or 'single' quoted\n  * - The backslash \\c \\ is used as escape character\n  *   - Outside quotes, any character can be escaped\n  *   - Within double quotes, only escape \\c \" and backslashes before a \\c \" or another backslash\n  *   - Within single quotes, no escaping is possible and no special interpretation takes place\n  *\n- * @param[out]   args        Parsed arguments will be appended to this list\n+ * @param[out]   result      stringified Result from the executed command(chain)\n  * @param[in]    strCommand  Command line to split\n  */\n-bool parseCommandLine(std::vector<std::string> &args, const std::string &strCommand)\n+\n+bool RPCConsole::RPCExecuteCommandLine(std::string &strResult, const std::string &strCommand)\n {\n+    std::vector< std::vector<std::string> > stack;\n+    stack.push_back(std::vector<std::string>());\n+\n     enum CmdParseState\n     {\n         STATE_EATING_SPACES,\n         STATE_ARGUMENT,\n         STATE_SINGLEQUOTED,\n         STATE_DOUBLEQUOTED,\n         STATE_ESCAPE_OUTER,\n-        STATE_ESCAPE_DOUBLEQUOTED\n+        STATE_ESCAPE_DOUBLEQUOTED,\n+        STATE_COMMAND_EXECUTED,\n+        STATE_COMMAND_EXECUTED_INNER\n     } state = STATE_EATING_SPACES;\n     std::string curarg;\n-    Q_FOREACH(char ch, strCommand)\n+    UniValue lastResult;\n+\n+    std::string strCommandTerminated = strCommand;\n+    if (strCommandTerminated.back() != '\\n')\n+        strCommandTerminated += \"\\n\";\n+    for(char ch: strCommandTerminated)\n     {\n         switch(state)\n         {\n-        case STATE_ARGUMENT: // In or after argument\n-        case STATE_EATING_SPACES: // Handle runs of whitespace\n-            switch(ch)\n+            case STATE_COMMAND_EXECUTED_INNER:\n+            case STATE_COMMAND_EXECUTED:\n             {\n-            case '\"': state = STATE_DOUBLEQUOTED; break;\n-            case '\\'': state = STATE_SINGLEQUOTED; break;\n-            case '\\\\': state = STATE_ESCAPE_OUTER; break;\n-            case ' ': case '\\n': case '\\t':\n-                if(state == STATE_ARGUMENT) // Space ends argument\n+                bool breakParsing = true;\n+                switch(ch)\n                 {\n-                    args.push_back(curarg);\n-                    curarg.clear();\n+                    case '[': curarg.clear(); state = STATE_COMMAND_EXECUTED_INNER; break;\n+                    default:\n+                        if (state == STATE_COMMAND_EXECUTED_INNER)\n+                        {\n+                            if (ch == ']')\n+                            {\n+                                if (curarg.size())\n+                                {\n+                                    // if we have a value query, query arrays with index and objects with a string key\n+                                    UniValue subelement;\n+                                    if (curarg.size() && lastResult.isArray())\n+                                    {\n+                                        for(char argch: curarg)\n+                                            if (!std::isdigit(argch))\n+                                                throw std::runtime_error(\"Invalid result query\");\n+                                        subelement = lastResult[atoi(curarg.c_str())];\n+                                    }\n+                                    else if (curarg.size() && lastResult.isObject())",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "e492505329bcb2e15add191accca0f16f25de046",
      "in_reply_to_id": null,
      "user": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same here for `curarg.size()`\n",
      "created_at": "2016-08-23T10:19:21Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r75838520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75838520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75839276",
      "pull_request_review_id": null,
      "id": 75839276,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1ODM5Mjc2",
      "diff_hunk": "@@ -113,117 +113,211 @@ class QtRPCTimerInterface: public RPCTimerInterface\n #include \"rpcconsole.moc\"\n \n /**\n- * Split shell command line into a list of arguments. Aims to emulate \\c bash and friends.\n+ * Split shell command line into a list of arguments and execute the command(s).\n+ * Aims to emulate \\c bash and friends.\n  *\n- * - Arguments are delimited with whitespace\n+ * - Command nesting is possible with brackets [example: validateaddress(getnewaddress())]\n+ * - Arguments are delimited with whitespace or comma\n  * - Extra whitespace at the beginning and end and between arguments will be ignored\n  * - Text can be \"double\" or 'single' quoted\n  * - The backslash \\c \\ is used as escape character\n  *   - Outside quotes, any character can be escaped\n  *   - Within double quotes, only escape \\c \" and backslashes before a \\c \" or another backslash\n  *   - Within single quotes, no escaping is possible and no special interpretation takes place\n  *\n- * @param[out]   args        Parsed arguments will be appended to this list\n+ * @param[out]   result      stringified Result from the executed command(chain)\n  * @param[in]    strCommand  Command line to split\n  */\n-bool parseCommandLine(std::vector<std::string> &args, const std::string &strCommand)\n+\n+bool RPCConsole::RPCExecuteCommandLine(std::string &strResult, const std::string &strCommand)\n {\n+    std::vector< std::vector<std::string> > stack;\n+    stack.push_back(std::vector<std::string>());\n+\n     enum CmdParseState\n     {\n         STATE_EATING_SPACES,\n         STATE_ARGUMENT,\n         STATE_SINGLEQUOTED,\n         STATE_DOUBLEQUOTED,\n         STATE_ESCAPE_OUTER,\n-        STATE_ESCAPE_DOUBLEQUOTED\n+        STATE_ESCAPE_DOUBLEQUOTED,\n+        STATE_COMMAND_EXECUTED,\n+        STATE_COMMAND_EXECUTED_INNER\n     } state = STATE_EATING_SPACES;\n     std::string curarg;\n-    Q_FOREACH(char ch, strCommand)\n+    UniValue lastResult;\n+\n+    std::string strCommandTerminated = strCommand;\n+    if (strCommandTerminated.back() != '\\n')\n+        strCommandTerminated += \"\\n\";\n+    for(char ch: strCommandTerminated)\n     {\n         switch(state)\n         {\n-        case STATE_ARGUMENT: // In or after argument\n-        case STATE_EATING_SPACES: // Handle runs of whitespace\n-            switch(ch)\n+            case STATE_COMMAND_EXECUTED_INNER:\n+            case STATE_COMMAND_EXECUTED:\n             {\n-            case '\"': state = STATE_DOUBLEQUOTED; break;\n-            case '\\'': state = STATE_SINGLEQUOTED; break;\n-            case '\\\\': state = STATE_ESCAPE_OUTER; break;\n-            case ' ': case '\\n': case '\\t':\n-                if(state == STATE_ARGUMENT) // Space ends argument\n+                bool breakParsing = true;\n+                switch(ch)\n                 {\n-                    args.push_back(curarg);\n-                    curarg.clear();\n+                    case '[': curarg.clear(); state = STATE_COMMAND_EXECUTED_INNER; break;\n+                    default:\n+                        if (state == STATE_COMMAND_EXECUTED_INNER)\n+                        {\n+                            if (ch == ']')",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "e492505329bcb2e15add191accca0f16f25de046",
      "in_reply_to_id": null,
      "user": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: since both branches for that `if` end with `break`, nesting level here can be reduced by smth like:\n\n```\n                            if (ch != ']')\n                            {\n                                // append char to the current argument (which is also used for the query command)\n                                curarg += ch;\n                                break;\n                            }\n```\n\nand then all the code in the scope below but up one level of nesting.\n",
      "created_at": "2016-08-23T10:24:32Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r75839276",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75839276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75839479",
      "pull_request_review_id": null,
      "id": 75839479,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1ODM5NDc5",
      "diff_hunk": "@@ -113,117 +113,211 @@ class QtRPCTimerInterface: public RPCTimerInterface\n #include \"rpcconsole.moc\"\n \n /**\n- * Split shell command line into a list of arguments. Aims to emulate \\c bash and friends.\n+ * Split shell command line into a list of arguments and execute the command(s).\n+ * Aims to emulate \\c bash and friends.\n  *\n- * - Arguments are delimited with whitespace\n+ * - Command nesting is possible with brackets [example: validateaddress(getnewaddress())]\n+ * - Arguments are delimited with whitespace or comma\n  * - Extra whitespace at the beginning and end and between arguments will be ignored\n  * - Text can be \"double\" or 'single' quoted\n  * - The backslash \\c \\ is used as escape character\n  *   - Outside quotes, any character can be escaped\n  *   - Within double quotes, only escape \\c \" and backslashes before a \\c \" or another backslash\n  *   - Within single quotes, no escaping is possible and no special interpretation takes place\n  *\n- * @param[out]   args        Parsed arguments will be appended to this list\n+ * @param[out]   result      stringified Result from the executed command(chain)\n  * @param[in]    strCommand  Command line to split\n  */\n-bool parseCommandLine(std::vector<std::string> &args, const std::string &strCommand)\n+\n+bool RPCConsole::RPCExecuteCommandLine(std::string &strResult, const std::string &strCommand)\n {\n+    std::vector< std::vector<std::string> > stack;\n+    stack.push_back(std::vector<std::string>());\n+\n     enum CmdParseState\n     {\n         STATE_EATING_SPACES,\n         STATE_ARGUMENT,\n         STATE_SINGLEQUOTED,\n         STATE_DOUBLEQUOTED,\n         STATE_ESCAPE_OUTER,\n-        STATE_ESCAPE_DOUBLEQUOTED\n+        STATE_ESCAPE_DOUBLEQUOTED,\n+        STATE_COMMAND_EXECUTED,\n+        STATE_COMMAND_EXECUTED_INNER\n     } state = STATE_EATING_SPACES;\n     std::string curarg;\n-    Q_FOREACH(char ch, strCommand)\n+    UniValue lastResult;\n+\n+    std::string strCommandTerminated = strCommand;\n+    if (strCommandTerminated.back() != '\\n')\n+        strCommandTerminated += \"\\n\";\n+    for(char ch: strCommandTerminated)\n     {\n         switch(state)\n         {\n-        case STATE_ARGUMENT: // In or after argument\n-        case STATE_EATING_SPACES: // Handle runs of whitespace\n-            switch(ch)\n+            case STATE_COMMAND_EXECUTED_INNER:\n+            case STATE_COMMAND_EXECUTED:\n             {\n-            case '\"': state = STATE_DOUBLEQUOTED; break;\n-            case '\\'': state = STATE_SINGLEQUOTED; break;\n-            case '\\\\': state = STATE_ESCAPE_OUTER; break;\n-            case ' ': case '\\n': case '\\t':\n-                if(state == STATE_ARGUMENT) // Space ends argument\n+                bool breakParsing = true;\n+                switch(ch)\n                 {\n-                    args.push_back(curarg);\n-                    curarg.clear();\n+                    case '[': curarg.clear(); state = STATE_COMMAND_EXECUTED_INNER; break;\n+                    default:\n+                        if (state == STATE_COMMAND_EXECUTED_INNER)\n+                        {\n+                            if (ch == ']')\n+                            {\n+                                if (curarg.size())\n+                                {\n+                                    // if we have a value query, query arrays with index and objects with a string key\n+                                    UniValue subelement;\n+                                    if (curarg.size() && lastResult.isArray())\n+                                    {\n+                                        for(char argch: curarg)\n+                                            if (!std::isdigit(argch))\n+                                                throw std::runtime_error(\"Invalid result query\");\n+                                        subelement = lastResult[atoi(curarg.c_str())];\n+                                    }\n+                                    else if (curarg.size() && lastResult.isObject())\n+                                        subelement = find_value(lastResult, curarg);\n+                                    else\n+                                        throw std::runtime_error(\"Invalid result query\"); //no array or object: abort\n+                                    lastResult = subelement;\n+                                }\n+\n+                                state = STATE_COMMAND_EXECUTED;\n+                                break;\n+                            }\n+                            else\n+                            {\n+                                // append char to the current argument (which is also used for the query command)\n+                                curarg += ch;\n+                                break;\n+                            }\n+                        }\n+                        // don't break parsing when the char is required for the next argument\n+                        breakParsing = false;\n+\n+                        // pop the stack and return the result to the current command arguments\n+                        stack.pop_back();\n+\n+                        // don't stringify the json in case of a string to avoid doublequotes\n+                        if (lastResult.isStr())\n+                            curarg = lastResult.get_str();\n+                        else\n+                            curarg = lastResult.write(2);\n+\n+                        // if we have a non empty result, use it as stack argument otherwise as general result\n+                        if (curarg.size())\n+                        {\n+                            if (stack.size())\n+                                stack.back().push_back(curarg);\n+                            else\n+                                strResult = curarg;\n+                        }\n+                        curarg.clear();\n+                        // assume easting space state",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "e492505329bcb2e15add191accca0f16f25de046",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: typo\n",
      "created_at": "2016-08-23T10:25:52Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r75839479",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75839479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75839676",
      "pull_request_review_id": null,
      "id": 75839676,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1ODM5Njc2",
      "diff_hunk": "@@ -113,117 +113,211 @@ class QtRPCTimerInterface: public RPCTimerInterface\n #include \"rpcconsole.moc\"\n \n /**\n- * Split shell command line into a list of arguments. Aims to emulate \\c bash and friends.\n+ * Split shell command line into a list of arguments and execute the command(s).\n+ * Aims to emulate \\c bash and friends.\n  *\n- * - Arguments are delimited with whitespace\n+ * - Command nesting is possible with brackets [example: validateaddress(getnewaddress())]\n+ * - Arguments are delimited with whitespace or comma\n  * - Extra whitespace at the beginning and end and between arguments will be ignored\n  * - Text can be \"double\" or 'single' quoted\n  * - The backslash \\c \\ is used as escape character\n  *   - Outside quotes, any character can be escaped\n  *   - Within double quotes, only escape \\c \" and backslashes before a \\c \" or another backslash\n  *   - Within single quotes, no escaping is possible and no special interpretation takes place\n  *\n- * @param[out]   args        Parsed arguments will be appended to this list\n+ * @param[out]   result      stringified Result from the executed command(chain)\n  * @param[in]    strCommand  Command line to split\n  */\n-bool parseCommandLine(std::vector<std::string> &args, const std::string &strCommand)\n+\n+bool RPCConsole::RPCExecuteCommandLine(std::string &strResult, const std::string &strCommand)\n {\n+    std::vector< std::vector<std::string> > stack;\n+    stack.push_back(std::vector<std::string>());\n+\n     enum CmdParseState\n     {\n         STATE_EATING_SPACES,\n         STATE_ARGUMENT,\n         STATE_SINGLEQUOTED,\n         STATE_DOUBLEQUOTED,\n         STATE_ESCAPE_OUTER,\n-        STATE_ESCAPE_DOUBLEQUOTED\n+        STATE_ESCAPE_DOUBLEQUOTED,\n+        STATE_COMMAND_EXECUTED,\n+        STATE_COMMAND_EXECUTED_INNER\n     } state = STATE_EATING_SPACES;\n     std::string curarg;\n-    Q_FOREACH(char ch, strCommand)\n+    UniValue lastResult;\n+\n+    std::string strCommandTerminated = strCommand;\n+    if (strCommandTerminated.back() != '\\n')\n+        strCommandTerminated += \"\\n\";\n+    for(char ch: strCommandTerminated)\n     {\n         switch(state)\n         {\n-        case STATE_ARGUMENT: // In or after argument\n-        case STATE_EATING_SPACES: // Handle runs of whitespace\n-            switch(ch)\n+            case STATE_COMMAND_EXECUTED_INNER:\n+            case STATE_COMMAND_EXECUTED:\n             {\n-            case '\"': state = STATE_DOUBLEQUOTED; break;\n-            case '\\'': state = STATE_SINGLEQUOTED; break;\n-            case '\\\\': state = STATE_ESCAPE_OUTER; break;\n-            case ' ': case '\\n': case '\\t':\n-                if(state == STATE_ARGUMENT) // Space ends argument\n+                bool breakParsing = true;\n+                switch(ch)\n                 {\n-                    args.push_back(curarg);\n-                    curarg.clear();\n+                    case '[': curarg.clear(); state = STATE_COMMAND_EXECUTED_INNER; break;\n+                    default:\n+                        if (state == STATE_COMMAND_EXECUTED_INNER)\n+                        {\n+                            if (ch == ']')\n+                            {\n+                                if (curarg.size())\n+                                {\n+                                    // if we have a value query, query arrays with index and objects with a string key\n+                                    UniValue subelement;\n+                                    if (curarg.size() && lastResult.isArray())\n+                                    {\n+                                        for(char argch: curarg)\n+                                            if (!std::isdigit(argch))\n+                                                throw std::runtime_error(\"Invalid result query\");\n+                                        subelement = lastResult[atoi(curarg.c_str())];\n+                                    }\n+                                    else if (curarg.size() && lastResult.isObject())\n+                                        subelement = find_value(lastResult, curarg);\n+                                    else\n+                                        throw std::runtime_error(\"Invalid result query\"); //no array or object: abort\n+                                    lastResult = subelement;\n+                                }\n+\n+                                state = STATE_COMMAND_EXECUTED;\n+                                break;\n+                            }\n+                            else\n+                            {\n+                                // append char to the current argument (which is also used for the query command)\n+                                curarg += ch;\n+                                break;\n+                            }\n+                        }\n+                        // don't break parsing when the char is required for the next argument\n+                        breakParsing = false;\n+\n+                        // pop the stack and return the result to the current command arguments\n+                        stack.pop_back();\n+\n+                        // don't stringify the json in case of a string to avoid doublequotes\n+                        if (lastResult.isStr())\n+                            curarg = lastResult.get_str();\n+                        else\n+                            curarg = lastResult.write(2);\n+\n+                        // if we have a non empty result, use it as stack argument otherwise as general result\n+                        if (curarg.size())\n+                        {\n+                            if (stack.size())\n+                                stack.back().push_back(curarg);\n+                            else\n+                                strResult = curarg;\n+                        }\n+                        curarg.clear();\n+                        // assume easting space state\n+                        state = STATE_EATING_SPACES;\n                 }\n-                state = STATE_EATING_SPACES;\n-                break;\n-            default: curarg += ch; state = STATE_ARGUMENT;\n+                if (breakParsing)\n+                    break;\n             }\n-            break;\n-        case STATE_SINGLEQUOTED: // Single-quoted string\n-            switch(ch)\n+            case STATE_ARGUMENT: // In or after argument\n+            case STATE_EATING_SPACES: // Handle runs of whitespace\n+                switch(ch)\n             {\n-            case '\\'': state = STATE_ARGUMENT; break;\n-            default: curarg += ch;\n+                case '\"': state = STATE_DOUBLEQUOTED; break;\n+                case '\\'': state = STATE_SINGLEQUOTED; break;\n+                case '\\\\': state = STATE_ESCAPE_OUTER; break;\n+                case '(': case ')': case '\\n':\n+                    if (state == STATE_ARGUMENT)\n+                    {\n+                        if (ch == '(' && stack.size() && stack.back().size() > 0)\n+                            stack.push_back(std::vector<std::string>());\n+                        if (curarg.size())\n+                        {\n+                            // don't allow commands after executed commands on baselevel\n+                            if (!stack.size())\n+                                throw std::runtime_error(\"Invalid Syntax\");\n+                            stack.back().push_back(curarg);\n+                        }\n+                        curarg.clear();\n+                        state = STATE_EATING_SPACES;\n+                    }\n+                    if ((ch == ')' || ch == '\\n') && stack.size() > 0)\n+                    {\n+                        std::string strPrint;\n+                        // Convert argument list to JSON objects in method-dependent way,\n+                        // and pass it along with the method name to the dispatcher.\n+                        lastResult = tableRPC.execute(stack.back()[0], RPCConvertValues(stack.back()[0], std::vector<std::string>(stack.back().begin() + 1, stack.back().end())));\n+\n+                        state = STATE_COMMAND_EXECUTED;\n+                        curarg.clear();\n+                    }\n+                    break;\n+                case ' ': case ',': case '\\t':\n+                    if(state == STATE_ARGUMENT) // Space ends argument\n+                    {\n+                        if (curarg.size())\n+                            stack.back().push_back(curarg);\n+                        curarg.clear();\n+                    }\n+                    state = STATE_EATING_SPACES;\n+                    break;\n+                default: curarg += ch; state = STATE_ARGUMENT;\n             }\n-            break;\n-        case STATE_DOUBLEQUOTED: // Double-quoted string\n-            switch(ch)\n+                break;\n+            case STATE_SINGLEQUOTED: // Single-quoted string\n+                switch(ch)\n             {\n-            case '\"': state = STATE_ARGUMENT; break;\n-            case '\\\\': state = STATE_ESCAPE_DOUBLEQUOTED; break;\n-            default: curarg += ch;\n+                case '\\'': state = STATE_ARGUMENT; break;\n+                default: curarg += ch;\n             }\n-            break;\n-        case STATE_ESCAPE_OUTER: // '\\' outside quotes\n-            curarg += ch; state = STATE_ARGUMENT;\n-            break;\n-        case STATE_ESCAPE_DOUBLEQUOTED: // '\\' in double-quoted text\n-            if(ch != '\"' && ch != '\\\\') curarg += '\\\\'; // keep '\\' for everything but the quote and '\\' itself\n-            curarg += ch; state = STATE_DOUBLEQUOTED;\n-            break;\n+                break;\n+            case STATE_DOUBLEQUOTED: // Double-quoted string\n+                switch(ch)\n+            {\n+                case '\"': state = STATE_ARGUMENT; break;\n+                case '\\\\': state = STATE_ESCAPE_DOUBLEQUOTED; break;\n+                default: curarg += ch;\n+            }\n+                break;\n+            case STATE_ESCAPE_OUTER: // '\\' outside quotes\n+                curarg += ch; state = STATE_ARGUMENT;\n+                break;\n+            case STATE_ESCAPE_DOUBLEQUOTED: // '\\' in double-quoted text\n+                if(ch != '\"' && ch != '\\\\') curarg += '\\\\'; // keep '\\' for everything but the quote and '\\' itself\n+                curarg += ch; state = STATE_DOUBLEQUOTED;\n+                break;\n         }\n     }\n     switch(state) // final state\n     {\n-    case STATE_EATING_SPACES:\n-        return true;\n-    case STATE_ARGUMENT:\n-        args.push_back(curarg);\n-        return true;\n-    default: // ERROR to end in one of the other states\n-        return false;\n+        case STATE_COMMAND_EXECUTED:\n+            if (lastResult.isStr())\n+                strResult = lastResult.get_str();\n+            else\n+                strResult = lastResult.write(2);\n+        case STATE_ARGUMENT:\n+        case STATE_EATING_SPACES:\n+            return true;\n+        default: // ERROR to end in one of the other states\n+            return false;\n     }\n }\n \n void RPCExecutor::request(const QString &command)\n {\n-    std::vector<std::string> args;\n-    if(!parseCommandLine(args, command.toStdString()))\n-    {\n-        Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n-        return;\n-    }\n-    if(args.empty())\n-        return; // Nothing to do\n     try\n     {\n-        std::string strPrint;\n-        // Convert argument list to JSON objects in method-dependent way,\n-        // and pass it along with the method name to the dispatcher.\n-        UniValue result = tableRPC.execute(\n-            args[0],\n-            RPCConvertValues(args[0], std::vector<std::string>(args.begin() + 1, args.end())));\n-\n-        // Format result reply\n-        if (result.isNull())\n-            strPrint = \"\";\n-        else if (result.isStr())\n-            strPrint = result.get_str();\n-        else\n-            strPrint = result.write(2);\n-\n-        Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(strPrint));\n+        std::string result;\n+        std::string executableCommand = command.toStdString() + \"\\n\";",
      "path": "src/qt/rpcconsole.cpp",
      "position": 268,
      "original_position": 271,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "e492505329bcb2e15add191accca0f16f25de046",
      "in_reply_to_id": null,
      "user": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: maybe change names to `strResult` and `strExecutableCommand`? Same for strings in rpcnestedtests.cpp\n",
      "created_at": "2016-08-23T10:27:25Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r75839676",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75839676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75840282",
      "pull_request_review_id": null,
      "id": 75840282,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1ODQwMjgy",
      "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"rpcnestedtests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"consensus/validation.h\"\n+#include \"main.h\"\n+#include \"rpc/register.h\"\n+#include \"rpc/server.h\"\n+#include \"rpcconsole.h\"\n+#include \"test/testutil.h\"\n+#include \"univalue.h\"\n+#include \"util.h\"\n+\n+#include <QDir>\n+\n+#include <boost/filesystem.hpp>\n+\n+void RPCNestedTests::rpcNestedTests()\n+{\n+    UniValue jsonRPCError;\n+\n+    // do some test setup\n+    // could be moved to a more generic place when we add more tests on QT level\n+    const CChainParams& chainparams = Params();\n+    RegisterAllCoreRPCCommands(tableRPC);\n+    ClearDatadirCache();\n+    std::string path = QDir::tempPath().toStdString() + \"/\" + strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(GetRand(100000)));",
      "path": "src/qt/test/rpcnestedtests.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "e492505329bcb2e15add191accca0f16f25de046",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason for this name?\n",
      "created_at": "2016-08-23T10:31:41Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r75840282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75840282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75840310",
      "pull_request_review_id": null,
      "id": 75840310,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1ODQwMzEw",
      "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"rpcnestedtests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"consensus/validation.h\"\n+#include \"main.h\"\n+#include \"rpc/register.h\"\n+#include \"rpc/server.h\"\n+#include \"rpcconsole.h\"\n+#include \"test/testutil.h\"\n+#include \"univalue.h\"\n+#include \"util.h\"\n+\n+#include <QDir>\n+\n+#include <boost/filesystem.hpp>\n+\n+void RPCNestedTests::rpcNestedTests()\n+{\n+    UniValue jsonRPCError;\n+\n+    // do some test setup\n+    // could be moved to a more generic place when we add more tests on QT level\n+    const CChainParams& chainparams = Params();\n+    RegisterAllCoreRPCCommands(tableRPC);\n+    ClearDatadirCache();\n+    std::string path = QDir::tempPath().toStdString() + \"/\" + strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(GetRand(100000)));",
      "path": "src/qt/test/rpcnestedtests.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "e492505329bcb2e15add191accca0f16f25de046",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also I feel like this folder should be cleaned up on exit?\n",
      "created_at": "2016-08-23T10:31:56Z",
      "updated_at": "2016-08-23T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r75840310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/75840310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79723451",
      "pull_request_review_id": 850514,
      "id": 79723451,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5NzIzNDUx",
      "diff_hunk": "@@ -113,117 +113,208 @@ class QtRPCTimerInterface: public RPCTimerInterface\n #include \"rpcconsole.moc\"\n \n /**\n- * Split shell command line into a list of arguments. Aims to emulate \\c bash and friends.\n+ * Split shell command line into a list of arguments and execute the command(s).\n+ * Aims to emulate \\c bash and friends.\n  *\n- * - Arguments are delimited with whitespace\n+ * - Command nesting is possible with brackets [example: validateaddress(getnewaddress())]\n+ * - Arguments are delimited with whitespace or comma\n  * - Extra whitespace at the beginning and end and between arguments will be ignored\n  * - Text can be \"double\" or 'single' quoted\n  * - The backslash \\c \\ is used as escape character\n  *   - Outside quotes, any character can be escaped\n  *   - Within double quotes, only escape \\c \" and backslashes before a \\c \" or another backslash\n  *   - Within single quotes, no escaping is possible and no special interpretation takes place\n  *\n- * @param[out]   args        Parsed arguments will be appended to this list\n+ * @param[out]   result      stringified Result from the executed command(chain)",
      "path": "src/qt/rpcconsole.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `strResult`\n",
      "created_at": "2016-09-20T22:06:19Z",
      "updated_at": "2016-09-20T22:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r79723451",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79723451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79724061",
      "pull_request_review_id": 851050,
      "id": 79724061,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5NzI0MDYx",
      "diff_hunk": "@@ -113,117 +113,208 @@ class QtRPCTimerInterface: public RPCTimerInterface\n #include \"rpcconsole.moc\"\n \n /**\n- * Split shell command line into a list of arguments. Aims to emulate \\c bash and friends.\n+ * Split shell command line into a list of arguments and execute the command(s).\n+ * Aims to emulate \\c bash and friends.\n  *\n- * - Arguments are delimited with whitespace\n+ * - Command nesting is possible with brackets [example: validateaddress(getnewaddress())]\n+ * - Arguments are delimited with whitespace or comma\n  * - Extra whitespace at the beginning and end and between arguments will be ignored\n  * - Text can be \"double\" or 'single' quoted\n  * - The backslash \\c \\ is used as escape character\n  *   - Outside quotes, any character can be escaped\n  *   - Within double quotes, only escape \\c \" and backslashes before a \\c \" or another backslash\n  *   - Within single quotes, no escaping is possible and no special interpretation takes place\n  *\n- * @param[out]   args        Parsed arguments will be appended to this list\n+ * @param[out]   result      stringified Result from the executed command(chain)\n  * @param[in]    strCommand  Command line to split\n  */\n-bool parseCommandLine(std::vector<std::string> &args, const std::string &strCommand)\n+\n+bool RPCConsole::RPCExecuteCommandLine(std::string &strResult, const std::string &strCommand)\n {\n+    std::vector< std::vector<std::string> > stack;\n+    stack.push_back(std::vector<std::string>());\n+\n     enum CmdParseState\n     {\n         STATE_EATING_SPACES,\n         STATE_ARGUMENT,\n         STATE_SINGLEQUOTED,\n         STATE_DOUBLEQUOTED,\n         STATE_ESCAPE_OUTER,\n-        STATE_ESCAPE_DOUBLEQUOTED\n+        STATE_ESCAPE_DOUBLEQUOTED,\n+        STATE_COMMAND_EXECUTED,\n+        STATE_COMMAND_EXECUTED_INNER\n     } state = STATE_EATING_SPACES;\n     std::string curarg;\n-    Q_FOREACH(char ch, strCommand)\n+    UniValue lastResult;\n+\n+    std::string strCommandTerminated = strCommand;\n+    if (strCommandTerminated.back() != '\\n')\n+        strCommandTerminated += \"\\n\";\n+    for(char ch: strCommandTerminated)\n     {\n         switch(state)\n         {\n-        case STATE_ARGUMENT: // In or after argument\n-        case STATE_EATING_SPACES: // Handle runs of whitespace\n-            switch(ch)\n+            case STATE_COMMAND_EXECUTED_INNER:\n+            case STATE_COMMAND_EXECUTED:\n             {\n-            case '\"': state = STATE_DOUBLEQUOTED; break;\n-            case '\\'': state = STATE_SINGLEQUOTED; break;\n-            case '\\\\': state = STATE_ESCAPE_OUTER; break;\n-            case ' ': case '\\n': case '\\t':\n-                if(state == STATE_ARGUMENT) // Space ends argument\n+                bool breakParsing = true;\n+                switch(ch)\n                 {\n-                    args.push_back(curarg);\n-                    curarg.clear();\n+                    case '[': curarg.clear(); state = STATE_COMMAND_EXECUTED_INNER; break;\n+                    default:\n+                        if (state == STATE_COMMAND_EXECUTED_INNER)\n+                        {\n+                            if (ch != ']')\n+                            {\n+                                // append char to the current argument (which is also used for the query command)\n+                                curarg += ch;\n+                                break;\n+                            }\n+                            if (curarg.size())\n+                            {\n+                                // if we have a value query, query arrays with index and objects with a string key\n+                                UniValue subelement;\n+                                if (lastResult.isArray())\n+                                {\n+                                    for(char argch: curarg)\n+                                        if (!std::isdigit(argch))\n+                                            throw std::runtime_error(\"Invalid result query\");\n+                                    subelement = lastResult[atoi(curarg.c_str())];\n+                                }\n+                                else if (lastResult.isObject())\n+                                    subelement = find_value(lastResult, curarg);\n+                                else\n+                                    throw std::runtime_error(\"Invalid result query\"); //no array or object: abort\n+                                lastResult = subelement;\n+                            }\n+\n+                            state = STATE_COMMAND_EXECUTED;\n+                            break;\n+                        }\n+                        // don't break parsing when the char is required for the next argument\n+                        breakParsing = false;\n+\n+                        // pop the stack and return the result to the current command arguments\n+                        stack.pop_back();\n+\n+                        // don't stringify the json in case of a string to avoid doublequotes\n+                        if (lastResult.isStr())\n+                            curarg = lastResult.get_str();\n+                        else\n+                            curarg = lastResult.write(2);\n+\n+                        // if we have a non empty result, use it as stack argument otherwise as general result\n+                        if (curarg.size())\n+                        {\n+                            if (stack.size())\n+                                stack.back().push_back(curarg);\n+                            else\n+                                strResult = curarg;\n+                        }\n+                        curarg.clear();\n+                        // assume eating space state\n+                        state = STATE_EATING_SPACES;\n                 }\n-                state = STATE_EATING_SPACES;\n-                break;\n-            default: curarg += ch; state = STATE_ARGUMENT;\n+                if (breakParsing)\n+                    break;\n             }\n-            break;\n-        case STATE_SINGLEQUOTED: // Single-quoted string\n-            switch(ch)\n+            case STATE_ARGUMENT: // In or after argument\n+            case STATE_EATING_SPACES: // Handle runs of whitespace\n+                switch(ch)\n             {\n-            case '\\'': state = STATE_ARGUMENT; break;\n-            default: curarg += ch;\n+                case '\"': state = STATE_DOUBLEQUOTED; break;\n+                case '\\'': state = STATE_SINGLEQUOTED; break;\n+                case '\\\\': state = STATE_ESCAPE_OUTER; break;\n+                case '(': case ')': case '\\n':\n+                    if (state == STATE_ARGUMENT)\n+                    {\n+                        if (ch == '(' && stack.size() && stack.back().size() > 0)\n+                            stack.push_back(std::vector<std::string>());\n+                        if (curarg.size())\n+                        {\n+                            // don't allow commands after executed commands on baselevel\n+                            if (!stack.size())\n+                                throw std::runtime_error(\"Invalid Syntax\");\n+                            stack.back().push_back(curarg);\n+                        }\n+                        curarg.clear();\n+                        state = STATE_EATING_SPACES;\n+                    }\n+                    if ((ch == ')' || ch == '\\n') && stack.size() > 0)\n+                    {\n+                        std::string strPrint;\n+                        // Convert argument list to JSON objects in method-dependent way,\n+                        // and pass it along with the method name to the dispatcher.\n+                        lastResult = tableRPC.execute(stack.back()[0], RPCConvertValues(stack.back()[0], std::vector<std::string>(stack.back().begin() + 1, stack.back().end())));\n+\n+                        state = STATE_COMMAND_EXECUTED;\n+                        curarg.clear();\n+                    }\n+                    break;\n+                case ' ': case ',': case '\\t':\n+                    if(state == STATE_ARGUMENT) // Space ends argument\n+                    {\n+                        if (curarg.size())\n+                            stack.back().push_back(curarg);\n+                        curarg.clear();\n+                    }\n+                    state = STATE_EATING_SPACES;\n+                    break;\n+                default: curarg += ch; state = STATE_ARGUMENT;\n             }\n-            break;\n-        case STATE_DOUBLEQUOTED: // Double-quoted string\n-            switch(ch)\n+                break;\n+            case STATE_SINGLEQUOTED: // Single-quoted string\n+                switch(ch)\n             {\n-            case '\"': state = STATE_ARGUMENT; break;\n-            case '\\\\': state = STATE_ESCAPE_DOUBLEQUOTED; break;\n-            default: curarg += ch;\n+                case '\\'': state = STATE_ARGUMENT; break;\n+                default: curarg += ch;\n             }\n-            break;\n-        case STATE_ESCAPE_OUTER: // '\\' outside quotes\n-            curarg += ch; state = STATE_ARGUMENT;\n-            break;\n-        case STATE_ESCAPE_DOUBLEQUOTED: // '\\' in double-quoted text\n-            if(ch != '\"' && ch != '\\\\') curarg += '\\\\'; // keep '\\' for everything but the quote and '\\' itself\n-            curarg += ch; state = STATE_DOUBLEQUOTED;\n-            break;\n+                break;\n+            case STATE_DOUBLEQUOTED: // Double-quoted string\n+                switch(ch)\n+            {\n+                case '\"': state = STATE_ARGUMENT; break;\n+                case '\\\\': state = STATE_ESCAPE_DOUBLEQUOTED; break;\n+                default: curarg += ch;\n+            }\n+                break;\n+            case STATE_ESCAPE_OUTER: // '\\' outside quotes\n+                curarg += ch; state = STATE_ARGUMENT;\n+                break;\n+            case STATE_ESCAPE_DOUBLEQUOTED: // '\\' in double-quoted text\n+                if(ch != '\"' && ch != '\\\\') curarg += '\\\\'; // keep '\\' for everything but the quote and '\\' itself\n+                curarg += ch; state = STATE_DOUBLEQUOTED;\n+                break;\n         }\n     }\n     switch(state) // final state\n     {\n-    case STATE_EATING_SPACES:\n-        return true;\n-    case STATE_ARGUMENT:\n-        args.push_back(curarg);\n-        return true;\n-    default: // ERROR to end in one of the other states\n-        return false;\n+        case STATE_COMMAND_EXECUTED:\n+            if (lastResult.isStr())\n+                strResult = lastResult.get_str();\n+            else\n+                strResult = lastResult.write(2);\n+        case STATE_ARGUMENT:\n+        case STATE_EATING_SPACES:\n+            return true;\n+        default: // ERROR to end in one of the other states\n+            return false;\n     }\n }\n \n void RPCExecutor::request(const QString &command)\n {\n-    std::vector<std::string> args;\n-    if(!parseCommandLine(args, command.toStdString()))\n-    {\n-        Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n-        return;\n-    }\n-    if(args.empty())\n-        return; // Nothing to do\n     try\n     {\n-        std::string strPrint;\n-        // Convert argument list to JSON objects in method-dependent way,\n-        // and pass it along with the method name to the dispatcher.\n-        UniValue result = tableRPC.execute(\n-            args[0],\n-            RPCConvertValues(args[0], std::vector<std::string>(args.begin() + 1, args.end())));\n-\n-        // Format result reply\n-        if (result.isNull())\n-            strPrint = \"\";\n-        else if (result.isStr())\n-            strPrint = result.get_str();\n-        else\n-            strPrint = result.write(2);\n-\n-        Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(strPrint));\n+        std::string result;\n+        std::string executableCommand = command.toStdString() + \"\\n\";\n+        if(!RPCConsole::RPCExecuteCommandLine(result, executableCommand))\n+        {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));",
      "path": "src/qt/rpcconsole.cpp",
      "position": 271,
      "original_position": 271,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `[` can also be unbalanced\n",
      "created_at": "2016-09-20T22:10:17Z",
      "updated_at": "2016-09-20T22:10:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r79724061",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79724061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 314,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79724719",
      "pull_request_review_id": 851633,
      "id": 79724719,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5NzI0NzE5",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"rpcnestedtests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"consensus/validation.h\"\n+#include \"main.h\"\n+#include \"rpc/register.h\"\n+#include \"rpc/server.h\"\n+#include \"rpcconsole.h\"\n+#include \"test/testutil.h\"\n+#include \"univalue.h\"\n+#include \"util.h\"\n+\n+#include <QDir>\n+\n+#include <boost/filesystem.hpp>\n+\n+void RPCNestedTests::rpcNestedTests()\n+{\n+    UniValue jsonRPCError;\n+\n+    // do some test setup\n+    // could be moved to a more generic place when we add more tests on QT level\n+    const CChainParams& chainparams = Params();\n+    RegisterAllCoreRPCCommands(tableRPC);\n+    ClearDatadirCache();\n+    std::string path = QDir::tempPath().toStdString() + \"/\" + strprintf(\"test_bitcoin_qt_%lu_%i\", (unsigned long)GetTime(), (int)(GetRand(100000)));\n+    QDir dir(QString::fromStdString(path));\n+    dir.mkpath(\".\");\n+    mapArgs[\"-datadir\"] = path;\n+    //mempool.setSanityCheck(1.0);\n+    pblocktree = new CBlockTreeDB(1 << 20, true);\n+    pcoinsdbview = new CCoinsViewDB(1 << 23, true);\n+    pcoinsTip = new CCoinsViewCache(pcoinsdbview);\n+    InitBlockIndex(chainparams);\n+    {\n+        CValidationState state;\n+        bool ok = ActivateBestChain(state, chainparams);\n+        QVERIFY(ok);\n+    }\n+\n+    SetRPCWarmupFinished();\n+\n+    std::string result;\n+    std::string result2;\n+    RPCConsole::RPCExecuteCommandLine(result, \"getblockchaininfo()[chain]\"); //simple result filtering with path\n+    QVERIFY(result==\"main\");\n+\n+    RPCConsole::RPCExecuteCommandLine(result, \"getblock(getbestblockhash())\"); //simple 2 level nesting\n+    RPCConsole::RPCExecuteCommandLine(result, \"getblock(getblock(getbestblockhash())[hash], true)\");\n+\n+    RPCConsole::RPCExecuteCommandLine(result, \"getblock( getblock( getblock(getbestblockhash())[hash] )[hash], true)\"); //4 level nesting with whitespace, filtering path and boolean parameter\n+\n+    RPCConsole::RPCExecuteCommandLine(result, \"getblockchaininfo\");\n+    QVERIFY(result.substr(0,1) == \"{\");\n+\n+    RPCConsole::RPCExecuteCommandLine(result, \"getblockchaininfo()\");\n+    QVERIFY(result.substr(0,1) == \"{\");\n+\n+    RPCConsole::RPCExecuteCommandLine(result, \"getblockchaininfo \"); //whitespace at the end will be tolerated\n+    QVERIFY(result.substr(0,1) == \"{\");\n+\n+#if QT_VERSION >= 0x050300\n+    // do the QVERIFY_EXCEPTION_THROWN checks only with Qt5.3 and higher (QVERIFY_EXCEPTION_THROWN was introduced in Qt5.3)\n+    QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(result, \"getblockchaininfo() .\\n\"), std::runtime_error); //invalid syntax\n+    QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(result, \"getblockchaininfo() getblockchaininfo()\"), std::runtime_error); //invalid syntax\n+    (RPCConsole::RPCExecuteCommandLine(result, \"getblockchaininfo(\")); //tolerate non closing brackets if we have no arguments\n+    (RPCConsole::RPCExecuteCommandLine(result, \"getblockchaininfo()()()\")); //tolerate non command brackts",
      "path": "src/qt/test/rpcnestedtests.cpp",
      "position": 71,
      "original_position": 71,
      "commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "original_commit_id": "15860448d38ba7a436cf7c08fa5c0132fe10f8d3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nits: Can be moved out of the guard, typo brackts, no wrapping brackets needed.\n",
      "created_at": "2016-09-20T22:14:20Z",
      "updated_at": "2016-09-20T22:14:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7783#discussion_r79724719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/79724719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7783"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}