{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
    "id": 1059092158,
    "node_id": "PR_kwDOABII584_IHa-",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26114",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26114.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26114.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/be8fddff72ac540e9a476eb90cb4d3c599b7b196",
    "number": 26114,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "net: Make AddrFetch connections to fixed seeds",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This proposes two things:\r\n\r\n1. Make AddrFetch connections to fixed seeds instead of just adding them to AddrMan (suggested in https://github.com/bitcoin/bitcoin/pull/25678#issuecomment-1210858925)\r\nWhen adding fixed seeds, we currently add them to AddrMan and then make regular full outbound connections to them. If many new nodes use the fixed seeds for this, it will result in them getting a lot of peers requiring IBD, which will create a lot of traffic for them. With an AddrFetch connection, we will only use them to get addresses from other peers and disconnect afterwards.\r\nThis PR proposes to attempt making AddrFetch connections to 10 peers for better diversity (some may be offline anyway). The fixed seeds will still be added to Addrman as before, but only after a delay of 2 minutes, after which they will hopefully no longer be the only entries in AddrMan.\r\n\r\n2. Move the logic of adding fixed seeds out of `ThreadOpenConnections` into `ThreadDNSAddressSeed` (which is being renamed to `ThreadAddressSeed`).\r\nI think this makes sense in general because adding the fixed seeds is in many ways analogous to querying the DNS seeds, and ThreadOpenConnections, which is there to actually open the connections is already quite complex.\r\nAlso, it makes the changes from 1) easier if we don't have to worry about interfering with the automatic connection making logic.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2022-09-16T21:01:39Z",
    "updated_at": "2023-05-25T03:06:13Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "eb9cfb2a3e27555daa94c3c74819c32dd3c54509",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "mzumsande:202209_addrfetch_fixedseeds",
      "ref": "202209_addrfetch_fixedseeds",
      "sha": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 187673073,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODc2NzMwNzM=",
        "name": "bitcoin",
        "full_name": "mzumsande/bitcoin",
        "owner": {
          "login": "mzumsande",
          "id": 48763452,
          "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
          "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mzumsande",
          "html_url": "https://github.com/mzumsande",
          "followers_url": "https://api.github.com/users/mzumsande/followers",
          "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
          "organizations_url": "https://api.github.com/users/mzumsande/orgs",
          "repos_url": "https://api.github.com/users/mzumsande/repos",
          "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/mzumsande/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/mzumsande/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/mzumsande/bitcoin",
        "archive_url": "https://api.github.com/repos/mzumsande/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/mzumsande/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/mzumsande/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/mzumsande/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/mzumsande/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/mzumsande/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/mzumsande/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/mzumsande/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/mzumsande/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/mzumsande/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/mzumsande/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/mzumsande/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/mzumsande/bitcoin/events",
        "forks_url": "https://api.github.com/repos/mzumsande/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/mzumsande/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/mzumsande/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/mzumsande/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/mzumsande/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/mzumsande/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/mzumsande/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/mzumsande/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/mzumsande/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/mzumsande/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/mzumsande/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/mzumsande/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/mzumsande/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/mzumsande/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/mzumsande/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/mzumsande/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:mzumsande/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/mzumsande/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/mzumsande/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/mzumsande/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/mzumsande/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/mzumsande/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/mzumsande/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/mzumsande/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/mzumsande/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/mzumsande/bitcoin/hooks",
        "svn_url": "https://github.com/mzumsande/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 216760,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T17:01:53Z",
        "created_at": "2019-05-20T16:03:10Z",
        "updated_at": "2023-05-05T12:10:24Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "4c40837a454996c9f704ebf060efd6b249f2e362",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 104,
    "deletions": 62,
    "changed_files": 6,
    "commits": 5,
    "review_comments": 15,
    "comments": 13
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 7406174241,
      "node_id": "HRFPE_lADOABII585SCz_LzwAAAAG5cUAh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7406174241",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-16T21:16:20Z"
    },
    {
      "event": "labeled",
      "id": 7406757112,
      "node_id": "LE_lADOABII585SCz_LzwAAAAG5eiT4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7406757112",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-16T23:05:06Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "ready_for_review",
      "id": 7415757492,
      "node_id": "RFRE_lADOABII585SCz_LzwAAAAG6A3q0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7415757492",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-19T17:48:23Z"
    },
    {
      "event": "reviewed",
      "id": 1113243242,
      "node_id": "PRR_kwDOABII585CWr5q",
      "url": null,
      "actor": null,
      "commit_id": "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#pullrequestreview-1113243242",
      "submitted_at": "2022-09-20T07:00:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
    },
    {
      "event": "reviewed",
      "id": 1113246051,
      "node_id": "PRR_kwDOABII585CWslj",
      "url": null,
      "actor": null,
      "commit_id": "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#pullrequestreview-1113246051",
      "submitted_at": "2022-09-20T07:02:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
    },
    {
      "event": "commented",
      "id": 1251927533,
      "node_id": "IC_kwDOABII585KnuXt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1251927533",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T07:03:59Z",
      "updated_at": "2022-09-20T07:03:59Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\nThe motivation makes perfect sense and it's indeed an improvement.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1251927533",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "commented",
      "id": 1252111532,
      "node_id": "IC_kwDOABII585KobSs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1252111532",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T09:50:40Z",
      "updated_at": "2022-09-20T09:50:40Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, will review",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1252111532",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7423698585,
      "node_id": "HRFPE_lADOABII585SCz_LzwAAAAG6fKaZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7423698585",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T15:59:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7423718615,
      "node_id": "HRFPE_lADOABII585SCz_LzwAAAAG6fPTX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7423718615",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T16:02:12Z"
    },
    {
      "event": "reviewed",
      "id": 1115074705,
      "node_id": "PRR_kwDOABII585CdrCR",
      "url": null,
      "actor": null,
      "commit_id": "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#pullrequestreview-1115074705",
      "submitted_at": "2022-09-21T09:18:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
    },
    {
      "event": "reviewed",
      "id": 1115075669,
      "node_id": "PRR_kwDOABII585CdrRV",
      "url": null,
      "actor": null,
      "commit_id": "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#pullrequestreview-1115075669",
      "submitted_at": "2022-09-21T09:18:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7433861029,
      "node_id": "HRFPE_lADOABII585SCz_LzwAAAAG7F7el",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7433861029",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-21T19:50:27Z"
    },
    {
      "event": "commented",
      "id": 1254157937,
      "node_id": "IC_kwDOABII585KwO5x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1254157937",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-21T19:52:32Z",
      "updated_at": "2022-09-21T19:52:32Z",
      "author_association": "MEMBER",
      "body": "[9b09fc7 ](https://github.com/bitcoin/bitcoin/commit/9b09fc79cdc02378dac0e73bb22bbee8b06ec354)to e438878:\r\nAddressed review feedback, small doc change.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1254157937",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "commented",
      "id": 1255072246,
      "node_id": "IC_kwDOABII585KzuH2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255072246",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-22T14:03:32Z",
      "updated_at": "2022-09-22T14:03:32Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1255072246",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "commented",
      "id": 1255764588,
      "node_id": "IC_kwDOABII585K2XJs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255764588",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-23T03:29:57Z",
      "updated_at": "2023-05-25T03:06:13Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1252111532), [brunoerg](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1255072246), [Rspigler](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1256825836) |\n| Stale ACK | [naumenkogs](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1265134894) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27581](https://github.com/bitcoin/bitcoin/pull/27581) (net: Continuous ASMap health check by fjahr)\n* [#27577](https://github.com/bitcoin/bitcoin/pull/27577) (p2p: give seednodes time before falling back to fixed seeds by mzumsande)\n* [#27213](https://github.com/bitcoin/bitcoin/pull/27213) (p2p: Diversify automatic outbound connections with respect to networks by amitiuttarwar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1255764588",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "commented",
      "id": 1255918210,
      "node_id": "IC_kwDOABII585K28qC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255918210",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-23T08:13:03Z",
      "updated_at": "2022-09-23T08:13:03Z",
      "author_association": "MEMBER",
      "body": "utACK e4388787870ac2b42903cde47152e4735eb1be86",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1255918210",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "reviewed",
      "id": 1118112669,
      "node_id": "PRR_kwDOABII585CpQud",
      "url": null,
      "actor": null,
      "commit_id": "e4388787870ac2b42903cde47152e4735eb1be86",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "WIP review",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#pullrequestreview-1118112669",
      "submitted_at": "2022-09-23T09:14:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
    },
    {
      "event": "commented",
      "id": 1256825836,
      "node_id": "IC_kwDOABII585K6aPs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1256825836",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T01:18:22Z",
      "updated_at": "2022-09-24T01:18:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1256825836",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7459495304,
      "node_id": "HRFPE_lADOABII585SCz_LzwAAAAG8nt2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7459495304",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-26T14:29:58Z"
    },
    {
      "event": "commented",
      "id": 1258137351,
      "node_id": "IC_kwDOABII585K_acH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1258137351",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-26T14:35:35Z",
      "updated_at": "2022-09-26T14:35:35Z",
      "author_association": "MEMBER",
      "body": "[e438878 ](https://github.com/bitcoin/bitcoin/commit/e4388787870ac2b42903cde47152e4735eb1be86)to [7e95f8f](https://github.com/bitcoin/bitcoin/commit/7e95f8f6bb0e06b0676db3da05b2a55a011c9668):\r\n\r\nAddressed review feedback by @jonatack (thanks!).\r\n\r\nOne additional refactor I thought about but wasn't sure if it is worth it, is moving most of the logic currently inside `ThreadAddressSeed` into their own functions (`ProcessDNSSeeds()` and `ProcessFixedSeeds()`).",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1258137351",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "mentioned",
      "id": 7459551387,
      "node_id": "MEE_lADOABII585SCz_LzwAAAAG8n7ib",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7459551387",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-26T14:35:35Z"
    },
    {
      "event": "subscribed",
      "id": 7459551400,
      "node_id": "SE_lADOABII585SCz_LzwAAAAG8n7io",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7459551400",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-26T14:35:35Z"
    },
    {
      "event": "commented",
      "id": 1265134894,
      "node_id": "IC_kwDOABII585LaG0u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265134894",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T08:55:44Z",
      "updated_at": "2022-10-03T08:55:44Z",
      "author_association": "MEMBER",
      "body": "utACK 7e95f8f6bb0e06b0676db3da05b2a55a011c9668",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1265134894",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "reviewed",
      "id": 1130684572,
      "node_id": "PRR_kwDOABII585DZOCc",
      "url": null,
      "actor": null,
      "commit_id": "7e95f8f6bb0e06b0676db3da05b2a55a011c9668",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Reviewed for pr club.",
      "user": {
        "login": "amovfx",
        "id": 45839100,
        "node_id": "MDQ6VXNlcjQ1ODM5MTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/45839100?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amovfx",
        "html_url": "https://github.com/amovfx",
        "followers_url": "https://api.github.com/users/amovfx/followers",
        "following_url": "https://api.github.com/users/amovfx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amovfx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amovfx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amovfx/subscriptions",
        "organizations_url": "https://api.github.com/users/amovfx/orgs",
        "repos_url": "https://api.github.com/users/amovfx/repos",
        "events_url": "https://api.github.com/users/amovfx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amovfx/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#pullrequestreview-1130684572",
      "submitted_at": "2022-10-04T22:32:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
    },
    {
      "event": "commented",
      "id": 1268694465,
      "node_id": "IC_kwDOABII585Lnr3B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1268694465",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T17:00:39Z",
      "updated_at": "2022-10-05T17:00:39Z",
      "author_association": "MEMBER",
      "body": "> One additional refactor I thought about but wasn't sure if it is worth it, is moving most of the logic currently inside ThreadAddressSeed into their own functions (ProcessDNSSeeds() and ProcessFixedSeeds()).\r\n\r\nI would very much appreciate that. As I started reviewing this PR, the first thing I did (before reading this comment actually) was see if I could refactor this function into something a bit more easily digestible just as  a PoC. Below the diff for a very rough suggestion which probably suffers from incompleteness, poor naming, etc. Compiles fine but I do get some warnings re `warning: calling function 'AddAddrFetch' requires negative capability '!m_addr_fetches_mutex' [-Wthread-safety-analysis]` that I haven't resolved in this PoC.\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 925334db1..f4d475315 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1388,6 +1388,132 @@ void CConnman::WakeMessageHandler()\r\n     condMsgProc.notify_one();\r\n }\r\n \r\n+void CConnman::WaitForDNSSeeding(int already_found)\r\n+{\r\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\r\n+    LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\r\n+    std::chrono::seconds to_wait = seeds_wait_time;\r\n+    while (to_wait.count() > 0) {\r\n+        // if sleeping for the MANY_PEERS interval, wake up\r\n+        // early to see if we have enough peers and can stop\r\n+        // this thread entirely freeing up its resources\r\n+        std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\r\n+        if (!interruptNet.sleep_for(w)) return;\r\n+        to_wait -= w;\r\n+\r\n+        int nRelevant = 0;\r\n+        {\r\n+            LOCK(m_nodes_mutex);\r\n+            for (const CNode* pnode : m_nodes) {\r\n+                if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\r\n+            }\r\n+        }\r\n+        if (nRelevant >= 2) {\r\n+            if (already_found > 0) {\r\n+                LogPrintf(\"%d addresses found from DNS seeds\\n\", already_found);\r\n+                LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\r\n+            } else {\r\n+                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\r\n+            }\r\n+            return;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+bool CConnman::AddFixedSeeds()\r\n+{\r\n+    std::vector<CAddress> seed_addrs{ConvertSeeds(Params().FixedSeeds())};\r\n+    // We will not make outgoing connections to peers that are unreachable\r\n+    // (e.g. because of -onlynet configuration).\r\n+    // Therefore, we do not add them to addrman in the first place.\r\n+    // Note that if you change -onlynet setting from one network to another,\r\n+    // peers.dat will contain only peers of unreachable networks and\r\n+    // manual intervention will be needed (either delete peers.dat after\r\n+    // configuration change or manually add some reachable peer using addnode),\r\n+    // see <https://github.com/bitcoin/bitcoin/issues/26035> for details.\r\n+    seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\r\n+                                    [](const CAddress& addr) { return !IsReachable(addr); }),\r\n+                        seed_addrs.end());\r\n+    Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\r\n+\r\n+    // Make AddrFetch connections to fixed seeds first. This reduces the\r\n+    // load on the fixed seeds that would otherwise be serving blocks for\r\n+    // many new peers requiring IBD. Try this with multiple fixed seeds for\r\n+    // a better diversity of received addrs and because some may be offline.\r\n+    LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\r\n+    for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\r\n+        if (addr_pos >= seed_addrs.size()) {\r\n+            break;\r\n+        }\r\n+        AddAddrFetch(seed_addrs.at(addr_pos).ToString());\r\n+    }\r\n+    // Give AddrFetch peers some time to provide us with addresses\r\n+    // before adding the fixed seeds to AddrMan\r\n+    if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\r\n+        return false;\r\n+    }\r\n+    // The fixed seeds queried in the previous steps might have been offline,\r\n+    // failed to send us any addresses or sent us fake ones. Therefore,\r\n+    // we now add all reachable fixed seeds to AddrMan as a fallback.\r\n+    CNetAddr local;\r\n+    local.SetInternal(\"fixedseeds\");\r\n+    addrman.Add(seed_addrs, local);\r\n+    LogPrintf(\"Added %d fixed seeds from reachable networks.\\n\", seed_addrs.size());\r\n+    return true;\r\n+}\r\n+\r\n+bool CConnman::ShouldAddFixedSeedsNow(std::chrono::microseconds start, bool dns_seeds_requested)\r\n+{\r\n+    // When the node starts with an empty peers.dat, there are a few other sources of peers before\r\n+    // we fallback on to fixed seeds: -dnsseed, -seednode, -addnode\r\n+    // If none of those are available, we fallback on to fixed seeds immediately, else we allow\r\n+    // 60 seconds for any of those sources to populate addrman.\r\n+    // It is cheapest to check if enough time has passed first.\r\n+    if (GetTime<std::chrono::seconds>() > start + std::chrono::minutes{1}) {\r\n+        LogPrintf(\"Adding fixed seeds as 60 seconds have passed and addrman is empty\\n\");\r\n+        return true;\r\n+    }\r\n+\r\n+    // Checking !dnsseed is cheaper before locking 2 mutexes.\r\n+    if (!dns_seeds_requested) {\r\n+        LOCK2(m_addr_fetches_mutex, m_added_nodes_mutex);\r\n+        if (m_addr_fetches.empty() && m_added_nodes.empty()) {\r\n+            LogPrintf(\"Adding fixed seeds as -dnsseed=0 (or IPv4/IPv6 connections are disabled via -onlynet), -addnode is not provided and all -seednode(s) attempted\\n\");\r\n+            return true;\r\n+        }\r\n+    }\r\n+    return false;\r\n+}\r\n+\r\n+int CConnman::AddAddressesFromSeed(const std::string& seed, FastRandomContext& rng)\r\n+{\r\n+    std::vector<CNetAddr> vIPs;\r\n+    std::vector<CAddress> vAdd;\r\n+    ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\r\n+    std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\r\n+    CNetAddr resolveSource;\r\n+    if (!resolveSource.SetInternal(host)) {\r\n+        return 0;\r\n+    }\r\n+    unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\r\n+    int found{0};\r\n+    if (LookupHost(host, vIPs, nMaxIPs, true)) {\r\n+        for (const CNetAddr& ip : vIPs) {\r\n+            CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\r\n+            addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\r\n+            vAdd.push_back(addr);\r\n+            found++;\r\n+        }\r\n+        addrman.Add(vAdd, resolveSource);\r\n+    } else {\r\n+        // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\r\n+        // instead using them as a addrfetch to get nodes with our desired service bits.\r\n+        AddAddrFetch(seed);\r\n+    }\r\n+\r\n+    return found;\r\n+}\r\n+\r\n void CConnman::ThreadAddressSeed()\r\n {\r\n     SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\r\n@@ -1422,40 +1548,13 @@ void CConnman::ThreadAddressSeed()\r\n         // * If we continue having problems, eventually query all the\r\n         //   DNS seeds, and if that fails too, also try the fixed seeds.\r\n         //   (done in ThreadOpenConnections)\r\n-        const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\r\n \r\n         for (const std::string& seed : seeds) {\r\n             if (seeds_right_now == 0) {\r\n                 seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\r\n \r\n                 if (addrman.size() > 0) {\r\n-                    LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\r\n-                    std::chrono::seconds to_wait = seeds_wait_time;\r\n-                    while (to_wait.count() > 0) {\r\n-                        // if sleeping for the MANY_PEERS interval, wake up\r\n-                        // early to see if we have enough peers and can stop\r\n-                        // this thread entirely freeing up its resources\r\n-                        std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\r\n-                        if (!interruptNet.sleep_for(w)) return;\r\n-                        to_wait -= w;\r\n-\r\n-                        int nRelevant = 0;\r\n-                        {\r\n-                            LOCK(m_nodes_mutex);\r\n-                            for (const CNode* pnode : m_nodes) {\r\n-                                if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\r\n-                            }\r\n-                        }\r\n-                        if (nRelevant >= 2) {\r\n-                            if (found > 0) {\r\n-                                LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\r\n-                                LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\r\n-                            } else {\r\n-                                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\r\n-                            }\r\n-                            return;\r\n-                        }\r\n-                    }\r\n+                    WaitForDNSSeeding(found);\r\n                 }\r\n             }\r\n \r\n@@ -1473,28 +1572,7 @@ void CConnman::ThreadAddressSeed()\r\n             if (HaveNameProxy()) {\r\n                 AddAddrFetch(seed);\r\n             } else {\r\n-                std::vector<CNetAddr> vIPs;\r\n-                std::vector<CAddress> vAdd;\r\n-                ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\r\n-                std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\r\n-                CNetAddr resolveSource;\r\n-                if (!resolveSource.SetInternal(host)) {\r\n-                    continue;\r\n-                }\r\n-                unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\r\n-                if (LookupHost(host, vIPs, nMaxIPs, true)) {\r\n-                    for (const CNetAddr& ip : vIPs) {\r\n-                        CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\r\n-                        addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\r\n-                        vAdd.push_back(addr);\r\n-                        found++;\r\n-                    }\r\n-                    addrman.Add(vAdd, resolveSource);\r\n-                } else {\r\n-                    // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\r\n-                    // instead using them as a addrfetch to get nodes with our desired service bits.\r\n-                    AddAddrFetch(seed);\r\n-                }\r\n+                found += AddAddressesFromSeed(seed, rng);\r\n             }\r\n             --seeds_right_now;\r\n         }\r\n@@ -1509,65 +1587,11 @@ void CConnman::ThreadAddressSeed()\r\n         return;\r\n     }\r\n     while (addrman.size() == 0) {\r\n-        // When the node starts with an empty peers.dat, there are a few other sources of peers before\r\n-        // we fallback on to fixed seeds: -dnsseed, -seednode, -addnode\r\n-        // If none of those are available, we fallback on to fixed seeds immediately, else we allow\r\n-        // 60 seconds for any of those sources to populate addrman.\r\n-        bool add_fixed_seeds_now = false;\r\n-        // It is cheapest to check if enough time has passed first.\r\n-        if (GetTime<std::chrono::seconds>() > start + std::chrono::minutes{1}) {\r\n-            add_fixed_seeds_now = true;\r\n-            LogPrintf(\"Adding fixed seeds as 60 seconds have passed and addrman is empty\\n\");\r\n-        }\r\n-\r\n-        // Checking !dnsseed is cheaper before locking 2 mutexes.\r\n-        if (!add_fixed_seeds_now && !dns_seeds_requested) {\r\n-            LOCK2(m_addr_fetches_mutex, m_added_nodes_mutex);\r\n-            if (m_addr_fetches.empty() && m_added_nodes.empty()) {\r\n-                add_fixed_seeds_now = true;\r\n-                LogPrintf(\"Adding fixed seeds as -dnsseed=0 (or IPv4/IPv6 connections are disabled via -onlynet), -addnode is not provided and all -seednode(s) attempted\\n\");\r\n-            }\r\n-        }\r\n+        auto add_fixed_seeds_now{ShouldAddFixedSeedsNow(start, dns_seeds_requested)};\r\n \r\n         if (add_fixed_seeds_now) {\r\n-            std::vector<CAddress> seed_addrs{ConvertSeeds(Params().FixedSeeds())};\r\n-            // We will not make outgoing connections to peers that are unreachable\r\n-            // (e.g. because of -onlynet configuration).\r\n-            // Therefore, we do not add them to addrman in the first place.\r\n-            // Note that if you change -onlynet setting from one network to another,\r\n-            // peers.dat will contain only peers of unreachable networks and\r\n-            // manual intervention will be needed (either delete peers.dat after\r\n-            // configuration change or manually add some reachable peer using addnode),\r\n-            // see <https://github.com/bitcoin/bitcoin/issues/26035> for details.\r\n-            seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\r\n-                                            [](const CAddress& addr) { return !IsReachable(addr); }),\r\n-                             seed_addrs.end());\r\n-            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\r\n-\r\n-            // Make AddrFetch connections to fixed seeds first. This reduces the\r\n-            // load on the fixed seeds that would otherwise be serving blocks for\r\n-            // many new peers requiring IBD. Try this with multiple fixed seeds for\r\n-            // a better diversity of received addrs and because some may be offline.\r\n-            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\r\n-            for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\r\n-                if (addr_pos >= seed_addrs.size()) {\r\n-                    break;\r\n-                }\r\n-                AddAddrFetch(seed_addrs.at(addr_pos).ToString());\r\n-            }\r\n-            // Give AddrFetch peers some time to provide us with addresses\r\n-            // before adding the fixed seeds to AddrMan\r\n-            if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\r\n-                return;\r\n-            }\r\n-            // The fixed seeds queried in the previous steps might have been offline,\r\n-            // failed to send us any addresses or sent us fake ones. Therefore,\r\n-            // we now add all reachable fixed seeds to AddrMan as a fallback.\r\n-            CNetAddr local;\r\n-            local.SetInternal(\"fixedseeds\");\r\n-            addrman.Add(seed_addrs, local);\r\n-            LogPrintf(\"Added %d fixed seeds from reachable networks.\\n\", seed_addrs.size());\r\n-            break;\r\n+            if (AddFixedSeeds()) break;\r\n+            return;  // interrupted\r\n         }\r\n         if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\r\n             return;\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 1a92392fd..1fec113af 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -694,6 +694,12 @@ public:\r\n         bool m_i2p_accept_incoming;\r\n     };\r\n \r\n+    void WaitForDNSSeeding(int already_found);\r\n+    int AddAddressesFromSeed(const std::string& seed, FastRandomContext& rng);\r\n+    bool ShouldAddFixedSeedsNow(std::chrono::microseconds start, bool dns_seeds_requested);\r\n+    bool AddFixedSeeds();\r\n+\r\n+\r\n     void Init(const Options& connOptions) EXCLUSIVE_LOCKS_REQUIRED(!m_added_nodes_mutex, !m_total_bytes_sent_mutex)\r\n     {\r\n         AssertLockNotHeld(m_total_bytes_sent_mutex);\r\n```\r\n</details>",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1268694465",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "commented",
      "id": 1276831278,
      "node_id": "IC_kwDOABII585MGuYu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276831278",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T23:21:54Z",
      "updated_at": "2022-10-12T23:21:54Z",
      "author_association": "MEMBER",
      "body": ">One additional refactor I thought about but wasn't sure if it is worth it, is moving most of the logic currently inside ThreadAddressSeed \r\n> I would very much appreciate that. As I started reviewing this PR, the first thing I did (before reading this comment actually) was see if I could refactor this function into something a bit more easily digestible just as a PoC. (...)\r\n\r\nAwesome, I'll get to that soon! \r\n",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1276831278",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "convert_to_draft",
      "id": 7615585250,
      "node_id": "CTDE_lADOABII585SCz_LzwAAAAHF7Jvi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7615585250",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-18T21:34:35Z"
    },
    {
      "event": "commented",
      "id": 1284422586,
      "node_id": "IC_kwDOABII585Mjru6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284422586",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T18:37:52Z",
      "updated_at": "2022-10-19T18:37:52Z",
      "author_association": "MEMBER",
      "body": "While implementing and testing the `ThreadAddressSeed` code organization changes, I ran into a small issue/ behavior change caused by the movement of the fixed seeding into another thread - I need to analyze this closer, marking as Draft for now.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1284422586",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    },
    {
      "event": "labeled",
      "id": 8404522165,
      "node_id": "LE_lADOABII585SCz_LzwAAAAH08tS1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8404522165",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-31T22:55:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY4Y2Y3MDA0ZDlkMDZlZjY4MGM2MWE2NTJlOTg3ZmQyNzk3YjE0Mzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8cf7004d9d06ef680c61a652e987fd2797b1438",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f8cf7004d9d06ef680c61a652e987fd2797b1438",
      "tree": {
        "sha": "39be2a0019683e2b436932c822ad25c174a101b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39be2a0019683e2b436932c822ad25c174a101b1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6db0a3002bf5d4eaa3838bb577bd916f0fd095fc",
          "sha": "6db0a3002bf5d4eaa3838bb577bd916f0fd095fc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6db0a3002bf5d4eaa3838bb577bd916f0fd095fc"
        }
      ],
      "message": "net: Rename ThreadDNSAddressSeed to ThreadAddressSeed\n\nThis is in preparation of adding the fixed seed logic\nto this thread.",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2023-04-20T18:24:32Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2022-08-17T18:10:12Z"
      },
      "sha": "f8cf7004d9d06ef680c61a652e987fd2797b1438"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY2MGJhYzNhYmI1ZTM0MDJkZTRmODc1OTY4ZTVlZDEyNTljMWI2NTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f60bac3abb5e3402de4f875968e5ed1259c1b654",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f60bac3abb5e3402de4f875968e5ed1259c1b654",
      "tree": {
        "sha": "23f15a779b52a97b6c22bbf4c4932ecdd7b53644",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23f15a779b52a97b6c22bbf4c4932ecdd7b53644"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8cf7004d9d06ef680c61a652e987fd2797b1438",
          "sha": "f8cf7004d9d06ef680c61a652e987fd2797b1438",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f8cf7004d9d06ef680c61a652e987fd2797b1438"
        }
      ],
      "message": "net: always start ThreadAddressSeed\n\nAlways start ThreadAddressSeed() and move the criterion of\nskipping the DNS seeds into this thread.\nThis is in preparation of moving the fixed seed logic into this thread.\nThis commit does not change external behavior.\n\nCan be reviewed with \"git diff -b\" to ignore whitespace changes.",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2023-04-20T18:35:42Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2023-04-20T18:35:42Z"
      },
      "sha": "f60bac3abb5e3402de4f875968e5ed1259c1b654"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRiYmU5ZTQxYWU0MWQ3ZmI3MTc2OTY5ODU0NzdmNTllNGE5NjdkYTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbbe9e41ae41d7fb717696985477f59e4a967da6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dbbe9e41ae41d7fb717696985477f59e4a967da6",
      "tree": {
        "sha": "e083f58b12fddbf29d02b699ebf3e1688e900225",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e083f58b12fddbf29d02b699ebf3e1688e900225"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f60bac3abb5e3402de4f875968e5ed1259c1b654",
          "sha": "f60bac3abb5e3402de4f875968e5ed1259c1b654",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f60bac3abb5e3402de4f875968e5ed1259c1b654"
        }
      ],
      "message": "net, refactor: Move DNS seed querying logic into its own function",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2023-04-20T18:41:45Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2023-04-20T18:41:45Z"
      },
      "sha": "dbbe9e41ae41d7fb717696985477f59e4a967da6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGViOTU4NGU4NzhlODk4Yzc0YmExM2FkMmI4MDQyODY5MmZlMWIzODk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb9584e878e898c74ba13ad2b80428692fe1b389",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eb9584e878e898c74ba13ad2b80428692fe1b389",
      "tree": {
        "sha": "5d163b9870663623f3bef68501e4d019708fc4ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d163b9870663623f3bef68501e4d019708fc4ef"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbbe9e41ae41d7fb717696985477f59e4a967da6",
          "sha": "dbbe9e41ae41d7fb717696985477f59e4a967da6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dbbe9e41ae41d7fb717696985477f59e4a967da6"
        }
      ],
      "message": "net: Move fixed seed logic to ThreadAddrSeed\n\nAdding fixed seeds to addrman needs to be done only once.\nAs such, it makes more sense to have it in ThreadAddrSeed as opposed to\nThreadOpenConnections.\n\nThis does not change external behavior.\ncan be reviewed with --color-moved=dimmed-zebra --color-moved-ws=ignore-all-space",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2023-04-20T19:33:46Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2023-04-20T19:11:48Z"
      },
      "sha": "eb9584e878e898c74ba13ad2b80428692fe1b389"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJlOGZkZGZmNzJhYzU0MGU5YTQ3NmViOTBjYjRkM2M1OTliN2IxOTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "tree": {
        "sha": "42a56add7efa37a69405a7a9ca2f4b81a139160a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42a56add7efa37a69405a7a9ca2f4b81a139160a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb9584e878e898c74ba13ad2b80428692fe1b389",
          "sha": "eb9584e878e898c74ba13ad2b80428692fe1b389",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eb9584e878e898c74ba13ad2b80428692fe1b389"
        }
      ],
      "message": "net: Make AddrFetch connections to fixed seeds\n\nIn order to reduce the load on fixed seeds that will receive\npotentially many peers requiring IBD, just do an\nAddrFetch (so that we disconnect them after receiving\naddresses from them).\n\nDo that with up to 10 fixed seeds for diversity. The fixed seeds\ncontinue to be added to AddrMan afterwards, which at this point should\ncontain multiple other addresses received from the AddrFetch peers.",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2023-04-20T19:33:46Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2022-09-21T19:26:53Z"
      },
      "sha": "be8fddff72ac540e9a476eb90cb4d3c599b7b196"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9061807488,
      "node_id": "HRFPE_lADOABII585SCz_LzwAAAAIcIDWA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9061807488",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T21:42:54Z"
    },
    {
      "event": "unlabeled",
      "id": 9061847887,
      "node_id": "UNLE_lADOABII585SCz_LzwAAAAIcINNP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9061847887",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T21:50:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1516996244,
      "node_id": "IC_kwDOABII585aa4aU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1516996244",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-20T22:01:33Z",
      "updated_at": "2023-04-20T22:01:33Z",
      "author_association": "MEMBER",
      "body": "Rebased and added a refactor to split up `ThreadAddressSeed` into separate functions for DNS and fixed seeds - I will keep in draft a bit longer, until the issue below is resolved.\r\n\r\n> While implementing and testing the `ThreadAddressSeed` code organization changes, I ran into a small issue/ behavior change caused by the movement of the fixed seeding into another thread - I need to analyze this closer, marking as Draft for now.\r\n\r\nThe issue was that if one chooses `-seednode=X`, the idea is to use the peer X for seeding, and not dns seeds or fixed seeds. However, currently there is a \"race\" between using this seednode and fixed seeds, because as soon as we make a connection to the seednode, we won't wait until we have receive addrs from it, but start adding fixed seeds right away (and connecting to them / getting addrs from them might be faster). \r\nMoving the fixed seeds out of ThreadOpenConnection would have changed the timing of this race slightly.\r\n\r\nHowever, I think that the current behavior is also not great in the first place and will open a separate PR to give the seednode some time before reverting to fixed seeds, so that this PR doesn't change behavior.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1516996244",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26114"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974957888",
      "pull_request_review_id": 1113243242,
      "id": 974957888,
      "node_id": "PRRC_kwDOABII5846HK1A",
      "diff_hunk": "@@ -1544,6 +1544,25 @@ void CConnman::ThreadAddressSeed()\n             seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for(size_t addr_pos = 0; addr_pos < 10; addr_pos++) {\n+                if(addr_pos >= seed_addrs.size()) {\n+                    break;\n+                }\n+                AddAddrFetch(seed_addrs.at(addr_pos).ToString());\n+            }\n+            // Give AddrFetch peers some time to provide us with addresses\n+            // before adding the fixed seeds to AddrMan\n+            if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\n+                return;\n+            }\n+            // As an additional precaution against malicious fixed seeds, add all",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Let's specify what exactly it protects us from?\r\n1. Them not giving us anything\r\n2. Them giving us a lot of fake addrs (I assume our addrman will bucket them together and we won't have to go through every single of them, according to `GetNewBucket`)",
      "created_at": "2022-09-20T07:00:11Z",
      "updated_at": "2022-09-20T07:00:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r974957888",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974957888"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1564,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974959786",
      "pull_request_review_id": 1113246051,
      "id": 974959786,
      "node_id": "PRRC_kwDOABII5846HLSq",
      "diff_hunk": "@@ -1544,6 +1544,25 @@ void CConnman::ThreadAddressSeed()\n             seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for(size_t addr_pos = 0; addr_pos < 10; addr_pos++) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nits according to developer notes:\r\n1. ++xyz is better than xyz++ :P\r\n2. one space right after `for` and `if`",
      "created_at": "2022-09-20T07:02:34Z",
      "updated_at": "2022-09-20T07:02:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r974959786",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974959786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1553,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556612",
      "pull_request_review_id": 1114101955,
      "id": 975556612,
      "node_id": "PRRC_kwDOABII5846JdAE",
      "diff_hunk": "@@ -1544,6 +1544,25 @@ void CConnman::ThreadAddressSeed()\n             seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for(size_t addr_pos = 0; addr_pos < 10; addr_pos++) {\n+                if(addr_pos >= seed_addrs.size()) {\n+                    break;\n+                }\n+                AddAddrFetch(seed_addrs.at(addr_pos).ToString());\n+            }\n+            // Give AddrFetch peers some time to provide us with addresses\n+            // before adding the fixed seeds to AddrMan\n+            if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\n+                return;\n+            }\n+            // As an additional precaution against malicious fixed seeds, add all",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "in_reply_to_id": 974957888,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, and 3. them just not being not online. I changed the comment to reflect this better.",
      "created_at": "2022-09-20T16:00:27Z",
      "updated_at": "2022-09-20T16:00:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r975556612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1564,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556829",
      "pull_request_review_id": 1114102294,
      "id": 975556829,
      "node_id": "PRRC_kwDOABII5846JdDd",
      "diff_hunk": "@@ -1544,6 +1544,25 @@ void CConnman::ThreadAddressSeed()\n             seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for(size_t addr_pos = 0; addr_pos < 10; addr_pos++) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "in_reply_to_id": 974959786,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed,  thanks!",
      "created_at": "2022-09-20T16:00:39Z",
      "updated_at": "2022-09-20T16:00:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r975556829",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1553,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976268930",
      "pull_request_review_id": 1115074705,
      "id": 976268930,
      "node_id": "PRRC_kwDOABII5846MK6C",
      "diff_hunk": "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {",
      "path": "src/net.cpp",
      "position": 19,
      "original_position": 15,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you just inline `GetBoolArg` here? You do update this variable later, but i think the updated version is not used at all?",
      "created_at": "2022-09-21T09:18:16Z",
      "updated_at": "2022-09-21T09:18:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976268930",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976268930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1522,
      "original_line": 1522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976269612",
      "pull_request_review_id": 1115075669,
      "id": 976269612,
      "node_id": "PRRC_kwDOABII5846MLEs",
      "diff_hunk": "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while ( addrman.size() == 0) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: remove space before `addrman`",
      "created_at": "2022-09-21T09:18:56Z",
      "updated_at": "2022-09-21T09:18:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976269612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976269612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976275010",
      "pull_request_review_id": 1115083348,
      "id": 976275010,
      "node_id": "PRRC_kwDOABII5846MMZC",
      "diff_hunk": "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while ( addrman.size() == 0) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "in_reply_to_id": 976269612,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(Friendly tip, one can avoid nitty formatting issues by running clang format on commits before pushing, see `/contrib/devtools/clang-format-diff.py` for details.)",
      "created_at": "2022-09-21T09:23:53Z",
      "updated_at": "2022-09-21T09:23:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976275010",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976275010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976928808",
      "pull_request_review_id": 1116010640,
      "id": 976928808,
      "node_id": "PRRC_kwDOABII5846OsAo",
      "diff_hunk": "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {",
      "path": "src/net.cpp",
      "position": 19,
      "original_position": 15,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "in_reply_to_id": 976268930,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch! It was needed in `ThreadOpenConnections`, but no longer after the move.",
      "created_at": "2022-09-21T19:50:54Z",
      "updated_at": "2022-09-21T19:50:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976928808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976928808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1522,
      "original_line": 1522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976929544",
      "pull_request_review_id": 1116011775,
      "id": 976929544,
      "node_id": "PRRC_kwDOABII5846OsMI",
      "diff_hunk": "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while ( addrman.size() == 0) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "in_reply_to_id": 976269612,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thanks!",
      "created_at": "2022-09-21T19:51:55Z",
      "updated_at": "2022-09-21T19:51:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976929544",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976929544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978406018",
      "pull_request_review_id": 1118112669,
      "id": 978406018,
      "node_id": "PRRC_kwDOABII5846UUqC",
      "diff_hunk": "@@ -1388,114 +1388,189 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n-void CConnman::ThreadDNSAddressSeed()\n+void CConnman::ThreadAddressSeed()\n {\n-    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_DNS_SEED);\n+    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\n     FastRandomContext rng;\n-    std::vector<std::string> seeds = Params().DNSSeeds();\n-    Shuffle(seeds.begin(), seeds.end(), rng);\n-    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n-    int found = 0;\n-\n-    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n-        // When -forcednsseed is provided, query all.\n-        seeds_right_now = seeds.size();\n-    } else if (addrman.size() == 0) {\n-        // If we have no known peers, query all.\n-        // This will occur on the first run, or if peers.dat has been\n-        // deleted.\n-        seeds_right_now = seeds.size();\n-    }\n-\n-    // goal: only query DNS seed if address need is acute\n-    // * If we have a reasonable number of peers in addrman, spend\n-    //   some time trying them first. This improves user privacy by\n-    //   creating fewer identifying DNS requests, reduces trust by\n-    //   giving seeds less influence on the network topology, and\n-    //   reduces traffic to the seeds.\n-    // * When querying DNS seeds query a few at once, this ensures\n-    //   that we don't give DNS seeds the ability to eclipse nodes\n-    //   that query them.\n-    // * If we continue having problems, eventually query all the\n-    //   DNS seeds, and if that fails too, also try the fixed seeds.\n-    //   (done in ThreadOpenConnections)\n-    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n-\n-    for (const std::string& seed : seeds) {\n-        if (seeds_right_now == 0) {\n-            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n-\n-            if (addrman.size() > 0) {\n-                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n-                std::chrono::seconds to_wait = seeds_wait_time;\n-                while (to_wait.count() > 0) {\n-                    // if sleeping for the MANY_PEERS interval, wake up\n-                    // early to see if we have enough peers and can stop\n-                    // this thread entirely freeing up its resources\n-                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n-                    if (!interruptNet.sleep_for(w)) return;\n-                    to_wait -= w;\n-\n-                    int nRelevant = 0;\n-                    {\n-                        LOCK(m_nodes_mutex);\n-                        for (const CNode* pnode : m_nodes) {\n-                            if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+    auto start = GetTime<std::chrono::microseconds>();\n+    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "e4388787870ac2b42903cde47152e4735eb1be86",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5989fc1bf861aa2777f2515ddc9281569d2d87b4 naming nit, mind making this variable name more specific so that grepping on it returns clearer results? for example:\r\n\r\n```diff\r\n@@ -1393,8 +1393,8 @@ void CConnman::ThreadAddressSeed()\r\n-    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\r\n-    if (dnsseed) {\r\n+    const bool dns_seeds_requested{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\r\n+    if (dns_seeds_requested) {\r\n@@ -1521,7 +1521,7 @@ void CConnman::ThreadAddressSeed()\r\n-        if (!add_fixed_seeds_now && !dnsseed) {\r\n+        if (!add_fixed_seeds_now && !dns_seeds_requested) {\r\n```\r\n\r\n```bash\r\n$ git grep dns_seeds_requested\r\nsrc/net.cpp:1396:    const bool dns_seeds_requested{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\r\nsrc/net.cpp:1397:    if (dns_seeds_requested) {\r\nsrc/net.cpp:1524:        if (!add_fixed_seeds_now && !dns_seeds_requested) {\r\n```\r\n",
      "created_at": "2022-09-23T08:45:28Z",
      "updated_at": "2022-09-23T09:14:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r978406018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978406018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1396,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978421894",
      "pull_request_review_id": 1118112669,
      "id": 978421894,
      "node_id": "PRRC_kwDOABII5846UYiG",
      "diff_hunk": "@@ -939,7 +939,7 @@ class CConnman\n     void SocketHandlerListening(const Sock::EventsPerSock& events_per_sock);\n \n     void ThreadSocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\n-    void ThreadDNSAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_nodes_mutex);\n+    void ThreadAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_added_nodes_mutex, !m_nodes_mutex);",
      "path": "src/net.h",
      "position": 14,
      "original_position": 5,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "e4388787870ac2b42903cde47152e4735eb1be86",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": " fc1a3719b0cd733985b1e6d9234819823c3bfab8 It looks like this thread safety annotation added here can be correspondingly removed from `ThreadOpenConnections()`, as it no longer accesses `m_added_nodes`.\r\n\r\n```diff\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -888,7 +888,7 @@ private:\r\n-    void ThreadOpenConnections(std::vector<std::string> connect) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_added_nodes_mutex, !m_nodes_mutex);\r\n+    void ThreadOpenConnections(std::vector<std::string> connect) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_nodes_mutex);\r\n```\r\n",
      "created_at": "2022-09-23T09:04:44Z",
      "updated_at": "2022-09-23T09:14:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r978421894",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978421894"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 969,
      "original_line": 969,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978426592",
      "pull_request_review_id": 1118112669,
      "id": 978426592,
      "node_id": "PRRC_kwDOABII5846UZrg",
      "diff_hunk": "@@ -1388,114 +1388,189 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n-void CConnman::ThreadDNSAddressSeed()\n+void CConnman::ThreadAddressSeed()\n {\n-    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_DNS_SEED);\n+    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\n     FastRandomContext rng;\n-    std::vector<std::string> seeds = Params().DNSSeeds();\n-    Shuffle(seeds.begin(), seeds.end(), rng);\n-    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n-    int found = 0;\n-\n-    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n-        // When -forcednsseed is provided, query all.\n-        seeds_right_now = seeds.size();\n-    } else if (addrman.size() == 0) {\n-        // If we have no known peers, query all.\n-        // This will occur on the first run, or if peers.dat has been\n-        // deleted.\n-        seeds_right_now = seeds.size();\n-    }\n-\n-    // goal: only query DNS seed if address need is acute\n-    // * If we have a reasonable number of peers in addrman, spend\n-    //   some time trying them first. This improves user privacy by\n-    //   creating fewer identifying DNS requests, reduces trust by\n-    //   giving seeds less influence on the network topology, and\n-    //   reduces traffic to the seeds.\n-    // * When querying DNS seeds query a few at once, this ensures\n-    //   that we don't give DNS seeds the ability to eclipse nodes\n-    //   that query them.\n-    // * If we continue having problems, eventually query all the\n-    //   DNS seeds, and if that fails too, also try the fixed seeds.\n-    //   (done in ThreadOpenConnections)\n-    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n-\n-    for (const std::string& seed : seeds) {\n-        if (seeds_right_now == 0) {\n-            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n-\n-            if (addrman.size() > 0) {\n-                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n-                std::chrono::seconds to_wait = seeds_wait_time;\n-                while (to_wait.count() > 0) {\n-                    // if sleeping for the MANY_PEERS interval, wake up\n-                    // early to see if we have enough peers and can stop\n-                    // this thread entirely freeing up its resources\n-                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n-                    if (!interruptNet.sleep_for(w)) return;\n-                    to_wait -= w;\n-\n-                    int nRelevant = 0;\n-                    {\n-                        LOCK(m_nodes_mutex);\n-                        for (const CNode* pnode : m_nodes) {\n-                            if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+    auto start = GetTime<std::chrono::microseconds>();\n+    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\n+    if (dnsseed) {\n+        std::vector<std::string> seeds = Params().DNSSeeds();\n+        Shuffle(seeds.begin(), seeds.end(), rng);\n+        int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n+        int found = 0;\n+\n+        if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n+            // When -forcednsseed is provided, query all.\n+            seeds_right_now = seeds.size();\n+        } else if (addrman.size() == 0) {\n+            // If we have no known peers, query all.\n+            // This will occur on the first run, or if peers.dat has been\n+            // deleted.\n+            seeds_right_now = seeds.size();\n+        }\n+\n+        // goal: only query DNS seed if address need is acute\n+        // * If we have a reasonable number of peers in addrman, spend\n+        //   some time trying them first. This improves user privacy by\n+        //   creating fewer identifying DNS requests, reduces trust by\n+        //   giving seeds less influence on the network topology, and\n+        //   reduces traffic to the seeds.\n+        // * When querying DNS seeds query a few at once, this ensures\n+        //   that we don't give DNS seeds the ability to eclipse nodes\n+        //   that query them.\n+        // * If we continue having problems, eventually query all the\n+        //   DNS seeds, and if that fails too, also try the fixed seeds.\n+        //   (done in ThreadOpenConnections)\n+        const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n+        for (const std::string& seed : seeds) {\n+            if (seeds_right_now == 0) {\n+                seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n+\n+                if (addrman.size() > 0) {\n+                    LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+                    std::chrono::seconds to_wait = seeds_wait_time;\n+                    while (to_wait.count() > 0) {\n+                        // if sleeping for the MANY_PEERS interval, wake up\n+                        // early to see if we have enough peers and can stop\n+                        // this thread entirely freeing up its resources\n+                        std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n+                        if (!interruptNet.sleep_for(w)) return;\n+                        to_wait -= w;\n+\n+                        int nRelevant = 0;\n+                        {\n+                            LOCK(m_nodes_mutex);\n+                            for (const CNode* pnode : m_nodes) {\n+                                if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+                            }\n                         }\n-                    }\n-                    if (nRelevant >= 2) {\n-                        if (found > 0) {\n-                            LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n-                            LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n-                        } else {\n-                            LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                        if (nRelevant >= 2) {\n+                            if (found > 0) {\n+                                LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+                                LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n+                            } else {\n+                                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                            }\n+                            return;\n                         }\n-                        return;\n                     }\n                 }\n             }\n-        }\n \n-        if (interruptNet) return;\n+            if (interruptNet) return;\n \n-        // hold off on querying seeds if P2P network deactivated\n-        if (!fNetworkActive) {\n-            LogPrintf(\"Waiting for network to be reactivated before querying DNS seeds.\\n\");\n-            do {\n-                if (!interruptNet.sleep_for(std::chrono::seconds{1})) return;\n-            } while (!fNetworkActive);\n+            // hold off on querying seeds if P2P network deactivated\n+            if (!fNetworkActive) {\n+                LogPrintf(\"Waiting for network to be reactivated before querying DNS seeds.\\n\");\n+                do {\n+                    if (!interruptNet.sleep_for(std::chrono::seconds{1})) return;\n+                } while (!fNetworkActive);\n+            }\n+\n+            LogPrintf(\"Loading addresses from DNS seed %s\\n\", seed);\n+            if (HaveNameProxy()) {\n+                AddAddrFetch(seed);\n+            } else {\n+                std::vector<CNetAddr> vIPs;\n+                std::vector<CAddress> vAdd;\n+                ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n+                std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\n+                CNetAddr resolveSource;\n+                if (!resolveSource.SetInternal(host)) {\n+                    continue;\n+                }\n+                unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n+                if (LookupHost(host, vIPs, nMaxIPs, true)) {\n+                    for (const CNetAddr& ip : vIPs) {\n+                        CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n+                        addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\n+                        vAdd.push_back(addr);\n+                        found++;\n+                    }\n+                    addrman.Add(vAdd, resolveSource);\n+                } else {\n+                    // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\n+                    // instead using them as a addrfetch to get nodes with our desired service bits.\n+                    AddAddrFetch(seed);\n+                }\n+            }\n+            --seeds_right_now;\n         }\n+        LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+    } else {\n+        LogPrintf(\"DNS seeding disabled\\n\");\n+    }\n \n-        LogPrintf(\"Loading addresses from DNS seed %s\\n\", seed);\n-        if (HaveNameProxy()) {\n-            AddAddrFetch(seed);\n-        } else {\n-            std::vector<CNetAddr> vIPs;\n-            std::vector<CAddress> vAdd;\n-            ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n-            std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\n-            CNetAddr resolveSource;\n-            if (!resolveSource.SetInternal(host)) {\n-                continue;\n+    // Process fixed seeds\n+    if (!gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS)) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while (addrman.size() == 0) {\n+        // When the node starts with an empty peers.dat, there are a few other sources of peers before\n+        // we fallback on to fixed seeds: -dnsseed, -seednode, -addnode\n+        // If none of those are available, we fallback on to fixed seeds immediately, else we allow\n+        // 60 seconds for any of those sources to populate addrman.\n+        bool add_fixed_seeds_now = false;\n+        // It is cheapest to check if enough time has passed first.\n+        if (GetTime<std::chrono::seconds>() > start + std::chrono::minutes{1}) {\n+            add_fixed_seeds_now = true;\n+            LogPrintf(\"Adding fixed seeds as 60 seconds have passed and addrman is empty\\n\");\n+        }\n+\n+        // Checking !dnsseed is cheaper before locking 2 mutexes.\n+        if (!add_fixed_seeds_now && !dnsseed) {\n+            LOCK2(m_addr_fetches_mutex, m_added_nodes_mutex);\n+            if (m_addr_fetches.empty() && m_added_nodes.empty()) {\n+                add_fixed_seeds_now = true;\n+                LogPrintf(\"Adding fixed seeds as -dnsseed=0 (or IPv4/IPv6 connections are disabled via -onlynet), -addnode is not provided and all -seednode(s) attempted\\n\");\n             }\n-            unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n-            if (LookupHost(host, vIPs, nMaxIPs, true)) {\n-                for (const CNetAddr& ip : vIPs) {\n-                    CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\n-                    vAdd.push_back(addr);\n-                    found++;\n+        }\n+\n+        if (add_fixed_seeds_now) {\n+            std::vector<CAddress> seed_addrs{ConvertSeeds(Params().FixedSeeds())};\n+            // We will not make outgoing connections to peers that are unreachable\n+            // (e.g. because of -onlynet configuration).\n+            // Therefore, we do not add them to addrman in the first place.\n+            // Note that if you change -onlynet setting from one network to another,\n+            // peers.dat will contain only peers of unreachable networks and\n+            // manual intervention will be needed (either delete peers.dat after\n+            // configuration change or manually add some reachable peer using addnode),\n+            // see <https://github.com/bitcoin/bitcoin/issues/26035> for details.\n+            seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n+                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n+                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {",
      "path": "src/net.cpp",
      "position": 62,
      "original_position": 249,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "e4388787870ac2b42903cde47152e4735eb1be86",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": " e4388787870ac2b42903cde47152e4735eb1be8 it might be helpful to explain/document the magic value of 10, similar to the commit message",
      "created_at": "2022-09-23T09:10:52Z",
      "updated_at": "2022-09-23T09:14:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r978426592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978426592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1565,
      "original_line": 1565,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109087",
      "pull_request_review_id": 1120340172,
      "id": 980109087,
      "node_id": "PRRC_kwDOABII5846a0cf",
      "diff_hunk": "@@ -1388,114 +1388,189 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n-void CConnman::ThreadDNSAddressSeed()\n+void CConnman::ThreadAddressSeed()\n {\n-    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_DNS_SEED);\n+    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\n     FastRandomContext rng;\n-    std::vector<std::string> seeds = Params().DNSSeeds();\n-    Shuffle(seeds.begin(), seeds.end(), rng);\n-    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n-    int found = 0;\n-\n-    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n-        // When -forcednsseed is provided, query all.\n-        seeds_right_now = seeds.size();\n-    } else if (addrman.size() == 0) {\n-        // If we have no known peers, query all.\n-        // This will occur on the first run, or if peers.dat has been\n-        // deleted.\n-        seeds_right_now = seeds.size();\n-    }\n-\n-    // goal: only query DNS seed if address need is acute\n-    // * If we have a reasonable number of peers in addrman, spend\n-    //   some time trying them first. This improves user privacy by\n-    //   creating fewer identifying DNS requests, reduces trust by\n-    //   giving seeds less influence on the network topology, and\n-    //   reduces traffic to the seeds.\n-    // * When querying DNS seeds query a few at once, this ensures\n-    //   that we don't give DNS seeds the ability to eclipse nodes\n-    //   that query them.\n-    // * If we continue having problems, eventually query all the\n-    //   DNS seeds, and if that fails too, also try the fixed seeds.\n-    //   (done in ThreadOpenConnections)\n-    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n-\n-    for (const std::string& seed : seeds) {\n-        if (seeds_right_now == 0) {\n-            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n-\n-            if (addrman.size() > 0) {\n-                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n-                std::chrono::seconds to_wait = seeds_wait_time;\n-                while (to_wait.count() > 0) {\n-                    // if sleeping for the MANY_PEERS interval, wake up\n-                    // early to see if we have enough peers and can stop\n-                    // this thread entirely freeing up its resources\n-                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n-                    if (!interruptNet.sleep_for(w)) return;\n-                    to_wait -= w;\n-\n-                    int nRelevant = 0;\n-                    {\n-                        LOCK(m_nodes_mutex);\n-                        for (const CNode* pnode : m_nodes) {\n-                            if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+    auto start = GetTime<std::chrono::microseconds>();\n+    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "e4388787870ac2b42903cde47152e4735eb1be86",
      "in_reply_to_id": 978406018,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "renamed to `dns_seeds_requested` as suggested",
      "created_at": "2022-09-26T14:30:20Z",
      "updated_at": "2022-09-26T14:30:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r980109087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1396,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109357",
      "pull_request_review_id": 1120340567,
      "id": 980109357,
      "node_id": "PRRC_kwDOABII5846a0gt",
      "diff_hunk": "@@ -939,7 +939,7 @@ class CConnman\n     void SocketHandlerListening(const Sock::EventsPerSock& events_per_sock);\n \n     void ThreadSocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\n-    void ThreadDNSAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_nodes_mutex);\n+    void ThreadAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_added_nodes_mutex, !m_nodes_mutex);",
      "path": "src/net.h",
      "position": 14,
      "original_position": 5,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "e4388787870ac2b42903cde47152e4735eb1be86",
      "in_reply_to_id": 978421894,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thanks!",
      "created_at": "2022-09-26T14:30:33Z",
      "updated_at": "2022-09-26T14:30:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r980109357",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 969,
      "original_line": 969,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109523",
      "pull_request_review_id": 1120340854,
      "id": 980109523,
      "node_id": "PRRC_kwDOABII5846a0jT",
      "diff_hunk": "@@ -1388,114 +1388,189 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n-void CConnman::ThreadDNSAddressSeed()\n+void CConnman::ThreadAddressSeed()\n {\n-    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_DNS_SEED);\n+    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\n     FastRandomContext rng;\n-    std::vector<std::string> seeds = Params().DNSSeeds();\n-    Shuffle(seeds.begin(), seeds.end(), rng);\n-    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n-    int found = 0;\n-\n-    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n-        // When -forcednsseed is provided, query all.\n-        seeds_right_now = seeds.size();\n-    } else if (addrman.size() == 0) {\n-        // If we have no known peers, query all.\n-        // This will occur on the first run, or if peers.dat has been\n-        // deleted.\n-        seeds_right_now = seeds.size();\n-    }\n-\n-    // goal: only query DNS seed if address need is acute\n-    // * If we have a reasonable number of peers in addrman, spend\n-    //   some time trying them first. This improves user privacy by\n-    //   creating fewer identifying DNS requests, reduces trust by\n-    //   giving seeds less influence on the network topology, and\n-    //   reduces traffic to the seeds.\n-    // * When querying DNS seeds query a few at once, this ensures\n-    //   that we don't give DNS seeds the ability to eclipse nodes\n-    //   that query them.\n-    // * If we continue having problems, eventually query all the\n-    //   DNS seeds, and if that fails too, also try the fixed seeds.\n-    //   (done in ThreadOpenConnections)\n-    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n-\n-    for (const std::string& seed : seeds) {\n-        if (seeds_right_now == 0) {\n-            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n-\n-            if (addrman.size() > 0) {\n-                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n-                std::chrono::seconds to_wait = seeds_wait_time;\n-                while (to_wait.count() > 0) {\n-                    // if sleeping for the MANY_PEERS interval, wake up\n-                    // early to see if we have enough peers and can stop\n-                    // this thread entirely freeing up its resources\n-                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n-                    if (!interruptNet.sleep_for(w)) return;\n-                    to_wait -= w;\n-\n-                    int nRelevant = 0;\n-                    {\n-                        LOCK(m_nodes_mutex);\n-                        for (const CNode* pnode : m_nodes) {\n-                            if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+    auto start = GetTime<std::chrono::microseconds>();\n+    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\n+    if (dnsseed) {\n+        std::vector<std::string> seeds = Params().DNSSeeds();\n+        Shuffle(seeds.begin(), seeds.end(), rng);\n+        int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n+        int found = 0;\n+\n+        if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n+            // When -forcednsseed is provided, query all.\n+            seeds_right_now = seeds.size();\n+        } else if (addrman.size() == 0) {\n+            // If we have no known peers, query all.\n+            // This will occur on the first run, or if peers.dat has been\n+            // deleted.\n+            seeds_right_now = seeds.size();\n+        }\n+\n+        // goal: only query DNS seed if address need is acute\n+        // * If we have a reasonable number of peers in addrman, spend\n+        //   some time trying them first. This improves user privacy by\n+        //   creating fewer identifying DNS requests, reduces trust by\n+        //   giving seeds less influence on the network topology, and\n+        //   reduces traffic to the seeds.\n+        // * When querying DNS seeds query a few at once, this ensures\n+        //   that we don't give DNS seeds the ability to eclipse nodes\n+        //   that query them.\n+        // * If we continue having problems, eventually query all the\n+        //   DNS seeds, and if that fails too, also try the fixed seeds.\n+        //   (done in ThreadOpenConnections)\n+        const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n+        for (const std::string& seed : seeds) {\n+            if (seeds_right_now == 0) {\n+                seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n+\n+                if (addrman.size() > 0) {\n+                    LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+                    std::chrono::seconds to_wait = seeds_wait_time;\n+                    while (to_wait.count() > 0) {\n+                        // if sleeping for the MANY_PEERS interval, wake up\n+                        // early to see if we have enough peers and can stop\n+                        // this thread entirely freeing up its resources\n+                        std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n+                        if (!interruptNet.sleep_for(w)) return;\n+                        to_wait -= w;\n+\n+                        int nRelevant = 0;\n+                        {\n+                            LOCK(m_nodes_mutex);\n+                            for (const CNode* pnode : m_nodes) {\n+                                if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+                            }\n                         }\n-                    }\n-                    if (nRelevant >= 2) {\n-                        if (found > 0) {\n-                            LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n-                            LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n-                        } else {\n-                            LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                        if (nRelevant >= 2) {\n+                            if (found > 0) {\n+                                LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+                                LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n+                            } else {\n+                                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                            }\n+                            return;\n                         }\n-                        return;\n                     }\n                 }\n             }\n-        }\n \n-        if (interruptNet) return;\n+            if (interruptNet) return;\n \n-        // hold off on querying seeds if P2P network deactivated\n-        if (!fNetworkActive) {\n-            LogPrintf(\"Waiting for network to be reactivated before querying DNS seeds.\\n\");\n-            do {\n-                if (!interruptNet.sleep_for(std::chrono::seconds{1})) return;\n-            } while (!fNetworkActive);\n+            // hold off on querying seeds if P2P network deactivated\n+            if (!fNetworkActive) {\n+                LogPrintf(\"Waiting for network to be reactivated before querying DNS seeds.\\n\");\n+                do {\n+                    if (!interruptNet.sleep_for(std::chrono::seconds{1})) return;\n+                } while (!fNetworkActive);\n+            }\n+\n+            LogPrintf(\"Loading addresses from DNS seed %s\\n\", seed);\n+            if (HaveNameProxy()) {\n+                AddAddrFetch(seed);\n+            } else {\n+                std::vector<CNetAddr> vIPs;\n+                std::vector<CAddress> vAdd;\n+                ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n+                std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\n+                CNetAddr resolveSource;\n+                if (!resolveSource.SetInternal(host)) {\n+                    continue;\n+                }\n+                unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n+                if (LookupHost(host, vIPs, nMaxIPs, true)) {\n+                    for (const CNetAddr& ip : vIPs) {\n+                        CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n+                        addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\n+                        vAdd.push_back(addr);\n+                        found++;\n+                    }\n+                    addrman.Add(vAdd, resolveSource);\n+                } else {\n+                    // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\n+                    // instead using them as a addrfetch to get nodes with our desired service bits.\n+                    AddAddrFetch(seed);\n+                }\n+            }\n+            --seeds_right_now;\n         }\n+        LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+    } else {\n+        LogPrintf(\"DNS seeding disabled\\n\");\n+    }\n \n-        LogPrintf(\"Loading addresses from DNS seed %s\\n\", seed);\n-        if (HaveNameProxy()) {\n-            AddAddrFetch(seed);\n-        } else {\n-            std::vector<CNetAddr> vIPs;\n-            std::vector<CAddress> vAdd;\n-            ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n-            std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\n-            CNetAddr resolveSource;\n-            if (!resolveSource.SetInternal(host)) {\n-                continue;\n+    // Process fixed seeds\n+    if (!gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS)) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while (addrman.size() == 0) {\n+        // When the node starts with an empty peers.dat, there are a few other sources of peers before\n+        // we fallback on to fixed seeds: -dnsseed, -seednode, -addnode\n+        // If none of those are available, we fallback on to fixed seeds immediately, else we allow\n+        // 60 seconds for any of those sources to populate addrman.\n+        bool add_fixed_seeds_now = false;\n+        // It is cheapest to check if enough time has passed first.\n+        if (GetTime<std::chrono::seconds>() > start + std::chrono::minutes{1}) {\n+            add_fixed_seeds_now = true;\n+            LogPrintf(\"Adding fixed seeds as 60 seconds have passed and addrman is empty\\n\");\n+        }\n+\n+        // Checking !dnsseed is cheaper before locking 2 mutexes.\n+        if (!add_fixed_seeds_now && !dnsseed) {\n+            LOCK2(m_addr_fetches_mutex, m_added_nodes_mutex);\n+            if (m_addr_fetches.empty() && m_added_nodes.empty()) {\n+                add_fixed_seeds_now = true;\n+                LogPrintf(\"Adding fixed seeds as -dnsseed=0 (or IPv4/IPv6 connections are disabled via -onlynet), -addnode is not provided and all -seednode(s) attempted\\n\");\n             }\n-            unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n-            if (LookupHost(host, vIPs, nMaxIPs, true)) {\n-                for (const CNetAddr& ip : vIPs) {\n-                    CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\n-                    vAdd.push_back(addr);\n-                    found++;\n+        }\n+\n+        if (add_fixed_seeds_now) {\n+            std::vector<CAddress> seed_addrs{ConvertSeeds(Params().FixedSeeds())};\n+            // We will not make outgoing connections to peers that are unreachable\n+            // (e.g. because of -onlynet configuration).\n+            // Therefore, we do not add them to addrman in the first place.\n+            // Note that if you change -onlynet setting from one network to another,\n+            // peers.dat will contain only peers of unreachable networks and\n+            // manual intervention will be needed (either delete peers.dat after\n+            // configuration change or manually add some reachable peer using addnode),\n+            // see <https://github.com/bitcoin/bitcoin/issues/26035> for details.\n+            seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n+                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n+                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {",
      "path": "src/net.cpp",
      "position": 62,
      "original_position": 249,
      "commit_id": "be8fddff72ac540e9a476eb90cb4d3c599b7b196",
      "original_commit_id": "e4388787870ac2b42903cde47152e4735eb1be86",
      "in_reply_to_id": 978426592,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2022-09-26T14:30:43Z",
      "updated_at": "2022-09-26T14:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r980109523",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1565,
      "original_line": 1565,
      "side": "RIGHT"
    }
  ]
}