{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177",
    "id": 1066084299,
    "node_id": "PR_kwDOABII584_iyfL",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26177",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26177.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26177.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
    "number": 26177,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "refactor / kernel: Move non-gArgs chainparams functionality to kernel",
    "user": {
      "login": "TheCharlatan",
      "id": 8421793,
      "node_id": "MDQ6VXNlcjg0MjE3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheCharlatan",
      "html_url": "https://github.com/TheCharlatan",
      "followers_url": "https://api.github.com/users/TheCharlatan/followers",
      "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
      "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
      "repos_url": "https://api.github.com/users/TheCharlatan/repos",
      "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This pull request is part of the `libbitcoinkernel` project https://github.com/bitcoin/bitcoin/issues/24303 https://github.com/bitcoin/bitcoin/projects/18 and more specifically its \"Step 2: Decouple most non-consensus code from libbitcoinkernel\". dongcarl is the original author of this patchset, these commits were taken from https://github.com/dongcarl/bitcoin/tree/2022-03-libbitcoinkernel-chainparams-args-only. \r\n\r\n#### Context \r\n\r\nThe bitcoin kernel library currently relies on code containing user configurations through the `ArgsManager`. This is not optimal, since as a stand-alone library it should not rely on bitcoind's argument parsing logic. Instead, its interfaces should accept control and options structs that control the kernel library's desired configuration.\r\n\r\n\r\nSimilar work towards decoupling the `ArgsManager` from the kernel has been done in \r\nhttps://github.com/bitcoin/bitcoin/pull/25290, https://github.com/bitcoin/bitcoin/pull/25487, https://github.com/bitcoin/bitcoin/pull/25527 and https://github.com/bitcoin/bitcoin/pull/25862.\r\n\r\n#### Changes\r\n\r\nBy moving the `CChainParams` class definition into the kernel and giving it new factory functions `CChainParams::{RegTest,SigNet,Main,TestNet}`it can be constructed without an `ArgsManager` reference, unlike the current factory function `CreateChainParams`.\r\n\r\nThe first few commits remove uses of `ArgsManager` within `CChainParams`. Then the `CChainParams` definition is moved to a new file in the `kernel/` subdirectory.\r\n\r\n\r\n",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2022-09-24T15:42:36Z",
    "updated_at": "2023-03-17T15:30:24Z",
    "closed_at": "2023-03-16T13:56:49Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-03-16T13:56:49Z",
    "merge_commit_sha": "e695d8536e534f1e59de4a62a0d87a93e7a73456",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "TheCharlatan:tc/2022-09-libbitcoinkernel-chainparams-args",
      "ref": "tc/2022-09-libbitcoinkernel-chainparams-args",
      "sha": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 94456368,
        "node_id": "MDEwOlJlcG9zaXRvcnk5NDQ1NjM2OA==",
        "name": "bitcoin",
        "full_name": "TheCharlatan/bitcoin",
        "owner": {
          "login": "TheCharlatan",
          "id": 8421793,
          "node_id": "MDQ6VXNlcjg0MjE3OTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheCharlatan",
          "html_url": "https://github.com/TheCharlatan",
          "followers_url": "https://api.github.com/users/TheCharlatan/followers",
          "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
          "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
          "repos_url": "https://api.github.com/users/TheCharlatan/repos",
          "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/TheCharlatan/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/TheCharlatan/bitcoin",
        "archive_url": "https://api.github.com/repos/TheCharlatan/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheCharlatan/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheCharlatan/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheCharlatan/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheCharlatan/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheCharlatan/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheCharlatan/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheCharlatan/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheCharlatan/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/TheCharlatan/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/TheCharlatan/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/TheCharlatan/bitcoin/events",
        "forks_url": "https://api.github.com/repos/TheCharlatan/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheCharlatan/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/TheCharlatan/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheCharlatan/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheCharlatan/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheCharlatan/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheCharlatan/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheCharlatan/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/TheCharlatan/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/TheCharlatan/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheCharlatan/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheCharlatan/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheCharlatan/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheCharlatan/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/TheCharlatan/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/TheCharlatan/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheCharlatan/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/TheCharlatan/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/TheCharlatan/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/TheCharlatan/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheCharlatan/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/TheCharlatan/bitcoin/hooks",
        "svn_url": "https://github.com/TheCharlatan/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 211820,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T21:01:05Z",
        "created_at": "2017-06-15T16:03:35Z",
        "updated_at": "2023-05-21T09:47:16Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "8c4958bd4c06026dc108bc7f5f063d1f389d279b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:15:46Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 792,
    "deletions": 636,
    "changed_files": 12,
    "commits": 6,
    "review_comments": 88,
    "comments": 23
  },
  "events": [
    {
      "event": "mentioned",
      "id": 7452219183,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAG8L9cv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7452219183",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T15:42:36Z"
    },
    {
      "event": "subscribed",
      "id": 7452219187,
      "node_id": "SE_lADOABII585SiSOBzwAAAAG8L9cz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7452219187",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T15:42:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7452224757,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAG8L-z1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7452224757",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T15:47:01Z"
    },
    {
      "event": "commented",
      "id": 1257005711,
      "node_id": "IC_kwDOABII585K7GKP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1257005711",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T16:21:14Z",
      "updated_at": "2023-03-16T10:57:11Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [MarcoFalke](https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1470327165), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1342445222), [ajtowns](https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1343444925) |\n| Concept ACK | [dongcarl](https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1120755316), [jonatack](https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1458861089) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26201](https://github.com/bitcoin/bitcoin/pull/26201) (Remove Taproot activation height by Sjors)\n* [#25725](https://github.com/bitcoin/bitcoin/pull/25725) (consensus: Remove mainnet checkpoints by sdaftuar)\n* [#17783](https://github.com/bitcoin/bitcoin/pull/17783) (util: Fix -norpcwhitelist, -norpcallowip, and similar corner case behavior by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1257005711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7452304892,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAG8MSX8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7452304892",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T16:52:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7452315687,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAG8MVAn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7452315687",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T17:00:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7452359667,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAG8Mfvz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7452359667",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T17:33:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7452365947,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAG8MhR7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7452365947",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T17:38:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7452510129,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAG8NEex",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7452510129",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T19:41:24Z"
    },
    {
      "event": "ready_for_review",
      "id": 7452962816,
      "node_id": "RFRE_lADOABII585SiSOBzwAAAAG8OzAA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7452962816",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-25T05:31:01Z"
    },
    {
      "event": "labeled",
      "id": 7460930790,
      "node_id": "LE_lADOABII585SiSOBzwAAAAG8tMTm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7460930790",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-26T17:11:42Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "reviewed",
      "id": 1120755316,
      "node_id": "PRR_kwDOABII585CzV50",
      "url": null,
      "actor": null,
      "commit_id": "9714fe9160282dc36269b1d16d57dfdd48d0a1f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nDid a first-pass review. Perhaps @ajtowns and @kallewoof can help w/re the activation/chainparams/signet bits!",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1120755316",
      "submitted_at": "2022-09-26T19:18:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "reviewed",
      "id": 1121055600,
      "node_id": "PRR_kwDOABII585C0fNw",
      "url": null,
      "actor": null,
      "commit_id": "9714fe9160282dc36269b1d16d57dfdd48d0a1f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Having simple options structs as a buffer between code and `gArgs` is great IMO.\r\n\r\nSome comments below; code implementing them, and some other ideas at https://github.com/ajtowns/bitcoin/commits/202209-kernelchainparams ",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1121055600",
      "submitted_at": "2022-09-27T02:50:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "reviewed",
      "id": 1122231704,
      "node_id": "PRR_kwDOABII585C4-WY",
      "url": null,
      "actor": null,
      "commit_id": "9714fe9160282dc36269b1d16d57dfdd48d0a1f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Just reviewed the first commit so far, but already I think some things are a little overcomplicated and potentially buggy. I would suggest having a 1:1 correspondence between arguments and options, treating empty arguments as unset options, and keeping PR a pure refactoring which does not change behavior.\r\n\r\nStarted review (will update list below with progress).\r\n- [X] 8c0a94f1d56345c45304319e72b7f78626e47061 Decouple SigNetChainParams from ArgsManager (1/7)\r\n- [ ] 9929969d3e95197499f2c81c01702f11aa52ff0d Decouple RegTestChainParams from ArgsManager (2/7)\r\n- [ ] 4ca849d6bc2d617babdcb870ca1de4376917c11d Remove UpdateVersionBitsParameters (3/7)\r\n- [ ] 5d70983a84c9e09d315bd19296a08c26570b3b9a Add factory functions for Main/Test chainparams (4/7)\r\n- [ ] c00f4f7599b89df8196287176e743a99da1de67f split non/kernel chainparamsbase (5/7)\r\n- [ ] e461bd23908802ad806cdb25a4cfe9e23149dc57 Split non/kernel chainparams (6/7)\r\n- [ ] 9714fe9160282dc36269b1d16d57dfdd48d0a1f1 Wrap kernel chainparamsbase functions in kernel namespace (7/7)\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1122231704",
      "submitted_at": "2022-09-27T16:04:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7594843282,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAHEsByS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7594843282",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-15T11:26:35Z"
    },
    {
      "event": "commented",
      "id": 1279755388,
      "node_id": "IC_kwDOABII585MR4R8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1279755388",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-15T14:20:36Z",
      "updated_at": "2022-10-15T14:20:36Z",
      "author_association": "MEMBER",
      "body": "Thank you all for the reviews, I reworked my commits to include your suggestions. \r\n\r\n@ajtowns I molded most of your suggested code into the existing commits. I did not include the complete refactor of the `Consensus::BuriedDeployment` though.\r\n\r\n@ryanofsky the options structs are now instantiated with default values and read from the `ArgsManager` in dedicated functions. Since I decided to move the options structs into `CChainParams`, I did not move these dedicated functions into a separate file. ",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1279755388",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "mentioned",
      "id": 7595043053,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAHEsyjt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595043053",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-15T14:20:36Z"
    },
    {
      "event": "subscribed",
      "id": 7595043057,
      "node_id": "SE_lADOABII585SiSOBzwAAAAHEsyjx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595043057",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-15T14:20:36Z"
    },
    {
      "event": "mentioned",
      "id": 7595043059,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAHEsyjz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595043059",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-15T14:20:36Z"
    },
    {
      "event": "subscribed",
      "id": 7595043063,
      "node_id": "SE_lADOABII585SiSOBzwAAAAHEsyj3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595043063",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-15T14:20:36Z"
    },
    {
      "event": "reviewed",
      "id": 1143446002,
      "node_id": "PRR_kwDOABII585EJ5ny",
      "url": null,
      "actor": null,
      "commit_id": "03468cbc377ad1e73daf63ad37f29baca1944500",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1143446002",
      "submitted_at": "2022-10-17T03:01:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7605146936,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAHFTVU4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7605146936",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-17T19:17:12Z"
    },
    {
      "event": "labeled",
      "id": 7978792636,
      "node_id": "LE_lADOABII585SiSOBzwAAAAHbkra8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7978792636",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T15:05:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1354842364,
      "node_id": "IC_kwDOABII585QwUD8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1354842364",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T13:56:49Z",
      "updated_at": "2022-12-16T13:56:49Z",
      "author_association": "MEMBER",
      "body": "Ping @TheCharlatan for a rebase here.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1354842364",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "mentioned",
      "id": 8056873457,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAHgOiHx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8056873457",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T13:56:50Z"
    },
    {
      "event": "subscribed",
      "id": 8056873469,
      "node_id": "SE_lADOABII585SiSOBzwAAAAHgOiH9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8056873469",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T13:56:50Z"
    },
    {
      "event": "commented",
      "id": 1354922878,
      "node_id": "IC_kwDOABII585Qwnt-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1354922878",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T14:17:01Z",
      "updated_at": "2022-12-16T14:17:01Z",
      "author_association": "MEMBER",
      "body": "> Ping @TheCharlatan for a rebase here.\r\n\r\nWill get to it Monday.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1354922878",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "mentioned",
      "id": 8057038721,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAHgPKeB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8057038721",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T14:17:01Z"
    },
    {
      "event": "subscribed",
      "id": 8057038734,
      "node_id": "SE_lADOABII585SiSOBzwAAAAHgPKeO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8057038734",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T14:17:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8068640516,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAHg7a8E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8068640516",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-19T11:40:22Z"
    },
    {
      "event": "unlabeled",
      "id": 8068662543,
      "node_id": "UNLE_lADOABII585SiSOBzwAAAAHg7gUP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8068662543",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-19T11:43:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8089234920,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAHiJ-3o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8089234920",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-21T17:21:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8089345968,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAHiKZ-w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8089345968",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-21T17:38:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8094693447,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAHiezhH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8094693447",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-22T10:52:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8250029074,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAHrvXQS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8250029074",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-17T21:43:56Z"
    },
    {
      "event": "commented",
      "id": 1386101330,
      "node_id": "IC_kwDOABII585SnjpS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1386101330",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-17T21:44:32Z",
      "updated_at": "2023-01-17T21:44:32Z",
      "author_association": "MEMBER",
      "body": "Rebased.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1386101330",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "commented",
      "id": 1386866497,
      "node_id": "IC_kwDOABII585SqedB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1386866497",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T11:00:29Z",
      "updated_at": "2023-01-18T11:00:29Z",
      "author_association": "MEMBER",
      "body": "Looks like all three test failures are the same \"Blockchain is too short for pruning\":\r\n\r\nhttps://cirrus-ci.com/task/5072222193188864?logs=functional_tests#L2444\r\n```bash\r\n test  2023-01-17T22:29:12.633000Z TestFramework (ERROR): JSONRPC error \r\n                                   Traceback (most recent call last):\r\n                                     File \"C:\\Users\\ContainerAdministrator\\AppData\\Local\\Temp\\cirrus-ci-build\\test\\functional\\test_framework\\test_framework.py\", line 134, in main\r\n                                       self.run_test()\r\n                                     File \"C:\\Users\\ContainerAdministrator\\AppData\\Local\\Temp\\cirrus-ci-build\\test\\functional\\feature_index_prune.py\", line 73, in run_test\r\n                                       pruneheight_new = node.pruneblockchain(400)\r\n                                     File \"C:\\Users\\ContainerAdministrator\\AppData\\Local\\Temp\\cirrus-ci-build\\test\\functional\\test_framework\\coverage.py\", line 49, in __call__\r\n                                       return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n                                     File \"C:\\Users\\ContainerAdministrator\\AppData\\Local\\Temp\\cirrus-ci-build\\test\\functional\\test_framework\\authproxy.py\", line 146, in __call__\r\n                                       raise JSONRPCException(response['error'], status)\r\n                                   test_framework.authproxy.JSONRPCException: Blockchain is too short for pruning. (-1)\r\n```\r\n\r\nhttps://cirrus-ci.com/task/5037121606516736?logs=ci#L3282\r\n```bash\r\n test  2023-01-17T22:14:21.962000Z TestFramework (ERROR): JSONRPC error \r\n                                   Traceback (most recent call last):\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 134, in main\r\n                                       self.run_test()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/interface_usdt_utxocache.py\", line 150, in run_test\r\n                                       self.test_flush()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/interface_usdt_utxocache.py\", line 397, in test_flush\r\n                                       self.nodes[0].pruneblockchain(315)\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/coverage.py\", line 49, in __call__\r\n                                       return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py\", line 146, in __call__\r\n                                       raise JSONRPCException(response['error'], status)\r\n                                   test_framework.authproxy.JSONRPCException: Blockchain is too short for pruning. (-1)\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1386866497",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8257435958,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAHsLnk2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8257435958",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T16:13:30Z"
    },
    {
      "event": "commented",
      "id": 1396232848,
      "node_id": "IC_kwDOABII585TONKQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1396232848",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-18T23:35:22Z",
      "updated_at": "2023-01-18T23:35:22Z",
      "author_association": "MEMBER",
      "body": "Thanks for the heads up fanquake, there was a bug that is now fixed in 1ad1c68. I'm not sure about the one remaining test failure. ",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1396232848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "reviewed",
      "id": 1301437243,
      "node_id": "PRR_kwDOABII585Nkls7",
      "url": null,
      "actor": null,
      "commit_id": "f54210f50ec0cd44f026988308d975397a948d8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK f54210f50ec0cd44f026988308d975397a948d8c",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1301437243",
      "submitted_at": "2023-02-16T13:57:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8538465823,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAH87qYf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8538465823",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T15:47:22Z"
    },
    {
      "event": "commented",
      "id": 1433315562,
      "node_id": "IC_kwDOABII585Vbqjq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433315562",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T15:57:50Z",
      "updated_at": "2023-02-16T15:57:50Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review. [diff](https://github.com/bitcoin/bitcoin/compare/f54210f50ec0cd44f026988308d975397a948d8c..1f8c242e07a0842a3c7cc8735a6dde3e92327bb4)\r\n",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1433315562",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "review_requested",
      "id": 8538708698,
      "node_id": "RRE_lADOABII585SiSOBzwAAAAH88lra",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8538708698",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T16:08:46Z",
      "requested_reviewer": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 8538711184,
      "node_id": "RRRE_lADOABII585SiSOBzwAAAAH88mSQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8538711184",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T16:08:59Z",
      "requested_reviewer": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 8538711251,
      "node_id": "RRE_lADOABII585SiSOBzwAAAAH88mTT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8538711251",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T16:08:59Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 8538717856,
      "node_id": "RRRE_lADOABII585SiSOBzwAAAAH88n6g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8538717856",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T16:09:35Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 8538717870,
      "node_id": "RRE_lADOABII585SiSOBzwAAAAH88n6u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8538717870",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T16:09:35Z",
      "requested_reviewer": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 8596431449,
      "node_id": "LE_lADOABII585SiSOBzwAAAAIAYyJZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8596431449",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-23T22:18:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8596540799,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIAZM1_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8596540799",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-23T22:35:58Z"
    },
    {
      "event": "commented",
      "id": 1442521535,
      "node_id": "IC_kwDOABII585V-yG_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1442521535",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-23T22:36:11Z",
      "updated_at": "2023-02-23T22:36:11Z",
      "author_association": "MEMBER",
      "body": "Rebased.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1442521535",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "unlabeled",
      "id": 8597051835,
      "node_id": "UNLE_lADOABII585SiSOBzwAAAAIAbJm7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8597051835",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-24T00:22:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8603407594,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIAzZTq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8603407594",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-24T16:02:45Z"
    },
    {
      "event": "reviewed",
      "id": 1326436864,
      "node_id": "PRR_kwDOABII585PD9IA",
      "url": null,
      "actor": null,
      "commit_id": "a1db3966d1c4f4213d7bfd6be0ea7fb308fe4e11",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Partial code review ACK for 2ec5cdb9e4884b75623a0cc4328ac78bd5d075c9, which is the fourth commit. The first 4 commits resolve all the previous issues that were discussed and look ready to merge. I did leave some new comments about code style, but they aren't important and can be ignored.\r\n\r\nThe last 3 commits seem more half-baked to me, and might be better to split off. They require a different type of review anyway since they are moves and renames, not actual code changes. I left a more detailed comment below but basically I think the chainparams commits make sense and the chainparamsbase commits don't. So an alternative to splitting up this PR could be to drop the 5th and 7th commits.\r\n\r\n- [X] 2795ff9cc40383f74223736c3b96515faea37410 Decouple SigNetChainParams from ArgsManager (1/7)\r\n- [X] 1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc Decouple RegTestChainParams from ArgsManager (2/7)\r\n- [X] 96e01ecb18f926355fdad4da3d30d48788641082 Remove UpdateVersionBitsParameters (3/7)\r\n- [X] 2ec5cdb9e4884b75623a0cc4328ac78bd5d075c9 Add factory functions for Main/Test/Sig/Reg chainparams (4/7)\r\n- [ ] 2f2216dee7a683638e6a3e966142f50f5de7df78 split non/kernel chainparamsbase (5/7)\r\n- [X] 4820450688e371a99d66cfad24714fa6e041e43e Split non/kernel chainparams (6/7)\r\n- [ ] a1db3966d1c4f4213d7bfd6be0ea7fb308fe4e11 Wrap kernel chainparamsbase functions in kernel namespace (7/7)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1326436864",
      "submitted_at": "2023-03-06T18:08:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "commented",
      "id": 1458819504,
      "node_id": "IC_kwDOABII585W89Gw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1458819504",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T20:25:06Z",
      "updated_at": "2023-03-07T20:25:06Z",
      "author_association": "MEMBER",
      "body": "Thank you for the review! These are valuable and I hope they allow me to improve future commits. I'm pushing changes addressing comments up to the 4th commit now. \r\n\r\nUpdated a1db3966d1c4f4213d7bfd6be0ea7fb308fe4e11 -> 65d026b47270c2fb9d2dab7f3d448b4abc37b93a ([tc/2022-09-libbitcoinkernel-chainparams-args_0](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_0) -> [tc/2022-09-libbitcoinkernel-chainparams-args_1](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_1), [compare](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_0..tc/2022-09-libbitcoinkernel-chainparams-args_1)) to address some of @ryanofsky 's comments.\r\n\r\n> The last 3 commits seem more half-baked to me, and might be better to split off.\r\n\r\nI'll now move to assessing how to proceed here now. I agree though that chainparamsbase could go into another PR altogether. The current approach is kind of ugly.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1458819504",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "mentioned",
      "id": 8690142419,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAIF-QzT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8690142419",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T20:25:07Z"
    },
    {
      "event": "subscribed",
      "id": 8690142436,
      "node_id": "SE_lADOABII585SiSOBzwAAAAIF-Qzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8690142436",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T20:25:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8690150986,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIF-S5K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8690150986",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T20:26:01Z"
    },
    {
      "event": "commented",
      "id": 1458861089,
      "node_id": "IC_kwDOABII585W9HQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1458861089",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T20:54:12Z",
      "updated_at": "2023-03-07T20:54:12Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, thanks for working on this.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1458861089",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8691434373,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIGDMOF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8691434373",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T23:25:37Z"
    },
    {
      "event": "commented",
      "id": 1459021969,
      "node_id": "IC_kwDOABII585W9uiR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1459021969",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T23:26:01Z",
      "updated_at": "2023-03-08T10:13:36Z",
      "author_association": "MEMBER",
      "body": "> The last 3 commits seem more half-baked to me, and might be better to split off.\r\n\r\nOk, I kept the 5th commit, \"split non/kernel chainparamsbase\", but limited the rest to just moving the declaration of the `CBaseChainParams` class to the kernel. I also dropped the 7th commit \"wrap kernel chainparamsbase functions in kernel namespace\".\r\n\r\n\r\nUpdated 65d026b47270c2fb9d2dab7f3d448b4abc37b93a -> 067b727a9741ddabf44f6efd5125a9c8fbea0702 ([tc/2022-09-libbitcoinkernel-chainparams-args_1](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_1) -> [tc/2022-09-libbitcoinkernel-chainparams-args_2](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_2), [compare](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_1..tc/2022-09-libbitcoinkernel-chainparams-args_2)) to reduce the refactor of chainparamsbase as suggested by @ryanofsky.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1459021969",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "mentioned",
      "id": 8691436387,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAIGDMtj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8691436387",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T23:26:02Z"
    },
    {
      "event": "subscribed",
      "id": 8691436400,
      "node_id": "SE_lADOABII585SiSOBzwAAAAIGDMtw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8691436400",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T23:26:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8693775021,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIGMHqt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8693775021",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T07:30:04Z"
    },
    {
      "event": "commented",
      "id": 1459660428,
      "node_id": "IC_kwDOABII585XAKaM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1459660428",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T07:30:06Z",
      "updated_at": "2023-03-08T07:30:06Z",
      "author_association": "MEMBER",
      "body": "Updated 067b727a9741ddabf44f6efd5125a9c8fbea0702 -> f9e3c91f4d482b0c74ef899056d5a2c63e67e1fb ([tc/2022-09-libbitcoinkernel-chainparams-args_2](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_2) -> [tc/2022-09-libbitcoinkernel-chainparams-args_3](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_3), [compare](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_2..tc/2022-09-libbitcoinkernel-chainparams-args_3)) to undo an unnecessary order change in the makefile and to re-add a newline at the end of a file.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1459660428",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8695199863,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIGRjh3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8695199863",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T10:35:00Z"
    },
    {
      "event": "commented",
      "id": 1459958764,
      "node_id": "IC_kwDOABII585XBTPs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1459958764",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T10:35:09Z",
      "updated_at": "2023-03-08T10:35:09Z",
      "author_association": "MEMBER",
      "body": "Updated f9e3c91f4d482b0c74ef899056d5a2c63e67e1fb -> c44983faa02b4845cd7605abe99c332980a07af1 ([tc/2022-09-libbitcoinkernel-chainparams-args_3](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_3) -> [tc/2022-09-libbitcoinkernel-chainparams-args_4](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_4), [compare](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_3..tc/2022-09-libbitcoinkernel-chainparams-args_4)) to rebase on latest master for fixing an include issue causing CI build failures, add a commit to fix the regression introducing said include issue, and update the copyright header on `kernel/chainparamsbase.h`.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1459958764",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "reviewed",
      "id": 1331431527,
      "node_id": "PRR_kwDOABII585PXAhn",
      "url": null,
      "actor": null,
      "commit_id": "c44983faa02b4845cd7605abe99c332980a07af1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Partial code review ACK c44983faa02b4845cd7605abe99c332980a07af1 without the 5th commit, because I don't think CBaseChainParams should move to the kernel. Comment about that below, but feel free to ignore the other comments.\r\n\r\nOverall good changes, and nice that this is getting progressively simpler.\r\n\r\n- [X] b56f0555fd2b048bb1d37474cda706efece49ed5 Decouple SigNetChainParams from ArgsManager (1/7)\r\n- [X] 66b17894185e0cda3ea7cbec77cc771a7ba41d56 Decouple RegTestChainParams from ArgsManager (2/7)\r\n- [X] 2ea0e3a4266f1b7c3bddec5d68cae9347a9aad57 Remove UpdateVersionBitsParameters (3/7)\r\n- [X] e634311723aa43ba18bc45e1cf7e83fc4add5861 Add factory functions for Main/Test/Sig/Reg chainparams (4/7)\r\n- [ ] 341be7fa680e9dcdbaa46db0194833b5d0229394 split non/kernel chainparamsbase (5/7)\r\n- [X] 18099e9d28247002cc08407969feec4fada90b76 Split non/kernel chainparams (6/7)\r\n- [X] c44983faa02b4845cd7605abe99c332980a07af1 refactor: Don't use global chainparams in chainstatemanager method (7/7)\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1331431527",
      "submitted_at": "2023-03-08T21:46:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8701411114,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIGpP8q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8701411114",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T22:45:30Z"
    },
    {
      "event": "commented",
      "id": 1460991593,
      "node_id": "IC_kwDOABII585XFPZp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1460991593",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T22:46:11Z",
      "updated_at": "2023-03-08T22:46:11Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review,\r\n\r\nUpdated c44983faa02b4845cd7605abe99c332980a07af1 -> a7afa98ca38fd66fc69b77b95a6a57d50207911b ([tc/2022-09-libbitcoinkernel-chainparams-args_4](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_4) -> [tc/2022-09-libbitcoinkernel-chainparams-args_5](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_5), [compare](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_4..tc/2022-09-libbitcoinkernel-chainparams-args_5)) to address @ryanofsky 's latest comments. Drops the commit splitting chainparamsbase as suggested and addresses the two remaining nits.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1460991593",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "mentioned",
      "id": 8701416101,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAIGpRKl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8701416101",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T22:46:12Z"
    },
    {
      "event": "subscribed",
      "id": 8701416109,
      "node_id": "SE_lADOABII585SiSOBzwAAAAIGpRKt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8701416109",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T22:46:12Z"
    },
    {
      "event": "reviewed",
      "id": 1332732743,
      "node_id": "PRR_kwDOABII585Pb-NH",
      "url": null,
      "actor": null,
      "commit_id": "a7afa98ca38fd66fc69b77b95a6a57d50207911b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK a7afa98ca38fd66fc69b77b95a6a57d50207911b. This looks great, and much cleaner and simpler than the starting point. I'd encourage @ajtowns and anybody else who looked at this previously to have another look.\r\n\r\nI think that one remaining drawback is that the PR description is very verbose. I think the PR could be described in a few sentences as:\r\n\r\n* Move `CChainParams` class definition into the kernel, and give it new factory functions `CChainParams::{RegTest,Signet,Main,TestNet}` that allow it to be constructed without an `ArgsManager` reference, unlike the current factory function `CreateChainParams`.\r\n  \r\n  This allows external code using libbitcoinkernel to access to chain parameters and set chain options and call validation code without having to invoke bitcoind's argument parsing logic.\r\n  \r\n  Doing this required removing uses of `ArgsManager` within the `CChainParams` class itself, so the first few commits do that refactoring.\r\n\r\nFor reference, the [current PR description](https://github.com/bitcoin/bitcoin/pull/26177#issue-1384719233) is:\r\n\r\n> This pull request is mostly a code-move of chainparams related functionality into the kernel library. @dongcarl is the original author of this patchset, these commits were taken from https://github.com/dongcarl/bitcoin/tree/2022-03-libbitcoinkernel-chainparams-args-only.\r\n> \r\n> #### Context\r\n> The bitcoin kernel library currently relies on code containing user configurations through the `ArgsManager`. This is not optimal, since as a stand-alone library it should not rely on most of the user-defined configuration. Instead, its interfaces should accept control and options structs that control the kernel library's desired configuration.\r\n> \r\n> A lot of tweakable parameters are defined within `CChainParams` and depend on access on the global `ArgsManager gArgs` instance.\r\n> \r\n> #### Changes\r\n> This PR splits the chainparams code of chainparams.cpp/h and chainparamsbase.cpp/h into parts depending on `gArgs` access and parts that don't. These are then moved into separate files within the kernel/ directory.\r\n> \r\n> Though a lot of code had to be moved and reshuffled to accommodate to the validation of both `gArgs` and options structs, the behavior should not change by the hand of this PR.\r\n> \r\n> Similar work towards decoupling the `ArgsManager` from the kernel has been done in #25290, #25487 and #25527. Similar PR's are open in #25862 and #25152.\r\n> \r\n> #### Currently Identified Drawbacks\r\n> The patches touch a large amount of consensus critical code. I tried to keep the change sets as incremental and easy to review as possible, but a lot of manual comparison of diffs will have to be done.\r\n> \r\n> There is no patch done yet introducing the kernel/chainparams.cpp/h into the kernel namespace. Such a change would be very intrusive to the entire codebase and hard to review as part of this patch set. Due to its intrusiveness, I am not sure whether this is the correct path forward or not.\r\n> \r\n> ~The `globalChainBaseParams` global had to be moved into the kernel chainparamsbase.cpp in order to allow calls to `BaseParams()` from contexts without access to gArgs. This is not ideal, but was the only way forward I could think of so far without basing this pull request on more prior work decoupling `gArgs` from the various call sites of `BaseParams()`.~ ~EDIT: `chainparamsbase.cpp` is left untouched now. Only the class declaration of `CBaseChainParams` is moved to the kernel directory.~ EDIT 2: `chainparamsbase.*` is left untouched. See [#26177 (comment)](https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1130039156) for reasoning.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1332732743",
      "submitted_at": "2023-03-09T12:44:08Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "commented",
      "id": 1462019276,
      "node_id": "IC_kwDOABII585XJKTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1462019276",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T12:57:41Z",
      "updated_at": "2023-03-09T12:57:41Z",
      "author_association": "MEMBER",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/26177#issue-1384719233\r\n\r\n> There is no patch done yet introducing the kernel/chainparams.cpp/h into the kernel namespace. Such a change would be very intrusive to the entire codebase and hard to review as part of this patch set. Due to its intrusiveness, I am not sure whether this is the correct path forward or not.\r\n\r\nI think this PR is doing the right thing. If you move code into the kernel incrementally, and then set the namespace at the end after the code is moved, that avoids the need in incremental commits to add `kernel::` in code before it is moved, and then remove `kernel::` after moving it, which would just be a lot of noise.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1462019276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "commented",
      "id": 1462197743,
      "node_id": "IC_kwDOABII585XJ13v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1462197743",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T14:54:47Z",
      "updated_at": "2023-03-09T14:54:47Z",
      "author_association": "MEMBER",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1332732743\r\n\r\n> I think that one remaining drawback is that the PR description is very verbose. I think the PR could be described in a few sentences as:\r\n...\r\n\r\nThank you for the suggestions. I cleaned the description.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1462197743",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "referenced",
      "id": 8740797445,
      "node_id": "REFE_lADOABII585SiSOBzwAAAAII_fwF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8740797445",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b175bdb9b25c0a95cc6d2340cf756f17aaa435fb",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/b175bdb9b25c0a95cc6d2340cf756f17aaa435fb",
      "created_at": "2023-03-14T08:56:49Z"
    },
    {
      "event": "labeled",
      "id": 8741469200,
      "node_id": "LE_lADOABII585SiSOBzwAAAAIJCDwQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8741469200",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T09:59:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8742359532,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIJFdHs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8742359532",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T11:21:50Z"
    },
    {
      "event": "commented",
      "id": 1467916011,
      "node_id": "IC_kwDOABII585Xfp7r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1467916011",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T11:22:05Z",
      "updated_at": "2023-03-14T11:22:05Z",
      "author_association": "MEMBER",
      "body": "Rebased a7afa98ca38fd66fc69b77b95a6a57d50207911b -> 45048c0d7e0ee12210d226239fb5ce63d9ed4441 ([tc/2022-09-libbitcoinkernel-chainparams-args_5](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_5) -> [tc/2022-09-libbitcoinkernel-chainparams-args_6](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_6), [compare](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_5..tc/2022-09-libbitcoinkernel-chainparams-args_6)) to resolve conflict.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1467916011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "unlabeled",
      "id": 8742805547,
      "node_id": "UNLE_lADOABII585SiSOBzwAAAAIJHKAr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8742805547",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:06:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1339477414,
      "node_id": "PRR_kwDOABII585P1s2m",
      "url": null,
      "actor": null,
      "commit_id": "45048c0d7e0ee12210d226239fb5ce63d9ed4441",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 45048c0d7e0ee12210d226239fb5ce63d9ed4441\r\n\r\nAgree with ryanofsky -- \"This looks great, and much cleaner and simpler than the starting point.\" but some nits anyway.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1339477414",
      "submitted_at": "2023-03-14T14:59:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "review_requested",
      "id": 8744769231,
      "node_id": "RRE_lADOABII585SiSOBzwAAAAIJOpbP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8744769231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:59:38Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8745317008,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIJQvKQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8745317008",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T15:43:20Z"
    },
    {
      "event": "commented",
      "id": 1468348476,
      "node_id": "IC_kwDOABII585XhTg8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468348476",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T15:43:55Z",
      "updated_at": "2023-03-14T15:43:55Z",
      "author_association": "MEMBER",
      "body": "Updated 45048c0d7e0ee12210d226239fb5ce63d9ed4441 -> 600ab02bf58e073a93936438a7e884b3a7110f1c ([tc/2022-09-libbitcoinkernel-chainparams-args_6](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_6) -> [tc/2022-09-libbitcoinkernel-chainparams-args_7](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_7), [compare](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_6..tc/2022-09-libbitcoinkernel-chainparams-args_7)) to address @ajtowns 's comment https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1135671989 using consistent class member definition accessing and cleaning up the diff.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1468348476",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "mentioned",
      "id": 8745327325,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAIJQxrd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8745327325",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T15:43:56Z"
    },
    {
      "event": "subscribed",
      "id": 8745327360,
      "node_id": "SE_lADOABII585SiSOBzwAAAAIJQxsA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8745327360",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T15:43:56Z"
    },
    {
      "event": "reviewed",
      "id": 1339764522,
      "node_id": "PRR_kwDOABII585P2y8q",
      "url": null,
      "actor": null,
      "commit_id": "600ab02bf58e073a93936438a7e884b3a7110f1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 600ab02bf58e073a93936438a7e884b3a7110f1c. Only changes since last review were rebase, and making suggested changes to make the split commit move only",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1339764522",
      "submitted_at": "2023-03-14T16:39:58Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "review_requested",
      "id": 8746067478,
      "node_id": "RRE_lADOABII585SiSOBzwAAAAIJTmYW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8746067478",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T16:40:05Z",
      "requested_reviewer": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1340568878,
      "node_id": "PRR_kwDOABII585P53Uu",
      "url": null,
      "actor": null,
      "commit_id": "600ab02bf58e073a93936438a7e884b3a7110f1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 600ab02bf58e073a93936438a7e884b3a7110f1c",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1340568878",
      "submitted_at": "2023-03-15T02:55:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "review_requested",
      "id": 8752023192,
      "node_id": "RRE_lADOABII585SiSOBzwAAAAIJqUaY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8752023192",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T07:37:14Z",
      "requested_reviewer": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1341271390,
      "node_id": "PRR_kwDOABII585P8i1e",
      "url": null,
      "actor": null,
      "commit_id": "600ab02bf58e073a93936438a7e884b3a7110f1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Nice. I left some non-blocking nits. Please advise maintainers if this should be merged and if you plan to address the nits (if any).\r\n\r\nreview ACK 600ab02bf58e073a93936438a7e884b3a7110f1 💒\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: review ACK 600ab02bf58e073a93936438a7e884b3a7110f1 💒\r\nkzm7rHrxddPB+LjaomzYoCJON/6jVUm4ilbYIF+uPjDG2kXx6jB3bd9r+RtMuVEKCtA3jrp/uE0wa/yO1RytDA==\r\n```\r\n\r\n</details>\r\n\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1341271390",
      "submitted_at": "2023-03-15T12:45:32Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "commented",
      "id": 1470084204,
      "node_id": "IC_kwDOABII585Xn7Rs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1470084204",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T14:12:40Z",
      "updated_at": "2023-03-15T14:12:40Z",
      "author_association": "MEMBER",
      "body": "re https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1341271390\r\n>  Please advise maintainers if this should be merged and if you plan to address the nits (if any).\r\n\r\nYes, will address the nits. It think it's worth another round.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1470084204",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "commented",
      "id": 1470098332,
      "node_id": "IC_kwDOABII585Xn-uc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1470098332",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T14:21:52Z",
      "updated_at": "2023-03-15T14:21:52Z",
      "author_association": "MEMBER",
      "body": "Ok, but please don't address those that are marked \"unrelated\", as that would not be refactoring changes, but behavior changes/bugfixes.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1470098332",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc2Y2Q0ZTdjOTYyNDIzOTgxNzI5ODk2MDlmMWI5YTg4NDNjNDA0YjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76cd4e7c96242398172989609f1b9a8843c404b4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/76cd4e7c96242398172989609f1b9a8843c404b4",
      "tree": {
        "sha": "87d042a74601a0256709aede9aaa85aa8586a3b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87d042a74601a0256709aede9aaa85aa8586a3b7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 87d042a74601a0256709aede9aaa85aa8586a3b7\nparent b175bdb9b25c0a95cc6d2340cf756f17aaa435fb\nauthor Carl Dong <contact@carldong.me> 1646802816 -0500\ncommitter TheCharlatan <seb.kung@gmail.com> 1678893009 +0100\n\nDecouple SigNetChainParams from ArgsManager\n\nSigNet chain params can now be initialized by configuring a\nSigNetOptions struct, or with ArgsManager. This offers an interface for\ncreating SigNetChainParams without a gArgs object.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmQR39IACgkQm3m0VpHb\nQXN2Xw//YybWtp1VGhQsfeT+rU3cOAEusR26kgso3rPpIerz4s0IQF6D7ML0aKNp\njpm1vTOI3BwbPK6OwFOaZFJizPcrifWVkD1Rytk3stIhYq3qWvv2fpCaEqtZQtyV\nY2bfhXbGwBMQhZOHv229GtPW7HLK7tNv+StUMYZJu1Dk4twQqUkoe0n0fgFNEwc0\nW00ftXMxuXNGRjKvH0Vhpai6oZihA0Vz3z+LJnEYla8lrTV2P2ZdRebctrm1HgS5\nkI3V4MBdny4TTjoy3B0nOAdRuvSpOFJl/mSfYYo0arsJFPeXiFAvv6FdaWc1Lnao\nkedCGZlNl26L5Vpj7rorfzCjd1c65H6H2wdnjIy8CVMc68FTs3HcYKK14WAt7Rn8\ny0Q8b+xMOd3ebM7ezE0OptPAuQVmhPFQymXQD5/IsJ3L3+H1D1S3bfBVr5bHongz\nLXLkPQW10VqqyqKiik8bHF2Q0VQpyVPfjTfN2ooC9kW682tj540Jh32OvwRLd0Cf\nrA92HN2a1fdQpEM3Kvixxjz8XTGDz1x0X6AWCTRg68hA0ZxaeRcJKYcJqzqXnYm1\nPJqreh2fER1pTAbm5EJY6imEfRiLQU+buenZXQZ/pDtu09GHul1+Bx3+GKbSolTd\nMctlzrerBSfML1qNjfHLlBzao7g5JvuquChEqP+ZQyiuwPZpjzQ=\n=NRQx\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b175bdb9b25c0a95cc6d2340cf756f17aaa435fb",
          "sha": "b175bdb9b25c0a95cc6d2340cf756f17aaa435fb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b175bdb9b25c0a95cc6d2340cf756f17aaa435fb"
        }
      ],
      "message": "Decouple SigNetChainParams from ArgsManager\n\nSigNet chain params can now be initialized by configuring a\nSigNetOptions struct, or with ArgsManager. This offers an interface for\ncreating SigNetChainParams without a gArgs object.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2023-03-15T15:10:09Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-09T05:13:36Z"
      },
      "sha": "76cd4e7c96242398172989609f1b9a8843c404b4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg0Yjg1Nzg2ZjBmNWNiMjNjYzI1N2E0NDY0YWUzNDVlMWQzNzIzMTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84b85786f0f5cb23cc257a4464ae345e1d372313",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/84b85786f0f5cb23cc257a4464ae345e1d372313",
      "tree": {
        "sha": "ef292571361801e2e0953d0c1a82e2e54b4717d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef292571361801e2e0953d0c1a82e2e54b4717d2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ef292571361801e2e0953d0c1a82e2e54b4717d2\nparent 76cd4e7c96242398172989609f1b9a8843c404b4\nauthor Carl Dong <contact@carldong.me> 1646860299 -0500\ncommitter TheCharlatan <seb.kung@gmail.com> 1678894962 +0100\n\nDecouple RegTestChainParams from ArgsManager\n\nRegTest chain params can now be initialized by configuring a\nRegTestOptions struct, or with ArgsManager. This offers an interface for\ncreating RegTestChainParams without a gArgs object.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmQR53MACgkQm3m0VpHb\nQXPypBAApUq4W58GzEi0FpzcarO+kn5JKRfK3YGIYaDpMB1aGVsyq5wQ13u4IZ4v\ncW6xIdZaoou83u4X/xRaJWTOKJjBty/PxbDU0NFxbH6WZ1KGYCS7SNeQqSRVnsdA\nNpGogEN9POLz4BwCbbZ6FiH/jDkv9Qzbu97w9HdYID5HByVsw2c5YbXlTLy3scIP\nInKPu9xIC7DLtzxIWgANmw1bQIN5hhYkZ3lY3fD98y5BUubxbQHBeYTUPB3L6T9n\nx3ztsfMKvcPMXGii/IMDI7oO16a+pATepaNsptmLAZkEbSCMVYo8lapUm5977aj5\nYJKxGQ3klgBKwCiHZ38lKd18IoO9ID3xpuUR72fz7slPk3hDag3I4nGLoHVR9Ow5\nhHfypQnfRG2/ta/cLGG2n4/nQ3itkWIbhUfSmjBM/J2V8TqaRZQF9OtWp8L8fvho\nlE37BrlsEgsXZRVlVq77pfLzFSUKGHXiZR7C2L7A2eAhQTCDgNhQZ4QCqfD9FC5A\nbND3m/907lesNvURIl3uwJ+RwLocG+GfYDC5BMw94IsKCA+Q5fPmLCKPCGioU799\n4dYtFAV4tDZ8Bf+DfcxS9Dgm8ultv9+rQMpWHQ9FifjM47RtPN88Re7WXROdhwjJ\nC/eE3duKEXyHR+ZVzYFl1yRW3v71p8fAMwiBmIFaPQSEZjJMfRU=\n=8py2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76cd4e7c96242398172989609f1b9a8843c404b4",
          "sha": "76cd4e7c96242398172989609f1b9a8843c404b4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/76cd4e7c96242398172989609f1b9a8843c404b4"
        }
      ],
      "message": "Decouple RegTestChainParams from ArgsManager\n\nRegTest chain params can now be initialized by configuring a\nRegTestOptions struct, or with ArgsManager. This offers an interface for\ncreating RegTestChainParams without a gArgs object.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2023-03-15T15:42:42Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-09T21:11:39Z"
      },
      "sha": "84b85786f0f5cb23cc257a4464ae345e1d372313"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ5MzgwOTgzOTg4MTRmMzdmZWQ5YjAxOGI0NDcxNjE3OWNmYTRiMDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d938098398814f37fed9b018b44716179cfa4b03",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d938098398814f37fed9b018b44716179cfa4b03",
      "tree": {
        "sha": "e2d8cf52ead2935a062979323c84d0bf52b2a1b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2d8cf52ead2935a062979323c84d0bf52b2a1b6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e2d8cf52ead2935a062979323c84d0bf52b2a1b6\nparent 84b85786f0f5cb23cc257a4464ae345e1d372313\nauthor Carl Dong <contact@carldong.me> 1646860666 -0500\ncommitter TheCharlatan <seb.kung@gmail.com> 1678895007 +0100\n\nRemove UpdateVersionBitsParameters\n\nMoves setting struct member fields from a function to its call site.\nThis improves readability by surfacing the code.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmQR558ACgkQm3m0VpHb\nQXPydg/9FwYrYwqDb/L7/isgMCahF3d6e6tWXxnaKLxgf3fXoBMr3ghOEIbK74OZ\nd/+m64xL+0DEimOU9Yarwhc0xBEa+/puX0gQqu+HXUigdd/smqodl9Aio/2hh5O7\n+I1hnJ34PrwkXfOw7vSvqpPOuKopZdoX/7JRkRH8W+4c1XMDglYbm2ItyadQZOCx\nvkKBQd67MrQxtOwyrcpdiDRDIEQNdO59ha2dyJddBKd0wXpf4bdQgSrTlJ1zTczX\n7wCsNm2uNRHlxKfERj5mnNIvTOjSKWBPF8Efl5P6l8XkGXcjA7USD78CtjJ3v572\n2O+7gW2rFvhCHKA44yL4ZSjgriDM9wsP07DyDvjX2ROv7rUMnEIFnlI0k3XdJHpc\n2Xs7vF+ZutPO36bzivdg/t/Pom3kbJyKk+xkZ/gq082mGe3ikWriIpz/IdAn+vLP\nbCivYQMVljcRzJ11ZazQjblfhuY++llAk8rv15w8dRz4J/QSzqoIUVORW7X70r6t\nsC2GgrckR4fnD8qmGn5V56iPtjB81sPWiwye0kz8SjIUcvIXilZB7dotdzDSstY8\nzLs0UmsSut2Q6pi58Gm76Foa4tk9lBpzEvMJl/XdVgMYhqtyMzuG3Uvsbio0GK7H\nDxT9X+fyT72PmMadi4BGoLGB3JRgC+e46y94f/nqjYv4sXWzObs=\n=k2lX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84b85786f0f5cb23cc257a4464ae345e1d372313",
          "sha": "84b85786f0f5cb23cc257a4464ae345e1d372313",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/84b85786f0f5cb23cc257a4464ae345e1d372313"
        }
      ],
      "message": "Remove UpdateVersionBitsParameters\n\nMoves setting struct member fields from a function to its call site.\nThis improves readability by surfacing the code.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2023-03-15T15:43:27Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-09T21:17:46Z"
      },
      "sha": "d938098398814f37fed9b018b44716179cfa4b03"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkYWJiYzc4YTNiYzI3MmIyYjgwMmUxZGJhYjczZDZlZDhlMzFlOTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edabbc78a3bc272b2b802e1dbab73d6ed8e31e96",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/edabbc78a3bc272b2b802e1dbab73d6ed8e31e96",
      "tree": {
        "sha": "d72d36d2223e62db192710b4efa44155b6a61a6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d72d36d2223e62db192710b4efa44155b6a61a6d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d72d36d2223e62db192710b4efa44155b6a61a6d\nparent d938098398814f37fed9b018b44716179cfa4b03\nauthor Carl Dong <contact@carldong.me> 1646950865 -0500\ncommitter TheCharlatan <seb.kung@gmail.com> 1678895009 +0100\n\nAdd factory functions for Main/Test/Sig/Reg chainparams\n\nThis normalizes the behavior of initializing Main/Test/Sig/Reg\nchainparams with RegTest/SigNet chainparams. These factory functions can\nalso easily be used from a context without an instantiated ArgsManager,\ne.g. from libbitcoin kernel code, unlike the existing CreateChainParams\nmethod.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmQR56EACgkQm3m0VpHb\nQXN96A/7BSRNmbfYKBh8pWvrFcSZKY5K2oP1gOeEWxEZTYSp9ti0Ba5Z2y5RB8/e\nhdL6C6LcS3/UMpARL91I0MyFbZ5MQGB0u8i7J/UzyNhxagl/+uooKXr3Tf5fVUix\nTVFWuaC13jSRpUBoys6JC2fjxZ/GMkNxW+E0SroguU6lTCdpIUcrNa82XOKJ++Cb\n6zDbzYwUOFv8Kql9p97mZLHmReZlX6eeDigUVilg8QDZ9SnFexUcJownO6DYo0K3\nmJGYro2LGLI6MDsUDEyHou5J24oT5LepAK/lkqZVLPwFuCHOhe+Tdbo/fJc3lnYE\nTiMy33hV5SLTeCGc+MDYasIpZVkoR4QiP3J6DJ+Q7w1Xv3+rbZ0lqLkja4d1Iarz\njuOmIT70Wu9SND315RX4S0H2ZBYyg7SouNHH1CpyXA6/NvZK7rg/suAw8P2PhE7i\nYB7Czm7JqxT1zDi9PL37tWl3WjDkNtQ+8ENYYGgHUzkK0EaHDVbkWL3PJCooxv68\nmDMj+86IAW98c1cV4RDsYwIpcH1QNwXTF8NcRzTjQCcAsWH+uKwLnrsBDFcdyUS/\npB+jc6w3L6g/onA4e3hK3QtgoTPz5Jhdg7r69Jo2ke61X2q5028T5H9d0pNq3uHB\n/quYQHsuQRkZga2v2FtfIamgLsbe15nc1aJVzTxzj4gFheRh4Ps=\n=pMSe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d938098398814f37fed9b018b44716179cfa4b03",
          "sha": "d938098398814f37fed9b018b44716179cfa4b03",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d938098398814f37fed9b018b44716179cfa4b03"
        }
      ],
      "message": "Add factory functions for Main/Test/Sig/Reg chainparams\n\nThis normalizes the behavior of initializing Main/Test/Sig/Reg\nchainparams with RegTest/SigNet chainparams. These factory functions can\nalso easily be used from a context without an instantiated ArgsManager,\ne.g. from libbitcoin kernel code, unlike the existing CreateChainParams\nmethod.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2023-03-15T15:43:29Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-10T22:21:05Z"
      },
      "sha": "edabbc78a3bc272b2b802e1dbab73d6ed8e31e96"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM4MmI2OTJhNTAzMzU1ZGY3MzQ3ZWZkOWMxMjhhZmY0NjViNTU4M2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/382b692a503355df7347efd9c128aff465b5583e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/382b692a503355df7347efd9c128aff465b5583e",
      "tree": {
        "sha": "8437d33c9cd659a3663df4e2dea064284e326fe2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8437d33c9cd659a3663df4e2dea064284e326fe2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8437d33c9cd659a3663df4e2dea064284e326fe2\nparent edabbc78a3bc272b2b802e1dbab73d6ed8e31e96\nauthor Carl Dong <contact@carldong.me> 1646968438 -0500\ncommitter TheCharlatan <seb.kung@gmail.com> 1678895011 +0100\n\nSplit non/kernel chainparams\n\nMoves chainparams code not using the ArgsManager to the kernel.\n\nSubsequently use the kernel chainparams header now where possible in\norder to further decouple chainparams call sites from gArgs.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmQR56MACgkQm3m0VpHb\nQXOQgw//WUQtSFFwLIz8LOJJ5J0uOORuGpsnBb+AP6+cnSlnW0ssk5nMXiRU4ix9\nAGVmWPaQ41Eymz+tssV2K6TBPSUVdFqZxQ2zFCaPziTqfOXNjAewpjfxEOi2uzHk\naEKQskQ5eganPkb43iB7jBLChvKnKwtH+/Vhij7pSA0U3X+WVlSJ29oAK58aR1oi\n6FF8YHXmv/o6PVxIkOuOoiGpveyeUfCXK1vXbFHFAu/Sx8Fva5OAK/upE9f9aG70\nFlZSvo0WYQYrw+jBScQdEqMNqDfPd2arfMAY1JxtR32qpvGDtzIMleUqkQybBlgg\nPjbNFoYHDzRMdemgfvnP8LV3/1DLPCft4s6L0A5R6TFv6T7OO81bIgkvkKBSk1YQ\ndholq/f7JYJuh6CQ+EIRQtxoF788wq0m4/wrCXf9xOYVSpmCs6aNMfAt3MbyCEkl\nhJ7gmN2jkeVoXI7pIAtcbYu6SNGKn3hnRom3qsqmvUAAJM6B2m5IvmCp0Je3ZExl\nLVVJPEuG3Y353VLMc8FRISO1TVk9v2cFHzu2nRGmNQruHBHbFPw3HYa8o2okbMCg\n4SmGrdElNOwrWIr06wqmnhOg2LKKb0tfDl+HwU/Jbm4xZ/23jRe/EIAefWvRjRm6\niS6u02W/lnxnX4+iy1XlBj0FGUKLoYkXRtZMXdkbKUC8m/Jfvo8=\n=9Of4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edabbc78a3bc272b2b802e1dbab73d6ed8e31e96",
          "sha": "edabbc78a3bc272b2b802e1dbab73d6ed8e31e96",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/edabbc78a3bc272b2b802e1dbab73d6ed8e31e96"
        }
      ],
      "message": "Split non/kernel chainparams\n\nMoves chainparams code not using the ArgsManager to the kernel.\n\nSubsequently use the kernel chainparams header now where possible in\norder to further decouple chainparams call sites from gArgs.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2023-03-15T15:43:31Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-11T03:13:58Z"
      },
      "sha": "382b692a503355df7347efd9c128aff465b5583e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIzZTc4ZGM5MWQwMWUzNjRiNzdhYWNkOWZiOWEyZjg4Njg4YWI4YTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "tree": {
        "sha": "8107909b5b26279a7e3973fd15ae6e2e14df8402",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8107909b5b26279a7e3973fd15ae6e2e14df8402"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8107909b5b26279a7e3973fd15ae6e2e14df8402\nparent 382b692a503355df7347efd9c128aff465b5583e\nauthor TheCharlatan <seb.kung@gmail.com> 1678270622 +0100\ncommitter TheCharlatan <seb.kung@gmail.com> 1678895013 +0100\n\nrefactor: Don't use global chainparams in chainstatemanager method\n\nThe chainstatemanager m_options.chainparams member variable gets its\nvalue from the global chainparams in init.cpp. This allows\nvalidation.cpp to only include the the kernel chainparams file.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmQR56UACgkQm3m0VpHb\nQXPs3hAAk7gIFXYArbk5uftlgoEm8SK5xivi4Gx7zqeawVz2gTrHMwO0hh49fPRu\n+/fUSL3gyRksucZxLsSzg9RKgvxnt/ekDhz7VE/5QTIYpk7hAM+D9JIDLfhADX6R\ny+mcWsyZARcMjZK9jrTdPxl6CtaGWYI5/sFcK4zf13zGLyXse8qF76SPJnBnift7\n2+j123DqVWCQseXrQ6MYn4rbFZ/brlif/+yWOqtfADR8iOiiwqyH1vkPojNuzpLA\nvKgahwuuZ/5X2cHBDwoPVxsz37NjvVUQiLsG9rzN0PJs76J8UfWSrZ/yaOKbKo0P\nJuzNdKNgWLs5bqkK5bTxjaIXMsRgYnVyl3QLCRbz1hpizrzKOqulX8grGch3c2eB\nCisLJeEuG2ab8J3natckrjzb0ObfCz2EB2yTX3f1eMphbFEnr9OJtAkR90guYeyJ\n3dgP7v/jFm07zIyD21LNlB7YT0a86oPVwANNoMv1ZD0+ULlEPyxPoVBRPGx3wqAJ\nB0aiF7K/gzyQxArOvSKNH465Dt3FumMiQBlhkZZZmvU0h4C0ZdZ044kVeYRiTSUh\n6C16tbe+ji6s11LfgVvQ7wN9vmvc1QSuWnBf5viuhaMJfJimUjainUYmpn19+dZ0\nJ4KtHHsjVGCjj1cjlHSOTMncllgO8n/pil6dnFUibgaoYswWADo=\n=QY6e\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/382b692a503355df7347efd9c128aff465b5583e",
          "sha": "382b692a503355df7347efd9c128aff465b5583e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/382b692a503355df7347efd9c128aff465b5583e"
        }
      ],
      "message": "refactor: Don't use global chainparams in chainstatemanager method\n\nThe chainstatemanager m_options.chainparams member variable gets its\nvalue from the global chainparams in init.cpp. This allows\nvalidation.cpp to only include the the kernel chainparams file.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2023-03-15T15:43:33Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2023-03-08T10:17:02Z"
      },
      "sha": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8757158894,
      "node_id": "HRFPE_lADOABII585SiSOBzwAAAAIJ96Pu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8757158894",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T15:49:42Z"
    },
    {
      "event": "commented",
      "id": 1470291207,
      "node_id": "IC_kwDOABII585Xot0H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1470291207",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T15:49:54Z",
      "updated_at": "2023-03-15T15:49:54Z",
      "author_association": "MEMBER",
      "body": "Thank you for the review!\r\n\r\nUpdated 600ab02bf58e073a93936438a7e884b3a7110f1c -> b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6 ([tc/2022-09-libbitcoinkernel-chainparams-args_7](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_7) -> [tc/2022-09-libbitcoinkernel-chainparams-args_8](https://github.com/TheCharlatan/bitcoin/commits/tc/2022-09-libbitcoinkernel-chainparams-args_8), [compare](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_7..tc/2022-09-libbitcoinkernel-chainparams-args_8)) to address @MarcoFalke's nits.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1470291207",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "mentioned",
      "id": 8757161620,
      "node_id": "MEE_lADOABII585SiSOBzwAAAAIJ966U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8757161620",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T15:49:55Z"
    },
    {
      "event": "subscribed",
      "id": 8757161653,
      "node_id": "SE_lADOABII585SiSOBzwAAAAIJ9661",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8757161653",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T15:49:55Z"
    },
    {
      "event": "commented",
      "id": 1470327165,
      "node_id": "IC_kwDOABII585Xo2l9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1470327165",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T16:10:50Z",
      "updated_at": "2023-03-15T16:10:50Z",
      "author_association": "MEMBER",
      "body": "re-ACK b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6 🛁\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6 🛁\r\npGFBFXVOeOhFMH19Wl5XyydIloTKbVPWTgtwXZ9tuyT+RBzlOb30I4YoZ777kOwafST63JsYR/9m9ftyZqo1AA==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#issuecomment-1470327165",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177"
    },
    {
      "event": "review_requested",
      "id": 8757403442,
      "node_id": "RRE_lADOABII585SiSOBzwAAAAIJ-18y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8757403442",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T16:10:56Z",
      "requested_reviewer": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 8757403470,
      "node_id": "RRE_lADOABII585SiSOBzwAAAAIJ-19O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8757403470",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T16:10:56Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1342445222,
      "node_id": "PRR_kwDOABII585QBBam",
      "url": null,
      "actor": null,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6. Only changes since last review were recent review suggestions.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1342445222",
      "submitted_at": "2023-03-15T21:18:30Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "reviewed",
      "id": 1343444925,
      "node_id": "PRR_kwDOABII585QE1e9",
      "url": null,
      "actor": null,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#pullrequestreview-1343444925",
      "submitted_at": "2023-03-16T10:57:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
    },
    {
      "event": "unsubscribed",
      "id": 8767662406,
      "node_id": "UE_lADOABII585SiSOBzwAAAAIKl-lG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8767662406",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T13:55:34Z"
    },
    {
      "event": "merged",
      "id": 8767679142,
      "node_id": "ME_lADOABII585SiSOBzwAAAAIKmCqm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8767679142",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e695d8536e534f1e59de4a62a0d87a93e7a73456",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e695d8536e534f1e59de4a62a0d87a93e7a73456",
      "created_at": "2023-03-16T13:56:49Z"
    },
    {
      "event": "closed",
      "id": 8767679244,
      "node_id": "CE_lADOABII585SiSOBzwAAAAIKmCsM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8767679244",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T13:56:50Z"
    },
    {
      "event": "referenced",
      "id": 8770123116,
      "node_id": "REFE_lADOABII585SiSOBzwAAAAIKvXVs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8770123116",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "83b49c647f046ea4b8328d54fe8f1bd201ef54c6",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/83b49c647f046ea4b8328d54fe8f1bd201ef54c6",
      "created_at": "2023-03-16T17:20:33Z"
    },
    {
      "event": "referenced",
      "id": 8770133406,
      "node_id": "REFE_lADOABII585SiSOBzwAAAAIKvZ2e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8770133406",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2a3f87bc4504c979dc16a17a6005f04949ad4a24",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/2a3f87bc4504c979dc16a17a6005f04949ad4a24",
      "created_at": "2023-03-16T17:21:43Z"
    },
    {
      "event": "referenced",
      "id": 8913155735,
      "node_id": "REFE_lADOABII585SiSOBzwAAAAITQ_aX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8913155735",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "369d4c03b7084de967576759545ba36a17fc18bb",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/369d4c03b7084de967576759545ba36a17fc18bb",
      "created_at": "2023-04-03T13:41:32Z"
    },
    {
      "event": "referenced",
      "id": 9201628870,
      "node_id": "REFE_lADOABII585SiSOBzwAAAAIkdbbG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9201628870",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fc06881f13495154c888a64a38c7d538baf00435",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc06881f13495154c888a64a38c7d538baf00435",
      "created_at": "2023-05-09T14:42:50Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980398556",
      "pull_request_review_id": 1120755316,
      "id": 980398556,
      "node_id": "PRRC_kwDOABII5846b7Hc",
      "diff_hunk": "@@ -146,6 +146,32 @@ class CChainParams\n     ChainTxData chainTxData;\n };\n \n+/**\n+ * SigNetOptions holds configurations for creating a signet CChainParams.\n+ */\n+struct SigNetOptions {\n+    const std::vector<uint8_t> challenge;\n+    std::vector<std::string> seeds;\n+};\n+\n+/**\n+ * Return SigNetOptions filled with default values.",
      "path": "src/chainparams.h",
      "position": null,
      "original_position": 13,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": null,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's not really \"SigNetOptions filled with default values\" but rather \"Options for the default signet\". I remember @theuni made a good point offline that it almost never makes sense to override _some_ of the options for the default signet.",
      "created_at": "2022-09-26T19:01:36Z",
      "updated_at": "2022-09-26T19:18:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r980398556",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980398556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980401112",
      "pull_request_review_id": 1120755316,
      "id": 980401112,
      "node_id": "PRRC_kwDOABII5846b7vY",
      "diff_hunk": "@@ -415,7 +415,8 @@ std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& a\n class CRegTestParams : public CChainParams",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "9929969d3e95197499f2c81c01702f11aa52ff0d",
      "in_reply_to_id": null,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ping @ajtowns, could you take a peek? 9929969d3e95197499f2c81c01702f11aa52ff0d",
      "created_at": "2022-09-26T19:04:41Z",
      "updated_at": "2022-09-26T19:18:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r980401112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980401112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 415,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980405199",
      "pull_request_review_id": 1120755316,
      "id": 980405199,
      "node_id": "PRRC_kwDOABII5846b8vP",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparamsbase.h>\n+\n+#include <tinyformat.h>\n+\n+const std::string CBaseChainParams::MAIN = \"main\";\n+const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::SIGNET = \"signet\";\n+const std::string CBaseChainParams::REGTEST = \"regtest\";\n+\n+/**\n+ * Port numbers for incoming Tor connections (8334, 18334, 38334, 18445) have\n+ * been chosen arbitrarily to keep ranges of used ports tight.\n+ */\n+std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n+{\n+    if (chain == CBaseChainParams::MAIN) {\n+        return std::make_unique<CBaseChainParams>(\"\", 8332, 8334);\n+    } else if (chain == CBaseChainParams::TESTNET) {\n+        return std::make_unique<CBaseChainParams>(\"testnet3\", 18332, 18334);\n+    } else if (chain == CBaseChainParams::SIGNET) {\n+        return std::make_unique<CBaseChainParams>(\"signet\", 38332, 38334);\n+    } else if (chain == CBaseChainParams::REGTEST) {\n+        return std::make_unique<CBaseChainParams>(\"regtest\", 18443, 18445);\n+    }\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+}\n+\n+static std::unique_ptr<CBaseChainParams> globalChainBaseParams;",
      "path": "src/kernel/chainparamsbase.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "c00f4f7599b89df8196287176e743a99da1de67f",
      "in_reply_to_id": null,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmmm... Been a while since I last took a look but how hard would it be to have this as a member of `kernel::Context`? What does the caller graph look like?\r\n\r\nIt might be the case that this is a situation where it'd be too intrusive to have the N I C E C O D E as discussed here: https://github.com/bitcoin/bitcoin/pull/25065#pullrequestreview-985450940",
      "created_at": "2022-09-26T19:10:16Z",
      "updated_at": "2022-09-26T19:18:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r980405199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980405199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980405848",
      "pull_request_review_id": 1120755316,
      "id": 980405848,
      "node_id": "PRRC_kwDOABII5846b85Y",
      "diff_hunk": "@@ -67,10 +67,10 @@ static void SetupCliArgs(ArgsManager& argsman)\n {\n     SetupHelpOptions(argsman);\n \n-    const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n-    const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n-    const auto signetBaseParams = CreateBaseChainParams(CBaseChainParams::SIGNET);\n-    const auto regtestBaseParams = CreateBaseChainParams(CBaseChainParams::REGTEST);\n+    const auto defaultBaseParams = kernel::CreateBaseChainParams(CBaseChainParams::MAIN);",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "9714fe9160282dc36269b1d16d57dfdd48d0a1f1",
      "in_reply_to_id": null,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Could use `using` declarations in `.cpp` files (if you want)",
      "created_at": "2022-09-26T19:11:03Z",
      "updated_at": "2022-09-26T19:18:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r980405848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980405848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980611417",
      "pull_request_review_id": 1121055600,
      "id": 980611417,
      "node_id": "PRRC_kwDOABII5846cvFZ",
      "diff_hunk": "@@ -6,145 +6,34 @@\n #ifndef BITCOIN_CHAINPARAMS_H\n #define BITCOIN_CHAINPARAMS_H\n \n+#include <kernel/chainparams.h>\n+\n #include <chainparamsbase.h>\n #include <consensus/params.h>\n+#include <cstdint>\n #include <netaddress.h>\n #include <primitives/block.h>\n #include <protocol.h>\n+#include <unordered_map>\n #include <util/hash_type.h>\n \n #include <memory>\n #include <string>\n #include <vector>\n \n-typedef std::map<int, uint256> MapCheckpoints;\n-\n-struct CCheckpointData {\n-    MapCheckpoints mapCheckpoints;\n-\n-    int GetHeight() const {\n-        const auto& final_checkpoint = mapCheckpoints.rbegin();\n-        return final_checkpoint->first /* height */;\n-    }\n-};\n-\n-struct AssumeutxoHash : public BaseHash<uint256> {\n-    explicit AssumeutxoHash(const uint256& hash) : BaseHash(hash) {}\n-};\n-\n-/**\n- * Holds configuration for use during UTXO snapshot load and validation. The contents\n- * here are security critical, since they dictate which UTXO snapshots are recognized\n- * as valid.\n- */\n-struct AssumeutxoData {\n-    //! The expected hash of the deserialized UTXO set.\n-    const AssumeutxoHash hash_serialized;\n-\n-    //! Used to populate the nChainTx value, which is used during BlockManager::LoadBlockIndex().\n-    //!\n-    //! We need to hardcode the value here because this is computed cumulatively using block data,\n-    //! which we do not necessarily have at the time of snapshot load.\n-    const unsigned int nChainTx;\n-};\n-\n-using MapAssumeutxo = std::map<int, const AssumeutxoData>;\n-\n /**\n- * Holds various statistics on transactions within a chain. Used to estimate\n- * verification progress during chain sync.\n- *\n- * See also: CChainParams::TxData, GuessVerificationProgress.\n+ * Creates and returns a std::unique_ptr<CChainParams> for signet.\n+ * @returns std::unique_ptr<const CChainParams>.\n+ * @throws a std::runtime_error if multiple signet challenges are passed in through the args.\n  */\n-struct ChainTxData {\n-    int64_t nTime;    //!< UNIX timestamp of last known number of transactions\n-    int64_t nTxCount; //!< total number of transactions between genesis and that timestamp\n-    double dTxRate;   //!< estimated number of transactions per second after that timestamp\n-};\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args);",
      "path": "src/chainparams.h",
      "position": null,
      "original_position": 66,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "9714fe9160282dc36269b1d16d57dfdd48d0a1f1",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would have expected a `SignetOptions GetSignetOptions(const ArgsManager& args)` function, and then just calling `CreateSignetChainParams(GetSignetOptions(args));`. Makes it a bit clearer that all that's going on is that the args are being translated to a `SignetOptions` structure, and doesn't tempt anyone to put any clever logic outside of the kernel.\r\n\r\nYou could even call it `operator SigNetOptions(const ArgsManager& args)` to have it be implicit, I guess?\r\n\r\n(Be nice to be consistent calling it \"SigNet\" rather than \"Signet\" in some places and \"SigNet\" in others. Apologies if I introduced any of the \"Signet\" instances :)",
      "created_at": "2022-09-27T00:06:04Z",
      "updated_at": "2022-09-27T02:50:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r980611417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980611417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980652000",
      "pull_request_review_id": 1121055600,
      "id": 980652000,
      "node_id": "PRRC_kwDOABII5846c4_g",
      "diff_hunk": "@@ -0,0 +1,184 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_CHAINPARAMS_H\n+#define BITCOIN_KERNEL_CHAINPARAMS_H\n+\n+#include <kernel/chainparamsbase.h>\n+#include <consensus/params.h>\n+#include <netaddress.h>\n+#include <primitives/block.h>\n+#include <protocol.h>\n+#include <unordered_map>\n+#include <util/hash_type.h>\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+typedef std::map<int, uint256> MapCheckpoints;\n+\n+struct CCheckpointData {\n+    MapCheckpoints mapCheckpoints;\n+\n+    int GetHeight() const {\n+        const auto& final_checkpoint = mapCheckpoints.rbegin();\n+        return final_checkpoint->first /* height */;\n+    }\n+};\n+\n+struct AssumeutxoHash : public BaseHash<uint256> {\n+    explicit AssumeutxoHash(const uint256& hash) : BaseHash(hash) {}\n+};\n+\n+/**\n+ * Holds configuration for use during UTXO snapshot load and validation. The contents\n+ * here are security critical, since they dictate which UTXO snapshots are recognized\n+ * as valid.\n+ */\n+struct AssumeutxoData {\n+    //! The expected hash of the deserialized UTXO set.\n+    const AssumeutxoHash hash_serialized;\n+\n+    //! Used to populate the nChainTx value, which is used during BlockManager::LoadBlockIndex().\n+    //!\n+    //! We need to hardcode the value here because this is computed cumulatively using block data,\n+    //! which we do not necessarily have at the time of snapshot load.\n+    const unsigned int nChainTx;\n+};\n+\n+using MapAssumeutxo = std::map<int, const AssumeutxoData>;\n+\n+/**\n+ * Holds various statistics on transactions within a chain. Used to estimate\n+ * verification progress during chain sync.\n+ *\n+ * See also: CChainParams::TxData, GuessVerificationProgress.\n+ */\n+struct ChainTxData {\n+    int64_t nTime;    //!< UNIX timestamp of last known number of transactions\n+    int64_t nTxCount; //!< total number of transactions between genesis and that timestamp\n+    double dTxRate;   //!< estimated number of transactions per second after that timestamp\n+};\n+\n+/**\n+ * CChainParams defines various tweakable parameters of a given instance of the\n+ * Bitcoin system.\n+ */\n+class CChainParams\n+{\n+public:\n+    enum Base58Type {\n+        PUBKEY_ADDRESS,\n+        SCRIPT_ADDRESS,\n+        SECRET_KEY,\n+        EXT_PUBLIC_KEY,\n+        EXT_SECRET_KEY,\n+\n+        MAX_BASE58_TYPES\n+    };\n+\n+    const Consensus::Params& GetConsensus() const { return consensus; }\n+    const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }\n+    uint16_t GetDefaultPort() const { return nDefaultPort; }\n+    uint16_t GetDefaultPort(Network net) const\n+    {\n+        return net == NET_I2P ? I2P_SAM31_PORT : GetDefaultPort();\n+    }\n+    uint16_t GetDefaultPort(const std::string& addr) const\n+    {\n+        CNetAddr a;\n+        return a.SetSpecial(addr) ? GetDefaultPort(a.GetNetwork()) : GetDefaultPort();\n+    }\n+\n+    const CBlock& GenesisBlock() const { return genesis; }\n+    /** Default value for -checkmempool and -checkblockindex argument */\n+    bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n+    /** Policy: Filter transactions that do not match well-defined patterns */\n+    bool RequireStandard() const { return fRequireStandard; }\n+    /** If this chain is exclusively used for testing */\n+    bool IsTestChain() const { return m_is_test_chain; }\n+    /** If this chain allows time to be mocked */\n+    bool IsMockableChain() const { return m_is_mockable_chain; }\n+    uint64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n+    /** Minimum free space (in GB) needed for data directory */\n+    uint64_t AssumedBlockchainSize() const { return m_assumed_blockchain_size; }\n+    /** Minimum free space (in GB) needed for data directory when pruned; Does not include prune target*/\n+    uint64_t AssumedChainStateSize() const { return m_assumed_chain_state_size; }\n+    /** Whether it is possible to mine blocks on demand (no retargeting) */\n+    bool MineBlocksOnDemand() const { return consensus.fPowNoRetargeting; }\n+    /** Return the network string */\n+    std::string NetworkIDString() const { return strNetworkID; }\n+    /** Return the list of hostnames to look up for DNS seeds */\n+    const std::vector<std::string>& DNSSeeds() const { return vSeeds; }\n+    const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n+    const std::string& Bech32HRP() const { return bech32_hrp; }\n+    const std::vector<uint8_t>& FixedSeeds() const { return vFixedSeeds; }\n+    const CCheckpointData& Checkpoints() const { return checkpointData; }\n+\n+    //! Get allowed assumeutxo configuration.\n+    //! @see ChainstateManager\n+    const MapAssumeutxo& Assumeutxo() const { return m_assumeutxo_data; }\n+\n+    const ChainTxData& TxData() const { return chainTxData; }\n+protected:\n+    CChainParams() {}\n+\n+    Consensus::Params consensus;\n+    CMessageHeader::MessageStartChars pchMessageStart;\n+    uint16_t nDefaultPort;\n+    uint64_t nPruneAfterHeight;\n+    uint64_t m_assumed_blockchain_size;\n+    uint64_t m_assumed_chain_state_size;\n+    std::vector<std::string> vSeeds;\n+    std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n+    std::string bech32_hrp;\n+    std::string strNetworkID;\n+    CBlock genesis;\n+    std::vector<uint8_t> vFixedSeeds;\n+    bool fDefaultConsistencyChecks;\n+    bool fRequireStandard;\n+    bool m_is_test_chain;\n+    bool m_is_mockable_chain;\n+    CCheckpointData checkpointData;\n+    MapAssumeutxo m_assumeutxo_data;\n+    ChainTxData chainTxData;\n+};\n+\n+struct SigNetOptions {\n+    const std::vector<uint8_t> challenge;\n+    std::vector<std::string> seeds;\n+};\n+\n+SigNetOptions GetDefaultSignetOptions();\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options = GetDefaultSignetOptions());\n+\n+struct VersionBitsParameters {\n+    int64_t start_time;\n+    int64_t timeout;\n+    int min_activation_height;\n+};\n+\n+enum class Activations {\n+    SEGWIT,\n+    BIP34,\n+    DERSIG,\n+    CLTV,\n+    CSV,\n+};\n+\n+struct RegTestOptions {\n+    std::unordered_map<Consensus::DeploymentPos, VersionBitsParameters> version_bits_parameters{};\n+    std::unordered_map<Activations, int> activation_heights{};\n+    uint64_t prune_after_height{1000};",
      "path": "src/kernel/chainparams.h",
      "position": null,
      "original_position": 176,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "9714fe9160282dc36269b1d16d57dfdd48d0a1f1",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would have expected `bool fastprune{false};` here. I don't really think we support any values other than 100 or 1000?",
      "created_at": "2022-09-27T01:47:33Z",
      "updated_at": "2022-09-27T02:50:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r980652000",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980652000"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980678183",
      "pull_request_review_id": 1121055600,
      "id": 980678183,
      "node_id": "PRRC_kwDOABII5846c_Yn",
      "diff_hunk": "@@ -272,23 +272,32 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+const std::vector<uint8_t> SIGNET_DEFAULT_CHALLENGE = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+const std::vector<std::string> SIGNET_DEFAULT_SEEDS{\n+    \"seed.signet.bitcoin.sprovoost.nl.\",\n+    \"178.128.221.177\",\n+    \"v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfokr3ysd3kqtzmqd.onion:38333\"\n+};\n+\n+SigNetOptions GetDefaultSignetOptions()\n+{\n+    return {\n+        SIGNET_DEFAULT_CHALLENGE,\n+        SIGNET_DEFAULT_SEEDS,\n+    };\n+}\n+\n /**\n  * Signet: test network with an additional consensus parameter (see BIP325).\n  */\n class SigNetParams : public CChainParams {\n public:\n-    explicit SigNetParams(const ArgsManager& args) {\n-        std::vector<uint8_t> bin;\n-        vSeeds.clear();\n-\n-        if (!args.IsArgSet(\"-signetchallenge\")) {\n-            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n-            vSeeds.emplace_back(\"seed.signet.bitcoin.sprovoost.nl.\");\n-\n-            // Hardcoded nodes can be removed once there are more DNS seeds\n-            vSeeds.emplace_back(\"178.128.221.177\");\n-            vSeeds.emplace_back(\"v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfokr3ysd3kqtzmqd.onion:38333\");\n+    explicit SigNetParams(const SigNetOptions& options)\n+    {\n+        std::vector<uint8_t> bin{options.challenge};\n+        vSeeds = options.seeds;\n \n+        if (bin == SIGNET_DEFAULT_CHALLENGE) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think if you wanted exactly the same behaviour as current, it would be better to write:\r\n\r\n```c++\r\n    if (options.challenge.empty()) { /* use defaults */ } else { /* use values from options */ }\r\n```",
      "created_at": "2022-09-27T02:45:42Z",
      "updated_at": "2022-09-27T02:50:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r980678183",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980678183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/981404674",
      "pull_request_review_id": 1122231704,
      "id": 981404674,
      "node_id": "PRRC_kwDOABII5846fwwC",
      "diff_hunk": "@@ -272,23 +272,32 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+const std::vector<uint8_t> SIGNET_DEFAULT_CHALLENGE = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+const std::vector<std::string> SIGNET_DEFAULT_SEEDS{\n+    \"seed.signet.bitcoin.sprovoost.nl.\",\n+    \"178.128.221.177\",\n+    \"v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfokr3ysd3kqtzmqd.onion:38333\"\n+};\n+\n+SigNetOptions GetDefaultSignetOptions()\n+{\n+    return {\n+        SIGNET_DEFAULT_CHALLENGE,\n+        SIGNET_DEFAULT_SEEDS,\n+    };\n+}\n+\n /**\n  * Signet: test network with an additional consensus parameter (see BIP325).\n  */\n class SigNetParams : public CChainParams {\n public:\n-    explicit SigNetParams(const ArgsManager& args) {\n-        std::vector<uint8_t> bin;\n-        vSeeds.clear();\n-\n-        if (!args.IsArgSet(\"-signetchallenge\")) {\n-            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n-            vSeeds.emplace_back(\"seed.signet.bitcoin.sprovoost.nl.\");\n-\n-            // Hardcoded nodes can be removed once there are more DNS seeds\n-            vSeeds.emplace_back(\"178.128.221.177\");\n-            vSeeds.emplace_back(\"v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfokr3ysd3kqtzmqd.onion:38333\");\n+    explicit SigNetParams(const SigNetOptions& options)\n+    {\n+        std::vector<uint8_t> bin{options.challenge};\n+        vSeeds = options.seeds;\n \n+        if (bin == SIGNET_DEFAULT_CHALLENGE) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 980678183,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Decouple SigNetChainParams from ArgsManager\" (8c0a94f1d56345c45304319e72b7f78626e47061)\r\n\r\n> I think if you wanted exactly the same behaviour as current, it would be better to write:\r\n> \r\n> ```c++\r\n>     if (options.challenge.empty()) { /* use defaults */ } else { /* use values from options */ }\r\n> ```\r\n\r\nI agree with this suggestion. I think a good design goal for most options structs is to make them default constructible, and make default behavior when you pass an empty options struct the same as what would happen if you launched `bitcoind` without the corresponding arguments. Don't introduce a new set of default behaviors, don't require callers to initialize options structs if they are not overriding something, and avoid complications like having some struct members be const and other be non-const. If code is implemented like the suggestion above and accepts empty options, this all happens easily and naturally.",
      "created_at": "2022-09-27T15:35:08Z",
      "updated_at": "2022-09-27T16:04:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r981404674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/981404674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/981410313",
      "pull_request_review_id": 1122231704,
      "id": 981410313,
      "node_id": "PRRC_kwDOABII5846fyIJ",
      "diff_hunk": "@@ -146,6 +146,32 @@ class CChainParams\n     ChainTxData chainTxData;\n };\n \n+/**\n+ * SigNetOptions holds configurations for creating a signet CChainParams.\n+ */\n+struct SigNetOptions {\n+    const std::vector<uint8_t> challenge;\n+    std::vector<std::string> seeds;\n+};\n+\n+/**\n+ * Return SigNetOptions filled with default values.",
      "path": "src/chainparams.h",
      "position": null,
      "original_position": 13,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 980398556,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Decouple SigNetChainParams from ArgsManager\" (8c0a94f1d56345c45304319e72b7f78626e47061)\r\n\r\nAgree but I think having this function at all is a footgun and source of unnecessary complexity and it would be better to drop. Just make a default-constructed `SigNetOptions` struct give default behavior as suggested above so this function doesn't need to exist.\r\n",
      "created_at": "2022-09-27T15:40:17Z",
      "updated_at": "2022-09-27T16:04:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r981410313",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/981410313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/981416113",
      "pull_request_review_id": 1122231704,
      "id": 981416113,
      "node_id": "PRRC_kwDOABII5846fzix",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Decouple SigNetChainParams from ArgsManager\" (8c0a94f1d56345c45304319e72b7f78626e47061)\r\n\r\nThis looks like a change in behavior if `-nosignetseednode` is specified. Previously that would clear the seeds. Now it will use default seeds. I don't know if this is good or bad but I think it would be better not change here.\r\n\r\nI would suggest following aj's suggestion above https://github.com/bitcoin/bitcoin/pull/26177#discussion_r980678183 and just have a literal 1:1 correspondence between arguments and options. Make unset arguments map to unset options. Fill options only when arguments are present. Don't try to be clever and fill options when there are no arguments.\r\n\r\nThe definition of the SigNetOptions struct then would be:\r\n\r\n```c++\r\nstruct SigNetOptions {\r\n    std::vector<uint8_t> challenge;\r\n    std::optional<std::vector<std::string>> seeds;\r\n}\r\n```\r\n\r\nThe default constructed struct would result in default behavior. `-signetchallenge` and `-signetseednode` would override these defaults. `-nosignetchallenge` would be an error like it is currently with no change in behavior. `-nosignetseednode` would set an empty vector and add no seed nodes, which seems to be current behavior.\r\n\r\n\r\n ",
      "created_at": "2022-09-27T15:45:27Z",
      "updated_at": "2022-09-27T16:04:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r981416113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/981416113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/981822571",
      "pull_request_review_id": 1122848500,
      "id": 981822571,
      "node_id": "PRRC_kwDOABII5846hWxr",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 981416113,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> ... just have a literal 1:1 correspondence between arguments and options.\r\n\r\nI think there's two conflicting goals here? It seems like one idea is that the kernel should be just given the actual data (eg a `map` from buried deployment ids via enum to integer heights) that's needed -- the kernel's meant to be used by software, so why translate into text in the meantime?\r\n\r\nBut if that were really the case, why not just pass a fully fleshed out `const CChainParams&` to the kernel in the first place?\r\n\r\nIn that case, `kernel/chainparams.h` could be a headers only module, with the mainnet/signet/etc setup code staying in `chainparams.cpp`. I'm not sure if I'm missing a design goal here though.",
      "created_at": "2022-09-28T00:00:06Z",
      "updated_at": "2022-09-28T00:00:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r981822571",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/981822571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982172311",
      "pull_request_review_id": 1123345344,
      "id": 982172311,
      "node_id": "PRRC_kwDOABII5846isKX",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparamsbase.h>\n+\n+#include <tinyformat.h>\n+\n+const std::string CBaseChainParams::MAIN = \"main\";\n+const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::SIGNET = \"signet\";\n+const std::string CBaseChainParams::REGTEST = \"regtest\";\n+\n+/**\n+ * Port numbers for incoming Tor connections (8334, 18334, 38334, 18445) have\n+ * been chosen arbitrarily to keep ranges of used ports tight.\n+ */\n+std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n+{\n+    if (chain == CBaseChainParams::MAIN) {\n+        return std::make_unique<CBaseChainParams>(\"\", 8332, 8334);\n+    } else if (chain == CBaseChainParams::TESTNET) {\n+        return std::make_unique<CBaseChainParams>(\"testnet3\", 18332, 18334);\n+    } else if (chain == CBaseChainParams::SIGNET) {\n+        return std::make_unique<CBaseChainParams>(\"signet\", 38332, 38334);\n+    } else if (chain == CBaseChainParams::REGTEST) {\n+        return std::make_unique<CBaseChainParams>(\"regtest\", 18443, 18445);\n+    }\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+}\n+\n+static std::unique_ptr<CBaseChainParams> globalChainBaseParams;",
      "path": "src/kernel/chainparamsbase.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "c00f4f7599b89df8196287176e743a99da1de67f",
      "in_reply_to_id": 980405199,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The caller graph is kind of annoying, it boils down to users of `SelectBaseParams` (like bitcoin-cli), and more importantly `SelectParams`, which is used all over the place (I count 23 separate files as call site). If I understand the current usage of `kernel::Context` correctly, this would mean that we'd have to construct the context for nearly each call site separately, and many in places where it was previously not required. I currently tend towards handling this in a separate refactor attempt to get rid of these param globals in general.",
      "created_at": "2022-09-28T09:30:16Z",
      "updated_at": "2022-09-28T09:30:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r982172311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982172311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982437167",
      "pull_request_review_id": 1123737722,
      "id": 982437167,
      "node_id": "PRRC_kwDOABII5846js0v",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 981416113,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that is taking it a bit far. What I understood from @ryanofsky is something very similar to what was implemented in #25862 , where a default, constructor instantiated option struct is mutated with the values from the args - https://github.com/bitcoin/bitcoin/pull/25862/files#diff-4e268aeb074a176689aace31957a889c1f39c909e6678ca7be8707bda1a7be56 . ",
      "created_at": "2022-09-28T13:52:51Z",
      "updated_at": "2022-09-28T13:52:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r982437167",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982437167"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982525985",
      "pull_request_review_id": 1123870956,
      "id": 982525985,
      "node_id": "PRRC_kwDOABII5846kCgh",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 981416113,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think that is taking it a bit far. \r\n\r\nRight I'm just talking about a minor change to the `SigNetOptions` struct that would simplify the changes here.\r\n\r\nThe only thing this PR really needs to do is get rid of `ArgsManager` usage in this part of the code, replacing `ArgsManager` lookups with `SigNetOptions` member accesses. I suggested a slightly different version of the `SigNetOptions` struct above that would let it provide the same information `ArgsManager` provides, in a 1:1 way so less code has to change, and so the struct is easier for callers to fill and customize.\r\n\r\n> But if that were really the case, why not just pass a fully fleshed out const CChainParams& to the kernel in the first place?\r\n\r\nThis is fine, and I think it basically already happens later after `CChainParams` are initialized. I'm just looking at the earlier code used to initialize `CChainParams`. I do think alternate approaches are possible. Like instead of `SigNetOptions` being used to initialize `CChainParams` and have  `CChainParams` contain dynamic settings determined at runtime, `CChainParams` could just contain static hardcoded settings, and code that uses `CChainParams` could use combine it with runtime settings. This already happens with chain parameters like `nMinimumChainWork` that can be overridden on the command line.\r\n\r\n> In that case, kernel/chainparams.h could be a headers only module, with the mainnet/signet/etc setup code staying in chainparams.cpp. I'm not sure if I'm missing a design goal here though.\r\n\r\nI'm not sure exactly what this would look like but it does sound fine. Maybe similar to what I was describing above making `CChainParams` not vary depending on runtime options.\r\n\r\nThese alternate approaches are just bigger than changes I was suggesting above. All I was suggesting above was replacing ArgsManager uses with SigNetOptions in a 1:1 way instead of doing more complicated mappings and creating another set of defaults and making it harder to initialize.",
      "created_at": "2022-09-28T15:04:04Z",
      "updated_at": "2022-09-28T15:04:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r982525985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982525985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982656722",
      "pull_request_review_id": 1124061665,
      "id": 982656722,
      "node_id": "PRRC_kwDOABII5846kibS",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparamsbase.h>\n+\n+#include <tinyformat.h>\n+\n+const std::string CBaseChainParams::MAIN = \"main\";\n+const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::SIGNET = \"signet\";\n+const std::string CBaseChainParams::REGTEST = \"regtest\";\n+\n+/**\n+ * Port numbers for incoming Tor connections (8334, 18334, 38334, 18445) have\n+ * been chosen arbitrarily to keep ranges of used ports tight.\n+ */\n+std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n+{\n+    if (chain == CBaseChainParams::MAIN) {\n+        return std::make_unique<CBaseChainParams>(\"\", 8332, 8334);\n+    } else if (chain == CBaseChainParams::TESTNET) {\n+        return std::make_unique<CBaseChainParams>(\"testnet3\", 18332, 18334);\n+    } else if (chain == CBaseChainParams::SIGNET) {\n+        return std::make_unique<CBaseChainParams>(\"signet\", 38332, 38334);\n+    } else if (chain == CBaseChainParams::REGTEST) {\n+        return std::make_unique<CBaseChainParams>(\"regtest\", 18443, 18445);\n+    }\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+}\n+\n+static std::unique_ptr<CBaseChainParams> globalChainBaseParams;",
      "path": "src/kernel/chainparamsbase.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "c00f4f7599b89df8196287176e743a99da1de67f",
      "in_reply_to_id": 980405199,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You could maybe split it up? Have chainparams provide `SelectParams(ArgsManager&)` and use that instead of `SelectParams(args.GetChainName())` which covers all the cases outside of test/ and test/fuzz/. Then most of the test or test/fuzz cases already hardcode the network, and could be replaced by `kernel::SelectParams(RegTestBase(), RegTest(regtestopts))` that just initializes the globals?",
      "created_at": "2022-09-28T16:58:11Z",
      "updated_at": "2022-09-28T16:58:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r982656722",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982656722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982658959",
      "pull_request_review_id": 1124065036,
      "id": 982658959,
      "node_id": "PRRC_kwDOABII5846ki-P",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 981416113,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think that is taking it a bit far.\r\n\r\nYeah -- I think I agree, I just don't know why I agree? I was more hoping to understand why that would be taking it a bit far?",
      "created_at": "2022-09-28T17:00:39Z",
      "updated_at": "2022-09-28T17:00:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r982658959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982658959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982753166",
      "pull_request_review_id": 1124202236,
      "id": 982753166,
      "node_id": "PRRC_kwDOABII5846k5-O",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 981416113,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rereading I think we might be talking past each other. You mentioned things like \"translating to text\" which I'm not suggesting. I'm literally just agreeing with your initial suggestion `if (options.challenge.empty()) { /* use defaults */ } else { /* use values from options */ }` and saying how you can tweak the options struct definition so the same approach works for seeds as well, and the options struct does not need to contain any new or different information than what ArgsManager provides.\r\n\r\nLater you mentioned passing \"a fully fleshed out const CChainParams&\" and having a \"headers only module\" and I think these changes sound ok, but maybe involve getting rid of the options struct or not using it here, and I'm just proposing tweaking the struct a little.",
      "created_at": "2022-09-28T18:48:46Z",
      "updated_at": "2022-09-28T18:48:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r982753166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982753166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982804226",
      "pull_request_review_id": 1124275875,
      "id": 982804226,
      "node_id": "PRRC_kwDOABII5846lGcC",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 981416113,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ryanofsky Yeah, I understand what you were saying, and tweaking the approach in this PR feels sensible to me too; I just don't feel like I intellectually understand the tradeoffs here, so was hoping thinking about more extreme alternatives might be revealing.\r\n\r\nThree approaches:\r\n * `kernel::RegTestOptions` just contains the exact results from gArgs (so a vector of strings, not a map of enums etc)\r\n * what's implemented in this PR, with some tweaks\r\n * keep all the mainnet/testnet/etc defaults out of kernel, and just give it a prefilled CChainParams\r\n\r\nI think this PR is better than the first option, because text is annoying, and the tweaks make it even better. I don't have a handle on the tradeoffs for the third approach, though.",
      "created_at": "2022-09-28T19:51:41Z",
      "updated_at": "2022-09-28T19:51:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r982804226",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/982804226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/983700711",
      "pull_request_review_id": 1125531030,
      "id": 983700711,
      "node_id": "PRRC_kwDOABII5846ohTn",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 981416113,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think there is still a misunderstanding. I'm _not_ suggesting using text instead of enums or using hex strings instead of binary strings in the Options struct.\r\n\r\nSo I don't think I'm suggesting any of the approaches you listed above. I'm suggesting a fourth approach: `kernel::RegTestOptions` contains a 1:1 representation of information in `gArgs`. If a gArgs option is unset, corresponding Options parameter is unset or empty. If gArgs option is valid, corresponding options member contains the parsed option value. No special calls are needed to fill the options struct with defaults, because it just does the default thing by default and can be easily customized if desired. `bitcoind` behavior is unchanged and less code has to change because the options struct can be used as a straightforward replacement for ArgsManager calls.\r\n\r\nI think if you want to go further and remove more code from the kernel, it could be good or bad, and the tradeoffs you are thinking about come into play. But I think the only thing we actually want to remove right now is ArgsManager. I don't think we need to something like removing preset chain parameters.",
      "created_at": "2022-09-29T15:31:46Z",
      "updated_at": "2022-09-29T15:31:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r983700711",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/983700711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/983836855",
      "pull_request_review_id": 1125726625,
      "id": 983836855,
      "node_id": "PRRC_kwDOABII5846pCi3",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 981416113,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right -- I'm describing your (and my) suggestions as \"some tweaks\" to this PR. (They seem like obviously good ideas to me, so I was glossing over them in favour of the things I'm confused about)",
      "created_at": "2022-09-29T17:23:30Z",
      "updated_at": "2022-09-29T17:23:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r983836855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/983836855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/983927703",
      "pull_request_review_id": 1125858900,
      "id": 983927703,
      "node_id": "PRRC_kwDOABII5846pYuX",
      "diff_hunk": "@@ -382,11 +381,39 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options)\n+{\n+    return std::make_unique<const SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const ArgsManager& args)\n+{\n+    std::vector<std::string> seeds{};\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        seeds = args.GetArgs(\"-signetseednode\");\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        return CreateSignetChainParams(SigNetOptions{ParseHex(signet_challenge[0]), seeds});\n+    } else {\n+        auto opts = GetDefaultSignetOptions();\n+        if (!seeds.empty()) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 981416113,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense!",
      "created_at": "2022-09-29T19:06:14Z",
      "updated_at": "2022-09-29T19:06:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r983927703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/983927703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/985251383",
      "pull_request_review_id": 1127656319,
      "id": 985251383,
      "node_id": "PRRC_kwDOABII5846ub43",
      "diff_hunk": "@@ -67,10 +67,10 @@ static void SetupCliArgs(ArgsManager& argsman)\n {\n     SetupHelpOptions(argsman);\n \n-    const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n-    const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n-    const auto signetBaseParams = CreateBaseChainParams(CBaseChainParams::SIGNET);\n-    const auto regtestBaseParams = CreateBaseChainParams(CBaseChainParams::REGTEST);\n+    const auto defaultBaseParams = kernel::CreateBaseChainParams(CBaseChainParams::MAIN);",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "9714fe9160282dc36269b1d16d57dfdd48d0a1f1",
      "in_reply_to_id": 980405848,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems to me like `using` declarations are not used for internal namespaces in the code so far, so I chose not to.",
      "created_at": "2022-10-02T14:55:28Z",
      "updated_at": "2022-10-02T14:55:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r985251383",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/985251383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996311936",
      "pull_request_review_id": 1143192368,
      "id": 996311936,
      "node_id": "PRRC_kwDOABII5847YoOA",
      "diff_hunk": "@@ -0,0 +1,184 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_CHAINPARAMS_H\n+#define BITCOIN_KERNEL_CHAINPARAMS_H\n+\n+#include <kernel/chainparamsbase.h>\n+#include <consensus/params.h>\n+#include <netaddress.h>\n+#include <primitives/block.h>\n+#include <protocol.h>\n+#include <unordered_map>\n+#include <util/hash_type.h>\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+typedef std::map<int, uint256> MapCheckpoints;\n+\n+struct CCheckpointData {\n+    MapCheckpoints mapCheckpoints;\n+\n+    int GetHeight() const {\n+        const auto& final_checkpoint = mapCheckpoints.rbegin();\n+        return final_checkpoint->first /* height */;\n+    }\n+};\n+\n+struct AssumeutxoHash : public BaseHash<uint256> {\n+    explicit AssumeutxoHash(const uint256& hash) : BaseHash(hash) {}\n+};\n+\n+/**\n+ * Holds configuration for use during UTXO snapshot load and validation. The contents\n+ * here are security critical, since they dictate which UTXO snapshots are recognized\n+ * as valid.\n+ */\n+struct AssumeutxoData {\n+    //! The expected hash of the deserialized UTXO set.\n+    const AssumeutxoHash hash_serialized;\n+\n+    //! Used to populate the nChainTx value, which is used during BlockManager::LoadBlockIndex().\n+    //!\n+    //! We need to hardcode the value here because this is computed cumulatively using block data,\n+    //! which we do not necessarily have at the time of snapshot load.\n+    const unsigned int nChainTx;\n+};\n+\n+using MapAssumeutxo = std::map<int, const AssumeutxoData>;\n+\n+/**\n+ * Holds various statistics on transactions within a chain. Used to estimate\n+ * verification progress during chain sync.\n+ *\n+ * See also: CChainParams::TxData, GuessVerificationProgress.\n+ */\n+struct ChainTxData {\n+    int64_t nTime;    //!< UNIX timestamp of last known number of transactions\n+    int64_t nTxCount; //!< total number of transactions between genesis and that timestamp\n+    double dTxRate;   //!< estimated number of transactions per second after that timestamp\n+};\n+\n+/**\n+ * CChainParams defines various tweakable parameters of a given instance of the\n+ * Bitcoin system.\n+ */\n+class CChainParams\n+{\n+public:\n+    enum Base58Type {\n+        PUBKEY_ADDRESS,\n+        SCRIPT_ADDRESS,\n+        SECRET_KEY,\n+        EXT_PUBLIC_KEY,\n+        EXT_SECRET_KEY,\n+\n+        MAX_BASE58_TYPES\n+    };\n+\n+    const Consensus::Params& GetConsensus() const { return consensus; }\n+    const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }\n+    uint16_t GetDefaultPort() const { return nDefaultPort; }\n+    uint16_t GetDefaultPort(Network net) const\n+    {\n+        return net == NET_I2P ? I2P_SAM31_PORT : GetDefaultPort();\n+    }\n+    uint16_t GetDefaultPort(const std::string& addr) const\n+    {\n+        CNetAddr a;\n+        return a.SetSpecial(addr) ? GetDefaultPort(a.GetNetwork()) : GetDefaultPort();\n+    }\n+\n+    const CBlock& GenesisBlock() const { return genesis; }\n+    /** Default value for -checkmempool and -checkblockindex argument */\n+    bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n+    /** Policy: Filter transactions that do not match well-defined patterns */\n+    bool RequireStandard() const { return fRequireStandard; }\n+    /** If this chain is exclusively used for testing */\n+    bool IsTestChain() const { return m_is_test_chain; }\n+    /** If this chain allows time to be mocked */\n+    bool IsMockableChain() const { return m_is_mockable_chain; }\n+    uint64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n+    /** Minimum free space (in GB) needed for data directory */\n+    uint64_t AssumedBlockchainSize() const { return m_assumed_blockchain_size; }\n+    /** Minimum free space (in GB) needed for data directory when pruned; Does not include prune target*/\n+    uint64_t AssumedChainStateSize() const { return m_assumed_chain_state_size; }\n+    /** Whether it is possible to mine blocks on demand (no retargeting) */\n+    bool MineBlocksOnDemand() const { return consensus.fPowNoRetargeting; }\n+    /** Return the network string */\n+    std::string NetworkIDString() const { return strNetworkID; }\n+    /** Return the list of hostnames to look up for DNS seeds */\n+    const std::vector<std::string>& DNSSeeds() const { return vSeeds; }\n+    const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n+    const std::string& Bech32HRP() const { return bech32_hrp; }\n+    const std::vector<uint8_t>& FixedSeeds() const { return vFixedSeeds; }\n+    const CCheckpointData& Checkpoints() const { return checkpointData; }\n+\n+    //! Get allowed assumeutxo configuration.\n+    //! @see ChainstateManager\n+    const MapAssumeutxo& Assumeutxo() const { return m_assumeutxo_data; }\n+\n+    const ChainTxData& TxData() const { return chainTxData; }\n+protected:\n+    CChainParams() {}\n+\n+    Consensus::Params consensus;\n+    CMessageHeader::MessageStartChars pchMessageStart;\n+    uint16_t nDefaultPort;\n+    uint64_t nPruneAfterHeight;\n+    uint64_t m_assumed_blockchain_size;\n+    uint64_t m_assumed_chain_state_size;\n+    std::vector<std::string> vSeeds;\n+    std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n+    std::string bech32_hrp;\n+    std::string strNetworkID;\n+    CBlock genesis;\n+    std::vector<uint8_t> vFixedSeeds;\n+    bool fDefaultConsistencyChecks;\n+    bool fRequireStandard;\n+    bool m_is_test_chain;\n+    bool m_is_mockable_chain;\n+    CCheckpointData checkpointData;\n+    MapAssumeutxo m_assumeutxo_data;\n+    ChainTxData chainTxData;\n+};\n+\n+struct SigNetOptions {\n+    const std::vector<uint8_t> challenge;\n+    std::vector<std::string> seeds;\n+};\n+\n+SigNetOptions GetDefaultSignetOptions();\n+\n+std::unique_ptr<const CChainParams> CreateSignetChainParams(const SigNetOptions& options = GetDefaultSignetOptions());\n+\n+struct VersionBitsParameters {\n+    int64_t start_time;\n+    int64_t timeout;\n+    int min_activation_height;\n+};\n+\n+enum class Activations {\n+    SEGWIT,\n+    BIP34,\n+    DERSIG,\n+    CLTV,\n+    CSV,\n+};\n+\n+struct RegTestOptions {\n+    std::unordered_map<Consensus::DeploymentPos, VersionBitsParameters> version_bits_parameters{};\n+    std::unordered_map<Activations, int> activation_heights{};\n+    uint64_t prune_after_height{1000};",
      "path": "src/kernel/chainparams.h",
      "position": null,
      "original_position": 176,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "9714fe9160282dc36269b1d16d57dfdd48d0a1f1",
      "in_reply_to_id": 980652000,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is corrected in 795b6fb83d8eee9a7f47629b274feca066fc17fb",
      "created_at": "2022-10-15T14:14:08Z",
      "updated_at": "2022-10-15T14:14:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r996311936",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996311936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996311947",
      "pull_request_review_id": 1143192380,
      "id": 996311947,
      "node_id": "PRRC_kwDOABII5847YoOL",
      "diff_hunk": "@@ -272,23 +272,32 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+const std::vector<uint8_t> SIGNET_DEFAULT_CHALLENGE = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+const std::vector<std::string> SIGNET_DEFAULT_SEEDS{\n+    \"seed.signet.bitcoin.sprovoost.nl.\",\n+    \"178.128.221.177\",\n+    \"v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfokr3ysd3kqtzmqd.onion:38333\"\n+};\n+\n+SigNetOptions GetDefaultSignetOptions()\n+{\n+    return {\n+        SIGNET_DEFAULT_CHALLENGE,\n+        SIGNET_DEFAULT_SEEDS,\n+    };\n+}\n+\n /**\n  * Signet: test network with an additional consensus parameter (see BIP325).\n  */\n class SigNetParams : public CChainParams {\n public:\n-    explicit SigNetParams(const ArgsManager& args) {\n-        std::vector<uint8_t> bin;\n-        vSeeds.clear();\n-\n-        if (!args.IsArgSet(\"-signetchallenge\")) {\n-            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n-            vSeeds.emplace_back(\"seed.signet.bitcoin.sprovoost.nl.\");\n-\n-            // Hardcoded nodes can be removed once there are more DNS seeds\n-            vSeeds.emplace_back(\"178.128.221.177\");\n-            vSeeds.emplace_back(\"v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfokr3ysd3kqtzmqd.onion:38333\");\n+    explicit SigNetParams(const SigNetOptions& options)\n+    {\n+        std::vector<uint8_t> bin{options.challenge};\n+        vSeeds = options.seeds;\n \n+        if (bin == SIGNET_DEFAULT_CHALLENGE) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "8c0a94f1d56345c45304319e72b7f78626e47061",
      "in_reply_to_id": 980678183,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 7d7900edeff6af18c3bb2c11475ac26414ed78d2",
      "created_at": "2022-10-15T14:14:20Z",
      "updated_at": "2022-10-15T14:14:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r996311947",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996311947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996313236",
      "pull_request_review_id": 1143193555,
      "id": 996313236,
      "node_id": "PRRC_kwDOABII5847YoiU",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparamsbase.h>\n+\n+#include <tinyformat.h>\n+\n+const std::string CBaseChainParams::MAIN = \"main\";\n+const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::SIGNET = \"signet\";\n+const std::string CBaseChainParams::REGTEST = \"regtest\";\n+\n+/**\n+ * Port numbers for incoming Tor connections (8334, 18334, 38334, 18445) have\n+ * been chosen arbitrarily to keep ranges of used ports tight.\n+ */\n+std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n+{\n+    if (chain == CBaseChainParams::MAIN) {\n+        return std::make_unique<CBaseChainParams>(\"\", 8332, 8334);\n+    } else if (chain == CBaseChainParams::TESTNET) {\n+        return std::make_unique<CBaseChainParams>(\"testnet3\", 18332, 18334);\n+    } else if (chain == CBaseChainParams::SIGNET) {\n+        return std::make_unique<CBaseChainParams>(\"signet\", 38332, 38334);\n+    } else if (chain == CBaseChainParams::REGTEST) {\n+        return std::make_unique<CBaseChainParams>(\"regtest\", 18443, 18445);\n+    }\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+}\n+\n+static std::unique_ptr<CBaseChainParams> globalChainBaseParams;",
      "path": "src/kernel/chainparamsbase.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "c00f4f7599b89df8196287176e743a99da1de67f",
      "in_reply_to_id": 980405199,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've had no luck coming up with a nice pattern to get this split done without blowing everything up :/\r\nI might try it again at a later point in time by first create an ugly solution and then see if I can mold it into something nice. ",
      "created_at": "2022-10-15T14:24:18Z",
      "updated_at": "2022-10-15T14:24:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r996313236",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996313236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996574085",
      "pull_request_review_id": 1143446002,
      "id": 996574085,
      "node_id": "PRRC_kwDOABII5847ZoOF",
      "diff_hunk": "@@ -0,0 +1,510 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/merkle.h>\n+#include <deploymentinfo.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <script/interpreter.h>\n+#include <util/system.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+\n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    CMutableTransaction txNew;\n+    txNew.nVersion = 1;\n+    txNew.vin.resize(1);\n+    txNew.vout.resize(1);\n+    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vout[0].nValue = genesisReward;\n+    txNew.vout[0].scriptPubKey = genesisOutputScript;\n+\n+    CBlock genesis;\n+    genesis.nTime    = nTime;\n+    genesis.nBits    = nBits;\n+    genesis.nNonce   = nNonce;\n+    genesis.nVersion = nVersion;\n+    genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n+    genesis.hashPrevBlock.SetNull();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+    return genesis;\n+}\n+\n+/**\n+ * Build the genesis block. Note that the output of its generation\n+ * transaction cannot be spent since it did not originally exist in the\n+ * database.\n+ *\n+ * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+ *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+ *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+ *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+ *   vMerkleTree: 4a5e1e\n+ */\n+static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+\n+/**\n+ * Main network on which people trade goods and services.\n+ */\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\n+        consensus.script_flag_exceptions.emplace( // Taproot exception\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n+        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000003404ba0801921119f903495e\");\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\"); // 751565\n+\n+        /**\n+         * The message start string is designed to be unlikely to occur in normal data.\n+         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+         * a large 32-bit integer with any alignment.\n+         */\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        nDefaultPort = 8333;\n+        nPruneAfterHeight = 100000;\n+        m_assumed_blockchain_size = 496;\n+        m_assumed_chain_state_size = 6;\n+\n+        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me.\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org.\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com.\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch.\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org.\"); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl.\"); // Sjors Provoost\n+        vSeeds.emplace_back(\"dnsseed.emzy.de.\"); // Stephan Oeste\n+        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz.\"); // Jason Maurice\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n+\n+        bech32_hrp = \"bc\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = false;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n+                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n+                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n+                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n+                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n+                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n+                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n+                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n+                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n+                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n+                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n+                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n+                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\n+            .nTime    = 1661697692,\n+            .nTxCount = 760120522,\n+            .dTxRate  = 2.925802860942233,\n+        };\n+    }\n+};\n+\n+/**\n+ * Testnet (v3): public test network which is reset from time to time.\n+ */\n+class CTestNetParams : public CChainParams {\n+public:\n+    CTestNetParams() {\n+        strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n+        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000076f6e7cbd0beade5d20\");\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\"); // 2344474\n+\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        nDefaultPort = 18333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 42;\n+        m_assumed_chain_state_size = 2;\n+\n+        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        // nodes with support for servicebits filtering should be at the top\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch.\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org.\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl.\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me.\"); // Just a static list of stable node(s), only supports x9\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = false;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\n+            .nTime    = 1661705221,\n+            .nTxCount = 63531852,\n+            .dTxRate  = 0.1079119341520164,\n+        };\n+    }\n+};\n+\n+/**\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const CChainParams::SigNetOptions& options)\n+    {\n+        vSeeds.clear();\n+        vSeeds = options.seeds;\n+\n+        if (options.challenge.empty()) {\n+            consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000001291fc22898\");\n+            consensus.defaultAssumeValid = uint256S(\"0x000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\"); // 105495\n+            m_assumed_blockchain_size = 1;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                // Data from RPC: getchaintxstats 4096 000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\n+                .nTime    = 1661702566,\n+                .nTxCount = 1903567,\n+                .dTxRate  = 0.02336701143027275,\n+            };\n+            consensus.signet_challenge = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 296,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "03468cbc377ad1e73daf63ad37f29baca1944500",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            consensus.signet_challenge = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\r\n            if (vSeeds.empty()) {\r\n                vSeeds.push_back(\"seed.signet.bitcoin.sprovoost.nl.\");\r\n                vSeeds.push_back(\"178.128.221.177\");\r\n                vSeeds.push_back(\"v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfokr3ysd3kqtzmqd.onion:38333\");\r\n            }\r\n```\r\n\r\nalong with defaulting `options.seeds` to empty. Otherwise just overriding `options.challenge` will have you connecting to the default seeds which would be annoying.",
      "created_at": "2022-10-17T03:01:33Z",
      "updated_at": "2022-10-17T03:01:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r996574085",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996574085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997427366",
      "pull_request_review_id": 1144690968,
      "id": 997427366,
      "node_id": "PRRC_kwDOABII5847c4im",
      "diff_hunk": "@@ -0,0 +1,510 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/merkle.h>\n+#include <deploymentinfo.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <script/interpreter.h>\n+#include <util/system.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+\n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    CMutableTransaction txNew;\n+    txNew.nVersion = 1;\n+    txNew.vin.resize(1);\n+    txNew.vout.resize(1);\n+    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vout[0].nValue = genesisReward;\n+    txNew.vout[0].scriptPubKey = genesisOutputScript;\n+\n+    CBlock genesis;\n+    genesis.nTime    = nTime;\n+    genesis.nBits    = nBits;\n+    genesis.nNonce   = nNonce;\n+    genesis.nVersion = nVersion;\n+    genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n+    genesis.hashPrevBlock.SetNull();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+    return genesis;\n+}\n+\n+/**\n+ * Build the genesis block. Note that the output of its generation\n+ * transaction cannot be spent since it did not originally exist in the\n+ * database.\n+ *\n+ * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+ *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+ *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+ *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+ *   vMerkleTree: 4a5e1e\n+ */\n+static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+\n+/**\n+ * Main network on which people trade goods and services.\n+ */\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\n+        consensus.script_flag_exceptions.emplace( // Taproot exception\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n+        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000003404ba0801921119f903495e\");\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\"); // 751565\n+\n+        /**\n+         * The message start string is designed to be unlikely to occur in normal data.\n+         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+         * a large 32-bit integer with any alignment.\n+         */\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        nDefaultPort = 8333;\n+        nPruneAfterHeight = 100000;\n+        m_assumed_blockchain_size = 496;\n+        m_assumed_chain_state_size = 6;\n+\n+        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me.\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org.\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com.\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch.\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org.\"); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl.\"); // Sjors Provoost\n+        vSeeds.emplace_back(\"dnsseed.emzy.de.\"); // Stephan Oeste\n+        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz.\"); // Jason Maurice\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n+\n+        bech32_hrp = \"bc\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = false;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n+                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n+                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n+                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n+                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n+                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n+                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n+                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n+                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n+                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n+                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n+                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n+                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\n+            .nTime    = 1661697692,\n+            .nTxCount = 760120522,\n+            .dTxRate  = 2.925802860942233,\n+        };\n+    }\n+};\n+\n+/**\n+ * Testnet (v3): public test network which is reset from time to time.\n+ */\n+class CTestNetParams : public CChainParams {\n+public:\n+    CTestNetParams() {\n+        strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n+        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000076f6e7cbd0beade5d20\");\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\"); // 2344474\n+\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        nDefaultPort = 18333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 42;\n+        m_assumed_chain_state_size = 2;\n+\n+        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        // nodes with support for servicebits filtering should be at the top\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch.\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org.\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl.\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me.\"); // Just a static list of stable node(s), only supports x9\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = false;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\n+            .nTime    = 1661705221,\n+            .nTxCount = 63531852,\n+            .dTxRate  = 0.1079119341520164,\n+        };\n+    }\n+};\n+\n+/**\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const CChainParams::SigNetOptions& options)\n+    {\n+        vSeeds.clear();\n+        vSeeds = options.seeds;\n+\n+        if (options.challenge.empty()) {\n+            consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000001291fc22898\");\n+            consensus.defaultAssumeValid = uint256S(\"0x000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\"); // 105495\n+            m_assumed_blockchain_size = 1;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                // Data from RPC: getchaintxstats 4096 000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\n+                .nTime    = 1661702566,\n+                .nTxCount = 1903567,\n+                .dTxRate  = 0.02336701143027275,\n+            };\n+            consensus.signet_challenge = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 296,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "03468cbc377ad1e73daf63ad37f29baca1944500",
      "in_reply_to_id": 996574085,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for review, I pushed another potential solution using constants. Let me know if you like something more akin to your solution, or fully using defaults better.",
      "created_at": "2022-10-17T19:22:09Z",
      "updated_at": "2022-10-17T19:22:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r997427366",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997427366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997739468",
      "pull_request_review_id": 1145119669,
      "id": 997739468,
      "node_id": "PRRC_kwDOABII5847eEvM",
      "diff_hunk": "@@ -0,0 +1,510 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/merkle.h>\n+#include <deploymentinfo.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <script/interpreter.h>\n+#include <util/system.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+\n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    CMutableTransaction txNew;\n+    txNew.nVersion = 1;\n+    txNew.vin.resize(1);\n+    txNew.vout.resize(1);\n+    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vout[0].nValue = genesisReward;\n+    txNew.vout[0].scriptPubKey = genesisOutputScript;\n+\n+    CBlock genesis;\n+    genesis.nTime    = nTime;\n+    genesis.nBits    = nBits;\n+    genesis.nNonce   = nNonce;\n+    genesis.nVersion = nVersion;\n+    genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n+    genesis.hashPrevBlock.SetNull();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+    return genesis;\n+}\n+\n+/**\n+ * Build the genesis block. Note that the output of its generation\n+ * transaction cannot be spent since it did not originally exist in the\n+ * database.\n+ *\n+ * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+ *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+ *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+ *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+ *   vMerkleTree: 4a5e1e\n+ */\n+static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+\n+/**\n+ * Main network on which people trade goods and services.\n+ */\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\n+        consensus.script_flag_exceptions.emplace( // Taproot exception\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n+        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000003404ba0801921119f903495e\");\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\"); // 751565\n+\n+        /**\n+         * The message start string is designed to be unlikely to occur in normal data.\n+         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+         * a large 32-bit integer with any alignment.\n+         */\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        nDefaultPort = 8333;\n+        nPruneAfterHeight = 100000;\n+        m_assumed_blockchain_size = 496;\n+        m_assumed_chain_state_size = 6;\n+\n+        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me.\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org.\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com.\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch.\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org.\"); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl.\"); // Sjors Provoost\n+        vSeeds.emplace_back(\"dnsseed.emzy.de.\"); // Stephan Oeste\n+        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz.\"); // Jason Maurice\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n+\n+        bech32_hrp = \"bc\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = false;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n+                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n+                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n+                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n+                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n+                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n+                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n+                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n+                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n+                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n+                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n+                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n+                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\n+            .nTime    = 1661697692,\n+            .nTxCount = 760120522,\n+            .dTxRate  = 2.925802860942233,\n+        };\n+    }\n+};\n+\n+/**\n+ * Testnet (v3): public test network which is reset from time to time.\n+ */\n+class CTestNetParams : public CChainParams {\n+public:\n+    CTestNetParams() {\n+        strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n+        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000076f6e7cbd0beade5d20\");\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\"); // 2344474\n+\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        nDefaultPort = 18333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 42;\n+        m_assumed_chain_state_size = 2;\n+\n+        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        // nodes with support for servicebits filtering should be at the top\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch.\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org.\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl.\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me.\"); // Just a static list of stable node(s), only supports x9\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = false;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\n+            .nTime    = 1661705221,\n+            .nTxCount = 63531852,\n+            .dTxRate  = 0.1079119341520164,\n+        };\n+    }\n+};\n+\n+/**\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const CChainParams::SigNetOptions& options)\n+    {\n+        vSeeds.clear();\n+        vSeeds = options.seeds;\n+\n+        if (options.challenge.empty()) {\n+            consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000001291fc22898\");\n+            consensus.defaultAssumeValid = uint256S(\"0x000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\"); // 105495\n+            m_assumed_blockchain_size = 1;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                // Data from RPC: getchaintxstats 4096 000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\n+                .nTime    = 1661702566,\n+                .nTxCount = 1903567,\n+                .dTxRate  = 0.02336701143027275,\n+            };\n+            consensus.signet_challenge = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 296,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "03468cbc377ad1e73daf63ad37f29baca1944500",
      "in_reply_to_id": 996574085,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Currently, if you run`bitcoind -signet -signetchallenge=51` then you start up with no seed nodes; with your current patch, you'll instead connect to the default signet seednodes, and then reject them for having the wrong network magic. That just seems buggy to me? Putting these defaults into the code rather than the structure definition seems like the easiest way of making that work sensibly to me.",
      "created_at": "2022-10-18T05:41:39Z",
      "updated_at": "2022-10-18T05:41:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r997739468",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997739468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997820928",
      "pull_request_review_id": 1145233568,
      "id": 997820928,
      "node_id": "PRRC_kwDOABII5847eYoA",
      "diff_hunk": "@@ -0,0 +1,510 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/merkle.h>\n+#include <deploymentinfo.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <script/interpreter.h>\n+#include <util/system.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+\n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    CMutableTransaction txNew;\n+    txNew.nVersion = 1;\n+    txNew.vin.resize(1);\n+    txNew.vout.resize(1);\n+    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vout[0].nValue = genesisReward;\n+    txNew.vout[0].scriptPubKey = genesisOutputScript;\n+\n+    CBlock genesis;\n+    genesis.nTime    = nTime;\n+    genesis.nBits    = nBits;\n+    genesis.nNonce   = nNonce;\n+    genesis.nVersion = nVersion;\n+    genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n+    genesis.hashPrevBlock.SetNull();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+    return genesis;\n+}\n+\n+/**\n+ * Build the genesis block. Note that the output of its generation\n+ * transaction cannot be spent since it did not originally exist in the\n+ * database.\n+ *\n+ * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+ *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+ *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+ *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+ *   vMerkleTree: 4a5e1e\n+ */\n+static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+\n+/**\n+ * Main network on which people trade goods and services.\n+ */\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\n+        consensus.script_flag_exceptions.emplace( // Taproot exception\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n+        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000003404ba0801921119f903495e\");\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\"); // 751565\n+\n+        /**\n+         * The message start string is designed to be unlikely to occur in normal data.\n+         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+         * a large 32-bit integer with any alignment.\n+         */\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        nDefaultPort = 8333;\n+        nPruneAfterHeight = 100000;\n+        m_assumed_blockchain_size = 496;\n+        m_assumed_chain_state_size = 6;\n+\n+        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me.\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org.\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com.\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch.\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org.\"); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl.\"); // Sjors Provoost\n+        vSeeds.emplace_back(\"dnsseed.emzy.de.\"); // Stephan Oeste\n+        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz.\"); // Jason Maurice\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n+\n+        bech32_hrp = \"bc\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = false;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n+                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n+                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n+                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n+                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n+                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n+                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n+                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n+                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n+                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n+                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n+                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n+                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\n+            .nTime    = 1661697692,\n+            .nTxCount = 760120522,\n+            .dTxRate  = 2.925802860942233,\n+        };\n+    }\n+};\n+\n+/**\n+ * Testnet (v3): public test network which is reset from time to time.\n+ */\n+class CTestNetParams : public CChainParams {\n+public:\n+    CTestNetParams() {\n+        strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n+        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000076f6e7cbd0beade5d20\");\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\"); // 2344474\n+\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        nDefaultPort = 18333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 42;\n+        m_assumed_chain_state_size = 2;\n+\n+        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        // nodes with support for servicebits filtering should be at the top\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch.\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org.\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl.\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me.\"); // Just a static list of stable node(s), only supports x9\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = false;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\n+            .nTime    = 1661705221,\n+            .nTxCount = 63531852,\n+            .dTxRate  = 0.1079119341520164,\n+        };\n+    }\n+};\n+\n+/**\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const CChainParams::SigNetOptions& options)\n+    {\n+        vSeeds.clear();\n+        vSeeds = options.seeds;\n+\n+        if (options.challenge.empty()) {\n+            consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000001291fc22898\");\n+            consensus.defaultAssumeValid = uint256S(\"0x000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\"); // 105495\n+            m_assumed_blockchain_size = 1;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                // Data from RPC: getchaintxstats 4096 000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\n+                .nTime    = 1661702566,\n+                .nTxCount = 1903567,\n+                .dTxRate  = 0.02336701143027275,\n+            };\n+            consensus.signet_challenge = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 296,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "03468cbc377ad1e73daf63ad37f29baca1944500",
      "in_reply_to_id": 996574085,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought I changed the behaviour now: It does not populate the seeds if the passed in option seeds are default and the signet challenge is non-default. This is still kind of confusing in the code though, so please let me know if you find that inferior.",
      "created_at": "2022-10-18T07:27:25Z",
      "updated_at": "2022-10-18T07:27:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r997820928",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997820928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997836916",
      "pull_request_review_id": 1145256583,
      "id": 997836916,
      "node_id": "PRRC_kwDOABII5847ech0",
      "diff_hunk": "@@ -0,0 +1,510 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/merkle.h>\n+#include <deploymentinfo.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <script/interpreter.h>\n+#include <util/system.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+\n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    CMutableTransaction txNew;\n+    txNew.nVersion = 1;\n+    txNew.vin.resize(1);\n+    txNew.vout.resize(1);\n+    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vout[0].nValue = genesisReward;\n+    txNew.vout[0].scriptPubKey = genesisOutputScript;\n+\n+    CBlock genesis;\n+    genesis.nTime    = nTime;\n+    genesis.nBits    = nBits;\n+    genesis.nNonce   = nNonce;\n+    genesis.nVersion = nVersion;\n+    genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n+    genesis.hashPrevBlock.SetNull();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+    return genesis;\n+}\n+\n+/**\n+ * Build the genesis block. Note that the output of its generation\n+ * transaction cannot be spent since it did not originally exist in the\n+ * database.\n+ *\n+ * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+ *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+ *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+ *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+ *   vMerkleTree: 4a5e1e\n+ */\n+static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+\n+/**\n+ * Main network on which people trade goods and services.\n+ */\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\n+        consensus.script_flag_exceptions.emplace( // Taproot exception\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n+        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000003404ba0801921119f903495e\");\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\"); // 751565\n+\n+        /**\n+         * The message start string is designed to be unlikely to occur in normal data.\n+         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+         * a large 32-bit integer with any alignment.\n+         */\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        nDefaultPort = 8333;\n+        nPruneAfterHeight = 100000;\n+        m_assumed_blockchain_size = 496;\n+        m_assumed_chain_state_size = 6;\n+\n+        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me.\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org.\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com.\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch.\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org.\"); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl.\"); // Sjors Provoost\n+        vSeeds.emplace_back(\"dnsseed.emzy.de.\"); // Stephan Oeste\n+        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz.\"); // Jason Maurice\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n+\n+        bech32_hrp = \"bc\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = false;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n+                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n+                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n+                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n+                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n+                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n+                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n+                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n+                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n+                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n+                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n+                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n+                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\n+            .nTime    = 1661697692,\n+            .nTxCount = 760120522,\n+            .dTxRate  = 2.925802860942233,\n+        };\n+    }\n+};\n+\n+/**\n+ * Testnet (v3): public test network which is reset from time to time.\n+ */\n+class CTestNetParams : public CChainParams {\n+public:\n+    CTestNetParams() {\n+        strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n+        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000076f6e7cbd0beade5d20\");\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\"); // 2344474\n+\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        nDefaultPort = 18333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 42;\n+        m_assumed_chain_state_size = 2;\n+\n+        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        // nodes with support for servicebits filtering should be at the top\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch.\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org.\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl.\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me.\"); // Just a static list of stable node(s), only supports x9\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = false;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\n+            .nTime    = 1661705221,\n+            .nTxCount = 63531852,\n+            .dTxRate  = 0.1079119341520164,\n+        };\n+    }\n+};\n+\n+/**\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const CChainParams::SigNetOptions& options)\n+    {\n+        vSeeds.clear();\n+        vSeeds = options.seeds;\n+\n+        if (options.challenge.empty()) {\n+            consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000001291fc22898\");\n+            consensus.defaultAssumeValid = uint256S(\"0x000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\"); // 105495\n+            m_assumed_blockchain_size = 1;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                // Data from RPC: getchaintxstats 4096 000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\n+                .nTime    = 1661702566,\n+                .nTxCount = 1903567,\n+                .dTxRate  = 0.02336701143027275,\n+            };\n+            consensus.signet_challenge = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 296,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "03468cbc377ad1e73daf63ad37f29baca1944500",
      "in_reply_to_id": 996574085,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Err, somehow I missed that entirely? Whoops.\r\n\r\nIt's not the way I'd do it, but as long as it works, I don't really mind.\r\n\r\nAnother approach would be to have `SigNetOptions` default to an empty challenge and empty seed vector, but define a `const SigNetOptions GlobalDefaultSigNet { DEFAULT_CHALLENGE, DEFAULT_SEEDS };` with the global defaults, then make `ReadSigNetArgs` do:\r\n\r\n```c++\r\nif (args.IsArgSet(\"-signetchallenge\")) {\r\n    ...\r\n    options.challenge = ParseHex(signet_challenge[0]);\r\n} else {\r\n    options = GlobalDefaultSigNet;\r\n}\r\nif (args.IsArgSet(\"-signetseednode\")) {\r\n    options.seeds = args.GetArgs(\"-signetseednode\");\r\n}\r\n```\r\n\r\nthen you don't have to special case challenge/seeds in `SigNetParams(options)`, though you'd still be special casing min chain work, assume valid, etc.",
      "created_at": "2022-10-18T07:43:26Z",
      "updated_at": "2022-10-18T07:43:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r997836916",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997836916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998125548",
      "pull_request_review_id": 1145674097,
      "id": 998125548,
      "node_id": "PRRC_kwDOABII5847fi_s",
      "diff_hunk": "@@ -0,0 +1,510 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/merkle.h>\n+#include <deploymentinfo.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <script/interpreter.h>\n+#include <util/system.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+\n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    CMutableTransaction txNew;\n+    txNew.nVersion = 1;\n+    txNew.vin.resize(1);\n+    txNew.vout.resize(1);\n+    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vout[0].nValue = genesisReward;\n+    txNew.vout[0].scriptPubKey = genesisOutputScript;\n+\n+    CBlock genesis;\n+    genesis.nTime    = nTime;\n+    genesis.nBits    = nBits;\n+    genesis.nNonce   = nNonce;\n+    genesis.nVersion = nVersion;\n+    genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n+    genesis.hashPrevBlock.SetNull();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+    return genesis;\n+}\n+\n+/**\n+ * Build the genesis block. Note that the output of its generation\n+ * transaction cannot be spent since it did not originally exist in the\n+ * database.\n+ *\n+ * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+ *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+ *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+ *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+ *   vMerkleTree: 4a5e1e\n+ */\n+static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+\n+/**\n+ * Main network on which people trade goods and services.\n+ */\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\n+        consensus.script_flag_exceptions.emplace( // Taproot exception\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n+        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000003404ba0801921119f903495e\");\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\"); // 751565\n+\n+        /**\n+         * The message start string is designed to be unlikely to occur in normal data.\n+         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+         * a large 32-bit integer with any alignment.\n+         */\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        nDefaultPort = 8333;\n+        nPruneAfterHeight = 100000;\n+        m_assumed_blockchain_size = 496;\n+        m_assumed_chain_state_size = 6;\n+\n+        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me.\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org.\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com.\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch.\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org.\"); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl.\"); // Sjors Provoost\n+        vSeeds.emplace_back(\"dnsseed.emzy.de.\"); // Stephan Oeste\n+        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz.\"); // Jason Maurice\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n+\n+        bech32_hrp = \"bc\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = false;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n+                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n+                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n+                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n+                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n+                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n+                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n+                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n+                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n+                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n+                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n+                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n+                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\n+            .nTime    = 1661697692,\n+            .nTxCount = 760120522,\n+            .dTxRate  = 2.925802860942233,\n+        };\n+    }\n+};\n+\n+/**\n+ * Testnet (v3): public test network which is reset from time to time.\n+ */\n+class CTestNetParams : public CChainParams {\n+public:\n+    CTestNetParams() {\n+        strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n+        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000076f6e7cbd0beade5d20\");\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\"); // 2344474\n+\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        nDefaultPort = 18333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 42;\n+        m_assumed_chain_state_size = 2;\n+\n+        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        // nodes with support for servicebits filtering should be at the top\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch.\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org.\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl.\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me.\"); // Just a static list of stable node(s), only supports x9\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = false;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\n+            .nTime    = 1661705221,\n+            .nTxCount = 63531852,\n+            .dTxRate  = 0.1079119341520164,\n+        };\n+    }\n+};\n+\n+/**\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const CChainParams::SigNetOptions& options)\n+    {\n+        vSeeds.clear();\n+        vSeeds = options.seeds;\n+\n+        if (options.challenge.empty()) {\n+            consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000001291fc22898\");\n+            consensus.defaultAssumeValid = uint256S(\"0x000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\"); // 105495\n+            m_assumed_blockchain_size = 1;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                // Data from RPC: getchaintxstats 4096 000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\n+                .nTime    = 1661702566,\n+                .nTxCount = 1903567,\n+                .dTxRate  = 0.02336701143027275,\n+            };\n+            consensus.signet_challenge = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 296,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "03468cbc377ad1e73daf63ad37f29baca1944500",
      "in_reply_to_id": 996574085,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Decouple SigNetChainParams from ArgsManager\" 9d3500c2d35f7375aadba4a10d50dbc9a6b82251:\r\n\r\nThis is better than previous attempt, but new code is still not equivalent to existing code. Previous code was checking `!args.IsArgSet(\"-signetchallenge\")` new code is checking `options.challenge == DEFAULT_SIGNET_CHALLENGE` and these cases are not equivalent if default signetchallenge value is hardcoded in the config file. Same comment applies to `signetseednode`.\r\n\r\nI think we should keep this a pure refactoring and have a smaller diff and leave the seeds where they and make the options struct a 1:1 substitute for ArgsManager. If we want to make changes to behavior later, or make code cleanups later, that's great, but I don't think those changes belong here.\r\n\r\nThere is a simple way to do what I'm requesting: change the type of `challenge` from `std::vector<uint8_t>` to `std::optional<std::vector<uint8_t>>` and change the type of `seeds` from `std::vector<std::string>` to `std::optional<std::vector<std::string>>`. If the arguments are set, populate the fields. If the arguments are unset, leave the fields set to `nullopt`. Leave the logic in `chainparams.cpp` unchanged and just swap out `ArgsManager::IsArgSet` calls for `std::optional::has_value` calls.",
      "created_at": "2022-10-18T12:13:46Z",
      "updated_at": "2022-10-18T12:13:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r998125548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998125548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1055354002",
      "pull_request_review_id": 1227509600,
      "id": 1055354002,
      "node_id": "PRRC_kwDOABII584-52yS",
      "diff_hunk": "@@ -0,0 +1,510 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/merkle.h>\n+#include <deploymentinfo.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <script/interpreter.h>\n+#include <util/system.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+\n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    CMutableTransaction txNew;\n+    txNew.nVersion = 1;\n+    txNew.vin.resize(1);\n+    txNew.vout.resize(1);\n+    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vout[0].nValue = genesisReward;\n+    txNew.vout[0].scriptPubKey = genesisOutputScript;\n+\n+    CBlock genesis;\n+    genesis.nTime    = nTime;\n+    genesis.nBits    = nBits;\n+    genesis.nNonce   = nNonce;\n+    genesis.nVersion = nVersion;\n+    genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n+    genesis.hashPrevBlock.SetNull();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+    return genesis;\n+}\n+\n+/**\n+ * Build the genesis block. Note that the output of its generation\n+ * transaction cannot be spent since it did not originally exist in the\n+ * database.\n+ *\n+ * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+ *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+ *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+ *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+ *   vMerkleTree: 4a5e1e\n+ */\n+static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+\n+/**\n+ * Main network on which people trade goods and services.\n+ */\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\n+        consensus.script_flag_exceptions.emplace( // Taproot exception\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n+        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000003404ba0801921119f903495e\");\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\"); // 751565\n+\n+        /**\n+         * The message start string is designed to be unlikely to occur in normal data.\n+         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+         * a large 32-bit integer with any alignment.\n+         */\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        nDefaultPort = 8333;\n+        nPruneAfterHeight = 100000;\n+        m_assumed_blockchain_size = 496;\n+        m_assumed_chain_state_size = 6;\n+\n+        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me.\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org.\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com.\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch.\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org.\"); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl.\"); // Sjors Provoost\n+        vSeeds.emplace_back(\"dnsseed.emzy.de.\"); // Stephan Oeste\n+        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz.\"); // Jason Maurice\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n+\n+        bech32_hrp = \"bc\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = false;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n+                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n+                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n+                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n+                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n+                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n+                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n+                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n+                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n+                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n+                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n+                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n+                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\n+            .nTime    = 1661697692,\n+            .nTxCount = 760120522,\n+            .dTxRate  = 2.925802860942233,\n+        };\n+    }\n+};\n+\n+/**\n+ * Testnet (v3): public test network which is reset from time to time.\n+ */\n+class CTestNetParams : public CChainParams {\n+public:\n+    CTestNetParams() {\n+        strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n+        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000076f6e7cbd0beade5d20\");\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\"); // 2344474\n+\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        nDefaultPort = 18333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 42;\n+        m_assumed_chain_state_size = 2;\n+\n+        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        // nodes with support for servicebits filtering should be at the top\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch.\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org.\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl.\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me.\"); // Just a static list of stable node(s), only supports x9\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = false;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\n+            .nTime    = 1661705221,\n+            .nTxCount = 63531852,\n+            .dTxRate  = 0.1079119341520164,\n+        };\n+    }\n+};\n+\n+/**\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const CChainParams::SigNetOptions& options)\n+    {\n+        vSeeds.clear();\n+        vSeeds = options.seeds;\n+\n+        if (options.challenge.empty()) {\n+            consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000001291fc22898\");\n+            consensus.defaultAssumeValid = uint256S(\"0x000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\"); // 105495\n+            m_assumed_blockchain_size = 1;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                // Data from RPC: getchaintxstats 4096 000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\n+                .nTime    = 1661702566,\n+                .nTxCount = 1903567,\n+                .dTxRate  = 0.02336701143027275,\n+            };\n+            consensus.signet_challenge = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 296,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "03468cbc377ad1e73daf63ad37f29baca1944500",
      "in_reply_to_id": 996574085,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Commit \"Decouple SigNetChainParams from ArgsManager\" e893056ed68d02ef94f7e94fc6287217610723a4 now uses a struct with optionals as proposed here.\r\n\r\nI tried implementing similar optionals for the RegTestOptions in commit \"Douple RegTestChainParams from ArgsManager\" 6d57a29df85277964edb21ee251b395e4eae1ef6, but it felt un-ergonomic.",
      "created_at": "2022-12-22T11:14:11Z",
      "updated_at": "2022-12-22T11:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1055354002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1055354002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108460621",
      "pull_request_review_id": 1301418288,
      "id": 1108460621,
      "node_id": "PRRC_kwDOABII585CEcRN",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparamsbase.h>\n+\n+#include <tinyformat.h>\n+\n+const std::string CBaseChainParams::MAIN = \"main\";\n+const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::SIGNET = \"signet\";\n+const std::string CBaseChainParams::REGTEST = \"regtest\";\n+\n+/**\n+ * Port numbers for incoming Tor connections (8334, 18334, 38334, 18445) have\n+ * been chosen arbitrarily to keep ranges of used ports tight.\n+ */\n+std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n+{\n+    if (chain == CBaseChainParams::MAIN) {\n+        return std::make_unique<CBaseChainParams>(\"\", 8332, 8334);\n+    } else if (chain == CBaseChainParams::TESTNET) {\n+        return std::make_unique<CBaseChainParams>(\"testnet3\", 18332, 18334);\n+    } else if (chain == CBaseChainParams::SIGNET) {\n+        return std::make_unique<CBaseChainParams>(\"signet\", 38332, 38334);\n+    } else if (chain == CBaseChainParams::REGTEST) {\n+        return std::make_unique<CBaseChainParams>(\"regtest\", 18443, 18445);\n+    }\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+}\n+\n+static std::unique_ptr<CBaseChainParams> globalChainBaseParams;",
      "path": "src/kernel/chainparamsbase.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "c00f4f7599b89df8196287176e743a99da1de67f",
      "in_reply_to_id": 980405199,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I looked into this again. The underlying problem seems to be that the kernel library still depends on the `ArgsManager`, which in turn depends on the global. I'd rather not make this change devolve into changing `ArgsManager` internals and behaviour, so I'll defer refactoring this global to once the `ArgsManager` is removed from the kernel library.",
      "created_at": "2023-02-16T13:17:34Z",
      "updated_at": "2023-02-16T13:17:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1108460621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108460621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108469843",
      "pull_request_review_id": 1301437243,
      "id": 1108469843,
      "node_id": "PRRC_kwDOABII585CEehT",
      "diff_hunk": "@@ -382,11 +378,25 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+void ReadSigNetArgs(const ArgsManager& args, CChainParams::SigNetOptions& options) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "de405bd4939c69ab7bfb65a193efe5459e1ce13e",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems more ergonomic to write:\r\n\r\n```c++\r\nCChainParams::SigNetOptions ReadSigNetArgs(const ArgsManager& args)\r\n{\r\n    ...\r\n```\r\n\r\nbut maybe this is just deliberately keeping with the same pattern as per https://github.com/bitcoin/bitcoin/pull/26883/files#r1068247937",
      "created_at": "2023-02-16T13:26:05Z",
      "updated_at": "2023-02-16T13:57:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1108469843",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108469843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108499523",
      "pull_request_review_id": 1301437243,
      "id": 1108499523,
      "node_id": "PRRC_kwDOABII585CElxD",
      "diff_hunk": "@@ -497,41 +520,47 @@ class CRegTestParams : public CChainParams\n         consensus.vDeployments[d].nTimeout = nTimeout;\n         consensus.vDeployments[d].min_activation_height = min_activation_height;\n     }\n-    void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n \n-static void MaybeUpdateHeights(const ArgsManager& args, Consensus::Params& consensus)\n-{\n-    for (const std::string& arg : args.GetArgs(\"-testactivationheight\")) {\n+std::optional<Consensus::BuriedDeployment> name4namestr(const std::string& name_str) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "6f148a738d824d52f8f6bb16e347bf0bd3057d37",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rename to `GetBuriedDeployment()` ? This function should be part of deploymentinfo.cpp, shouldn't it?",
      "created_at": "2023-02-16T13:48:19Z",
      "updated_at": "2023-02-16T13:57:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1108499523",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108499523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 525,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108500764",
      "pull_request_review_id": 1301437243,
      "id": 1108500764,
      "node_id": "PRRC_kwDOABII585CEmEc",
      "diff_hunk": "@@ -436,11 +437,33 @@ class CRegTestParams : public CChainParams\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n         nDefaultPort = 18444;\n-        nPruneAfterHeight = args.GetBoolArg(\"-fastprune\", false) ? 100 : 1000;\n+        nPruneAfterHeight = opts.fastprune ? 100 : 1000;\n         m_assumed_blockchain_size = 0;\n         m_assumed_chain_state_size = 0;\n \n-        UpdateActivationParametersFromArgs(args);\n+        for (const auto& [name, height] : opts.activation_heights) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "6f148a738d824d52f8f6bb16e347bf0bd3057d37",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`name` is really `deployment_id` (`dep` for short)?",
      "created_at": "2023-02-16T13:49:22Z",
      "updated_at": "2023-02-16T13:57:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1108500764",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108500764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108508687",
      "pull_request_review_id": 1301437243,
      "id": 1108508687,
      "node_id": "PRRC_kwDOABII585CEoAP",
      "diff_hunk": "@@ -0,0 +1,510 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/merkle.h>\n+#include <deploymentinfo.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <script/interpreter.h>\n+#include <util/system.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+\n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    CMutableTransaction txNew;\n+    txNew.nVersion = 1;\n+    txNew.vin.resize(1);\n+    txNew.vout.resize(1);\n+    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vout[0].nValue = genesisReward;\n+    txNew.vout[0].scriptPubKey = genesisOutputScript;\n+\n+    CBlock genesis;\n+    genesis.nTime    = nTime;\n+    genesis.nBits    = nBits;\n+    genesis.nNonce   = nNonce;\n+    genesis.nVersion = nVersion;\n+    genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n+    genesis.hashPrevBlock.SetNull();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+    return genesis;\n+}\n+\n+/**\n+ * Build the genesis block. Note that the output of its generation\n+ * transaction cannot be spent since it did not originally exist in the\n+ * database.\n+ *\n+ * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+ *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+ *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+ *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+ *   vMerkleTree: 4a5e1e\n+ */\n+static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+\n+/**\n+ * Main network on which people trade goods and services.\n+ */\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\n+        consensus.script_flag_exceptions.emplace( // Taproot exception\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n+        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000003404ba0801921119f903495e\");\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\"); // 751565\n+\n+        /**\n+         * The message start string is designed to be unlikely to occur in normal data.\n+         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+         * a large 32-bit integer with any alignment.\n+         */\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        nDefaultPort = 8333;\n+        nPruneAfterHeight = 100000;\n+        m_assumed_blockchain_size = 496;\n+        m_assumed_chain_state_size = 6;\n+\n+        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me.\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org.\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com.\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch.\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org.\"); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl.\"); // Sjors Provoost\n+        vSeeds.emplace_back(\"dnsseed.emzy.de.\"); // Stephan Oeste\n+        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz.\"); // Jason Maurice\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n+\n+        bech32_hrp = \"bc\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = false;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n+                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n+                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n+                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n+                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n+                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n+                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n+                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n+                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n+                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n+                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n+                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n+                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\n+            .nTime    = 1661697692,\n+            .nTxCount = 760120522,\n+            .dTxRate  = 2.925802860942233,\n+        };\n+    }\n+};\n+\n+/**\n+ * Testnet (v3): public test network which is reset from time to time.\n+ */\n+class CTestNetParams : public CChainParams {\n+public:\n+    CTestNetParams() {\n+        strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n+        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000076f6e7cbd0beade5d20\");\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\"); // 2344474\n+\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        nDefaultPort = 18333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 42;\n+        m_assumed_chain_state_size = 2;\n+\n+        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        // nodes with support for servicebits filtering should be at the top\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch.\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org.\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl.\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me.\"); // Just a static list of stable node(s), only supports x9\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = false;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\n+            .nTime    = 1661705221,\n+            .nTxCount = 63531852,\n+            .dTxRate  = 0.1079119341520164,\n+        };\n+    }\n+};\n+\n+/**\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const CChainParams::SigNetOptions& options)\n+    {\n+        vSeeds.clear();\n+        vSeeds = options.seeds;\n+\n+        if (options.challenge.empty()) {\n+            consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000000000000001291fc22898\");\n+            consensus.defaultAssumeValid = uint256S(\"0x000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\"); // 105495\n+            m_assumed_blockchain_size = 1;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                // Data from RPC: getchaintxstats 4096 000000d1a0e224fa4679d2fb2187ba55431c284fa1b74cbc8cfda866fd4d2c09\n+                .nTime    = 1661702566,\n+                .nTxCount = 1903567,\n+                .dTxRate  = 0.02336701143027275,\n+            };\n+            consensus.signet_challenge = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 296,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "03468cbc377ad1e73daf63ad37f29baca1944500",
      "in_reply_to_id": 996574085,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Using optionals for signet but not regtest makes sense to me.",
      "created_at": "2023-02-16T13:55:51Z",
      "updated_at": "2023-02-16T13:57:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1108508687",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108508687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108602508",
      "pull_request_review_id": 1301635352,
      "id": 1108602508,
      "node_id": "PRRC_kwDOABII585CE-6M",
      "diff_hunk": "@@ -382,11 +378,25 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+void ReadSigNetArgs(const ArgsManager& args, CChainParams::SigNetOptions& options) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "de405bd4939c69ab7bfb65a193efe5459e1ce13e",
      "in_reply_to_id": 1108469843,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, also keeping it the same as in: https://github.com/bitcoin/bitcoin/pull/25862/files#diff-4e268aeb074a176689aace31957a889c1f39c909e6678ca7be8707bda1a7be56R11",
      "created_at": "2023-02-16T15:04:10Z",
      "updated_at": "2023-02-16T15:04:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1108602508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108602508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108608610",
      "pull_request_review_id": 1301647914,
      "id": 1108608610,
      "node_id": "PRRC_kwDOABII585CFAZi",
      "diff_hunk": "@@ -436,11 +437,33 @@ class CRegTestParams : public CChainParams\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n         nDefaultPort = 18444;\n-        nPruneAfterHeight = args.GetBoolArg(\"-fastprune\", false) ? 100 : 1000;\n+        nPruneAfterHeight = opts.fastprune ? 100 : 1000;\n         m_assumed_blockchain_size = 0;\n         m_assumed_chain_state_size = 0;\n \n-        UpdateActivationParametersFromArgs(args);\n+        for (const auto& [name, height] : opts.activation_heights) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "6f148a738d824d52f8f6bb16e347bf0bd3057d37",
      "in_reply_to_id": 1108500764,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see, I'll use `dep`, because that's what is used elsewhere in the code.",
      "created_at": "2023-02-16T15:08:50Z",
      "updated_at": "2023-02-16T15:08:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1108608610",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108608610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126506648",
      "pull_request_review_id": 1326436864,
      "id": 1126506648,
      "node_id": "PRRC_kwDOABII585DJSCY",
      "diff_hunk": "@@ -34,3 +34,18 @@ std::string DeploymentName(Consensus::BuriedDeployment dep)\n     } // no default case, so the compiler can warn about missing cases\n     return \"\";\n }\n+\n+std::optional<Consensus::BuriedDeployment> GetBuriedDeployment(const std::string& deployment_name) {",
      "path": "src/deploymentinfo.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Decouple RegTestChainParams from ArgsManager\" (1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc)\r\n\r\nstring_view would work here, don't need a full string",
      "created_at": "2023-03-06T14:35:16Z",
      "updated_at": "2023-03-06T18:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126506648",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126506648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126541818",
      "pull_request_review_id": 1326436864,
      "id": 1126541818,
      "node_id": "PRRC_kwDOABII585DJan6",
      "diff_hunk": "@@ -497,41 +520,32 @@ class CRegTestParams : public CChainParams\n         consensus.vDeployments[d].nTimeout = nTimeout;\n         consensus.vDeployments[d].min_activation_height = min_activation_height;\n     }\n-    void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n \n-static void MaybeUpdateHeights(const ArgsManager& args, Consensus::Params& consensus)\n-{\n-    for (const std::string& arg : args.GetArgs(\"-testactivationheight\")) {\n+void ReadRegTestArgs(const ArgsManager& args, CChainParams::RegTestOptions& options) {\n+    options.fastprune = args.GetBoolArg(\"-fastprune\", false);\n+\n+    for (const std::string& arg : args.GetArgs(\"-testactivationheight\"))\n+    {\n         const auto found{arg.find('@')};\n         if (found == std::string::npos) {\n             throw std::runtime_error(strprintf(\"Invalid format (%s) for -testactivationheight=name@height.\", arg));\n         }\n-        const auto name{arg.substr(0, found)};\n+\n+        const auto deployment_name{arg.substr(0, found)};\n+        std::optional<Consensus::BuriedDeployment> maybe_dep{GetBuriedDeployment(deployment_name)};\n+        if (!maybe_dep.has_value()) {\n+            throw std::runtime_error(strprintf(\"Invalid name (%s) for -testactivationheight=name@height.\", arg));\n+        }\n+\n         const auto value{arg.substr(found + 1)};\n         int32_t height;\n         if (!ParseInt32(value, &height) || height < 0 || height >= std::numeric_limits<int>::max()) {\n             throw std::runtime_error(strprintf(\"Invalid height value (%s) for -testactivationheight=name@height.\", arg));\n         }\n-        if (name == \"segwit\") {\n-            consensus.SegwitHeight = int{height};\n-        } else if (name == \"bip34\") {\n-            consensus.BIP34Height = int{height};\n-        } else if (name == \"dersig\") {\n-            consensus.BIP66Height = int{height};\n-        } else if (name == \"cltv\") {\n-            consensus.BIP65Height = int{height};\n-        } else if (name == \"csv\") {\n-            consensus.CSVHeight = int{height};\n-        } else {\n-            throw std::runtime_error(strprintf(\"Invalid name (%s) for -testactivationheight=name@height.\", arg));\n-        }\n-    }\n-}\n \n-void CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager& args)\n-{\n-    MaybeUpdateHeights(args, consensus);\n+        options.activation_heights.insert_or_assign(maybe_dep.value(), height);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Decouple RegTestChainParams from ArgsManager\" (1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc)\r\n\r\nI think this could say:\r\n\r\n```c++\r\noptions.activation_heights[*maybe_dep]  = height;\r\n```\r\n\r\nWould also suggest renaming `maybe_dep` to `buried_deployment`.\r\n\r\nThese are just style comments, but in general this the code in the first few commits of this PR seems a little bogged down in mechanics of optional and map types instead of fluently expressing application logic. This is c++ in 2023, not java in 1996, so we can use the `[]` operator to access map elements and we can write `*value` and `value->` and `if (value)` to show that a value can be null without having to call it `maybe_vlu` and obscure the meaning of the variable. Verbosity is good for calling attention to special cases, but basic code accessing standard data structures should be concise and follow the natural patterns of the language.",
      "created_at": "2023-03-06T14:56:26Z",
      "updated_at": "2023-03-06T18:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126541818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126541818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 547,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126616994",
      "pull_request_review_id": 1326436864,
      "id": 1126616994,
      "node_id": "PRRC_kwDOABII585DJs-i",
      "diff_hunk": "@@ -436,11 +437,33 @@ class CRegTestParams : public CChainParams\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n         nDefaultPort = 18444;\n-        nPruneAfterHeight = args.GetBoolArg(\"-fastprune\", false) ? 100 : 1000;\n+        nPruneAfterHeight = opts.fastprune ? 100 : 1000;\n         m_assumed_blockchain_size = 0;\n         m_assumed_chain_state_size = 0;\n \n-        UpdateActivationParametersFromArgs(args);\n+        for (const auto& [dep, height] : opts.activation_heights) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Decouple RegTestChainParams from ArgsManager\" (1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc)\r\n\r\nI think it would be better to change existing `UpdateActivationParametersFromArgs(args)` line to `UpdateActivationParametersFromOptions(options)` and have that function do this stuff, instead of moving more code into this giant constructor, especially when none of the other code in the constructor touches the options struct.",
      "created_at": "2023-03-06T15:36:12Z",
      "updated_at": "2023-03-06T18:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126616994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126616994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": 443,
      "start_side": "LEFT",
      "line": null,
      "original_line": 444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126623251",
      "pull_request_review_id": 1326436864,
      "id": 1126623251,
      "node_id": "PRRC_kwDOABII585DJugT",
      "diff_hunk": "@@ -497,41 +520,32 @@ class CRegTestParams : public CChainParams\n         consensus.vDeployments[d].nTimeout = nTimeout;\n         consensus.vDeployments[d].min_activation_height = min_activation_height;\n     }\n-    void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n \n-static void MaybeUpdateHeights(const ArgsManager& args, Consensus::Params& consensus)\n-{\n-    for (const std::string& arg : args.GetArgs(\"-testactivationheight\")) {\n+void ReadRegTestArgs(const ArgsManager& args, CChainParams::RegTestOptions& options) {\n+    options.fastprune = args.GetBoolArg(\"-fastprune\", false);\n+\n+    for (const std::string& arg : args.GetArgs(\"-testactivationheight\"))\n+    {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Decouple RegTestChainParams from ArgsManager\" (1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc)\r\n\r\nUnnecessary diff here, somehow brace after `for` got moved to the next line. Could try using clang-format-diff to fix.",
      "created_at": "2023-03-06T15:39:19Z",
      "updated_at": "2023-03-06T18:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126623251",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126623251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": 528,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 529,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126666140",
      "pull_request_review_id": 1326436864,
      "id": 1126666140,
      "node_id": "PRRC_kwDOABII585DJ4-c",
      "diff_hunk": "@@ -582,20 +582,39 @@ const CChainParams &Params() {\n     return *globalChainParams;\n }\n \n+std::unique_ptr<const CChainParams> CChainParams::SigNet(const CChainParams::SigNetOptions& options) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "2ec5cdb9e4884b75623a0cc4328ac78bd5d075c9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add factory functions for Main/Test/Sig/Reg chainparams\" (2ec5cdb9e4884b75623a0cc4328ac78bd5d075c9)\r\n\r\nI think this commit makes sense, but isn't explained very well. If the goal is to replace uses of `new` with `std::make_unique` you could do that without adding a bunch of factory methods. The reason new factory methods are needed is that the existing `CreateChainParams` factory method takes an `ArgsManager` parameter, so it can't be called by libbitcoin_kernel code. By constrast, the new factory methods don't require `ArgsManager` so they provide a way for code using libbitcoin_kernel to construct `CMainParams`, `CRegTestParams`, etc. classes indirectly. It can't construct the classes directly because they are private to the `chainparams.cpp` file.",
      "created_at": "2023-03-06T16:00:29Z",
      "updated_at": "2023-03-06T18:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126666140",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126666140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 585,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126765676",
      "pull_request_review_id": 1326436864,
      "id": 1126765676,
      "node_id": "PRRC_kwDOABII585DKRRs",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparamsbase.h>\n+\n+#include <tinyformat.h>\n+\n+const std::string CBaseChainParams::MAIN = \"main\";\n+const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::SIGNET = \"signet\";\n+const std::string CBaseChainParams::REGTEST = \"regtest\";\n+\n+/**\n+ * Port numbers for incoming Tor connections (8334, 18334, 38334, 18445) have\n+ * been chosen arbitrarily to keep ranges of used ports tight.\n+ */\n+std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n+{\n+    if (chain == CBaseChainParams::MAIN) {\n+        return std::make_unique<CBaseChainParams>(\"\", 8332, 8334);\n+    } else if (chain == CBaseChainParams::TESTNET) {\n+        return std::make_unique<CBaseChainParams>(\"testnet3\", 18332, 18334);\n+    } else if (chain == CBaseChainParams::SIGNET) {\n+        return std::make_unique<CBaseChainParams>(\"signet\", 38332, 38334);\n+    } else if (chain == CBaseChainParams::REGTEST) {\n+        return std::make_unique<CBaseChainParams>(\"regtest\", 18443, 18445);\n+    }\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+}\n+\n+static std::unique_ptr<CBaseChainParams> globalChainBaseParams;",
      "path": "src/kernel/chainparamsbase.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "c00f4f7599b89df8196287176e743a99da1de67f",
      "in_reply_to_id": 980405199,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/26177#discussion_r980405199\r\n\r\nIn commit \"split non/kernel chainparamsbase\" (2f2216dee7a683638e6a3e966142f50f5de7df78)\r\n\r\nI don't think it makes sense to have `BaseParams` in the kernel at all. `BaseParams` contains things like RPC port which are at a higher level than the kernel, and are used by things like `bitcoin-cli` code and `ArgsManager` code which shouldn't depend on the kernel (see https://github.com/bitcoin/bitcoin/blob/master/doc/design/libraries.md#dependencies). Probably BaseParams code should stay where it is, or move to `libbitcoin_common` if it does move.\r\n\r\nIt does make sense to move CChainParams to the kernel, though.\r\n\r\nAlso, just in general reference to the discussion above it should be trivial to move any global like `globalChainParams` or `globalChainBaseParams` to the `kernel::Context` struct. Just add a global `kernel::Context* g_kernel_dontusethis` variable, change old code to use it, and avoid using it in new code. When the last usage of `g_kernel_dontusethis` is deleted it can go away. Existing uses of `globalChainParams` would mechanically change to `g_kernel_dontusethis->params` or whatever the new member is called.\r\n\r\n",
      "created_at": "2023-03-06T17:03:07Z",
      "updated_at": "2023-03-06T18:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126765676",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126765676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126829031",
      "pull_request_review_id": 1326436864,
      "id": 1126829031,
      "node_id": "PRRC_kwDOABII585DKgvn",
      "diff_hunk": "@@ -51,8 +51,9 @@ int main(int argc, char* argv[])\n \n \n     // SETUP: Misc Globals\n-    SelectParams(CBaseChainParams::MAIN);\n-    const CChainParams& chainparams = Params();\n+    SetGlobalBaseParams(CBaseChainParams::MAIN);\n+    auto chainparams_ptr = CChainParams::Main();\n+    const CChainParams& chainparams = *chainparams_ptr;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "4820450688e371a99d66cfad24714fa6e041e43e",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Split non/kernel chainparams\" (4820450688e371a99d66cfad24714fa6e041e43e)\r\n\r\nExisting `chainparams` variable is used exactly one place below so would suggest just writing `auto chainparams = CChainParams::Main();` and using it directly instead of having two similar variables.",
      "created_at": "2023-03-06T17:59:47Z",
      "updated_at": "2023-03-06T18:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126829031",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126829031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126832163",
      "pull_request_review_id": 1326436864,
      "id": 1126832163,
      "node_id": "PRRC_kwDOABII585DKhgj",
      "diff_hunk": "@@ -51,8 +51,9 @@ int main(int argc, char* argv[])\n \n \n     // SETUP: Misc Globals\n-    SelectParams(CBaseChainParams::MAIN);\n-    const CChainParams& chainparams = Params();\n+    SetGlobalBaseParams(CBaseChainParams::MAIN);",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "4820450688e371a99d66cfad24714fa6e041e43e",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Split non/kernel chainparams\" (4820450688e371a99d66cfad24714fa6e041e43e)\r\n\r\nIs calling SetGlobalBaseParams() actually necessary here? I'm guessing something breaks if isn't added but it's not clear what. It'd be good drop the call or change the generic comment above \"// SETUP: Misc Globals\" into a specific comment about why it's needed currently, and maybe how it can go away in the future.",
      "created_at": "2023-03-06T18:02:53Z",
      "updated_at": "2023-03-06T18:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126832163",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126832163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128491150",
      "pull_request_review_id": 1329411801,
      "id": 1128491150,
      "node_id": "PRRC_kwDOABII585DQ2iO",
      "diff_hunk": "@@ -436,11 +437,33 @@ class CRegTestParams : public CChainParams\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n         nDefaultPort = 18444;\n-        nPruneAfterHeight = args.GetBoolArg(\"-fastprune\", false) ? 100 : 1000;\n+        nPruneAfterHeight = opts.fastprune ? 100 : 1000;\n         m_assumed_blockchain_size = 0;\n         m_assumed_chain_state_size = 0;\n \n-        UpdateActivationParametersFromArgs(args);\n+        for (const auto& [dep, height] : opts.activation_heights) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc",
      "in_reply_to_id": 1126616994,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'll keep this as is, to me this reads easier. We also do use the options struct before to read the fastprune flag.",
      "created_at": "2023-03-07T19:58:41Z",
      "updated_at": "2023-03-07T19:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1128491150",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128491150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": 443,
      "start_side": "LEFT",
      "line": null,
      "original_line": 444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128545452",
      "pull_request_review_id": 1329473084,
      "id": 1128545452,
      "node_id": "PRRC_kwDOABII585DRDys",
      "diff_hunk": "@@ -582,20 +582,39 @@ const CChainParams &Params() {\n     return *globalChainParams;\n }\n \n+std::unique_ptr<const CChainParams> CChainParams::SigNet(const CChainParams::SigNetOptions& options) {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "2ec5cdb9e4884b75623a0cc4328ac78bd5d075c9",
      "in_reply_to_id": 1126666140,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for spelling this out, I updated the description.",
      "created_at": "2023-03-07T20:26:21Z",
      "updated_at": "2023-03-07T20:26:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1128545452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128545452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 585,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128547248",
      "pull_request_review_id": 1329475118,
      "id": 1128547248,
      "node_id": "PRRC_kwDOABII585DREOw",
      "diff_hunk": "@@ -497,41 +520,32 @@ class CRegTestParams : public CChainParams\n         consensus.vDeployments[d].nTimeout = nTimeout;\n         consensus.vDeployments[d].min_activation_height = min_activation_height;\n     }\n-    void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n \n-static void MaybeUpdateHeights(const ArgsManager& args, Consensus::Params& consensus)\n-{\n-    for (const std::string& arg : args.GetArgs(\"-testactivationheight\")) {\n+void ReadRegTestArgs(const ArgsManager& args, CChainParams::RegTestOptions& options) {\n+    options.fastprune = args.GetBoolArg(\"-fastprune\", false);\n+\n+    for (const std::string& arg : args.GetArgs(\"-testactivationheight\"))\n+    {",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc",
      "in_reply_to_id": 1126623251,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch, updated. [diff](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_0..tc/2022-09-libbitcoinkernel-chainparams-args_1)",
      "created_at": "2023-03-07T20:27:51Z",
      "updated_at": "2023-03-07T20:27:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1128547248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128547248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": 528,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 529,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128549764",
      "pull_request_review_id": 1329478207,
      "id": 1128549764,
      "node_id": "PRRC_kwDOABII585DRE2E",
      "diff_hunk": "@@ -497,41 +520,32 @@ class CRegTestParams : public CChainParams\n         consensus.vDeployments[d].nTimeout = nTimeout;\n         consensus.vDeployments[d].min_activation_height = min_activation_height;\n     }\n-    void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n \n-static void MaybeUpdateHeights(const ArgsManager& args, Consensus::Params& consensus)\n-{\n-    for (const std::string& arg : args.GetArgs(\"-testactivationheight\")) {\n+void ReadRegTestArgs(const ArgsManager& args, CChainParams::RegTestOptions& options) {\n+    options.fastprune = args.GetBoolArg(\"-fastprune\", false);\n+\n+    for (const std::string& arg : args.GetArgs(\"-testactivationheight\"))\n+    {\n         const auto found{arg.find('@')};\n         if (found == std::string::npos) {\n             throw std::runtime_error(strprintf(\"Invalid format (%s) for -testactivationheight=name@height.\", arg));\n         }\n-        const auto name{arg.substr(0, found)};\n+\n+        const auto deployment_name{arg.substr(0, found)};\n+        std::optional<Consensus::BuriedDeployment> maybe_dep{GetBuriedDeployment(deployment_name)};\n+        if (!maybe_dep.has_value()) {\n+            throw std::runtime_error(strprintf(\"Invalid name (%s) for -testactivationheight=name@height.\", arg));\n+        }\n+\n         const auto value{arg.substr(found + 1)};\n         int32_t height;\n         if (!ParseInt32(value, &height) || height < 0 || height >= std::numeric_limits<int>::max()) {\n             throw std::runtime_error(strprintf(\"Invalid height value (%s) for -testactivationheight=name@height.\", arg));\n         }\n-        if (name == \"segwit\") {\n-            consensus.SegwitHeight = int{height};\n-        } else if (name == \"bip34\") {\n-            consensus.BIP34Height = int{height};\n-        } else if (name == \"dersig\") {\n-            consensus.BIP66Height = int{height};\n-        } else if (name == \"cltv\") {\n-            consensus.BIP65Height = int{height};\n-        } else if (name == \"csv\") {\n-            consensus.CSVHeight = int{height};\n-        } else {\n-            throw std::runtime_error(strprintf(\"Invalid name (%s) for -testactivationheight=name@height.\", arg));\n-        }\n-    }\n-}\n \n-void CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager& args)\n-{\n-    MaybeUpdateHeights(args, consensus);\n+        options.activation_heights.insert_or_assign(maybe_dep.value(), height);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc",
      "in_reply_to_id": 1126541818,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for taking the time to get into this. I hope the update I pushed is more in style. [diff](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_0..tc/2022-09-libbitcoinkernel-chainparams-args_1)",
      "created_at": "2023-03-07T20:30:11Z",
      "updated_at": "2023-03-07T20:30:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1128549764",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128549764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 547,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128550399",
      "pull_request_review_id": 1329479198,
      "id": 1128550399,
      "node_id": "PRRC_kwDOABII585DRE__",
      "diff_hunk": "@@ -34,3 +34,18 @@ std::string DeploymentName(Consensus::BuriedDeployment dep)\n     } // no default case, so the compiler can warn about missing cases\n     return \"\";\n }\n+\n+std::optional<Consensus::BuriedDeployment> GetBuriedDeployment(const std::string& deployment_name) {",
      "path": "src/deploymentinfo.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1cfccc38dd5d39a9e23a19b94d6ba1a7bc4c48dc",
      "in_reply_to_id": 1126506648,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, updated. [diff](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_0..tc/2022-09-libbitcoinkernel-chainparams-args_1)",
      "created_at": "2023-03-07T20:30:31Z",
      "updated_at": "2023-03-07T20:30:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1128550399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128550399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128733941",
      "pull_request_review_id": 1329715445,
      "id": 1128733941,
      "node_id": "PRRC_kwDOABII585DRxz1",
      "diff_hunk": "@@ -51,8 +51,9 @@ int main(int argc, char* argv[])\n \n \n     // SETUP: Misc Globals\n-    SelectParams(CBaseChainParams::MAIN);\n-    const CChainParams& chainparams = Params();\n+    SetGlobalBaseParams(CBaseChainParams::MAIN);\n+    auto chainparams_ptr = CChainParams::Main();\n+    const CChainParams& chainparams = *chainparams_ptr;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "4820450688e371a99d66cfad24714fa6e041e43e",
      "in_reply_to_id": 1126829031,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, updated. [Diff](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_1..tc/2022-09-libbitcoinkernel-chainparams-args_2)",
      "created_at": "2023-03-07T23:26:42Z",
      "updated_at": "2023-03-07T23:26:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1128733941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128733941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128734106",
      "pull_request_review_id": 1329715569,
      "id": 1128734106,
      "node_id": "PRRC_kwDOABII585DRx2a",
      "diff_hunk": "@@ -51,8 +51,9 @@ int main(int argc, char* argv[])\n \n \n     // SETUP: Misc Globals\n-    SelectParams(CBaseChainParams::MAIN);\n-    const CChainParams& chainparams = Params();\n+    SetGlobalBaseParams(CBaseChainParams::MAIN);",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "4820450688e371a99d66cfad24714fa6e041e43e",
      "in_reply_to_id": 1126832163,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is no longer relevant.",
      "created_at": "2023-03-07T23:26:51Z",
      "updated_at": "2023-03-07T23:26:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1128734106",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128734106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130015697",
      "pull_request_review_id": 1331431527,
      "id": 1130015697,
      "node_id": "PRRC_kwDOABII585DWqvR",
      "diff_hunk": "@@ -497,41 +520,30 @@ class CRegTestParams : public CChainParams\n         consensus.vDeployments[d].nTimeout = nTimeout;\n         consensus.vDeployments[d].min_activation_height = min_activation_height;\n     }\n-    void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n \n-static void MaybeUpdateHeights(const ArgsManager& args, Consensus::Params& consensus)\n-{\n+void ReadRegTestArgs(const ArgsManager& args, CChainParams::RegTestOptions& options) {\n+    options.fastprune = args.GetBoolArg(\"-fastprune\", false);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "66b17894185e0cda3ea7cbec77cc771a7ba41d56",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Decouple RegTestChainParams from ArgsManager\" (66b17894185e0cda3ea7cbec77cc771a7ba41d56)\r\n\r\nProbably better to merge the option instead of overwriting it:\r\n\r\n```c++\r\nif (auto value = args.GetBoolArg(\"-fastprune\")) options.fastprune = *value;\r\n```\r\n\r\nThis would avoid needing to hardcode the default `false` value here, and would be more more consistent with `version_bits_parameters` and `activation_heights` handling below which keep preexisting values if arguments are unset.\r\n\r\nAlternately, if you don't want this function to keep preexisting values, it would make sense to add `version_bits_parameters.clear()` and `activation_height.clear()` calls.",
      "created_at": "2023-03-08T20:57:35Z",
      "updated_at": "2023-03-08T21:46:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1130015697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130015697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130039156",
      "pull_request_review_id": 1331431527,
      "id": 1130039156,
      "node_id": "PRRC_kwDOABII585DWwd0",
      "diff_hunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_CHAINPARAMSBASE_H\n+#define BITCOIN_KERNEL_CHAINPARAMSBASE_H\n+\n+#include <string>\n+\n+/**\n+ * CBaseChainParams defines the base parameters (shared between bitcoin-cli and bitcoind)\n+ * of a given instance of the Bitcoin system.\n+ */\n+class CBaseChainParams",
      "path": "src/kernel/chainparamsbase.h",
      "position": null,
      "original_position": 14,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "341be7fa680e9dcdbaa46db0194833b5d0229394",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"split non/kernel chainparamsbase\" (341be7fa680e9dcdbaa46db0194833b5d0229394)\r\n\r\nI still don't think it makes sense to have `CBaseChainParams` in the kernel. Like the comment above says, the point of the `CBaseChainParams` class and the reason it is separate from `CChainParams` is that it is shared between bitcoin-cli and bitcoind. I think of `CBaseChainParams` as client parameters, and `CChainParams` as server parameters. Practically speaking, `bitcoin-cli` or other clients that needs basic information like network datadir locations or RPC port numbers should not be required to link against the kernel.\r\n\r\nThe justification for this change given in the commit message about allowing \"kernel chainparams to be instantiated\" also does not make sense to me, because chainparamsbase is part of libbitcoin_util, and it is fine for kernel code to depend on libbitcoin_util if we are going by https://github.com/bitcoin/bitcoin/blob/master/doc/design/libraries.md#dependencies\r\n\r\nPrevious comment about this was: https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126765676",
      "created_at": "2023-03-08T21:25:41Z",
      "updated_at": "2023-03-08T21:46:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1130039156",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130039156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130052484",
      "pull_request_review_id": 1331431527,
      "id": 1130052484,
      "node_id": "PRRC_kwDOABII585DWzuE",
      "diff_hunk": "@@ -51,8 +51,9 @@ int main(int argc, char* argv[])\n \n \n     // SETUP: Misc Globals\n-    SelectParams(CBaseChainParams::MAIN);\n-    const CChainParams& chainparams = Params();\n+    SetGlobalBaseParams(CBaseChainParams::MAIN);\n+    auto chainparams_ptr = CChainParams::Main();\n+    const CChainParams& chainparams = *chainparams_ptr;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "4820450688e371a99d66cfad24714fa6e041e43e",
      "in_reply_to_id": 1126829031,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1126829031\r\n\r\n> Thanks, updated. [Diff](https://github.com/TheCharlatan/bitcoin/compare/tc/2022-09-libbitcoinkernel-chainparams-args_1..tc/2022-09-libbitcoinkernel-chainparams-args_2)\r\n\r\nThis looks the same as before. I was suggesting dropping the `chainparams_ptr` variable and just writing `*chainparams` directly below.",
      "created_at": "2023-03-08T21:39:47Z",
      "updated_at": "2023-03-08T21:46:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1130052484",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130052484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130159494",
      "pull_request_review_id": 1331627391,
      "id": 1130159494,
      "node_id": "PRRC_kwDOABII585DXN2G",
      "diff_hunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_CHAINPARAMSBASE_H\n+#define BITCOIN_KERNEL_CHAINPARAMSBASE_H\n+\n+#include <string>\n+\n+/**\n+ * CBaseChainParams defines the base parameters (shared between bitcoin-cli and bitcoind)\n+ * of a given instance of the Bitcoin system.\n+ */\n+class CBaseChainParams",
      "path": "src/kernel/chainparamsbase.h",
      "position": null,
      "original_position": 14,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "341be7fa680e9dcdbaa46db0194833b5d0229394",
      "in_reply_to_id": 1130039156,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This makes sense, I wasn't connecting the fact that the util library includes `chainparamsbase` anyway with segregating the kernel code. I dropped the commit.",
      "created_at": "2023-03-08T22:46:23Z",
      "updated_at": "2023-03-08T22:46:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1130159494",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130159494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130159566",
      "pull_request_review_id": 1331627497,
      "id": 1130159566,
      "node_id": "PRRC_kwDOABII585DXN3O",
      "diff_hunk": "@@ -497,41 +520,30 @@ class CRegTestParams : public CChainParams\n         consensus.vDeployments[d].nTimeout = nTimeout;\n         consensus.vDeployments[d].min_activation_height = min_activation_height;\n     }\n-    void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n \n-static void MaybeUpdateHeights(const ArgsManager& args, Consensus::Params& consensus)\n-{\n+void ReadRegTestArgs(const ArgsManager& args, CChainParams::RegTestOptions& options) {\n+    options.fastprune = args.GetBoolArg(\"-fastprune\", false);",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "66b17894185e0cda3ea7cbec77cc771a7ba41d56",
      "in_reply_to_id": 1130015697,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Merging with the option seems more in tune with how the options are handled in other places in the code, so I went with that. ",
      "created_at": "2023-03-08T22:46:29Z",
      "updated_at": "2023-03-08T22:46:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1130159566",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130159566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130159703",
      "pull_request_review_id": 1331627663,
      "id": 1130159703,
      "node_id": "PRRC_kwDOABII585DXN5X",
      "diff_hunk": "@@ -51,8 +51,9 @@ int main(int argc, char* argv[])\n \n \n     // SETUP: Misc Globals\n-    SelectParams(CBaseChainParams::MAIN);\n-    const CChainParams& chainparams = Params();\n+    SetGlobalBaseParams(CBaseChainParams::MAIN);\n+    auto chainparams_ptr = CChainParams::Main();\n+    const CChainParams& chainparams = *chainparams_ptr;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "4820450688e371a99d66cfad24714fa6e041e43e",
      "in_reply_to_id": 1126829031,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I dropped this by mistake. Included now. ",
      "created_at": "2023-03-08T22:46:39Z",
      "updated_at": "2023-03-08T22:46:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1130159703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130159703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135671989",
      "pull_request_review_id": 1339477414,
      "id": 1135671989,
      "node_id": "PRRC_kwDOABII585DsPq1",
      "diff_hunk": "@@ -52,7 +53,7 @@ int main(int argc, char* argv[])\n \n     // SETUP: Misc Globals\n     SelectParams(CBaseChainParams::MAIN);\n-    const CChainParams& chainparams = Params();\n+    auto chainparams = CChainParams::Main();",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "45048c0d7e0ee12210d226239fb5ce63d9ed4441",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't follow why this is being changed when `SelectParams()` is still used -- `SelectParams` already relies on `gArgs`  and creates its own `unique_ptr<CChainParams>` so this is just creating two copies of the same object?",
      "created_at": "2023-03-14T14:46:01Z",
      "updated_at": "2023-03-14T14:59:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1135671989",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135671989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135678911",
      "pull_request_review_id": 1339477414,
      "id": 1135678911,
      "node_id": "PRRC_kwDOABII585DsRW_",
      "diff_hunk": "@@ -0,0 +1,531 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/amount.h>\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <chainparamsbase.h>\n+#include <logging.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/script.h>\n+#include <uint256.h>\n+#include <util/strencodings.h>\n+\n+#include <algorithm>\n+#include <assert.h>\n+#include <cstdint>\n+#include <string.h>\n+#include <type_traits>\n+\n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    CMutableTransaction txNew;\n+    txNew.nVersion = 1;\n+    txNew.vin.resize(1);\n+    txNew.vout.resize(1);\n+    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vout[0].nValue = genesisReward;\n+    txNew.vout[0].scriptPubKey = genesisOutputScript;\n+\n+    CBlock genesis;\n+    genesis.nTime    = nTime;\n+    genesis.nBits    = nBits;\n+    genesis.nNonce   = nNonce;\n+    genesis.nVersion = nVersion;\n+    genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n+    genesis.hashPrevBlock.SetNull();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+    return genesis;\n+}\n+\n+/**\n+ * Build the genesis block. Note that the output of its generation\n+ * transaction cannot be spent since it did not originally exist in the\n+ * database.\n+ *\n+ * CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n+ *   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n+ *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)\n+ *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n+ *   vMerkleTree: 4a5e1e\n+ */\n+static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+{\n+    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+\n+/**\n+ * Main network on which people trade goods and services.\n+ */\n+class CMainParams : public CChainParams {\n+public:\n+    CMainParams() {\n+        strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\"), SCRIPT_VERIFY_NONE);\n+        consensus.script_flag_exceptions.emplace( // Taproot exception\n+            uint256S(\"0x0000000000000000000f14c35b2d841e986ab5441de8c585d5ffe55ea1e395ad\"), SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS);\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n+        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1815; // 90% of 2016\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 709632; // Approximately November 12th, 2021\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000003404ba0801921119f903495e\");\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\"); // 751565\n+\n+        /**\n+         * The message start string is designed to be unlikely to occur in normal data.\n+         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n+         * a large 32-bit integer with any alignment.\n+         */\n+        pchMessageStart[0] = 0xf9;\n+        pchMessageStart[1] = 0xbe;\n+        pchMessageStart[2] = 0xb4;\n+        pchMessageStart[3] = 0xd9;\n+        nDefaultPort = 8333;\n+        nPruneAfterHeight = 100000;\n+        m_assumed_blockchain_size = 496;\n+        m_assumed_chain_state_size = 6;\n+\n+        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as an addrfetch if they don't support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me.\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org.\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com.\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch.\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org.\"); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl.\"); // Sjors Provoost\n+        vSeeds.emplace_back(\"dnsseed.emzy.de.\"); // Stephan Oeste\n+        vSeeds.emplace_back(\"seed.bitcoin.wiz.biz.\"); // Jason Maurice\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n+\n+        bech32_hrp = \"bc\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = false;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n+                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n+                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n+                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n+                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n+                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n+                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n+                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n+                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n+                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n+                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n+                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n+                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+         // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 00000000000000000009c97098b5295f7e5f183ac811fb5d1534040adb93cabd\n+            .nTime    = 1661697692,\n+            .nTxCount = 760120522,\n+            .dTxRate  = 2.925802860942233,\n+        };\n+    }\n+};\n+\n+/**\n+ * Testnet (v3): public test network which is reset from time to time.\n+ */\n+class CTestNetParams : public CChainParams {\n+public:\n+    CTestNetParams() {\n+        strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.script_flag_exceptions.emplace( // BIP16 exception\n+            uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\"), SCRIPT_VERIFY_NONE);\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n+        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = Consensus::BIP9Deployment::NEVER_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].min_activation_height = 0; // No activation delay\n+\n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1619222400; // April 24th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1628640000; // August 11th, 2021\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height = 0; // No activation delay\n+\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000076f6e7cbd0beade5d20\");\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\"); // 2344474\n+\n+        pchMessageStart[0] = 0x0b;\n+        pchMessageStart[1] = 0x11;\n+        pchMessageStart[2] = 0x09;\n+        pchMessageStart[3] = 0x07;\n+        nDefaultPort = 18333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 42;\n+        m_assumed_chain_state_size = 2;\n+\n+        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+        vSeeds.clear();\n+        // nodes with support for servicebits filtering should be at the top\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch.\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org.\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl.\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me.\"); // Just a static list of stable node(s), only supports x9\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = false;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+\n+        checkpointData = {\n+            {\n+                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+            }\n+        };\n+\n+        m_assumeutxo_data = MapAssumeutxo{\n+            // TODO to be specified in a future patch.\n+        };\n+\n+        chainTxData = ChainTxData{\n+            // Data from RPC: getchaintxstats 4096 0000000000000004877fa2d36316398528de4f347df2f8a96f76613a298ce060\n+            .nTime    = 1661705221,\n+            .nTxCount = 63531852,\n+            .dTxRate  = 0.1079119341520164,\n+        };\n+    }\n+};\n+\n+/**\n+ * Signet: test network with an additional consensus parameter (see BIP325).\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const CChainParams::SigNetOptions& options)",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 290,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "45048c0d7e0ee12210d226239fb5ce63d9ed4441",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Closer to a move-only commit if you didn't add the `CChainParams::` qualifier here (and for regtest)",
      "created_at": "2023-03-14T14:50:30Z",
      "updated_at": "2023-03-14T14:59:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1135678911",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135678911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 290,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135718835",
      "pull_request_review_id": 1339547557,
      "id": 1135718835,
      "node_id": "PRRC_kwDOABII585DsbGz",
      "diff_hunk": "@@ -52,7 +53,7 @@ int main(int argc, char* argv[])\n \n     // SETUP: Misc Globals\n     SelectParams(CBaseChainParams::MAIN);\n-    const CChainParams& chainparams = Params();\n+    auto chainparams = CChainParams::Main();",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "45048c0d7e0ee12210d226239fb5ce63d9ed4441",
      "in_reply_to_id": 1135671989,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a demo binary, so I think the point is to show that the `chainman` can now be instantiated with a `chainparams` that is itself instantiated without directly relying on `gArgs`. I'm not sure if this really makes sense though.",
      "created_at": "2023-03-14T15:15:09Z",
      "updated_at": "2023-03-14T15:15:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1135718835",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135718835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135870886",
      "pull_request_review_id": 1339756314,
      "id": 1135870886,
      "node_id": "PRRC_kwDOABII585DtAOm",
      "diff_hunk": "@@ -52,7 +53,7 @@ int main(int argc, char* argv[])\n \n     // SETUP: Misc Globals\n     SelectParams(CBaseChainParams::MAIN);\n-    const CChainParams& chainparams = Params();\n+    auto chainparams = CChainParams::Main();",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "45048c0d7e0ee12210d226239fb5ce63d9ed4441",
      "in_reply_to_id": 1135671989,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1135671989\r\n\r\n> This is a demo binary, so I think the point is to show that the `chainman` can now be instantiated with a `chainparams` that is itself instantiated without directly relying on `gArgs`. I'm not sure if this really makes sense though.\r\n\r\nIMO, it would be a little clearer if the vague \"SETUP: Misc Globals\" comment was changed to say specifically that SelectParams() call was needed to set some globals used by validation code and could be removed when the globals were no longer needed.",
      "created_at": "2023-03-14T16:36:22Z",
      "updated_at": "2023-03-14T16:36:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1135870886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135870886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136909353",
      "pull_request_review_id": 1341271390,
      "id": 1136909353,
      "node_id": "PRRC_kwDOABII585Dw9wp",
      "diff_hunk": "@@ -382,11 +378,25 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+void ReadSigNetArgs(const ArgsManager& args, CChainParams::SigNetOptions& options) {\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        options.seeds.emplace(args.GetArgs(\"-signetseednode\"));\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        options.challenge.emplace(ParseHex(signet_challenge[0]));",
      "path": "src/chainparams.cpp",
      "position": 375,
      "original_position": 57,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "f3225c9090eaef8a2f9d711364ca5ff3fd799844",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "unrelated in f3225c9090eaef8a2f9d711364ca5ff3fd799844: Could use `TryParseHex`?",
      "created_at": "2023-03-15T11:30:31Z",
      "updated_at": "2023-03-15T12:45:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136909353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136909353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136910536",
      "pull_request_review_id": 1341271390,
      "id": 1136910536,
      "node_id": "PRRC_kwDOABII585Dw-DI",
      "diff_hunk": "@@ -382,11 +378,25 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+void ReadSigNetArgs(const ArgsManager& args, CChainParams::SigNetOptions& options) {\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        options.seeds.emplace(args.GetArgs(\"-signetseednode\"));\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));",
      "path": "src/chainparams.cpp",
      "position": 315,
      "original_position": 55,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "f3225c9090eaef8a2f9d711364ca5ff3fd799844",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "unrelated: Does `__func__` add any value?",
      "created_at": "2023-03-15T11:31:40Z",
      "updated_at": "2023-03-15T12:45:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136910536",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136910536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136912251",
      "pull_request_review_id": 1341271390,
      "id": 1136912251,
      "node_id": "PRRC_kwDOABII585Dw-d7",
      "diff_hunk": "@@ -122,6 +122,15 @@ class CChainParams\n     const MapAssumeutxo& Assumeutxo() const { return m_assumeutxo_data; }\n \n     const ChainTxData& TxData() const { return chainTxData; }\n+\n+    /**\n+     * SigNetOptions holds configurations for creating a signet CChainParams.\n+     */\n+    struct SigNetOptions {\n+        std::optional<std::vector<uint8_t>> challenge;\n+        std::optional<std::vector<std::string>> seeds;",
      "path": "src/chainparams.h",
      "position": null,
      "original_position": 10,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "f3225c9090eaef8a2f9d711364ca5ff3fd799844",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/f3225c9090eaef8a2f9d711364ca5ff3fd799844: Use `{}` to document the (lack of a) default value, see also https://github.com/bitcoin/bitcoin/pull/26296",
      "created_at": "2023-03-15T11:33:23Z",
      "updated_at": "2023-03-15T12:45:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136912251",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136912251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136929048",
      "pull_request_review_id": 1341271390,
      "id": 1136929048,
      "node_id": "PRRC_kwDOABII585DxCkY",
      "diff_hunk": "@@ -34,3 +36,18 @@ std::string DeploymentName(Consensus::BuriedDeployment dep)\n     } // no default case, so the compiler can warn about missing cases\n     return \"\";\n }\n+\n+std::optional<Consensus::BuriedDeployment> GetBuriedDeployment(const std::string_view& deployment_name) {",
      "path": "src/deploymentinfo.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1a691358b7b4d9c8bd6286c2f38481155775f9d5",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/1a691358b7b4d9c8bd6286c2f38481155775f9d5: string_view already is a pointer, so no need to wrap it into another pointer. Also, clang-format. Also, if the name was kept `name`, more code would be move-only. :sweat_smile: \r\n\r\n```cpp\r\nstd::optional<Consensus::BuriedDeployment> GetBuriedDeployment(std::string_view name)\r\n{",
      "created_at": "2023-03-15T11:49:22Z",
      "updated_at": "2023-03-15T12:45:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136929048",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136929048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136932363",
      "pull_request_review_id": 1341271390,
      "id": 1136932363,
      "node_id": "PRRC_kwDOABII585DxDYL",
      "diff_hunk": "@@ -8,9 +8,11 @@\n \n #include <chainparamsbase.h>\n #include <consensus/params.h>\n+#include <cstdint>\n #include <netaddress.h>\n #include <primitives/block.h>\n #include <protocol.h>\n+#include <unordered_map>",
      "path": "src/chainparams.h",
      "position": null,
      "original_position": 8,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1a691358b7b4d9c8bd6286c2f38481155775f9d5",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/1a691358b7b4d9c8bd6286c2f38481155775f9d5: wrong section (see stdlib include section below)",
      "created_at": "2023-03-15T11:52:36Z",
      "updated_at": "2023-03-15T12:45:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136932363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136932363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136972083",
      "pull_request_review_id": 1341271390,
      "id": 1136972083,
      "node_id": "PRRC_kwDOABII585DxNEz",
      "diff_hunk": "@@ -151,6 +151,30 @@ class CChainParams\n         bool fastprune{false};\n     };\n \n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for regtest.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> RegTest(const RegTestOptions& options);\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for signet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> SigNet(const SigNetOptions& options);\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for mainnet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> Main();\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for testnet.\n+     * @return std::unique_ptr<const CChainParams>",
      "path": "src/chainparams.h",
      "position": null,
      "original_position": 24,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "6e5221c49ef0e259a3109b51cbc68474f587be58",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "? in 6e5221c49ef0e259a3109b51cbc68474f587be58: Seems pretty useless to waste LOCs with the only purpose to add redundancy and manual maintenance burden to repeat the return type verbatim twice?\r\n\r\nSeems fine to remove all those docs, unless there is something non-trivial and worthy to mention?",
      "created_at": "2023-03-15T12:22:43Z",
      "updated_at": "2023-03-15T12:45:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136972083",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136972083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136977126",
      "pull_request_review_id": 1341271390,
      "id": 1136977126,
      "node_id": "PRRC_kwDOABII585DxOTm",
      "diff_hunk": "@@ -580,20 +580,39 @@ const CChainParams &Params() {\n     return *globalChainParams;\n }\n \n+std::unique_ptr<const CChainParams> CChainParams::SigNet(const SigNetOptions& options) {\n+    return std::make_unique<SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CChainParams::RegTest(const RegTestOptions& options)\n+{\n+    return std::make_unique<CRegTestParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CChainParams::Main()\n+{\n+    return std::unique_ptr<CChainParams>(new CMainParams());",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "6e5221c49ef0e259a3109b51cbc68474f587be58",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in 6e5221c49ef0e259a3109b51cbc68474f587be58: Might as well make this `make_unique` as well? ( I guess you wanted to keep this move-only, but the other `make_unique` are no longer move-only anyway, as you removed the `const`.)",
      "created_at": "2023-03-15T12:26:37Z",
      "updated_at": "2023-03-15T12:45:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136977126",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136977126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136990916",
      "pull_request_review_id": 1341271390,
      "id": 1136990916,
      "node_id": "PRRC_kwDOABII585DxRrE",
      "diff_hunk": "@@ -0,0 +1,531 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/amount.h>\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h> // for signet block challenge hash",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1157bcde4b2f05521a0c0d58eb790d4c62572ea7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in 1157bcde4b2f05521a0c0d58eb790d4c62572ea7: I think the comment here can be removed? We have iwyu to produce these if anyone wants them, and all other includes in this file don't have them either.",
      "created_at": "2023-03-15T12:36:55Z",
      "updated_at": "2023-03-15T12:45:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136990916",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136990916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136991527",
      "pull_request_review_id": 1341271390,
      "id": 1136991527,
      "node_id": "PRRC_kwDOABII585DxR0n",
      "diff_hunk": "@@ -0,0 +1,531 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/amount.h>\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <chainparamsbase.h>\n+#include <logging.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/script.h>\n+#include <uint256.h>\n+#include <util/strencodings.h>\n+\n+#include <algorithm>\n+#include <assert.h>",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1157bcde4b2f05521a0c0d58eb790d4c62572ea7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in 1157bcde4b2f05521a0c0d58eb790d4c62572ea7: cassert",
      "created_at": "2023-03-15T12:37:25Z",
      "updated_at": "2023-03-15T12:45:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136991527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136991527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136991667",
      "pull_request_review_id": 1341271390,
      "id": 1136991667,
      "node_id": "PRRC_kwDOABII585DxR2z",
      "diff_hunk": "@@ -0,0 +1,531 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/amount.h>\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <chainparamsbase.h>\n+#include <logging.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/script.h>\n+#include <uint256.h>\n+#include <util/strencodings.h>\n+\n+#include <algorithm>\n+#include <assert.h>\n+#include <cstdint>\n+#include <string.h>",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1157bcde4b2f05521a0c0d58eb790d4c62572ea7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same",
      "created_at": "2023-03-15T12:37:31Z",
      "updated_at": "2023-03-15T12:45:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1136991667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136991667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137001879",
      "pull_request_review_id": 1341271390,
      "id": 1137001879,
      "node_id": "PRRC_kwDOABII585DxUWX",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_CHAINPARAMS_H\n+#define BITCOIN_KERNEL_CHAINPARAMS_H\n+\n+#include <consensus/params.h>\n+#include <netaddress.h>\n+#include <primitives/block.h>\n+#include <protocol.h>\n+#include <uint256.h>\n+#include <util/hash_type.h>\n+\n+#include <cstdint>\n+#include <iterator>\n+#include <map>\n+#include <memory>\n+#include <optional>\n+#include <string>\n+#include <unordered_map>\n+#include <utility>\n+#include <vector>\n+\n+typedef std::map<int, uint256> MapCheckpoints;\n+\n+struct CCheckpointData {\n+    MapCheckpoints mapCheckpoints;\n+\n+    int GetHeight() const {\n+        const auto& final_checkpoint = mapCheckpoints.rbegin();\n+        return final_checkpoint->first /* height */;\n+    }\n+};\n+\n+struct AssumeutxoHash : public BaseHash<uint256> {\n+    explicit AssumeutxoHash(const uint256& hash) : BaseHash(hash) {}\n+};\n+\n+/**\n+ * Holds configuration for use during UTXO snapshot load and validation. The contents\n+ * here are security critical, since they dictate which UTXO snapshots are recognized\n+ * as valid.\n+ */\n+struct AssumeutxoData {\n+    //! The expected hash of the deserialized UTXO set.\n+    const AssumeutxoHash hash_serialized;\n+\n+    //! Used to populate the nChainTx value, which is used during BlockManager::LoadBlockIndex().\n+    //!\n+    //! We need to hardcode the value here because this is computed cumulatively using block data,\n+    //! which we do not necessarily have at the time of snapshot load.\n+    const unsigned int nChainTx;\n+};\n+\n+using MapAssumeutxo = std::map<int, const AssumeutxoData>;\n+\n+/**\n+ * Holds various statistics on transactions within a chain. Used to estimate\n+ * verification progress during chain sync.\n+ *\n+ * See also: CChainParams::TxData, GuessVerificationProgress.\n+ */\n+struct ChainTxData {\n+    int64_t nTime;    //!< UNIX timestamp of last known number of transactions\n+    int64_t nTxCount; //!< total number of transactions between genesis and that timestamp\n+    double dTxRate;   //!< estimated number of transactions per second after that timestamp\n+};\n+\n+/**\n+ * CChainParams defines various tweakable parameters of a given instance of the\n+ * Bitcoin system.\n+ */\n+class CChainParams\n+{\n+public:\n+    enum Base58Type {\n+        PUBKEY_ADDRESS,\n+        SCRIPT_ADDRESS,\n+        SECRET_KEY,\n+        EXT_PUBLIC_KEY,\n+        EXT_SECRET_KEY,\n+\n+        MAX_BASE58_TYPES\n+    };\n+\n+    const Consensus::Params& GetConsensus() const { return consensus; }\n+    const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }\n+    uint16_t GetDefaultPort() const { return nDefaultPort; }\n+    uint16_t GetDefaultPort(Network net) const\n+    {\n+        return net == NET_I2P ? I2P_SAM31_PORT : GetDefaultPort();\n+    }\n+    uint16_t GetDefaultPort(const std::string& addr) const\n+    {\n+        CNetAddr a;\n+        return a.SetSpecial(addr) ? GetDefaultPort(a.GetNetwork()) : GetDefaultPort();\n+    }\n+\n+    const CBlock& GenesisBlock() const { return genesis; }\n+    /** Default value for -checkmempool and -checkblockindex argument */\n+    bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n+    /** Policy: Filter transactions that do not match well-defined patterns */\n+    bool RequireStandard() const { return fRequireStandard; }\n+    /** If this chain is exclusively used for testing */\n+    bool IsTestChain() const { return m_is_test_chain; }\n+    /** If this chain allows time to be mocked */\n+    bool IsMockableChain() const { return m_is_mockable_chain; }\n+    uint64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n+    /** Minimum free space (in GB) needed for data directory */\n+    uint64_t AssumedBlockchainSize() const { return m_assumed_blockchain_size; }\n+    /** Minimum free space (in GB) needed for data directory when pruned; Does not include prune target*/\n+    uint64_t AssumedChainStateSize() const { return m_assumed_chain_state_size; }\n+    /** Whether it is possible to mine blocks on demand (no retargeting) */\n+    bool MineBlocksOnDemand() const { return consensus.fPowNoRetargeting; }\n+    /** Return the network string */\n+    std::string NetworkIDString() const { return strNetworkID; }\n+    /** Return the list of hostnames to look up for DNS seeds */\n+    const std::vector<std::string>& DNSSeeds() const { return vSeeds; }\n+    const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n+    const std::string& Bech32HRP() const { return bech32_hrp; }\n+    const std::vector<uint8_t>& FixedSeeds() const { return vFixedSeeds; }\n+    const CCheckpointData& Checkpoints() const { return checkpointData; }\n+\n+    //! Get allowed assumeutxo configuration.\n+    //! @see ChainstateManager\n+    const MapAssumeutxo& Assumeutxo() const { return m_assumeutxo_data; }\n+\n+    const ChainTxData& TxData() const { return chainTxData; }\n+\n+    /**\n+     * SigNetOptions holds configurations for creating a signet CChainParams.\n+     */\n+    struct SigNetOptions {\n+        std::optional<std::vector<uint8_t>> challenge;\n+        std::optional<std::vector<std::string>> seeds;\n+    };\n+\n+    /**\n+     * VersionBitsParameters holds activation parameters\n+     */\n+    struct VersionBitsParameters {\n+        int64_t start_time;\n+        int64_t timeout;\n+        int min_activation_height;\n+    };\n+\n+    /**\n+     * RegTestOptions holds configurations for creating a regtest CChainParams.\n+     */\n+    struct RegTestOptions {\n+        std::unordered_map<Consensus::DeploymentPos, VersionBitsParameters> version_bits_parameters{};\n+        std::unordered_map<Consensus::BuriedDeployment, int> activation_heights{};\n+        bool fastprune{false};\n+    };\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for regtest.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> RegTest(const RegTestOptions& options);\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for signet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> SigNet(const SigNetOptions& options);\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for mainnet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> Main();\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for testnet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> TestNet();\n+\n+protected:\n+    CChainParams() {}\n+\n+    Consensus::Params consensus;\n+    CMessageHeader::MessageStartChars pchMessageStart;\n+    uint16_t nDefaultPort;\n+    uint64_t nPruneAfterHeight;\n+    uint64_t m_assumed_blockchain_size;\n+    uint64_t m_assumed_chain_state_size;\n+    std::vector<std::string> vSeeds;\n+    std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n+    std::string bech32_hrp;\n+    std::string strNetworkID;\n+    CBlock genesis;\n+    std::vector<uint8_t> vFixedSeeds;\n+    bool fDefaultConsistencyChecks;\n+    bool fRequireStandard;\n+    bool m_is_test_chain;\n+    bool m_is_mockable_chain;\n+    CCheckpointData checkpointData;\n+    MapAssumeutxo m_assumeutxo_data;\n+    ChainTxData chainTxData;\n+};\n+\n+#endif // BITCOIN_KERNEL_CHAINPARAMS_H",
      "path": "src/kernel/chainparams.h",
      "position": 187,
      "original_position": 206,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1157bcde4b2f05521a0c0d58eb790d4c62572ea7",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same commit:\r\n\r\n\r\n```\r\nnode/mempool_args.cpp should add these lines:\r\n#include \"kernel/chainparams.h\"      // for CChainParams\r\nnode/mempool_args.cpp should remove these lines:\r\n- #include <chainparams.h>  // lines 10-10",
      "created_at": "2023-03-15T12:44:43Z",
      "updated_at": "2023-03-15T12:45:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137001879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137001879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137163135",
      "pull_request_review_id": 1341618242,
      "id": 1137163135,
      "node_id": "PRRC_kwDOABII585Dx7t_",
      "diff_hunk": "@@ -382,11 +378,25 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+void ReadSigNetArgs(const ArgsManager& args, CChainParams::SigNetOptions& options) {\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        options.seeds.emplace(args.GetArgs(\"-signetseednode\"));\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));",
      "path": "src/chainparams.cpp",
      "position": 315,
      "original_position": 55,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "f3225c9090eaef8a2f9d711364ca5ff3fd799844",
      "in_reply_to_id": 1136910536,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This produces a log like:\r\n```\r\nterminate called after throwing an instance of 'std::runtime_error'\r\n  what():  CreateChainParams: Unknown chain lol\r\n```\r\nSo I think yes, it does add value.",
      "created_at": "2023-03-15T14:21:51Z",
      "updated_at": "2023-03-15T14:21:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137163135",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137163135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137365115",
      "pull_request_review_id": 1341873160,
      "id": 1137365115,
      "node_id": "PRRC_kwDOABII585DytB7",
      "diff_hunk": "@@ -122,6 +122,15 @@ class CChainParams\n     const MapAssumeutxo& Assumeutxo() const { return m_assumeutxo_data; }\n \n     const ChainTxData& TxData() const { return chainTxData; }\n+\n+    /**\n+     * SigNetOptions holds configurations for creating a signet CChainParams.\n+     */\n+    struct SigNetOptions {\n+        std::optional<std::vector<uint8_t>> challenge;\n+        std::optional<std::vector<std::string>> seeds;",
      "path": "src/chainparams.h",
      "position": null,
      "original_position": 10,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "f3225c9090eaef8a2f9d711364ca5ff3fd799844",
      "in_reply_to_id": 1136912251,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thx, can be marked resolved",
      "created_at": "2023-03-15T16:04:12Z",
      "updated_at": "2023-03-15T16:04:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137365115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137365115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137365304",
      "pull_request_review_id": 1341873410,
      "id": 1137365304,
      "node_id": "PRRC_kwDOABII585DytE4",
      "diff_hunk": "@@ -34,3 +36,18 @@ std::string DeploymentName(Consensus::BuriedDeployment dep)\n     } // no default case, so the compiler can warn about missing cases\n     return \"\";\n }\n+\n+std::optional<Consensus::BuriedDeployment> GetBuriedDeployment(const std::string_view& deployment_name) {",
      "path": "src/deploymentinfo.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1a691358b7b4d9c8bd6286c2f38481155775f9d5",
      "in_reply_to_id": 1136929048,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thx, can be marked resolved\r\n",
      "created_at": "2023-03-15T16:04:19Z",
      "updated_at": "2023-03-15T16:04:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137365304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137365304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137367474",
      "pull_request_review_id": 1341876178,
      "id": 1137367474,
      "node_id": "PRRC_kwDOABII585Dytmy",
      "diff_hunk": "@@ -8,9 +8,11 @@\n \n #include <chainparamsbase.h>\n #include <consensus/params.h>\n+#include <cstdint>\n #include <netaddress.h>\n #include <primitives/block.h>\n #include <protocol.h>\n+#include <unordered_map>",
      "path": "src/chainparams.h",
      "position": null,
      "original_position": 8,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1a691358b7b4d9c8bd6286c2f38481155775f9d5",
      "in_reply_to_id": 1136932363,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n\r\nThx, can be marked resolved\r\n",
      "created_at": "2023-03-15T16:05:39Z",
      "updated_at": "2023-03-15T16:05:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137367474",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137367474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137367822",
      "pull_request_review_id": 1341876614,
      "id": 1137367822,
      "node_id": "PRRC_kwDOABII585DytsO",
      "diff_hunk": "@@ -151,6 +151,30 @@ class CChainParams\n         bool fastprune{false};\n     };\n \n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for regtest.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> RegTest(const RegTestOptions& options);\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for signet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> SigNet(const SigNetOptions& options);\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for mainnet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> Main();\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for testnet.\n+     * @return std::unique_ptr<const CChainParams>",
      "path": "src/chainparams.h",
      "position": null,
      "original_position": 24,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "6e5221c49ef0e259a3109b51cbc68474f587be58",
      "in_reply_to_id": 1136972083,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n\r\nThx, can be marked resolved\r\n",
      "created_at": "2023-03-15T16:05:52Z",
      "updated_at": "2023-03-15T16:05:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137367822",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137367822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137367980",
      "pull_request_review_id": 1341876818,
      "id": 1137367980,
      "node_id": "PRRC_kwDOABII585Dytus",
      "diff_hunk": "@@ -580,20 +580,39 @@ const CChainParams &Params() {\n     return *globalChainParams;\n }\n \n+std::unique_ptr<const CChainParams> CChainParams::SigNet(const SigNetOptions& options) {\n+    return std::make_unique<SigNetParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CChainParams::RegTest(const RegTestOptions& options)\n+{\n+    return std::make_unique<CRegTestParams>(options);\n+}\n+\n+std::unique_ptr<const CChainParams> CChainParams::Main()\n+{\n+    return std::unique_ptr<CChainParams>(new CMainParams());",
      "path": "src/chainparams.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "6e5221c49ef0e259a3109b51cbc68474f587be58",
      "in_reply_to_id": 1136977126,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n\r\nThx, can be marked resolved\r\n",
      "created_at": "2023-03-15T16:05:59Z",
      "updated_at": "2023-03-15T16:05:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137367980",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137367980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137368863",
      "pull_request_review_id": 1341877942,
      "id": 1137368863,
      "node_id": "PRRC_kwDOABII585Dyt8f",
      "diff_hunk": "@@ -0,0 +1,531 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/amount.h>\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h> // for signet block challenge hash",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1157bcde4b2f05521a0c0d58eb790d4c62572ea7",
      "in_reply_to_id": 1136990916,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n\r\nThx, can be marked resolved\r\n",
      "created_at": "2023-03-15T16:06:31Z",
      "updated_at": "2023-03-15T16:06:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137368863",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137368863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137369578",
      "pull_request_review_id": 1341878838,
      "id": 1137369578,
      "node_id": "PRRC_kwDOABII585DyuHq",
      "diff_hunk": "@@ -0,0 +1,531 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/amount.h>\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <chainparamsbase.h>\n+#include <logging.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/script.h>\n+#include <uint256.h>\n+#include <util/strencodings.h>\n+\n+#include <algorithm>\n+#include <assert.h>",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1157bcde4b2f05521a0c0d58eb790d4c62572ea7",
      "in_reply_to_id": 1136991527,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n\r\nThx, can be marked resolved\r\n",
      "created_at": "2023-03-15T16:06:57Z",
      "updated_at": "2023-03-15T16:06:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137369578",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137369578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137369716",
      "pull_request_review_id": 1341879042,
      "id": 1137369716,
      "node_id": "PRRC_kwDOABII585DyuJ0",
      "diff_hunk": "@@ -0,0 +1,531 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/chainparams.h>\n+\n+#include <chainparamsseeds.h>\n+#include <consensus/amount.h>\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <chainparamsbase.h>\n+#include <logging.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/script.h>\n+#include <uint256.h>\n+#include <util/strencodings.h>\n+\n+#include <algorithm>\n+#include <assert.h>\n+#include <cstdint>\n+#include <string.h>",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1157bcde4b2f05521a0c0d58eb790d4c62572ea7",
      "in_reply_to_id": 1136991667,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n\r\nThx, can be marked resolved\r\n",
      "created_at": "2023-03-15T16:07:02Z",
      "updated_at": "2023-03-15T16:07:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137369716",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137369716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137370113",
      "pull_request_review_id": 1341879604,
      "id": 1137370113,
      "node_id": "PRRC_kwDOABII585DyuQB",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_KERNEL_CHAINPARAMS_H\n+#define BITCOIN_KERNEL_CHAINPARAMS_H\n+\n+#include <consensus/params.h>\n+#include <netaddress.h>\n+#include <primitives/block.h>\n+#include <protocol.h>\n+#include <uint256.h>\n+#include <util/hash_type.h>\n+\n+#include <cstdint>\n+#include <iterator>\n+#include <map>\n+#include <memory>\n+#include <optional>\n+#include <string>\n+#include <unordered_map>\n+#include <utility>\n+#include <vector>\n+\n+typedef std::map<int, uint256> MapCheckpoints;\n+\n+struct CCheckpointData {\n+    MapCheckpoints mapCheckpoints;\n+\n+    int GetHeight() const {\n+        const auto& final_checkpoint = mapCheckpoints.rbegin();\n+        return final_checkpoint->first /* height */;\n+    }\n+};\n+\n+struct AssumeutxoHash : public BaseHash<uint256> {\n+    explicit AssumeutxoHash(const uint256& hash) : BaseHash(hash) {}\n+};\n+\n+/**\n+ * Holds configuration for use during UTXO snapshot load and validation. The contents\n+ * here are security critical, since they dictate which UTXO snapshots are recognized\n+ * as valid.\n+ */\n+struct AssumeutxoData {\n+    //! The expected hash of the deserialized UTXO set.\n+    const AssumeutxoHash hash_serialized;\n+\n+    //! Used to populate the nChainTx value, which is used during BlockManager::LoadBlockIndex().\n+    //!\n+    //! We need to hardcode the value here because this is computed cumulatively using block data,\n+    //! which we do not necessarily have at the time of snapshot load.\n+    const unsigned int nChainTx;\n+};\n+\n+using MapAssumeutxo = std::map<int, const AssumeutxoData>;\n+\n+/**\n+ * Holds various statistics on transactions within a chain. Used to estimate\n+ * verification progress during chain sync.\n+ *\n+ * See also: CChainParams::TxData, GuessVerificationProgress.\n+ */\n+struct ChainTxData {\n+    int64_t nTime;    //!< UNIX timestamp of last known number of transactions\n+    int64_t nTxCount; //!< total number of transactions between genesis and that timestamp\n+    double dTxRate;   //!< estimated number of transactions per second after that timestamp\n+};\n+\n+/**\n+ * CChainParams defines various tweakable parameters of a given instance of the\n+ * Bitcoin system.\n+ */\n+class CChainParams\n+{\n+public:\n+    enum Base58Type {\n+        PUBKEY_ADDRESS,\n+        SCRIPT_ADDRESS,\n+        SECRET_KEY,\n+        EXT_PUBLIC_KEY,\n+        EXT_SECRET_KEY,\n+\n+        MAX_BASE58_TYPES\n+    };\n+\n+    const Consensus::Params& GetConsensus() const { return consensus; }\n+    const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }\n+    uint16_t GetDefaultPort() const { return nDefaultPort; }\n+    uint16_t GetDefaultPort(Network net) const\n+    {\n+        return net == NET_I2P ? I2P_SAM31_PORT : GetDefaultPort();\n+    }\n+    uint16_t GetDefaultPort(const std::string& addr) const\n+    {\n+        CNetAddr a;\n+        return a.SetSpecial(addr) ? GetDefaultPort(a.GetNetwork()) : GetDefaultPort();\n+    }\n+\n+    const CBlock& GenesisBlock() const { return genesis; }\n+    /** Default value for -checkmempool and -checkblockindex argument */\n+    bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n+    /** Policy: Filter transactions that do not match well-defined patterns */\n+    bool RequireStandard() const { return fRequireStandard; }\n+    /** If this chain is exclusively used for testing */\n+    bool IsTestChain() const { return m_is_test_chain; }\n+    /** If this chain allows time to be mocked */\n+    bool IsMockableChain() const { return m_is_mockable_chain; }\n+    uint64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n+    /** Minimum free space (in GB) needed for data directory */\n+    uint64_t AssumedBlockchainSize() const { return m_assumed_blockchain_size; }\n+    /** Minimum free space (in GB) needed for data directory when pruned; Does not include prune target*/\n+    uint64_t AssumedChainStateSize() const { return m_assumed_chain_state_size; }\n+    /** Whether it is possible to mine blocks on demand (no retargeting) */\n+    bool MineBlocksOnDemand() const { return consensus.fPowNoRetargeting; }\n+    /** Return the network string */\n+    std::string NetworkIDString() const { return strNetworkID; }\n+    /** Return the list of hostnames to look up for DNS seeds */\n+    const std::vector<std::string>& DNSSeeds() const { return vSeeds; }\n+    const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n+    const std::string& Bech32HRP() const { return bech32_hrp; }\n+    const std::vector<uint8_t>& FixedSeeds() const { return vFixedSeeds; }\n+    const CCheckpointData& Checkpoints() const { return checkpointData; }\n+\n+    //! Get allowed assumeutxo configuration.\n+    //! @see ChainstateManager\n+    const MapAssumeutxo& Assumeutxo() const { return m_assumeutxo_data; }\n+\n+    const ChainTxData& TxData() const { return chainTxData; }\n+\n+    /**\n+     * SigNetOptions holds configurations for creating a signet CChainParams.\n+     */\n+    struct SigNetOptions {\n+        std::optional<std::vector<uint8_t>> challenge;\n+        std::optional<std::vector<std::string>> seeds;\n+    };\n+\n+    /**\n+     * VersionBitsParameters holds activation parameters\n+     */\n+    struct VersionBitsParameters {\n+        int64_t start_time;\n+        int64_t timeout;\n+        int min_activation_height;\n+    };\n+\n+    /**\n+     * RegTestOptions holds configurations for creating a regtest CChainParams.\n+     */\n+    struct RegTestOptions {\n+        std::unordered_map<Consensus::DeploymentPos, VersionBitsParameters> version_bits_parameters{};\n+        std::unordered_map<Consensus::BuriedDeployment, int> activation_heights{};\n+        bool fastprune{false};\n+    };\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for regtest.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> RegTest(const RegTestOptions& options);\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for signet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> SigNet(const SigNetOptions& options);\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for mainnet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> Main();\n+\n+    /**\n+     * Creates and returns a std::unique_ptr<CChainParams> for testnet.\n+     * @return std::unique_ptr<const CChainParams>\n+     */\n+    static std::unique_ptr<const CChainParams> TestNet();\n+\n+protected:\n+    CChainParams() {}\n+\n+    Consensus::Params consensus;\n+    CMessageHeader::MessageStartChars pchMessageStart;\n+    uint16_t nDefaultPort;\n+    uint64_t nPruneAfterHeight;\n+    uint64_t m_assumed_blockchain_size;\n+    uint64_t m_assumed_chain_state_size;\n+    std::vector<std::string> vSeeds;\n+    std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n+    std::string bech32_hrp;\n+    std::string strNetworkID;\n+    CBlock genesis;\n+    std::vector<uint8_t> vFixedSeeds;\n+    bool fDefaultConsistencyChecks;\n+    bool fRequireStandard;\n+    bool m_is_test_chain;\n+    bool m_is_mockable_chain;\n+    CCheckpointData checkpointData;\n+    MapAssumeutxo m_assumeutxo_data;\n+    ChainTxData chainTxData;\n+};\n+\n+#endif // BITCOIN_KERNEL_CHAINPARAMS_H",
      "path": "src/kernel/chainparams.h",
      "position": 187,
      "original_position": 206,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "1157bcde4b2f05521a0c0d58eb790d4c62572ea7",
      "in_reply_to_id": 1137001879,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n\r\nThx, can be marked resolved\r\n",
      "created_at": "2023-03-15T16:07:18Z",
      "updated_at": "2023-03-15T16:07:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1137370113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137370113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140383664",
      "pull_request_review_id": 1346176225,
      "id": 1140383664,
      "node_id": "PRRC_kwDOABII585D-N-w",
      "diff_hunk": "@@ -382,11 +378,25 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+void ReadSigNetArgs(const ArgsManager& args, CChainParams::SigNetOptions& options) {\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        options.seeds.emplace(args.GetArgs(\"-signetseednode\"));\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));",
      "path": "src/chainparams.cpp",
      "position": 315,
      "original_position": 55,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "f3225c9090eaef8a2f9d711364ca5ff3fd799844",
      "in_reply_to_id": 1136910536,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">   what():  CreateChainParams: Unknown chain lol\r\n\r\nI think you tested the wrong thing. For me it prints:\r\n\r\n```\r\nError: SigNetParams: -signetchallenge cannot be multiple values.\r\n```\r\n\r\nWhich is confusing to an end-user, because it leaks internal implementation details that are irrelevant and redundant to the user.",
      "created_at": "2023-03-17T15:29:43Z",
      "updated_at": "2023-03-17T15:29:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1140383664",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140383664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140384430",
      "pull_request_review_id": 1346177386,
      "id": 1140384430,
      "node_id": "PRRC_kwDOABII585D-OKu",
      "diff_hunk": "@@ -382,11 +378,25 @@ class SigNetParams : public CChainParams {\n     }\n };\n \n+void ReadSigNetArgs(const ArgsManager& args, CChainParams::SigNetOptions& options) {\n+    if (args.IsArgSet(\"-signetseednode\")) {\n+        options.seeds.emplace(args.GetArgs(\"-signetseednode\"));\n+    }\n+    if (args.IsArgSet(\"-signetchallenge\")) {\n+        const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+        if (signet_challenge.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+        }\n+        options.challenge.emplace(ParseHex(signet_challenge[0]));",
      "path": "src/chainparams.cpp",
      "position": 375,
      "original_position": 57,
      "commit_id": "b3e78dc91d01e364b77aacd9fb9a2f88688ab8a6",
      "original_commit_id": "f3225c9090eaef8a2f9d711364ca5ff3fd799844",
      "in_reply_to_id": 1136909353,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To test, `-signetchallenge=nonhex` silently fails/passes",
      "created_at": "2023-03-17T15:30:23Z",
      "updated_at": "2023-03-17T15:30:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26177#discussion_r1140384430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140384430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    }
  ]
}