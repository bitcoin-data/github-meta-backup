{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021",
    "id": 368727608,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY4NzI3NjA4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18021",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18021.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18021.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18021",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18021/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
    "number": 18021,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Serialization improvements step 4 (undo.h)",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The next step of changes from #10785.\r\n\r\nThis one adds:\r\n* A meta-formatter for vectors, which serializes the vector elements using another formatter\r\n* Switch the undo.h code to the new framework, using the above (where undo entries are serialized as a vector, each of which uses a modified serializer for the UTXOs).",
    "labels": [],
    "active_lock_reason": "resolved",
    "created_at": "2020-01-29T19:30:39Z",
    "updated_at": "2022-02-15T10:27:00Z",
    "closed_at": "2020-02-10T15:11:18Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-02-10T15:11:18Z",
    "merge_commit_sha": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "sipa:202001_noncastserial_4",
      "ref": "202001_noncastserial_4",
      "sha": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 81,
        "watchers_count": 81,
        "size": 215860,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T11:52:48Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-04-30T00:52:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "23fab1a3dfe6f308880197dbe2bd7ce70866f13c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 81,
    "deletions": 88,
    "changed_files": 2,
    "commits": 4,
    "review_comments": 17,
    "comments": 4
  },
  "events": [
    {
      "event": "commented",
      "id": 579921768,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTkyMTc2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579921768",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T19:31:38Z",
      "updated_at": "2020-01-29T19:32:30Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky I added another small improvement here that wasn't present in #10785, namely reusing the `VectorUsing` logic in the vector/prevector serializers themselves (avoiding code duplication).",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#issuecomment-579921768",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18021"
    },
    {
      "event": "mentioned",
      "id": 2990803498,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjk5MDgwMzQ5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2990803498",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T19:31:39Z"
    },
    {
      "event": "subscribed",
      "id": 2990803502,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5OTA4MDM1MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2990803502",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T19:31:39Z"
    },
    {
      "event": "added_to_project",
      "id": 2990859191,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQyOTkwODU5MTkx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2990859191",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T19:49:33Z",
      "project_card": {
        "id": 32340615,
        "url": "https://api.github.com/projects/columns/cards/32340615",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 350498082,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDk4MDgy",
      "url": null,
      "actor": null,
      "commit_id": "416300bd0ca62fd41f24f3c826f739d488b0c502",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#pullrequestreview-350498082",
      "submitted_at": "2020-01-29T23:33:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
    },
    {
      "event": "review_requested",
      "id": 2991487605,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50Mjk5MTQ4NzYwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2991487605",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T23:38:04Z",
      "requested_reviewer": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozN2Q4MDBiZWEwMTZkNWNiYTU2MzVkYjAzNmY1M2E0ODY2MTRlZDMw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37d800bea016d5cba5635db036f53a486614ed30",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/37d800bea016d5cba5635db036f53a486614ed30",
      "tree": {
        "sha": "45dfff1beb3c8bd4b42bf175a3d6c80b69541261",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45dfff1beb3c8bd4b42bf175a3d6c80b69541261"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1607b5df4877e5f799d861784cb91dba3ea5887",
          "sha": "c1607b5df4877e5f799d861784cb91dba3ea5887",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c1607b5df4877e5f799d861784cb91dba3ea5887"
        }
      ],
      "message": "Add a constant for the maximum vector allocation (5 Mbyte)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-01-30T04:56:05Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-09-06T18:25:03Z"
      },
      "sha": "37d800bea016d5cba5635db036f53a486614ed30"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2991982395,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjk5MTk4MjM5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2991982395",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-30T04:57:52Z"
    },
    {
      "event": "commented",
      "id": 581258978,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTI1ODk3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581258978",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-03T06:27:53Z",
      "updated_at": "2020-02-03T06:28:01Z",
      "author_association": "MEMBER",
      "body": "Code review ACK 24235e50e9d532cbe5836dcebbce0c6a04be8652",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#issuecomment-581258978",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18021"
    },
    {
      "event": "reviewed",
      "id": 353597959,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTk3OTU5",
      "url": null,
      "actor": null,
      "commit_id": "24235e50e9d532cbe5836dcebbce0c6a04be8652",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#pullrequestreview-353597959",
      "submitted_at": "2020-02-05T10:10:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
    },
    {
      "event": "reviewed",
      "id": 353600476,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNjAwNDc2",
      "url": null,
      "actor": null,
      "commit_id": "24235e50e9d532cbe5836dcebbce0c6a04be8652",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#pullrequestreview-353600476",
      "submitted_at": "2020-02-05T10:13:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
    },
    {
      "event": "reviewed",
      "id": 353982674,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTgyNjc0",
      "url": null,
      "actor": null,
      "commit_id": "741e27bfe5eb6bdc61f99b300c16f4b2f92e8ec7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 24235e50e9d532cbe5836dcebbce0c6a04be8652. Left minor suggestions, feel free to ignore",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#pullrequestreview-353982674",
      "submitted_at": "2020-02-05T20:13:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYmY4NjI0MzU2OGFmMzgwYzEzODRhYzRlMGJmY2RjZmQ0ZGFiMDg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abf86243568af380c1384ac4e0bfcdcfd4dab085",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/abf86243568af380c1384ac4e0bfcdcfd4dab085",
      "tree": {
        "sha": "6d3d8745677c81923af8fcc8800894b63ec94dba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d3d8745677c81923af8fcc8800894b63ec94dba"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37d800bea016d5cba5635db036f53a486614ed30",
          "sha": "37d800bea016d5cba5635db036f53a486614ed30",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/37d800bea016d5cba5635db036f53a486614ed30"
        }
      ],
      "message": "Add custom vector-element formatter\n\nThis allows a very compact notation for serialization of vectors whose\nelements are not serialized using their default encoding.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-07T02:58:44Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-01-18T14:49:14Z"
      },
      "sha": "abf86243568af380c1384ac4e0bfcdcfd4dab085"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2Q4YWI5ZDExZTRjMGVhNDdlNTZiZTRmNmYyZmRkNDg4MDY3OTZj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cd8ab9d11e4c0ea47e56be4f6f2fdd48806796c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3cd8ab9d11e4c0ea47e56be4f6f2fdd48806796c",
      "tree": {
        "sha": "693b1a892773722f7fa9176264df823402a2a421",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/693b1a892773722f7fa9176264df823402a2a421"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abf86243568af380c1384ac4e0bfcdcfd4dab085",
          "sha": "abf86243568af380c1384ac4e0bfcdcfd4dab085",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/abf86243568af380c1384ac4e0bfcdcfd4dab085"
        }
      ],
      "message": "Make std::vector and prevector reuse the VectorFormatter logic",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-07T03:06:09Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-01-29T18:44:52Z"
      },
      "sha": "3cd8ab9d11e4c0ea47e56be4f6f2fdd48806796c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzk0YjAwMzlkMmNhMmE4YzQxZmQ2MTI3ZmY1MDE5YTJhZmMzMDRl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "tree": {
        "sha": "4db7ca2cc494740e5decafb3e9b4d3120606b8b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4db7ca2cc494740e5decafb3e9b4d3120606b8b2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cd8ab9d11e4c0ea47e56be4f6f2fdd48806796c",
          "sha": "3cd8ab9d11e4c0ea47e56be4f6f2fdd48806796c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3cd8ab9d11e4c0ea47e56be4f6f2fdd48806796c"
        }
      ],
      "message": "Convert undo.h to new serialization framework",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-07T03:08:11Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-01-29T19:21:36Z"
      },
      "sha": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3016225266,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAxNjIyNTI2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3016225266",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T03:08:41Z"
    },
    {
      "event": "commented",
      "id": 583321333,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzMyMTMzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583321333",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T10:06:55Z",
      "updated_at": "2020-02-07T10:06:55Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#18088](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/18088.html) (build: ensure we aren't using GNU extensions by fanquake)\n* [#18087](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/18087.html) (Get rid of VARINT default argument by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#issuecomment-583321333",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18021"
    },
    {
      "event": "reviewed",
      "id": 355173521,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MTczNTIx",
      "url": null,
      "actor": null,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Qualified ACK 3c94b0039d2c\r\n\r\nCode review, built/ran tests/ran bitcoind. I am not yet highly competent wrt C++ templates but this looks like a worthwhile refactoring. Would review again. Some thoughts below, feel free to ignore.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#pullrequestreview-355173521",
      "submitted_at": "2020-02-07T14:44:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
    },
    {
      "event": "reviewed",
      "id": 355370086,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzcwMDg2",
      "url": null,
      "actor": null,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 3c94b0039d2ca2a8c41fd6127ff5019a2afc304e. Changes since last review: renaming formatter classes, adding suggested static_assert, and removing temporary in VectorFormatter",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#pullrequestreview-355370086",
      "submitted_at": "2020-02-07T19:02:09Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
    },
    {
      "event": "commented",
      "id": 584157462,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDE1NzQ2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584157462",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T14:47:18Z",
      "updated_at": "2020-02-10T14:47:18Z",
      "author_association": "MEMBER",
      "body": "code review ACK 3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#issuecomment-584157462",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18021"
    },
    {
      "event": "referenced",
      "id": 3023111006,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMwMjMxMTEwMDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3023111006",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4c2578706c70148fc001f42a0918a2fb10252b43",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c2578706c70148fc001f42a0918a2fb10252b43",
      "created_at": "2020-02-10T15:11:10Z"
    },
    {
      "event": "merged",
      "id": 3023111544,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzAyMzExMTU0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3023111544",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "created_at": "2020-02-10T15:11:18Z"
    },
    {
      "event": "closed",
      "id": 3023111561,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzAyMzExMTU2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3023111561",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T15:11:19Z"
    },
    {
      "event": "removed_from_project",
      "id": 3024758007,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MzAyNDc1ODAwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3024758007",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T23:27:43Z",
      "project_card": {
        "id": 32340615,
        "url": "https://api.github.com/projects/columns/cards/32340615",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "referenced",
      "id": 3045780328,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMwNDU3ODAzMjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3045780328",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ee101ba39b5360939a53f499ccb75b3c87b9c0b6",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/ee101ba39b5360939a53f499ccb75b3c87b9c0b6",
      "created_at": "2020-02-18T05:54:10Z"
    },
    {
      "event": "referenced",
      "id": 3980858746,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5ODA4NTg3NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980858746",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fc5b6b9dafec623719f760d50b57a8bb4d9e78b8",
      "commit_url": "https://api.github.com/repos/syscoin-core/syscoin/commits/fc5b6b9dafec623719f760d50b57a8bb4d9e78b8",
      "created_at": "2020-11-10T20:39:49Z"
    },
    {
      "event": "referenced",
      "id": 4144311636,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxNDQzMTE2MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4144311636",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b05d4ce8953ba1228b627ad77925640c68011bbe",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/b05d4ce8953ba1228b627ad77925640c68011bbe",
      "created_at": "2020-12-23T14:05:09Z"
    },
    {
      "event": "referenced",
      "id": 4144311641,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxNDQzMTE2NDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4144311641",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4ce8d58f5c6ac384faec72f3d807a85394a1176e",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/4ce8d58f5c6ac384faec72f3d807a85394a1176e",
      "created_at": "2020-12-23T14:05:09Z"
    },
    {
      "event": "referenced",
      "id": 4144320297,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxNDQzMjAyOTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4144320297",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "96abf36e500a476626026cd0cab06e40bf98a0dc",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/96abf36e500a476626026cd0cab06e40bf98a0dc",
      "created_at": "2020-12-23T14:07:05Z"
    },
    {
      "event": "referenced",
      "id": 4144363144,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxNDQzNjMxNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4144363144",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "74eb60421853f10bb78124086373ad5ecc97752e",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/74eb60421853f10bb78124086373ad5ecc97752e",
      "created_at": "2020-12-23T14:16:06Z"
    },
    {
      "event": "referenced",
      "id": 4433793549,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0MzM3OTM1NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4433793549",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "98b18b83d45a38984437fed4127362a328e7714f",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/98b18b83d45a38984437fed4127362a328e7714f",
      "created_at": "2021-03-10T06:22:16Z"
    },
    {
      "event": "referenced",
      "id": 4433793551,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0MzM3OTM1NTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4433793551",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "aeb9240e41a70f79ea2873897028a08e684dede6",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/aeb9240e41a70f79ea2873897028a08e684dede6",
      "created_at": "2021-03-10T06:22:17Z"
    },
    {
      "event": "referenced",
      "id": 4433793554,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0MzM3OTM1NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4433793554",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "603db4699b87fafa52a79c4efa9546b0ed1777dd",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/603db4699b87fafa52a79c4efa9546b0ed1777dd",
      "created_at": "2021-03-10T06:22:17Z"
    },
    {
      "event": "referenced",
      "id": 4462254806,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0NjIyNTQ4MDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4462254806",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5bd678db4187f09f9c61e2affee2f6b220b0eb31",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/5bd678db4187f09f9c61e2affee2f6b220b0eb31",
      "created_at": "2021-03-16T04:37:19Z"
    },
    {
      "event": "referenced",
      "id": 4465833197,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0NjU4MzMxOTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4465833197",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ef07309697d027b26a23a212d8bbfd527df9d874",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/ef07309697d027b26a23a212d8bbfd527df9d874",
      "created_at": "2021-03-16T17:04:00Z"
    },
    {
      "event": "referenced",
      "id": 4609556288,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2MDk1NTYyODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4609556288",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0802bdfa373e32af2b974bde02d0455c1088ee1e",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/0802bdfa373e32af2b974bde02d0455c1088ee1e",
      "created_at": "2021-04-18T21:29:34Z"
    },
    {
      "event": "referenced",
      "id": 4749254355,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NDkyNTQzNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4749254355",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "20b71700dc081aa41a22c53054534039065db074",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/20b71700dc081aa41a22c53054534039065db074",
      "created_at": "2021-05-14T23:07:09Z"
    },
    {
      "event": "referenced",
      "id": 4770539532,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NzA1Mzk1MzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4770539532",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b9007ef802d30ddd0d1ee7ae963a9ace88398f42",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/b9007ef802d30ddd0d1ee7ae963a9ace88398f42",
      "created_at": "2021-05-20T04:44:51Z"
    },
    {
      "event": "referenced",
      "id": 4975828391,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NzU4MjgzOTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4975828391",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5c93f159bc970a84de7bd05a9816b41d23d76f3b",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/5c93f159bc970a84de7bd05a9816b41d23d76f3b",
      "created_at": "2021-07-05T01:44:42Z"
    },
    {
      "event": "referenced",
      "id": 5141021304,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDEwMjEzMDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5141021304",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "created_at": "2021-08-11T10:09:46Z"
    },
    {
      "event": "locked",
      "id": 6073760096,
      "node_id": "LOE_lADOABII584hNDPvzwAAAAFqBjlg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073760096",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:27:00Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372689082",
      "pull_request_review_id": 350498082,
      "id": 372689082,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY4OTA4Mg==",
      "diff_hunk": "@@ -25,6 +25,9 @@\n \n static const unsigned int MAX_SIZE = 0x02000000;\n \n+/** Maximum amount of memory to allocate at once when deserializing vectors. */",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 4,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "416300bd0ca62fd41f24f3c826f739d488b0c502",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: specify units?",
      "created_at": "2020-01-29T23:33:44Z",
      "updated_at": "2020-02-07T03:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r372689082",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372689082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372759739",
      "pull_request_review_id": 350581839,
      "id": 372759739,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc1OTczOQ==",
      "diff_hunk": "@@ -25,6 +25,9 @@\n \n static const unsigned int MAX_SIZE = 0x02000000;\n \n+/** Maximum amount of memory to allocate at once when deserializing vectors. */",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 4,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "416300bd0ca62fd41f24f3c826f739d488b0c502",
      "in_reply_to_id": 372689082,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-01-30T04:57:52Z",
      "updated_at": "2020-02-07T03:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r372759739",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372759739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375164775",
      "pull_request_review_id": 353597959,
      "id": 375164775,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE2NDc3NQ==",
      "diff_hunk": "@@ -673,6 +723,16 @@ inline void Unserialize(Stream& is, T&& a)\n     a.Unserialize(is);\n }\n \n+/** Identity formatter. Serializes objects as themselves. */",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 68,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "24235e50e9d532cbe5836dcebbce0c6a04be8652",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add a comment when this is to be used, on first glance it seems like a no-op.",
      "created_at": "2020-02-05T10:10:14Z",
      "updated_at": "2020-02-07T03:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r375164775",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375164775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 726,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375166767",
      "pull_request_review_id": 353600476,
      "id": 375166767,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE2Njc2Nw==",
      "diff_hunk": "@@ -593,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorUsing<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorUsing\n+{\n+    template<typename Stream, typename V>\n+    void Ser(Stream& s, const V& v)\n+    {\n+        WriteCompactSize(s, v.size());\n+        for (const typename V::value_type& elem : v) {\n+            s << Using<Formatter>(elem);\n+        }\n+    }\n+\n+    template<typename Stream, typename V>\n+    void Unser(Stream& s, V& v)\n+    {\n+        v.clear();\n+        size_t size = ReadCompactSize(s);\n+        size_t allocated = 0;\n+        while (allocated < size) {\n+            // For DoS prevention, do not blindly allocate as much as the stream claims to contain.\n+            // Instead, allocate in 5MiB batches, so that an attacker actually needs to provide\n+            // X MiB of data to make us allocate X+5 Mib.\n+            allocated = std::min(size, allocated + MAX_VECTOR_ALLOCATE / sizeof(typename V::value_type));",
      "path": "src/serialize.h",
      "position": 50,
      "original_position": 49,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "24235e50e9d532cbe5836dcebbce0c6a04be8652",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A static assert that ` sizeof(typename V::value_type) <= MAX_VECTOR_ALLOCATE` could catch an edge case here.",
      "created_at": "2020-02-05T10:13:57Z",
      "updated_at": "2020-02-07T03:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r375166767",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375166767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 635,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375462422",
      "pull_request_review_id": 353982674,
      "id": 375462422,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ2MjQyMg==",
      "diff_hunk": "@@ -596,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorUsing<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorUsing\n+{\n+    template<typename Stream, typename V>\n+    void Ser(Stream& s, const V& v)\n+    {\n+        WriteCompactSize(s, v.size());\n+        for (const typename V::value_type& elem : v) {\n+            s << Using<Formatter>(elem);\n+        }\n+    }\n+\n+    template<typename Stream, typename V>\n+    void Unser(Stream& s, V& v)\n+    {\n+        v.clear();\n+        size_t size = ReadCompactSize(s);\n+        size_t allocated = 0;\n+        while (allocated < size) {\n+            // For DoS prevention, do not blindly allocate as much as the stream claims to contain.\n+            // Instead, allocate in 5MiB batches, so that an attacker actually needs to provide\n+            // X MiB of data to make us allocate X+5 Mib.\n+            allocated = std::min(size, allocated + MAX_VECTOR_ALLOCATE / sizeof(typename V::value_type));\n+            v.reserve(allocated);\n+            while (v.size() < allocated) {\n+                typename V::value_type val;\n+                auto wrapped = Using<Formatter>(val);\n+                s >> wrapped;\n+                v.push_back(std::move(val));",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 45,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "741e27bfe5eb6bdc61f99b300c16f4b2f92e8ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add custom vector-element formatter\" (741e27bfe5eb6bdc61f99b300c16f4b2f92e8ec7)\r\n\r\nCould avoid creating the temporary:\r\n\r\n```c++\r\nv.emplace_back();\r\ns >> Using<Formatter>(v.back());\r\n```",
      "created_at": "2020-02-05T19:30:22Z",
      "updated_at": "2020-02-07T03:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r375462422",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375462422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": 637,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 640,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375472656",
      "pull_request_review_id": 353982674,
      "id": 375472656,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ3MjY1Ng==",
      "diff_hunk": "@@ -13,88 +13,50 @@\n #include <serialize.h>\n #include <version.h>\n \n-/** Undo information for a CTxIn\n+/** Formatter for undo information for a CTxIn\n  *\n  *  Contains the prevout's CTxOut being spent, and its metadata as well\n  *  (coinbase or not, height). The serialization contains a dummy value of\n  *  zero. This is compatible with older versions which expect to see\n  *  the transaction version there.\n  */\n-class TxInUndoSerializer\n+struct TxInUndo\n {\n-    const Coin* txout;\n-\n-public:\n     template<typename Stream>\n-    void Serialize(Stream &s) const {\n-        ::Serialize(s, VARINT(txout->nHeight * 2 + (txout->fCoinBase ? 1u : 0u)));\n-        if (txout->nHeight > 0) {\n+    void Ser(Stream &s, const Coin& txout) {\n+        ::Serialize(s, VARINT(txout.nHeight * 2 + (txout.fCoinBase ? 1u : 0u)));\n+        if (txout.nHeight > 0) {\n             // Required to maintain compatibility with older undo format.\n             ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, Using<TxOutCompression>(REF(txout->out)));\n+        ::Serialize(s, Using<TxOutCompression>(txout.out));\n     }\n \n-    explicit TxInUndoSerializer(const Coin* coin) : txout(coin) {}\n-};\n-\n-class TxInUndoDeserializer\n-{\n-    Coin* txout;\n-\n-public:\n     template<typename Stream>\n-    void Unserialize(Stream &s) {\n+    void Unser(Stream &s, Coin& txout) {\n         unsigned int nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        txout->nHeight = nCode / 2;\n-        txout->fCoinBase = nCode & 1;\n-        if (txout->nHeight > 0) {\n+        txout.nHeight = nCode / 2;\n+        txout.fCoinBase = nCode & 1;\n+        if (txout.nHeight > 0) {\n             // Old versions stored the version number for the last spend of\n             // a transaction's outputs. Non-final spends were indicated with\n             // height = 0.\n             unsigned int nVersionDummy;\n             ::Unserialize(s, VARINT(nVersionDummy));\n         }\n-        ::Unserialize(s, Using<TxOutCompression>(REF(txout->out)));\n+        ::Unserialize(s, Using<TxOutCompression>(txout.out));\n     }\n-\n-    explicit TxInUndoDeserializer(Coin* coin) : txout(coin) {}\n };\n \n-static const size_t MIN_TRANSACTION_INPUT_WEIGHT = WITNESS_SCALE_FACTOR * ::GetSerializeSize(CTxIn(), PROTOCOL_VERSION);\n-static const size_t MAX_INPUTS_PER_BLOCK = MAX_BLOCK_WEIGHT / MIN_TRANSACTION_INPUT_WEIGHT;\n-\n /** Undo information for a CTransaction */\n class CTxUndo\n {\n public:\n     // undo information for all txins\n     std::vector<Coin> vprevout;\n \n-    template <typename Stream>\n-    void Serialize(Stream& s) const {\n-        // TODO: avoid reimplementing vector serializer\n-        uint64_t count = vprevout.size();\n-        ::Serialize(s, COMPACTSIZE(REF(count)));\n-        for (const auto& prevout : vprevout) {\n-            ::Serialize(s, TxInUndoSerializer(&prevout));\n-        }\n-    }\n-\n-    template <typename Stream>\n-    void Unserialize(Stream& s) {\n-        // TODO: avoid reimplementing vector deserializer\n-        uint64_t count = 0;\n-        ::Unserialize(s, COMPACTSIZE(count));\n-        if (count > MAX_INPUTS_PER_BLOCK) {\n-            throw std::ios_base::failure(\"Too many input undo records\");\n-        }",
      "path": "src/undo.h",
      "position": 91,
      "original_position": 91,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "24235e50e9d532cbe5836dcebbce0c6a04be8652",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Convert undo.h to new serialization framework\" (24235e50e9d532cbe5836dcebbce0c6a04be8652)\r\n\r\nNote: With this check going away, there doesn't appear to be any limit on the total size of the deserialized `vprevout` vector. The incremental allocation size is now limited to MAX_VECTOR_ALLOCATE, though.",
      "created_at": "2020-02-05T19:50:12Z",
      "updated_at": "2020-02-07T03:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r375472656",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375472656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": 90,
      "original_start_line": 90,
      "start_side": "LEFT",
      "line": 92,
      "original_line": 92,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375480709",
      "pull_request_review_id": 353982674,
      "id": 375480709,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ4MDcwOQ==",
      "diff_hunk": "@@ -596,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorUsing<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorUsing",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 18,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "741e27bfe5eb6bdc61f99b300c16f4b2f92e8ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think the `VectorUsing` and `UsingSelf` names for formatters are the best. Would suggest sticking to the `FooFormatter` convention and renaming `VectorUsing` to `VectorFormatter` and `UsingSelf` to `DefaultFormatter`.\r\n\r\nAside from giving more consistent class names, it should also make usages more readable: `Using<VectorUsing<UsingSelf>>(v)` -> `Using<VectorFormatter<DefaultFormatter>>(v)`",
      "created_at": "2020-02-05T20:07:07Z",
      "updated_at": "2020-02-07T03:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r375480709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375480709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 613,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195107",
      "pull_request_review_id": 354908861,
      "id": 376195107,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5NTEwNw==",
      "diff_hunk": "@@ -673,6 +723,16 @@ inline void Unserialize(Stream& is, T&& a)\n     a.Unserialize(is);\n }\n \n+/** Identity formatter. Serializes objects as themselves. */",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 68,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "24235e50e9d532cbe5836dcebbce0c6a04be8652",
      "in_reply_to_id": 375164775,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-02-07T03:09:24Z",
      "updated_at": "2020-02-07T03:09:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376195107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 726,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195138",
      "pull_request_review_id": 354908911,
      "id": 376195138,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5NTEzOA==",
      "diff_hunk": "@@ -593,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorUsing<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorUsing\n+{\n+    template<typename Stream, typename V>\n+    void Ser(Stream& s, const V& v)\n+    {\n+        WriteCompactSize(s, v.size());\n+        for (const typename V::value_type& elem : v) {\n+            s << Using<Formatter>(elem);\n+        }\n+    }\n+\n+    template<typename Stream, typename V>\n+    void Unser(Stream& s, V& v)\n+    {\n+        v.clear();\n+        size_t size = ReadCompactSize(s);\n+        size_t allocated = 0;\n+        while (allocated < size) {\n+            // For DoS prevention, do not blindly allocate as much as the stream claims to contain.\n+            // Instead, allocate in 5MiB batches, so that an attacker actually needs to provide\n+            // X MiB of data to make us allocate X+5 Mib.\n+            allocated = std::min(size, allocated + MAX_VECTOR_ALLOCATE / sizeof(typename V::value_type));",
      "path": "src/serialize.h",
      "position": 50,
      "original_position": 49,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "24235e50e9d532cbe5836dcebbce0c6a04be8652",
      "in_reply_to_id": 375166767,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-02-07T03:09:36Z",
      "updated_at": "2020-02-07T03:09:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376195138",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 635,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195163",
      "pull_request_review_id": 354908947,
      "id": 376195163,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5NTE2Mw==",
      "diff_hunk": "@@ -596,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorUsing<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorUsing\n+{\n+    template<typename Stream, typename V>\n+    void Ser(Stream& s, const V& v)\n+    {\n+        WriteCompactSize(s, v.size());\n+        for (const typename V::value_type& elem : v) {\n+            s << Using<Formatter>(elem);\n+        }\n+    }\n+\n+    template<typename Stream, typename V>\n+    void Unser(Stream& s, V& v)\n+    {\n+        v.clear();\n+        size_t size = ReadCompactSize(s);\n+        size_t allocated = 0;\n+        while (allocated < size) {\n+            // For DoS prevention, do not blindly allocate as much as the stream claims to contain.\n+            // Instead, allocate in 5MiB batches, so that an attacker actually needs to provide\n+            // X MiB of data to make us allocate X+5 Mib.\n+            allocated = std::min(size, allocated + MAX_VECTOR_ALLOCATE / sizeof(typename V::value_type));\n+            v.reserve(allocated);\n+            while (v.size() < allocated) {\n+                typename V::value_type val;\n+                auto wrapped = Using<Formatter>(val);\n+                s >> wrapped;\n+                v.push_back(std::move(val));",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 45,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "741e27bfe5eb6bdc61f99b300c16f4b2f92e8ec7",
      "in_reply_to_id": 375462422,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-02-07T03:09:44Z",
      "updated_at": "2020-02-07T03:09:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376195163",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": 637,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 640,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195351",
      "pull_request_review_id": 354909138,
      "id": 376195351,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5NTM1MQ==",
      "diff_hunk": "@@ -13,88 +13,50 @@\n #include <serialize.h>\n #include <version.h>\n \n-/** Undo information for a CTxIn\n+/** Formatter for undo information for a CTxIn\n  *\n  *  Contains the prevout's CTxOut being spent, and its metadata as well\n  *  (coinbase or not, height). The serialization contains a dummy value of\n  *  zero. This is compatible with older versions which expect to see\n  *  the transaction version there.\n  */\n-class TxInUndoSerializer\n+struct TxInUndo\n {\n-    const Coin* txout;\n-\n-public:\n     template<typename Stream>\n-    void Serialize(Stream &s) const {\n-        ::Serialize(s, VARINT(txout->nHeight * 2 + (txout->fCoinBase ? 1u : 0u)));\n-        if (txout->nHeight > 0) {\n+    void Ser(Stream &s, const Coin& txout) {\n+        ::Serialize(s, VARINT(txout.nHeight * 2 + (txout.fCoinBase ? 1u : 0u)));\n+        if (txout.nHeight > 0) {\n             // Required to maintain compatibility with older undo format.\n             ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, Using<TxOutCompression>(REF(txout->out)));\n+        ::Serialize(s, Using<TxOutCompression>(txout.out));\n     }\n \n-    explicit TxInUndoSerializer(const Coin* coin) : txout(coin) {}\n-};\n-\n-class TxInUndoDeserializer\n-{\n-    Coin* txout;\n-\n-public:\n     template<typename Stream>\n-    void Unserialize(Stream &s) {\n+    void Unser(Stream &s, Coin& txout) {\n         unsigned int nCode = 0;\n         ::Unserialize(s, VARINT(nCode));\n-        txout->nHeight = nCode / 2;\n-        txout->fCoinBase = nCode & 1;\n-        if (txout->nHeight > 0) {\n+        txout.nHeight = nCode / 2;\n+        txout.fCoinBase = nCode & 1;\n+        if (txout.nHeight > 0) {\n             // Old versions stored the version number for the last spend of\n             // a transaction's outputs. Non-final spends were indicated with\n             // height = 0.\n             unsigned int nVersionDummy;\n             ::Unserialize(s, VARINT(nVersionDummy));\n         }\n-        ::Unserialize(s, Using<TxOutCompression>(REF(txout->out)));\n+        ::Unserialize(s, Using<TxOutCompression>(txout.out));\n     }\n-\n-    explicit TxInUndoDeserializer(Coin* coin) : txout(coin) {}\n };\n \n-static const size_t MIN_TRANSACTION_INPUT_WEIGHT = WITNESS_SCALE_FACTOR * ::GetSerializeSize(CTxIn(), PROTOCOL_VERSION);\n-static const size_t MAX_INPUTS_PER_BLOCK = MAX_BLOCK_WEIGHT / MIN_TRANSACTION_INPUT_WEIGHT;\n-\n /** Undo information for a CTransaction */\n class CTxUndo\n {\n public:\n     // undo information for all txins\n     std::vector<Coin> vprevout;\n \n-    template <typename Stream>\n-    void Serialize(Stream& s) const {\n-        // TODO: avoid reimplementing vector serializer\n-        uint64_t count = vprevout.size();\n-        ::Serialize(s, COMPACTSIZE(REF(count)));\n-        for (const auto& prevout : vprevout) {\n-            ::Serialize(s, TxInUndoSerializer(&prevout));\n-        }\n-    }\n-\n-    template <typename Stream>\n-    void Unserialize(Stream& s) {\n-        // TODO: avoid reimplementing vector deserializer\n-        uint64_t count = 0;\n-        ::Unserialize(s, COMPACTSIZE(count));\n-        if (count > MAX_INPUTS_PER_BLOCK) {\n-            throw std::ios_base::failure(\"Too many input undo records\");\n-        }",
      "path": "src/undo.h",
      "position": 91,
      "original_position": 91,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "24235e50e9d532cbe5836dcebbce0c6a04be8652",
      "in_reply_to_id": 375472656,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I'm aware. I don't think this is significant. The earlier code needed a sanity limit, and had custom code, so it used a custom limit. The new code is safe by default (even though the limit in practice is much higher).",
      "created_at": "2020-02-07T03:10:39Z",
      "updated_at": "2020-02-07T03:10:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376195351",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": 90,
      "original_start_line": 90,
      "start_side": "LEFT",
      "line": 92,
      "original_line": 92,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195394",
      "pull_request_review_id": 354909180,
      "id": 376195394,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5NTM5NA==",
      "diff_hunk": "@@ -596,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorUsing<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorUsing",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 18,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "741e27bfe5eb6bdc61f99b300c16f4b2f92e8ec7",
      "in_reply_to_id": 375480709,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's indeed better. Done.",
      "created_at": "2020-02-07T03:10:51Z",
      "updated_at": "2020-02-07T03:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376195394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 613,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376403864",
      "pull_request_review_id": 355173521,
      "id": 376403864,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQwMzg2NA==",
      "diff_hunk": "@@ -593,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorFormatter<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorFormatter\n+{\n+    template<typename Stream, typename V>\n+    void Ser(Stream& s, const V& v)\n+    {\n+        WriteCompactSize(s, v.size());\n+        for (const typename V::value_type& elem : v) {\n+            s << Using<Formatter>(elem);\n+        }\n+    }\n+\n+    template<typename Stream, typename V>\n+    void Unser(Stream& s, V& v)\n+    {\n+        v.clear();\n+        size_t size = ReadCompactSize(s);\n+        size_t allocated = 0;\n+        while (allocated < size) {\n+            // For DoS prevention, do not blindly allocate as much as the stream claims to contain.\n+            // Instead, allocate in 5MiB batches, so that an attacker actually needs to provide\n+            // X MiB of data to make us allocate X+5 Mib.",
      "path": "src/serialize.h",
      "position": 48,
      "original_position": 48,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Lines 632 and 633, so the documentation doesn't go out of date if the value of `MAX_VECTOR_ALLOCATE` changes, perhaps replace \"5 MiB\" and \"5 Mib\" with \"MAX_VECTOR_ALLOCATE\" (and s/X Mib/X/ as the constant is defined in bytes).",
      "created_at": "2020-02-07T14:00:26Z",
      "updated_at": "2020-02-07T14:44:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376403864",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376403864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 633,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376408131",
      "pull_request_review_id": 355173521,
      "id": 376408131,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQwODEzMQ==",
      "diff_hunk": "@@ -593,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorFormatter<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorFormatter\n+{\n+    template<typename Stream, typename V>\n+    void Ser(Stream& s, const V& v)\n+    {\n+        WriteCompactSize(s, v.size());\n+        for (const typename V::value_type& elem : v) {\n+            s << Using<Formatter>(elem);\n+        }\n+    }\n+\n+    template<typename Stream, typename V>\n+    void Unser(Stream& s, V& v)\n+    {\n+        v.clear();\n+        size_t size = ReadCompactSize(s);\n+        size_t allocated = 0;\n+        while (allocated < size) {\n+            // For DoS prevention, do not blindly allocate as much as the stream claims to contain.\n+            // Instead, allocate in 5MiB batches, so that an attacker actually needs to provide\n+            // X MiB of data to make us allocate X+5 Mib.\n+            static_assert(sizeof(typename V::value_type) <= MAX_VECTOR_ALLOCATE, \"Vector element size too large\");\n+            allocated = std::min(size, allocated + MAX_VECTOR_ALLOCATE / sizeof(typename V::value_type));",
      "path": "src/serialize.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "<strike>Now that the static assert suggested in https://github.com/bitcoin/bitcoin/pull/18021#discussion_r375166767 has been added, possibly worthwhile (or not) to calculate `sizeof(typename V::value_type)` once and cache it.</strike>",
      "created_at": "2020-02-07T14:09:39Z",
      "updated_at": "2020-02-07T16:55:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376408131",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376408131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 635,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376431958",
      "pull_request_review_id": 355210394,
      "id": 376431958,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzMTk1OA==",
      "diff_hunk": "@@ -593,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorFormatter<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorFormatter\n+{\n+    template<typename Stream, typename V>\n+    void Ser(Stream& s, const V& v)\n+    {\n+        WriteCompactSize(s, v.size());\n+        for (const typename V::value_type& elem : v) {\n+            s << Using<Formatter>(elem);\n+        }\n+    }\n+\n+    template<typename Stream, typename V>\n+    void Unser(Stream& s, V& v)\n+    {\n+        v.clear();\n+        size_t size = ReadCompactSize(s);\n+        size_t allocated = 0;\n+        while (allocated < size) {\n+            // For DoS prevention, do not blindly allocate as much as the stream claims to contain.\n+            // Instead, allocate in 5MiB batches, so that an attacker actually needs to provide\n+            // X MiB of data to make us allocate X+5 Mib.\n+            static_assert(sizeof(typename V::value_type) <= MAX_VECTOR_ALLOCATE, \"Vector element size too large\");\n+            allocated = std::min(size, allocated + MAX_VECTOR_ALLOCATE / sizeof(typename V::value_type));",
      "path": "src/serialize.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "in_reply_to_id": 376408131,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Noting that the result of sizeof is always nonzero, even if applied to an empty class type, so (normally) no risk of division by zero.",
      "created_at": "2020-02-07T14:54:04Z",
      "updated_at": "2020-02-07T15:06:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376431958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376431958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 635,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376452925",
      "pull_request_review_id": 355237428,
      "id": 376452925,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ1MjkyNQ==",
      "diff_hunk": "@@ -593,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorFormatter<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorFormatter\n+{\n+    template<typename Stream, typename V>\n+    void Ser(Stream& s, const V& v)\n+    {\n+        WriteCompactSize(s, v.size());\n+        for (const typename V::value_type& elem : v) {\n+            s << Using<Formatter>(elem);\n+        }\n+    }\n+\n+    template<typename Stream, typename V>\n+    void Unser(Stream& s, V& v)\n+    {\n+        v.clear();\n+        size_t size = ReadCompactSize(s);\n+        size_t allocated = 0;\n+        while (allocated < size) {\n+            // For DoS prevention, do not blindly allocate as much as the stream claims to contain.\n+            // Instead, allocate in 5MiB batches, so that an attacker actually needs to provide\n+            // X MiB of data to make us allocate X+5 Mib.\n+            static_assert(sizeof(typename V::value_type) <= MAX_VECTOR_ALLOCATE, \"Vector element size too large\");\n+            allocated = std::min(size, allocated + MAX_VECTOR_ALLOCATE / sizeof(typename V::value_type));",
      "path": "src/serialize.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "in_reply_to_id": 376408131,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unless I'm confused, sizeof(..) is determined at compile-time, so no reason to cache it.",
      "created_at": "2020-02-07T15:31:03Z",
      "updated_at": "2020-02-07T15:31:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376452925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376452925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 635,
      "original_line": 635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376498299",
      "pull_request_review_id": 355296433,
      "id": 376498299,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5ODI5OQ==",
      "diff_hunk": "@@ -593,6 +596,53 @@ class LimitedString\n template<typename I>\n BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n \n+/** Formatter to serialize/deserialize vector elements using another formatter\n+ *\n+ * Example:\n+ *   struct X {\n+ *     std::vector<uint64_t> v;\n+ *     SERIALIZE_METHODS(X, obj) { READWRITE(Using<VectorFormatter<VarInt>>(obj.v)); }\n+ *   };\n+ * will define a struct that contains a vector of uint64_t, which is serialized\n+ * as a vector of VarInt-encoded integers.\n+ *\n+ * V is not required to be an std::vector type. It works for any class that\n+ * exposes a value_type, size, reserve, push_back, and const iterators.\n+ */\n+template<class Formatter>\n+struct VectorFormatter\n+{\n+    template<typename Stream, typename V>\n+    void Ser(Stream& s, const V& v)\n+    {\n+        WriteCompactSize(s, v.size());\n+        for (const typename V::value_type& elem : v) {\n+            s << Using<Formatter>(elem);\n+        }\n+    }\n+\n+    template<typename Stream, typename V>\n+    void Unser(Stream& s, V& v)\n+    {\n+        v.clear();\n+        size_t size = ReadCompactSize(s);\n+        size_t allocated = 0;\n+        while (allocated < size) {\n+            // For DoS prevention, do not blindly allocate as much as the stream claims to contain.\n+            // Instead, allocate in 5MiB batches, so that an attacker actually needs to provide\n+            // X MiB of data to make us allocate X+5 Mib.\n+            static_assert(sizeof(typename V::value_type) <= MAX_VECTOR_ALLOCATE, \"Vector element size too large\");\n+            allocated = std::min(size, allocated + MAX_VECTOR_ALLOCATE / sizeof(typename V::value_type));",
      "path": "src/serialize.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "original_commit_id": "3c94b0039d2ca2a8c41fd6127ff5019a2afc304e",
      "in_reply_to_id": 376408131,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops yes, `static_assert` requires a bool constexpr, otherwise a compile-time error is issued.",
      "created_at": "2020-02-07T16:55:12Z",
      "updated_at": "2020-02-07T16:55:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18021#discussion_r376498299",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376498299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18021"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 635,
      "original_line": 635,
      "side": "RIGHT"
    }
  ]
}