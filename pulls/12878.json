{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878",
    "id": 179287080,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5Mjg3MDgw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12878",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/12878.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/12878.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/77a733a99a75bdd04ad94df830e5bdc8a6040959",
    "number": 12878,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "[refactor] Config handling refactoring in preparation for network-specific sections",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This does a bit of refactoring of the configuration handling code in order to add additional tests to make adding support for [test]/[regtest] sections in the config file in #11862 easier. Should not cause any behaviour changes.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-04-04T05:39:28Z",
    "updated_at": "2021-09-08T11:52:47Z",
    "closed_at": "2018-04-08T14:25:20Z",
    "mergeable_state": "unknown",
    "merged_at": "2018-04-08T14:25:20Z",
    "merge_commit_sha": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ajtowns:netconf-refactor",
      "ref": "netconf-refactor",
      "sha": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 53941525,
        "node_id": "MDEwOlJlcG9zaXRvcnk1Mzk0MTUyNQ==",
        "name": "bitcoin",
        "full_name": "ajtowns/bitcoin",
        "owner": {
          "login": "ajtowns",
          "id": 127186,
          "node_id": "MDQ6VXNlcjEyNzE4Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ajtowns",
          "html_url": "https://github.com/ajtowns",
          "followers_url": "https://api.github.com/users/ajtowns/followers",
          "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
          "organizations_url": "https://api.github.com/users/ajtowns/orgs",
          "repos_url": "https://api.github.com/users/ajtowns/repos",
          "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ajtowns/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ajtowns/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ajtowns/bitcoin",
        "archive_url": "https://api.github.com/repos/ajtowns/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ajtowns/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ajtowns/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ajtowns/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ajtowns/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ajtowns/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ajtowns/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ajtowns/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ajtowns/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ajtowns/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ajtowns/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ajtowns/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ajtowns/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ajtowns/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ajtowns/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ajtowns/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ajtowns/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ajtowns/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ajtowns/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ajtowns/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ajtowns/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ajtowns/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ajtowns/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ajtowns/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ajtowns/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ajtowns/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ajtowns/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ajtowns/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ajtowns/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ajtowns/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ajtowns/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ajtowns/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ajtowns/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ajtowns/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ajtowns/bitcoin/hooks",
        "svn_url": "https://github.com/ajtowns/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 262427,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T19:54:41Z",
        "created_at": "2016-03-15T12:11:24Z",
        "updated_at": "2023-03-19T19:22:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5f0c6a7b0e47e03f848dc992d37fe209dd9c6975",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T00:30:39Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 245,
    "deletions": 46,
    "changed_files": 10,
    "commits": 7,
    "review_comments": 17,
    "comments": 10
  },
  "events": [
    {
      "event": "labeled",
      "id": 1555653682,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE1NTU2NTM2ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1555653682",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-04T05:57:38Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "reviewed",
      "id": 109214721,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA5MjE0NzIx",
      "url": null,
      "actor": null,
      "commit_id": "0068900bf239993de7f4c124f53beaf28366294b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#pullrequestreview-109214721",
      "submitted_at": "2018-04-04T07:22:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1555806902,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU1NTgwNjkwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1555806902",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-04T07:48:52Z"
    },
    {
      "event": "reviewed",
      "id": 109348348,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA5MzQ4MzQ4",
      "url": null,
      "actor": null,
      "commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks really good. Thanks for all the additional test coverage!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#pullrequestreview-109348348",
      "submitted_at": "2018-04-04T15:07:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1557670188,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU1NzY3MDE4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1557670188",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-04T23:47:44Z"
    },
    {
      "event": "commented",
      "id": 378780320,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODc4MDMyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378780320",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-04T23:52:01Z",
      "updated_at": "2018-04-04T23:52:01Z",
      "author_association": "MEMBER",
      "body": "Bumped to address @jnewbery's suggestions. Unsquashed changes are at https://github.com/ajtowns/bitcoin/commits/netconf-refactor-track with commit 26d3faaa28c794b48df2a12cdb4a9a71de3d1a96 here having the same tree  as commit 3467454beff8e7b2df87f9a0e29391eb14a8e6c3 on the -track branch:\r\n\r\n```\r\n$ for a in netconf-refactor{,-track}; do git log -1 --pretty=\"%h -> %T\" $a; done\r\n26d3faaa28 -> ef5b209a05c28afb98e0ce8e05e9cbc54dfebeaf\r\n3467454bef -> ef5b209a05c28afb98e0ce8e05e9cbc54dfebeaf\r\n```",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-378780320",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "mentioned",
      "id": 1557674816,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1NzY3NDgxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1557674816",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-04T23:52:01Z"
    },
    {
      "event": "subscribed",
      "id": 1557674817,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTc2NzQ4MTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1557674817",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-04T23:52:02Z"
    },
    {
      "event": "reviewed",
      "id": 109554929,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA5NTU0OTI5",
      "url": null,
      "actor": null,
      "commit_id": "26d3faaa28c794b48df2a12cdb4a9a71de3d1a96",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#pullrequestreview-109554929",
      "submitted_at": "2018-04-05T01:34:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
    },
    {
      "event": "commented",
      "id": 378965847,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODk2NTg0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378965847",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T14:57:44Z",
      "updated_at": "2018-04-05T14:57:44Z",
      "author_association": "MEMBER",
      "body": "utACK 26d3faaa28c794b48df2a12cdb4a9a71de3d1a96",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-378965847",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWI2YjViODZlN2RhYjA1YmUzOGQ2MTQ4OTFkZDZlNjAzMWQwNGE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11b6b5b86e7dab05be38d614891dd6e6031d04a4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/11b6b5b86e7dab05be38d614891dd6e6031d04a4",
      "tree": {
        "sha": "3401eabbf1991c95c811a03984f8015429e39b0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3401eabbf1991c95c811a03984f8015429e39b0b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f0c6a7b0e47e03f848dc992d37fe209dd9c6975",
          "sha": "5f0c6a7b0e47e03f848dc992d37fe209dd9c6975",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5f0c6a7b0e47e03f848dc992d37fe209dd9c6975"
        }
      ],
      "message": "Move ChainNameFromCommandLine into ArgsManager and rename to GetChainName",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:02Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:00:00Z"
      },
      "sha": "11b6b5b86e7dab05be38d614891dd6e6031d04a4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzRkMzAzNDE1OGI2YjE5OTc3OWQ1ZGQyMThlMTU2MDQ3OThjYTA2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/834d3034158b6b199779d5dd218e15604798ca06",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/834d3034158b6b199779d5dd218e15604798ca06",
      "tree": {
        "sha": "dfc7ba00e4ef977a718aa5864237548a23dfef86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfc7ba00e4ef977a718aa5864237548a23dfef86"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11b6b5b86e7dab05be38d614891dd6e6031d04a4",
          "sha": "11b6b5b86e7dab05be38d614891dd6e6031d04a4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/11b6b5b86e7dab05be38d614891dd6e6031d04a4"
        }
      ],
      "message": "[tests] Add unit tests for GetChainName",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:01:00Z"
      },
      "sha": "834d3034158b6b199779d5dd218e15604798ca06"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDU4MTVhYWQwZWUwNjE0OTcyZjI4OGNiZDFjNjgzODZlODAxZDVk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d5815aad0ee0614972f288cbd1c68386e801d5d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6d5815aad0ee0614972f288cbd1c68386e801d5d",
      "tree": {
        "sha": "ddbe3bab22c6b8c98ccef97ef17ab88fa3b5c3c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddbe3bab22c6b8c98ccef97ef17ab88fa3b5c3c1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/834d3034158b6b199779d5dd218e15604798ca06",
          "sha": "834d3034158b6b199779d5dd218e15604798ca06",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/834d3034158b6b199779d5dd218e15604798ca06"
        }
      ],
      "message": "Separate out ReadConfigStream from ReadConfigFile",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:32Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:02:00Z"
      },
      "sha": "6d5815aad0ee0614972f288cbd1c68386e801d5d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowODdjNWQyMDQwMTVlNjQ2ZDY1Njk2MDA3NDE1ZDZlOTk4NzY0NjMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/087c5d204015e646d65696007415d6e998764631",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/087c5d204015e646d65696007415d6e998764631",
      "tree": {
        "sha": "ef411ea1e5b9f7d222cc5cd024a093c5bbfec5f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef411ea1e5b9f7d222cc5cd024a093c5bbfec5f3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d5815aad0ee0614972f288cbd1c68386e801d5d",
          "sha": "6d5815aad0ee0614972f288cbd1c68386e801d5d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6d5815aad0ee0614972f288cbd1c68386e801d5d"
        }
      ],
      "message": "ReadConfigStream: assume the stream is good",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:32Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:03:00Z"
      },
      "sha": "087c5d204015e646d65696007415d6e998764631"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI3ZjFjMjNlMDNjOGY4ZThiMDZlYTg2YTY0MGE2MmEwZjg3Njhj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
      "tree": {
        "sha": "1aabe796a723240886beab1e5118e4dd3b1481bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1aabe796a723240886beab1e5118e4dd3b1481bf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/087c5d204015e646d65696007415d6e998764631",
          "sha": "087c5d204015e646d65696007415d6e998764631",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/087c5d204015e646d65696007415d6e998764631"
        }
      ],
      "message": "[tests] Add unit tests for ReadConfigStream",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:32Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:04:00Z"
      },
      "sha": "fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjE3M2MyYmVjMzkwZDVhNDdmOThlN2JiZjY1NTlkNTBiZTM1ZjA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af173c2bec390d5a47f98e7bbf6559d50be35f07",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/af173c2bec390d5a47f98e7bbf6559d50be35f07",
      "tree": {
        "sha": "4a4b31c70886d88c6920c033db7d4a6c445c0ceb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a4b31c70886d88c6920c033db7d4a6c445c0ceb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
          "sha": "fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c"
        }
      ],
      "message": "[tests] Check GetChainName works with config entries",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:32Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:05:00Z"
      },
      "sha": "af173c2bec390d5a47f98e7bbf6559d50be35f07"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2E3MzNhOTlhNzViZGQwNGFkOTRkZjgzMGU1YmRjOGE2MDQwOTU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "tree": {
        "sha": "4b6b60ed983260f4f3219ad28825d209ff5a7957",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b6b60ed983260f4f3219ad28825d209ff5a7957"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af173c2bec390d5a47f98e7bbf6559d50be35f07",
          "sha": "af173c2bec390d5a47f98e7bbf6559d50be35f07",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/af173c2bec390d5a47f98e7bbf6559d50be35f07"
        }
      ],
      "message": "[tests] Add additional unit tests for -nofoo edge cases",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:39Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-04T05:26:33Z"
      },
      "sha": "77a733a99a75bdd04ad94df830e5bdc8a6040959"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1559460759,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU1OTQ2MDc1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559460759",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T18:50:58Z"
    },
    {
      "event": "commented",
      "id": 379042633,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTA0MjYzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379042633",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T19:00:45Z",
      "updated_at": "2018-04-05T19:00:45Z",
      "author_association": "MEMBER",
      "body": "Rebased due to conflict with #10244, and renamed ChainNameFromCommandLine to GetChainName. Not sure how useful the -track branch is since it's now got a merge with master, but it still works: https://github.com/ajtowns/bitcoin/commit/492bbcdc558ae0edae0e2beb49a50932c8d576c6 follows on from where the tracking branch left off, and matches this branches current head, 77a733a99a75bdd04ad94df830e5bdc8a6040959:\r\n\r\n```\r\n$ for a in netconf-refactor{,-track}; do git log -1 --pretty=\"%h -> %T\" $a; done\r\n77a733a99a -> 4b6b60ed983260f4f3219ad28825d209ff5a7957\r\n492bbcdc55 -> 4b6b60ed983260f4f3219ad28825d209ff5a7957\r\n```",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379042633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "added_to_project",
      "id": 1559544098,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQxNTU5NTQ0MDk4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559544098",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T19:36:16Z",
      "project_card": {
        "id": 8730658,
        "url": "https://api.github.com/projects/columns/cards/8730658",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 379055825,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTA1NTgyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379055825",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T19:49:30Z",
      "updated_at": "2018-04-05T19:49:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379055825",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "reviewed",
      "id": 109853188,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA5ODUzMTg4",
      "url": null,
      "actor": null,
      "commit_id": "087c5d204015e646d65696007415d6e998764631",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#pullrequestreview-109853188",
      "submitted_at": "2018-04-05T19:50:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
    },
    {
      "event": "commented",
      "id": 379056681,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTA1NjY4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379056681",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T19:52:58Z",
      "updated_at": "2018-04-05T19:52:58Z",
      "author_association": "MEMBER",
      "body": "utACK 77a733a99a75bdd04ad94df830e5bdc8a6040959, not too concerned about the nit.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379056681",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "commented",
      "id": 379056921,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTA1NjkyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379056921",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T19:53:53Z",
      "updated_at": "2018-04-05T19:53:53Z",
      "author_association": "MEMBER",
      "body": "ACK 77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379056921",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "commented",
      "id": 379102083,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTEwMjA4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379102083",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T23:03:30Z",
      "updated_at": "2018-04-05T23:06:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, this should also help my arg refactor a bit\r\nEDIT: utACK https://github.com/bitcoin/bitcoin/pull/12878/commits/77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379102083",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "commented",
      "id": 379397256,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTM5NzI1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379397256",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-06T22:03:47Z",
      "updated_at": "2018-04-06T22:03:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 77a733a",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379397256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "commented",
      "id": 379554354,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU1NDM1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379554354",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-08T14:23:25Z",
      "updated_at": "2018-04-08T14:23:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379554354",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "merged",
      "id": 1562622235,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTU2MjYyMjIzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1562622235",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "created_at": "2018-04-08T14:25:20Z"
    },
    {
      "event": "closed",
      "id": 1562622236,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTU2MjYyMjIzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1562622236",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-08T14:25:20Z"
    },
    {
      "event": "referenced",
      "id": 1562622249,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1NjI2MjIyNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1562622249",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "25c56cdbe748ec72c1d101c74602cca6bc82eee6",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25c56cdbe748ec72c1d101c74602cca6bc82eee6",
      "created_at": "2018-04-08T14:25:23Z"
    },
    {
      "event": "removed_from_project",
      "id": 1562755695,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MTU2Mjc1NTY5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1562755695",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-08T20:44:03Z",
      "project_card": {
        "id": 8730658,
        "url": "https://api.github.com/projects/columns/cards/8730658",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 110300281,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEwMzAwMjgx",
      "url": null,
      "actor": null,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#pullrequestreview-110300281",
      "submitted_at": "2018-04-08T21:10:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
    },
    {
      "event": "commented",
      "id": 379582936,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU4MjkzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379582936",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-08T21:10:58Z",
      "updated_at": "2018-04-08T21:10:58Z",
      "author_association": "MEMBER",
      "body": "post merge utACK 77a733a beside question",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379582936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12878"
    },
    {
      "event": "referenced",
      "id": 3284534829,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyODQ1MzQ4Mjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3284534829",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "33f45f0f2c46d928222cc85d62abc11042b1dee4",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/33f45f0f2c46d928222cc85d62abc11042b1dee4",
      "created_at": "2020-04-29T13:10:45Z"
    },
    {
      "event": "referenced",
      "id": 3291145072,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyOTExNDUwNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3291145072",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6ac5823423d75de8b19f51838d5602a83ee9d1b3",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/6ac5823423d75de8b19f51838d5602a83ee9d1b3",
      "created_at": "2020-04-30T20:06:03Z"
    },
    {
      "event": "referenced",
      "id": 3319805110,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzMTk4MDUxMTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3319805110",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "aaf5bf1a7e4c153a0df476d2ca0b93b3566ccdb5",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/aaf5bf1a7e4c153a0df476d2ca0b93b3566ccdb5",
      "created_at": "2020-05-09T22:36:22Z"
    },
    {
      "event": "referenced",
      "id": 4517982449,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1MTc5ODI0NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4517982449",
      "actor": {
        "login": "ckti",
        "id": 7046769,
        "node_id": "MDQ6VXNlcjcwNDY3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7046769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ckti",
        "html_url": "https://github.com/ckti",
        "followers_url": "https://api.github.com/users/ckti/followers",
        "following_url": "https://api.github.com/users/ckti/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ckti/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ckti/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ckti/subscriptions",
        "organizations_url": "https://api.github.com/users/ckti/orgs",
        "repos_url": "https://api.github.com/users/ckti/repos",
        "events_url": "https://api.github.com/users/ckti/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ckti/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9d81d10456101d29ca9588d80712fcbc3120213f",
      "commit_url": "https://api.github.com/repos/ckti-ioncore-current/ion/commits/9d81d10456101d29ca9588d80712fcbc3120213f",
      "created_at": "2021-03-28T10:03:24Z"
    },
    {
      "event": "referenced",
      "id": 4646784271,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2NDY3ODQyNzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4646784271",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0255df35a65c1b30667cc46e25a2460aa54a539e",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/0255df35a65c1b30667cc46e25a2460aa54a539e",
      "created_at": "2021-04-26T19:01:49Z"
    },
    {
      "event": "referenced",
      "id": 4962428092,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NjI0MjgwOTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4962428092",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4478a6e6771c81fe0358b987e655e4a5e399692d",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/4478a6e6771c81fe0358b987e655e4a5e399692d",
      "created_at": "2021-06-30T22:39:48Z"
    },
    {
      "event": "locked",
      "id": 5271795845,
      "node_id": "LOE_lADOABII584SiuQdzwAAAAE6OTiF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271795845",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:52:47Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179046912",
      "pull_request_review_id": 109214721,
      "id": 179046912,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTA0NjkxMg==",
      "diff_hunk": "@@ -265,6 +270,106 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n     BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n }\n \n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"    // negated edge cases in config behave very oddly\n+       \"noh=1\\n\"\n+       \"noi=1\\n\"\n+       \"i=1\\n\";\n+\n+    TestArgsManager test_args;\n+\n+    test_args.ReadConfigString(str_config);\n+    // expectation: a, b, ccc, d, fff, ggg end up in map\n+\n+    BOOST_CHECK(test_args.GetMapArgs().size() == 8);\n+    BOOST_CHECK(test_args.GetMapMultiArgs().size() == 8);\n+\n+    BOOST_CHECK(test_args.GetMapArgs().count(\"-a\")\n+                && test_args.GetMapArgs().count(\"-b\")\n+                && test_args.GetMapArgs().count(\"-ccc\")\n+                && test_args.GetMapArgs().count(\"-d\")\n+                && test_args.GetMapArgs().count(\"-fff\")\n+                && test_args.GetMapArgs().count(\"-ggg\")\n+                && test_args.GetMapArgs().count(\"-h\")\n+                && test_args.GetMapArgs().count(\"-i\")\n+               );\n+\n+    BOOST_CHECK(test_args.IsArgSet(\"-a\")\n+                && test_args.IsArgSet(\"-b\")\n+                && test_args.IsArgSet(\"-ccc\")\n+                && test_args.IsArgSet(\"-d\")\n+                && test_args.IsArgSet(\"-fff\")\n+                && test_args.IsArgSet(\"-ggg\")\n+                && test_args.IsArgSet(\"-h\")\n+                && test_args.IsArgSet(\"-i\")\n+                && !test_args.IsArgSet(\"-zzz\")\n+               );\n+\n+    BOOST_CHECK(test_args.GetArg(\"-a\", \"xxx\") == \"\"\n+                && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-ccc\", \"xxx\") == \"argument\"\n+                && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n+                && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n+                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n+               );\n+    BOOST_CHECK(1\n+                && test_args.GetArg(\"-h\", \"xxx\") == \"1\" ); // 1st value takes precedence\n+    BOOST_CHECK(1\n+                && test_args.GetArg(\"-i\", \"xxx\") == \"0\" ); // 1st value takes precedence\n+",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "0068900bf239993de7f4c124f53beaf28366294b",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, these probably should be merged back into the previous check\r\n",
      "created_at": "2018-04-04T07:22:37Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179046912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179046912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 363,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179157828",
      "pull_request_review_id": 109348348,
      "id": 179157828,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTE1NzgyOA==",
      "diff_hunk": "@@ -305,6 +307,12 @@ class ArgsManager\n     // been set. Also called directly in testing.\n     void ForceSetArg(const std::string& strArg, const std::string& strValue);\n \n+    /**\n+     * Looks for -regtest, -testnet and returns the appropriate BIP70 chain name.\n+     * @return CBaseChainParams::MAX_NETWORK_TYPES if an invalid combination is given. CBaseChainParams::MAIN by default.",
      "path": "src/util.h",
      "position": null,
      "original_position": 15,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment is wrong (since 55a89751faaada5598771d10401030e9e86eecbd when `MAX_NETWORK_TYPES` was removed). May as well remove it now that you're moving the function.",
      "created_at": "2018-04-04T14:22:26Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179157828",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179157828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179163873",
      "pull_request_review_id": 109348348,
      "id": 179163873,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTE2Mzg3Mw==",
      "diff_hunk": "@@ -735,35 +735,56 @@ fs::path GetConfigFile(const std::string& confPath)\n     return AbsPathForConfigVal(fs::path(confPath), false);\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigStream(std::istream& stream)\n {\n-    fs::ifstream streamConfig(GetConfigFile(confPath));\n-    if (!streamConfig.good())\n-        return; // No bitcoin.conf file is OK\n+    // assert(streamConfig.good());",
      "path": "src/util.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "remove comment?",
      "created_at": "2018-04-04T14:37:01Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179163873",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179163873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 740,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179166079",
      "pull_request_review_id": 109348348,
      "id": 179166079,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTE2NjA3OQ==",
      "diff_hunk": "@@ -253,16 +258,150 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Config test\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    testArgs.ParseParameters(1, (char**)argv_test);\n+    testArgs.ReadConfigString(conf_test);\n+\n+    // This was passed twice, second one overrides the negative setting,\n+    // but not the value.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Combined test\n+    const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n+    const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n+    testArgs.ParseParameters(3, (char**)combo_test_args);\n+    testArgs.ReadConfigString(combo_test_conf);\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-foo\").size() == 2\n+                && testArgs.GetArgs(\"-foo\").front() == \"0\"\n+                && testArgs.GetArgs(\"-foo\").back() == \"1\");\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-bar\").size() == 2\n+                && testArgs.GetArgs(\"-bar\").front() == \"\"\n+                && testArgs.GetArgs(\"-bar\").back() == \"0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"    // negated edge cases in config behave very oddly",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand this comment. Can you make it more explicit about what you mean, or remove?",
      "created_at": "2018-04-04T14:42:10Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179166079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179166079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 319,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179166647",
      "pull_request_review_id": 109348348,
      "id": 179166647,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTE2NjY0Nw==",
      "diff_hunk": "@@ -253,16 +258,150 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Config test\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    testArgs.ParseParameters(1, (char**)argv_test);\n+    testArgs.ReadConfigString(conf_test);\n+\n+    // This was passed twice, second one overrides the negative setting,\n+    // but not the value.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Combined test\n+    const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n+    const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n+    testArgs.ParseParameters(3, (char**)combo_test_args);\n+    testArgs.ReadConfigString(combo_test_conf);\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-foo\").size() == 2\n+                && testArgs.GetArgs(\"-foo\").front() == \"0\"\n+                && testArgs.GetArgs(\"-foo\").back() == \"1\");\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-bar\").size() == 2\n+                && testArgs.GetArgs(\"-bar\").front() == \"\"\n+                && testArgs.GetArgs(\"-bar\").back() == \"0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"    // negated edge cases in config behave very oddly\n+       \"noh=1\\n\"\n+       \"noi=1\\n\"\n+       \"i=1\\n\";\n+\n+    TestArgsManager test_args;\n+\n+    test_args.ReadConfigString(str_config);\n+    // expectation: a, b, ccc, d, fff, ggg end up in map",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "and `h` and `i`?",
      "created_at": "2018-04-04T14:43:44Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179166647",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179166647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179170959",
      "pull_request_review_id": 109348348,
      "id": 179170959,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTE3MDk1OQ==",
      "diff_hunk": "@@ -253,16 +258,150 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Config test\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    testArgs.ParseParameters(1, (char**)argv_test);\n+    testArgs.ReadConfigString(conf_test);\n+\n+    // This was passed twice, second one overrides the negative setting,\n+    // but not the value.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Combined test\n+    const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n+    const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n+    testArgs.ParseParameters(3, (char**)combo_test_args);\n+    testArgs.ReadConfigString(combo_test_conf);\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-foo\").size() == 2\n+                && testArgs.GetArgs(\"-foo\").front() == \"0\"\n+                && testArgs.GetArgs(\"-foo\").back() == \"1\");\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-bar\").size() == 2\n+                && testArgs.GetArgs(\"-bar\").front() == \"\"\n+                && testArgs.GetArgs(\"-bar\").back() == \"0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"    // negated edge cases in config behave very oddly\n+       \"noh=1\\n\"\n+       \"noi=1\\n\"\n+       \"i=1\\n\";\n+\n+    TestArgsManager test_args;\n+\n+    test_args.ReadConfigString(str_config);\n+    // expectation: a, b, ccc, d, fff, ggg end up in map\n+\n+    BOOST_CHECK(test_args.GetMapArgs().size() == 8);\n+    BOOST_CHECK(test_args.GetMapMultiArgs().size() == 8);\n+\n+    BOOST_CHECK(test_args.GetMapArgs().count(\"-a\")\n+                && test_args.GetMapArgs().count(\"-b\")\n+                && test_args.GetMapArgs().count(\"-ccc\")\n+                && test_args.GetMapArgs().count(\"-d\")\n+                && test_args.GetMapArgs().count(\"-fff\")\n+                && test_args.GetMapArgs().count(\"-ggg\")\n+                && test_args.GetMapArgs().count(\"-h\")\n+                && test_args.GetMapArgs().count(\"-i\")\n+               );\n+\n+    BOOST_CHECK(test_args.IsArgSet(\"-a\")\n+                && test_args.IsArgSet(\"-b\")\n+                && test_args.IsArgSet(\"-ccc\")\n+                && test_args.IsArgSet(\"-d\")\n+                && test_args.IsArgSet(\"-fff\")\n+                && test_args.IsArgSet(\"-ggg\")\n+                && test_args.IsArgSet(\"-h\")\n+                && test_args.IsArgSet(\"-i\")\n+                && !test_args.IsArgSet(\"-zzz\")\n+               );\n+\n+    BOOST_CHECK(test_args.GetArg(\"-a\", \"xxx\") == \"\"\n+                && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-ccc\", \"xxx\") == \"argument\"\n+                && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n+                && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n+                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-h\", \"xxx\") == \"1\" // 1st value takes precedence\n+                && test_args.GetArg(\"-i\", \"xxx\") == \"0\" // 1st value takes precedence\n+                && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n+               );\n+\n+    for (int i = 0; i < 2; i++) {",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is clearer in C++11:\r\n\r\n`    for (auto def : { false, true }) {`",
      "created_at": "2018-04-04T14:55:25Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179170959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179170959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179173614",
      "pull_request_review_id": 109348348,
      "id": 179173614,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTE3MzYxNA==",
      "diff_hunk": "@@ -253,16 +258,150 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Config test\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    testArgs.ParseParameters(1, (char**)argv_test);\n+    testArgs.ReadConfigString(conf_test);\n+\n+    // This was passed twice, second one overrides the negative setting,\n+    // but not the value.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Combined test\n+    const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n+    const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n+    testArgs.ParseParameters(3, (char**)combo_test_args);\n+    testArgs.ReadConfigString(combo_test_conf);\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-foo\").size() == 2\n+                && testArgs.GetArgs(\"-foo\").front() == \"0\"\n+                && testArgs.GetArgs(\"-foo\").back() == \"1\");\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-bar\").size() == 2\n+                && testArgs.GetArgs(\"-bar\").front() == \"\"\n+                && testArgs.GetArgs(\"-bar\").back() == \"0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"    // negated edge cases in config behave very oddly\n+       \"noh=1\\n\"\n+       \"noi=1\\n\"\n+       \"i=1\\n\";\n+\n+    TestArgsManager test_args;\n+\n+    test_args.ReadConfigString(str_config);\n+    // expectation: a, b, ccc, d, fff, ggg end up in map\n+\n+    BOOST_CHECK(test_args.GetMapArgs().size() == 8);\n+    BOOST_CHECK(test_args.GetMapMultiArgs().size() == 8);\n+\n+    BOOST_CHECK(test_args.GetMapArgs().count(\"-a\")\n+                && test_args.GetMapArgs().count(\"-b\")\n+                && test_args.GetMapArgs().count(\"-ccc\")\n+                && test_args.GetMapArgs().count(\"-d\")\n+                && test_args.GetMapArgs().count(\"-fff\")\n+                && test_args.GetMapArgs().count(\"-ggg\")\n+                && test_args.GetMapArgs().count(\"-h\")\n+                && test_args.GetMapArgs().count(\"-i\")\n+               );\n+\n+    BOOST_CHECK(test_args.IsArgSet(\"-a\")\n+                && test_args.IsArgSet(\"-b\")\n+                && test_args.IsArgSet(\"-ccc\")\n+                && test_args.IsArgSet(\"-d\")\n+                && test_args.IsArgSet(\"-fff\")\n+                && test_args.IsArgSet(\"-ggg\")\n+                && test_args.IsArgSet(\"-h\")\n+                && test_args.IsArgSet(\"-i\")\n+                && !test_args.IsArgSet(\"-zzz\")\n+               );\n+\n+    BOOST_CHECK(test_args.GetArg(\"-a\", \"xxx\") == \"\"\n+                && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-ccc\", \"xxx\") == \"argument\"\n+                && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n+                && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n+                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-h\", \"xxx\") == \"1\" // 1st value takes precedence\n+                && test_args.GetArg(\"-i\", \"xxx\") == \"0\" // 1st value takes precedence\n+                && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n+               );\n+\n+    for (int i = 0; i < 2; i++) {\n+        bool def = (i > 0);\n+        BOOST_CHECK(test_args.GetBoolArg(\"-a\", def)\n+                     && test_args.GetBoolArg(\"-b\", def)\n+                     && !test_args.GetBoolArg(\"-ccc\", def)\n+                     && !test_args.GetBoolArg(\"-d\", def)\n+                     && !test_args.GetBoolArg(\"-fff\", def)\n+                     && test_args.GetBoolArg(\"-ggg\", def)\n+                     && test_args.GetBoolArg(\"-h\", def)\n+                     && !test_args.GetBoolArg(\"-i\", def)\n+                     && test_args.GetBoolArg(\"-zzz\", def) == def\n+                   );\n+    }\n+\n+    BOOST_CHECK(test_args.GetArgs(\"-a\").size() == 1\n+                && test_args.GetArgs(\"-a\").front() == \"\");\n+    BOOST_CHECK(test_args.GetArgs(\"-ccc\").size() == 2\n+                && test_args.GetArgs(\"-ccc\").front() == \"argument\"\n+                && test_args.GetArgs(\"-ccc\").back() == \"multiple\");\n+    BOOST_CHECK(test_args.GetArgs(\"-fff\").size() == 1\n+                && test_args.GetArgs(\"-fff\").front() == \"0\");\n+    BOOST_CHECK(test_args.GetArgs(\"-nofff\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-h\").size() == 2",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 143,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why no: `    BOOST_CHECK(test_args.GetArgs(\"-ggg\").size() == 1);` ?",
      "created_at": "2018-04-04T15:02:16Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179173614",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179173614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179173942",
      "pull_request_review_id": 109348348,
      "id": 179173942,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTE3Mzk0Mg==",
      "diff_hunk": "@@ -253,16 +258,150 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Config test\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    testArgs.ParseParameters(1, (char**)argv_test);\n+    testArgs.ReadConfigString(conf_test);\n+\n+    // This was passed twice, second one overrides the negative setting,\n+    // but not the value.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Combined test\n+    const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n+    const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n+    testArgs.ParseParameters(3, (char**)combo_test_args);\n+    testArgs.ReadConfigString(combo_test_conf);\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-foo\").size() == 2\n+                && testArgs.GetArgs(\"-foo\").front() == \"0\"\n+                && testArgs.GetArgs(\"-foo\").back() == \"1\");\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-bar\").size() == 2\n+                && testArgs.GetArgs(\"-bar\").front() == \"\"\n+                && testArgs.GetArgs(\"-bar\").back() == \"0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"    // negated edge cases in config behave very oddly\n+       \"noh=1\\n\"\n+       \"noi=1\\n\"\n+       \"i=1\\n\";\n+\n+    TestArgsManager test_args;\n+\n+    test_args.ReadConfigString(str_config);\n+    // expectation: a, b, ccc, d, fff, ggg end up in map\n+\n+    BOOST_CHECK(test_args.GetMapArgs().size() == 8);\n+    BOOST_CHECK(test_args.GetMapMultiArgs().size() == 8);\n+\n+    BOOST_CHECK(test_args.GetMapArgs().count(\"-a\")\n+                && test_args.GetMapArgs().count(\"-b\")\n+                && test_args.GetMapArgs().count(\"-ccc\")\n+                && test_args.GetMapArgs().count(\"-d\")\n+                && test_args.GetMapArgs().count(\"-fff\")\n+                && test_args.GetMapArgs().count(\"-ggg\")\n+                && test_args.GetMapArgs().count(\"-h\")\n+                && test_args.GetMapArgs().count(\"-i\")\n+               );\n+\n+    BOOST_CHECK(test_args.IsArgSet(\"-a\")\n+                && test_args.IsArgSet(\"-b\")\n+                && test_args.IsArgSet(\"-ccc\")\n+                && test_args.IsArgSet(\"-d\")\n+                && test_args.IsArgSet(\"-fff\")\n+                && test_args.IsArgSet(\"-ggg\")\n+                && test_args.IsArgSet(\"-h\")\n+                && test_args.IsArgSet(\"-i\")\n+                && !test_args.IsArgSet(\"-zzz\")\n+               );\n+\n+    BOOST_CHECK(test_args.GetArg(\"-a\", \"xxx\") == \"\"\n+                && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-ccc\", \"xxx\") == \"argument\"\n+                && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n+                && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n+                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-h\", \"xxx\") == \"1\" // 1st value takes precedence\n+                && test_args.GetArg(\"-i\", \"xxx\") == \"0\" // 1st value takes precedence\n+                && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n+               );\n+\n+    for (int i = 0; i < 2; i++) {\n+        bool def = (i > 0);\n+        BOOST_CHECK(test_args.GetBoolArg(\"-a\", def)\n+                     && test_args.GetBoolArg(\"-b\", def)\n+                     && !test_args.GetBoolArg(\"-ccc\", def)\n+                     && !test_args.GetBoolArg(\"-d\", def)\n+                     && !test_args.GetBoolArg(\"-fff\", def)\n+                     && test_args.GetBoolArg(\"-ggg\", def)\n+                     && test_args.GetBoolArg(\"-h\", def)\n+                     && !test_args.GetBoolArg(\"-i\", def)\n+                     && test_args.GetBoolArg(\"-zzz\", def) == def\n+                   );\n+    }\n+\n+    BOOST_CHECK(test_args.GetArgs(\"-a\").size() == 1\n+                && test_args.GetArgs(\"-a\").front() == \"\");\n+    BOOST_CHECK(test_args.GetArgs(\"-ccc\").size() == 2\n+                && test_args.GetArgs(\"-ccc\").front() == \"argument\"\n+                && test_args.GetArgs(\"-ccc\").back() == \"multiple\");\n+    BOOST_CHECK(test_args.GetArgs(\"-fff\").size() == 1\n+                && test_args.GetArgs(\"-fff\").front() == \"0\");\n+    BOOST_CHECK(test_args.GetArgs(\"-nofff\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-h\").size() == 2\n+                && test_args.GetArgs(\"-h\").front() == \"1\"\n+                && test_args.GetArgs(\"-h\").back() == \"0\");\n+    BOOST_CHECK(test_args.GetArgs(\"-noh\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-i\").size() == 2\n+                && test_args.GetArgs(\"-i\").front() == \"0\"\n+                && test_args.GetArgs(\"-i\").back() == \"1\");\n+    BOOST_CHECK(test_args.GetArgs(\"-noi\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-zzz\").size() == 0);\n+\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-a\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-b\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-ccc\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-d\"));\n+    BOOST_CHECK(test_args.IsArgNegated(\"-fff\"));\n+    BOOST_CHECK(test_args.IsArgNegated(\"-ggg\")); // IsArgNegated==true when noggg=0",
      "path": "src/test/util_tests.cpp",
      "position": 162,
      "original_position": 158,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> IsArgNegated==true when noggg=0\r\n\r\nyuck. Can we change that?",
      "created_at": "2018-04-04T15:03:10Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179173942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179173942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 405,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179296164",
      "pull_request_review_id": 109515905,
      "id": 179296164,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTI5NjE2NA==",
      "diff_hunk": "@@ -253,16 +258,150 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Config test\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    testArgs.ParseParameters(1, (char**)argv_test);\n+    testArgs.ReadConfigString(conf_test);\n+\n+    // This was passed twice, second one overrides the negative setting,\n+    // but not the value.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Combined test\n+    const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n+    const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n+    testArgs.ParseParameters(3, (char**)combo_test_args);\n+    testArgs.ReadConfigString(combo_test_conf);\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-foo\").size() == 2\n+                && testArgs.GetArgs(\"-foo\").front() == \"0\"\n+                && testArgs.GetArgs(\"-foo\").back() == \"1\");\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-bar\").size() == 2\n+                && testArgs.GetArgs(\"-bar\").front() == \"\"\n+                && testArgs.GetArgs(\"-bar\").back() == \"0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"    // negated edge cases in config behave very oddly\n+       \"noh=1\\n\"\n+       \"noi=1\\n\"\n+       \"i=1\\n\";\n+\n+    TestArgsManager test_args;\n+\n+    test_args.ReadConfigString(str_config);\n+    // expectation: a, b, ccc, d, fff, ggg end up in map\n+\n+    BOOST_CHECK(test_args.GetMapArgs().size() == 8);\n+    BOOST_CHECK(test_args.GetMapMultiArgs().size() == 8);\n+\n+    BOOST_CHECK(test_args.GetMapArgs().count(\"-a\")\n+                && test_args.GetMapArgs().count(\"-b\")\n+                && test_args.GetMapArgs().count(\"-ccc\")\n+                && test_args.GetMapArgs().count(\"-d\")\n+                && test_args.GetMapArgs().count(\"-fff\")\n+                && test_args.GetMapArgs().count(\"-ggg\")\n+                && test_args.GetMapArgs().count(\"-h\")\n+                && test_args.GetMapArgs().count(\"-i\")\n+               );\n+\n+    BOOST_CHECK(test_args.IsArgSet(\"-a\")\n+                && test_args.IsArgSet(\"-b\")\n+                && test_args.IsArgSet(\"-ccc\")\n+                && test_args.IsArgSet(\"-d\")\n+                && test_args.IsArgSet(\"-fff\")\n+                && test_args.IsArgSet(\"-ggg\")\n+                && test_args.IsArgSet(\"-h\")\n+                && test_args.IsArgSet(\"-i\")\n+                && !test_args.IsArgSet(\"-zzz\")\n+               );\n+\n+    BOOST_CHECK(test_args.GetArg(\"-a\", \"xxx\") == \"\"\n+                && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-ccc\", \"xxx\") == \"argument\"\n+                && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n+                && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n+                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-h\", \"xxx\") == \"1\" // 1st value takes precedence\n+                && test_args.GetArg(\"-i\", \"xxx\") == \"0\" // 1st value takes precedence\n+                && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n+               );\n+\n+    for (int i = 0; i < 2; i++) {\n+        bool def = (i > 0);\n+        BOOST_CHECK(test_args.GetBoolArg(\"-a\", def)\n+                     && test_args.GetBoolArg(\"-b\", def)\n+                     && !test_args.GetBoolArg(\"-ccc\", def)\n+                     && !test_args.GetBoolArg(\"-d\", def)\n+                     && !test_args.GetBoolArg(\"-fff\", def)\n+                     && test_args.GetBoolArg(\"-ggg\", def)\n+                     && test_args.GetBoolArg(\"-h\", def)\n+                     && !test_args.GetBoolArg(\"-i\", def)\n+                     && test_args.GetBoolArg(\"-zzz\", def) == def\n+                   );\n+    }\n+\n+    BOOST_CHECK(test_args.GetArgs(\"-a\").size() == 1\n+                && test_args.GetArgs(\"-a\").front() == \"\");\n+    BOOST_CHECK(test_args.GetArgs(\"-ccc\").size() == 2\n+                && test_args.GetArgs(\"-ccc\").front() == \"argument\"\n+                && test_args.GetArgs(\"-ccc\").back() == \"multiple\");\n+    BOOST_CHECK(test_args.GetArgs(\"-fff\").size() == 1\n+                && test_args.GetArgs(\"-fff\").front() == \"0\");\n+    BOOST_CHECK(test_args.GetArgs(\"-nofff\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-h\").size() == 2\n+                && test_args.GetArgs(\"-h\").front() == \"1\"\n+                && test_args.GetArgs(\"-h\").back() == \"0\");\n+    BOOST_CHECK(test_args.GetArgs(\"-noh\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-i\").size() == 2\n+                && test_args.GetArgs(\"-i\").front() == \"0\"\n+                && test_args.GetArgs(\"-i\").back() == \"1\");\n+    BOOST_CHECK(test_args.GetArgs(\"-noi\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-zzz\").size() == 0);\n+\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-a\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-b\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-ccc\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-d\"));\n+    BOOST_CHECK(test_args.IsArgNegated(\"-fff\"));\n+    BOOST_CHECK(test_args.IsArgNegated(\"-ggg\")); // IsArgNegated==true when noggg=0",
      "path": "src/test/util_tests.cpp",
      "position": 162,
      "original_position": 158,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": 179173942,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's changed in #11862 (and easy to change on its own as well). I think it makes sense for this PR to just refactor/add tests rather than change functionality though.",
      "created_at": "2018-04-04T21:59:49Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179296164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179296164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 405,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179311284",
      "pull_request_review_id": 109533126,
      "id": 179311284,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTMxMTI4NA==",
      "diff_hunk": "@@ -253,16 +258,150 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Config test\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    testArgs.ParseParameters(1, (char**)argv_test);\n+    testArgs.ReadConfigString(conf_test);\n+\n+    // This was passed twice, second one overrides the negative setting,\n+    // but not the value.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Combined test\n+    const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n+    const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n+    testArgs.ParseParameters(3, (char**)combo_test_args);\n+    testArgs.ReadConfigString(combo_test_conf);\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-foo\").size() == 2\n+                && testArgs.GetArgs(\"-foo\").front() == \"0\"\n+                && testArgs.GetArgs(\"-foo\").back() == \"1\");\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-bar\").size() == 2\n+                && testArgs.GetArgs(\"-bar\").front() == \"\"\n+                && testArgs.GetArgs(\"-bar\").back() == \"0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"    // negated edge cases in config behave very oddly\n+       \"noh=1\\n\"\n+       \"noi=1\\n\"\n+       \"i=1\\n\";\n+\n+    TestArgsManager test_args;\n+\n+    test_args.ReadConfigString(str_config);\n+    // expectation: a, b, ccc, d, fff, ggg end up in map\n+\n+    BOOST_CHECK(test_args.GetMapArgs().size() == 8);\n+    BOOST_CHECK(test_args.GetMapMultiArgs().size() == 8);\n+\n+    BOOST_CHECK(test_args.GetMapArgs().count(\"-a\")\n+                && test_args.GetMapArgs().count(\"-b\")\n+                && test_args.GetMapArgs().count(\"-ccc\")\n+                && test_args.GetMapArgs().count(\"-d\")\n+                && test_args.GetMapArgs().count(\"-fff\")\n+                && test_args.GetMapArgs().count(\"-ggg\")\n+                && test_args.GetMapArgs().count(\"-h\")\n+                && test_args.GetMapArgs().count(\"-i\")\n+               );\n+\n+    BOOST_CHECK(test_args.IsArgSet(\"-a\")\n+                && test_args.IsArgSet(\"-b\")\n+                && test_args.IsArgSet(\"-ccc\")\n+                && test_args.IsArgSet(\"-d\")\n+                && test_args.IsArgSet(\"-fff\")\n+                && test_args.IsArgSet(\"-ggg\")\n+                && test_args.IsArgSet(\"-h\")\n+                && test_args.IsArgSet(\"-i\")\n+                && !test_args.IsArgSet(\"-zzz\")\n+               );\n+\n+    BOOST_CHECK(test_args.GetArg(\"-a\", \"xxx\") == \"\"\n+                && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-ccc\", \"xxx\") == \"argument\"\n+                && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n+                && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n+                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-h\", \"xxx\") == \"1\" // 1st value takes precedence\n+                && test_args.GetArg(\"-i\", \"xxx\") == \"0\" // 1st value takes precedence\n+                && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n+               );\n+\n+    for (int i = 0; i < 2; i++) {",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": 179170959,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it is. But no point to `auto` instead of `bool` :)",
      "created_at": "2018-04-04T23:19:10Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179311284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179311284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179330564",
      "pull_request_review_id": 109554929,
      "id": 179330564,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTMzMDU2NA==",
      "diff_hunk": "@@ -735,35 +735,55 @@ fs::path GetConfigFile(const std::string& confPath)\n     return AbsPathForConfigVal(fs::path(confPath), false);\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigStream(std::istream& stream)\n {\n-    fs::ifstream streamConfig(GetConfigFile(confPath));\n-    if (!streamConfig.good())\n-        return; // No bitcoin.conf file is OK\n+    LOCK(cs_args);\n \n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(stream, setOptions), end; it != end; ++it)\n     {\n-        LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegatedOption(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0)\n+            mapArgs[strKey] = strValue;\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n \n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegatedOption(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n-        }\n+void ArgsManager::ReadConfigFile(const std::string& confPath)\n+{\n+    fs::ifstream stream(GetConfigFile(confPath));\n+\n+    // ok to not have a config file\n+    if (stream.good()) {\n+        ReadConfigStream(stream);\n     }\n+\n     // If datadir is changed in .conf file:\n     ClearDatadirCache();\n     if (!fs::is_directory(GetDataDir(false))) {\n         throw std::runtime_error(strprintf(\"specified data directory \\\"%s\\\" does not exist.\", gArgs.GetArg(\"-datadir\", \"\").c_str()));\n     }\n }\n \n+std::string ArgsManager::ChainNameFromCommandLine() const",
      "path": "src/util.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "26d3faaa28c794b48df2a12cdb4a9a71de3d1a96",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could just call this `ChainName` given `gArgs` is all about the command line / config files already.",
      "created_at": "2018-04-05T01:34:05Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179330564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179330564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 773,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179332381",
      "pull_request_review_id": 109556961,
      "id": 179332381,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTMzMjM4MQ==",
      "diff_hunk": "@@ -735,35 +735,55 @@ fs::path GetConfigFile(const std::string& confPath)\n     return AbsPathForConfigVal(fs::path(confPath), false);\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigStream(std::istream& stream)\n {\n-    fs::ifstream streamConfig(GetConfigFile(confPath));\n-    if (!streamConfig.good())\n-        return; // No bitcoin.conf file is OK\n+    LOCK(cs_args);\n \n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(stream, setOptions), end; it != end; ++it)\n     {\n-        LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegatedOption(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0)\n+            mapArgs[strKey] = strValue;\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n \n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegatedOption(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n-        }\n+void ArgsManager::ReadConfigFile(const std::string& confPath)\n+{\n+    fs::ifstream stream(GetConfigFile(confPath));\n+\n+    // ok to not have a config file\n+    if (stream.good()) {\n+        ReadConfigStream(stream);\n     }\n+\n     // If datadir is changed in .conf file:\n     ClearDatadirCache();\n     if (!fs::is_directory(GetDataDir(false))) {\n         throw std::runtime_error(strprintf(\"specified data directory \\\"%s\\\" does not exist.\", gArgs.GetArg(\"-datadir\", \"\").c_str()));\n     }\n }\n \n+std::string ArgsManager::ChainNameFromCommandLine() const",
      "path": "src/util.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "26d3faaa28c794b48df2a12cdb4a9a71de3d1a96",
      "in_reply_to_id": 179330564,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ":+1:  Probably GetChainName() would be slightly more consistent...",
      "created_at": "2018-04-05T01:51:00Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179332381",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179332381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 773,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179492185",
      "pull_request_review_id": 109746157,
      "id": 179492185,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTQ5MjE4NQ==",
      "diff_hunk": "@@ -253,16 +258,150 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Config test\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    testArgs.ParseParameters(1, (char**)argv_test);\n+    testArgs.ReadConfigString(conf_test);\n+\n+    // This was passed twice, second one overrides the negative setting,\n+    // but not the value.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Combined test\n+    const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n+    const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n+    testArgs.ParseParameters(3, (char**)combo_test_args);\n+    testArgs.ReadConfigString(combo_test_conf);\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-foo\").size() == 2\n+                && testArgs.GetArgs(\"-foo\").front() == \"0\"\n+                && testArgs.GetArgs(\"-foo\").back() == \"1\");\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-bar\").size() == 2\n+                && testArgs.GetArgs(\"-bar\").front() == \"\"\n+                && testArgs.GetArgs(\"-bar\").back() == \"0\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"    // negated edge cases in config behave very oddly\n+       \"noh=1\\n\"\n+       \"noi=1\\n\"\n+       \"i=1\\n\";\n+\n+    TestArgsManager test_args;\n+\n+    test_args.ReadConfigString(str_config);\n+    // expectation: a, b, ccc, d, fff, ggg end up in map\n+\n+    BOOST_CHECK(test_args.GetMapArgs().size() == 8);\n+    BOOST_CHECK(test_args.GetMapMultiArgs().size() == 8);\n+\n+    BOOST_CHECK(test_args.GetMapArgs().count(\"-a\")\n+                && test_args.GetMapArgs().count(\"-b\")\n+                && test_args.GetMapArgs().count(\"-ccc\")\n+                && test_args.GetMapArgs().count(\"-d\")\n+                && test_args.GetMapArgs().count(\"-fff\")\n+                && test_args.GetMapArgs().count(\"-ggg\")\n+                && test_args.GetMapArgs().count(\"-h\")\n+                && test_args.GetMapArgs().count(\"-i\")\n+               );\n+\n+    BOOST_CHECK(test_args.IsArgSet(\"-a\")\n+                && test_args.IsArgSet(\"-b\")\n+                && test_args.IsArgSet(\"-ccc\")\n+                && test_args.IsArgSet(\"-d\")\n+                && test_args.IsArgSet(\"-fff\")\n+                && test_args.IsArgSet(\"-ggg\")\n+                && test_args.IsArgSet(\"-h\")\n+                && test_args.IsArgSet(\"-i\")\n+                && !test_args.IsArgSet(\"-zzz\")\n+               );\n+\n+    BOOST_CHECK(test_args.GetArg(\"-a\", \"xxx\") == \"\"\n+                && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-ccc\", \"xxx\") == \"argument\"\n+                && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n+                && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n+                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-h\", \"xxx\") == \"1\" // 1st value takes precedence\n+                && test_args.GetArg(\"-i\", \"xxx\") == \"0\" // 1st value takes precedence\n+                && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n+               );\n+\n+    for (int i = 0; i < 2; i++) {\n+        bool def = (i > 0);\n+        BOOST_CHECK(test_args.GetBoolArg(\"-a\", def)\n+                     && test_args.GetBoolArg(\"-b\", def)\n+                     && !test_args.GetBoolArg(\"-ccc\", def)\n+                     && !test_args.GetBoolArg(\"-d\", def)\n+                     && !test_args.GetBoolArg(\"-fff\", def)\n+                     && test_args.GetBoolArg(\"-ggg\", def)\n+                     && test_args.GetBoolArg(\"-h\", def)\n+                     && !test_args.GetBoolArg(\"-i\", def)\n+                     && test_args.GetBoolArg(\"-zzz\", def) == def\n+                   );\n+    }\n+\n+    BOOST_CHECK(test_args.GetArgs(\"-a\").size() == 1\n+                && test_args.GetArgs(\"-a\").front() == \"\");\n+    BOOST_CHECK(test_args.GetArgs(\"-ccc\").size() == 2\n+                && test_args.GetArgs(\"-ccc\").front() == \"argument\"\n+                && test_args.GetArgs(\"-ccc\").back() == \"multiple\");\n+    BOOST_CHECK(test_args.GetArgs(\"-fff\").size() == 1\n+                && test_args.GetArgs(\"-fff\").front() == \"0\");\n+    BOOST_CHECK(test_args.GetArgs(\"-nofff\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-h\").size() == 2\n+                && test_args.GetArgs(\"-h\").front() == \"1\"\n+                && test_args.GetArgs(\"-h\").back() == \"0\");\n+    BOOST_CHECK(test_args.GetArgs(\"-noh\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-i\").size() == 2\n+                && test_args.GetArgs(\"-i\").front() == \"0\"\n+                && test_args.GetArgs(\"-i\").back() == \"1\");\n+    BOOST_CHECK(test_args.GetArgs(\"-noi\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-zzz\").size() == 0);\n+\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-a\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-b\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-ccc\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-d\"));\n+    BOOST_CHECK(test_args.IsArgNegated(\"-fff\"));\n+    BOOST_CHECK(test_args.IsArgNegated(\"-ggg\")); // IsArgNegated==true when noggg=0",
      "path": "src/test/util_tests.cpp",
      "position": 162,
      "original_position": 158,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "7edc29f0ce7ba0ea64dc0d64afcdc05bb88e4440",
      "in_reply_to_id": 179173942,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sounds good. Keep this PR as refactor only and do behaviour changes in #11862.",
      "created_at": "2018-04-05T14:56:46Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179492185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179492185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 405,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179492489",
      "pull_request_review_id": 109746525,
      "id": 179492489,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTQ5MjQ4OQ==",
      "diff_hunk": "@@ -735,35 +735,55 @@ fs::path GetConfigFile(const std::string& confPath)\n     return AbsPathForConfigVal(fs::path(confPath), false);\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigStream(std::istream& stream)\n {\n-    fs::ifstream streamConfig(GetConfigFile(confPath));\n-    if (!streamConfig.good())\n-        return; // No bitcoin.conf file is OK\n+    LOCK(cs_args);\n \n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n+\n+    for (boost::program_options::detail::config_file_iterator it(stream, setOptions), end; it != end; ++it)\n     {\n-        LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegatedOption(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0)\n+            mapArgs[strKey] = strValue;\n+        mapMultiArgs[strKey].push_back(strValue);\n+    }\n+}\n \n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegatedOption(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n-        }\n+void ArgsManager::ReadConfigFile(const std::string& confPath)\n+{\n+    fs::ifstream stream(GetConfigFile(confPath));\n+\n+    // ok to not have a config file\n+    if (stream.good()) {\n+        ReadConfigStream(stream);\n     }\n+\n     // If datadir is changed in .conf file:\n     ClearDatadirCache();\n     if (!fs::is_directory(GetDataDir(false))) {\n         throw std::runtime_error(strprintf(\"specified data directory \\\"%s\\\" does not exist.\", gArgs.GetArg(\"-datadir\", \"\").c_str()));\n     }\n }\n \n+std::string ArgsManager::ChainNameFromCommandLine() const",
      "path": "src/util.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "26d3faaa28c794b48df2a12cdb4a9a71de3d1a96",
      "in_reply_to_id": 179330564,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree that `GetChainName()` is a better name. Can be done in this PR or a future PR.",
      "created_at": "2018-04-05T14:57:36Z",
      "updated_at": "2018-04-05T18:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179492489",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179492489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 773,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179581340",
      "pull_request_review_id": 109853188,
      "id": 179581340,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTU4MTM0MA==",
      "diff_hunk": "@@ -737,31 +737,31 @@ fs::path GetConfigFile(const std::string& confPath)\n \n void ArgsManager::ReadConfigStream(std::istream& stream)\n {\n-    if (!stream.good())",
      "path": "src/util.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "087c5d204015e646d65696007415d6e998764631",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Replace this with an assertion instead, even if just to self-document assumptions?",
      "created_at": "2018-04-05T19:50:15Z",
      "updated_at": "2018-04-05T19:50:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179581340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179581340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 740,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179961477",
      "pull_request_review_id": 110300281,
      "id": 179961477,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk2MTQ3Nw==",
      "diff_hunk": "@@ -258,16 +258,52 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the test case `util_GetBoolArgEdgeCases` you seem to be removing all calls to `GetBoolArg`. Is this intentional?",
      "created_at": "2018-04-08T21:10:20Z",
      "updated_at": "2018-04-08T21:10:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179961477",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179961477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 270,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179987090",
      "pull_request_review_id": 110328198,
      "id": 179987090,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk4NzA5MA==",
      "diff_hunk": "@@ -258,16 +258,52 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "original_commit_id": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "in_reply_to_id": 179961477,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah; I think the edge cases are more clearly tested with GetArg and a clearly distinct default value. The IsArgNegated/GetBoolArg cases are still tested in util_GetBoolArg (via -a and -b).",
      "created_at": "2018-04-09T04:55:21Z",
      "updated_at": "2018-04-09T04:55:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179987090",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179987090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12878"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 270,
      "side": "LEFT"
    }
  ]
}