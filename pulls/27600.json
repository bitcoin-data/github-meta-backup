{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
    "id": 1342708159,
    "node_id": "PR_kwDOABII585QCBm_",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27600",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27600.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27600.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
    "number": 27600,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "net: Allow inbound whitebind connections to more aggressively evict peers when slots are full",
    "user": {
      "login": "pinheadmz",
      "id": 2084648,
      "node_id": "MDQ6VXNlcjIwODQ2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pinheadmz",
      "html_url": "https://github.com/pinheadmz",
      "followers_url": "https://api.github.com/users/pinheadmz/followers",
      "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
      "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
      "repos_url": "https://api.github.com/users/pinheadmz/repos",
      "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Closes https://github.com/bitcoin/bitcoin/issues/8798\r\n\r\nUse case: I run a full node that accepts inbound connections and have a `whitebind` setting so my personal light client can always connect, even when `maxconnections` (and particularly all inbound slots) is already full.\r\n\r\nCurrently when connections are full, if we receive an inbound peer request, we look for a current connection to evict so the new peer can have a slot. To find an evict-able peer we go through all our peers and \"protect\" multiple categories of peers, then we evict the \"worst\" peer that is left unprotected. If there are no peers left to evict, the inbound connection is denied.\r\n\r\nWith this PR, if the inbound connection is on our whitelist we start the eviction process by selecting a random unprotected peer. Then we loop through all our current connections, removing protected peers from the evict-able list. If we end up protecting all our connections, the randomly chosen peer is evicted. This behavior is triggered by a new `force` flag.\r\n\r\nAll outbound and `noban` connections remain protected from eviction.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2023-05-08T19:59:30Z",
    "updated_at": "2023-06-02T16:35:02Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "34d9b8187b99a2a672b0322e72f1ee9003d0ff64",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "pinheadmz:whitebind-evict",
      "ref": "whitebind-evict",
      "sha": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 61248407,
        "node_id": "MDEwOlJlcG9zaXRvcnk2MTI0ODQwNw==",
        "name": "bitcoin",
        "full_name": "pinheadmz/bitcoin",
        "owner": {
          "login": "pinheadmz",
          "id": 2084648,
          "node_id": "MDQ6VXNlcjIwODQ2NDg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pinheadmz",
          "html_url": "https://github.com/pinheadmz",
          "followers_url": "https://api.github.com/users/pinheadmz/followers",
          "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
          "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
          "repos_url": "https://api.github.com/users/pinheadmz/repos",
          "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/pinheadmz/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/pinheadmz/bitcoin",
        "archive_url": "https://api.github.com/repos/pinheadmz/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/pinheadmz/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/pinheadmz/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/pinheadmz/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/pinheadmz/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/pinheadmz/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/pinheadmz/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/pinheadmz/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/pinheadmz/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/pinheadmz/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/pinheadmz/bitcoin/events",
        "forks_url": "https://api.github.com/repos/pinheadmz/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/pinheadmz/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/pinheadmz/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/pinheadmz/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/pinheadmz/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/pinheadmz/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/pinheadmz/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/pinheadmz/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/pinheadmz/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/pinheadmz/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:pinheadmz/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/pinheadmz/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/pinheadmz/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/pinheadmz/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/pinheadmz/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/pinheadmz/bitcoin/hooks",
        "svn_url": "https://github.com/pinheadmz/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 214423,
        "default_branch": "master2",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T18:37:08Z",
        "created_at": "2016-06-15T23:48:20Z",
        "updated_at": "2019-11-18T20:27:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "a13f3746dccd9c4ec16d6bfe9b33ebd26e3238e1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 626,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:29:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T07:34:31Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 69,
    "deletions": 7,
    "changed_files": 6,
    "commits": 4,
    "review_comments": 32,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 1538963935,
      "node_id": "IC_kwDOABII585burnf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1538963935",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T19:59:33Z",
      "updated_at": "2023-05-31T00:27:04Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1431340479) |\n| Stale ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1436822917) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25572](https://github.com/bitcoin/bitcoin/pull/25572) (refactor: Introduce EvictionManager and use it for the inbound eviction logic by dergoegge)\n* [#25268](https://github.com/bitcoin/bitcoin/pull/25268) (refactor: Introduce EvictionManager by dergoegge)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#issuecomment-1538963935",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600"
    },
    {
      "event": "renamed",
      "id": 9195239521,
      "node_id": "RTE_lADOABII585lYNKczwAAAAIkFDhh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9195239521",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T23:28:18Z",
      "rename": {
        "from": "Make peer eviction slightly more aggresive to make room for whitelisted inbound connections",
        "to": "Allow inbound whitebind connections to more aggresivey evict peers when slots are full"
      }
    },
    {
      "event": "renamed",
      "id": 9196976427,
      "node_id": "RTE_lADOABII585lYNKczwAAAAIkLrkr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9196976427",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T06:31:22Z",
      "rename": {
        "from": "Allow inbound whitebind connections to more aggresivey evict peers when slots are full",
        "to": "net: Allow inbound whitebind connections to more aggresivey evict peers when slots are full"
      }
    },
    {
      "event": "labeled",
      "id": 9196976707,
      "node_id": "LE_lADOABII585lYNKczwAAAAIkLrpD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9196976707",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T06:31:24Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 1423467785,
      "node_id": "PRR_kwDOABII585U2GUJ",
      "url": null,
      "actor": null,
      "commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, makes sense to prioritize whitelisted peers. Will review more in-depth soon.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1423467785",
      "submitted_at": "2023-05-11T21:58:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
    },
    {
      "event": "renamed",
      "id": 9233419398,
      "node_id": "RTE_lADOABII585lYNKczwAAAAImWsyG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9233419398",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T14:00:30Z",
      "rename": {
        "from": "net: Allow inbound whitebind connections to more aggresivey evict peers when slots are full",
        "to": "net: Allow inbound whitebind connections to more aggressively evict peers when slots are full"
      }
    },
    {
      "event": "reviewed",
      "id": 1426738328,
      "node_id": "PRR_kwDOABII585VCkyY",
      "url": null,
      "actor": null,
      "commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1426738328",
      "submitted_at": "2023-05-16T09:16:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
    },
    {
      "event": "reviewed",
      "id": 1428164155,
      "node_id": "PRR_kwDOABII585VIA47",
      "url": null,
      "actor": null,
      "commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1428164155",
      "submitted_at": "2023-05-16T09:40:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
    },
    {
      "event": "reviewed",
      "id": 1431340479,
      "node_id": "PRR_kwDOABII585VUIW_",
      "url": null,
      "actor": null,
      "commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nAs I suggested in the review club, an alternative, more simple approach would be to just pick a random peer after removing NoBan and outbound connections when in force-mode. Then, if at the end of the usual eviction algorithm, we don't have a evict-able peer, we would evict the random one instead.\r\nThis would make the code simpler (no need to change `EraseLastKElements` or keep track of `last`), and I don't really see a major downside:\r\n* The `EraseLastKElements` eviction criteria don't really seem to be sorted by priority anyway right now (because order doesn't matter so far), so evicting a peer that would've been protected by later calls doesn't seem better than evicting one that would've been protected by earlier ones.\r\n* Whitebind No-Ban peers are more trusted to begin with, but if they maliciously wanted to take over all inbound slots by repeatedly connecting to us on the whitebind address, they can do that anyway, whether the eviction is random or whether the current approach of the PR is used. So it's not clear to me what the extra benefit of the current approach over random eviction is.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1431340479",
      "submitted_at": "2023-05-17T18:44:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9273373839,
      "node_id": "HRFPE_lADOABII585lYNKczwAAAAIovHSP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273373839",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:18:09Z"
    },
    {
      "event": "commented",
      "id": 1552010405,
      "node_id": "IC_kwDOABII585cgcyl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1552010405",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:18:58Z",
      "updated_at": "2023-05-17T20:19:06Z",
      "author_association": "MEMBER",
      "body": "@stickies-v @mzumsande thanks for your review and feedback, I refactored the PR so we evict a random peer when forced if all other peers are protected. It is MUCH simpler ;-)\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#issuecomment-1552010405",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600"
    },
    {
      "event": "mentioned",
      "id": 9273380125,
      "node_id": "MEE_lADOABII585lYNKczwAAAAIovI0d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273380125",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:18:59Z"
    },
    {
      "event": "subscribed",
      "id": 9273380134,
      "node_id": "SE_lADOABII585lYNKczwAAAAIovI0m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273380134",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:18:59Z"
    },
    {
      "event": "mentioned",
      "id": 9273380148,
      "node_id": "MEE_lADOABII585lYNKczwAAAAIovI00",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273380148",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:18:59Z"
    },
    {
      "event": "subscribed",
      "id": 9273380160,
      "node_id": "SE_lADOABII585lYNKczwAAAAIovI1A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273380160",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T20:18:59Z"
    },
    {
      "event": "reviewed",
      "id": 1431107177,
      "node_id": "PRR_kwDOABII585VTPZp",
      "url": null,
      "actor": null,
      "commit_id": "c826187b5070ce89edcde0536183714a1c2e3207",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Light approach ACK c826187b5070ce89edcde0536183714a1c2e3207\r\n\r\nI think this random selection approach suggested by mzumsande is a more elegant approach. \"Light\" in approach ACK because I need to build more confidence that this doesn't introduce new attack vectors.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1431107177",
      "submitted_at": "2023-05-17T20:57:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9280372396,
      "node_id": "HRFPE_lADOABII585lYNKczwAAAAIpJz6s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9280372396",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:18:51Z"
    },
    {
      "event": "commented",
      "id": 1553133230,
      "node_id": "IC_kwDOABII585cku6u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553133230",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:19:18Z",
      "updated_at": "2023-05-18T14:19:18Z",
      "author_association": "MEMBER",
      "body": "Thanks @stickies-v nits addressed! 🙏 ",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#issuecomment-1553133230",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600"
    },
    {
      "event": "mentioned",
      "id": 9280377296,
      "node_id": "MEE_lADOABII585lYNKczwAAAAIpJ1HQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9280377296",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:19:19Z"
    },
    {
      "event": "subscribed",
      "id": 9280377314,
      "node_id": "SE_lADOABII585lYNKczwAAAAIpJ1Hi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9280377314",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:19:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9280434050,
      "node_id": "HRFPE_lADOABII585lYNKczwAAAAIpKC-C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9280434050",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:24:54Z"
    },
    {
      "event": "labeled",
      "id": 9280434970,
      "node_id": "LE_lADOABII585lYNKczwAAAAIpKDMa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9280434970",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:25:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1436822917,
      "node_id": "PRR_kwDOABII585VpC2F",
      "url": null,
      "actor": null,
      "commit_id": "96b513f605fb2df441b66da583056b1c8acd4dbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 96b513f605fb2df441b66da583056b1c8acd4dbc, but I think the first commit should be removed from this PR, I think it's an accident?\r\n\r\nI think the code is good and suits the intent of the PR well. My only concern is about the potential footgun introduced, even if it is relatively mild. Anyone running bitcoind with `whitebind=0.0.0.0:<port>` will now be vulnerable to having all their inbound non-whitelisted slots taken over by an attacker that has figured out what the whitelisted port is. It doesn't seem like a huge concern, given that:\r\n- it only affects inbound connections, which we already assume to be more susceptible to these kinds of attacks, and\r\n- it does require the user to manually whitebind to `0.0.0.0`\r\n\r\nbut I just wanted to flag it here anyway in case it is actually more serious than I see it to be.\r\n\r\nAlso, this seems like behaviour change that would benefit from a mention in the release notes?",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1436822917",
      "submitted_at": "2023-05-22T18:19:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3YjdlZWQ5YzgzNWE0ZjVjZmE0MWM2OTQ5OGE3MjQ3NzFlZmU5Mzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7b7eed9c835a4f5cfa41c69498a724771efe938",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a7b7eed9c835a4f5cfa41c69498a724771efe938",
      "tree": {
        "sha": "3acb9dfd2c21ea6e091539263306201002c6e2c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3acb9dfd2c21ea6e091539263306201002c6e2c1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3acb9dfd2c21ea6e091539263306201002c6e2c1\nparent 51c050787fd6bcd016969dd7e245818ebd110b67\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1684353541 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1684948654 -0400\n\neviction: track one random unprotected node to evict if forced\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmRuRrIACgkQ5+KYS2KJ\nyToGng//RJwF39DrBT6ikm3rUf96MyjQ/RUE0Oii+nez8Bfpqi8jQzWZbc0s8RRG\n0bLDMoflrE1A0RyPeAG/vR1rPYC7OSs0tH0Mwhf8FheoYzM2wTNEafS8zBq2mRcM\n6u+a2SsHxi5+PLR6OvkD77h8HyK72e1UVuOdK+SXpCjRmo7p7XnCoY3gtFGqzPwS\n56LBF3JEfrj/KWzZMRr/kqyHMrk9RYxe1rrA35kIWVo35wRICFx87VwoiMzDrvEc\n4c/uC1UciQ/MV6J/S6ZyuKPQtxzZmrM3W+FZcsfg3PGQDpfEzKbx7pEcm+ipVnCB\nQSSdIsXNzpPqOhj+EjbwAniTvBRQb94CszKqIPPwRyPoWkX7b9B9kEQleN2p7wLl\nWztz0nC4kuPiNri8onUOsIEr57VnzOQTG9Dfew0mMlQt+fPqVJJXvpoH+7FNv24o\ngtxSVwB6wfXCEAi6EhsSPVhzq3UiYU0MrlaLMcOIBHk0dyADnc/2JKIZT52+stty\nJCfv5xups75r1w4gZWuoWkSoou0q/B82uQoqC6tB3vquEVIHC2U35HAYYfVZtuIB\nNsdpwJSYyeQMyaprWGW61pyaUCgoeaWXcQq00A7FHMC9AfIB6hbTjjgLr5FfnYh8\nm3xuh4DDXiUh4RjyJR+fwTUuuVydvm+ZUFVP0SJqzptR3XY6vnE=\n=Ftke\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51c050787fd6bcd016969dd7e245818ebd110b67",
          "sha": "51c050787fd6bcd016969dd7e245818ebd110b67",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/51c050787fd6bcd016969dd7e245818ebd110b67"
        }
      ],
      "message": "eviction: track one random unprotected node to evict if forced",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-24T17:17:34Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-17T19:59:01Z"
      },
      "sha": "a7b7eed9c835a4f5cfa41c69498a724771efe938"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1YmJhMGIzOWRlMDkwZDM5MzVhNDdlMGFkZmE5OTg2MjhlMzE0NmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95bba0b39de090d3935a47e0adfa998628e3146a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/95bba0b39de090d3935a47e0adfa998628e3146a",
      "tree": {
        "sha": "78f1810a43ef36423332e9984e84c469f79a78f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78f1810a43ef36423332e9984e84c469f79a78f4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 78f1810a43ef36423332e9984e84c469f79a78f4\nparent a7b7eed9c835a4f5cfa41c69498a724771efe938\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1683574924 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1684948658 -0400\n\nnet: make room for whitebind inbound connections by evicting harder\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmRuRrIACgkQ5+KYS2KJ\nyTpjEQ//ZkmFxyS9dxCglyvgClNcuATvW8fryPi7dwJ7aLr8Q96E94FrUnf7dyE0\ndiWDZq02pdzD1+SsvuEZGuHzVjBCzbNgju+iJ3uCdVytuYqg0POYn7Ls1wF1J2th\nphngod8i9ShmNgDGZ0VwWSADUu9uUjk+Qt0W7qsP7D+ANIVa5TcSJSDqke0iM13U\nfDnLNxMT+UO0p3+tzT11GgIsqGjkdxWewGwRQ91s6sHrbYpehMZSQp8rOgJHBaw9\ng60HakWfVuPr3smAyezgdlrOk5yRAr1meNy5xmG35V+9Cmbcb+8KzfoJgBFURQ1A\nR/8Oh/AurGlQ1edu+rMQYqya94Z7QwbFtyBZf5n8Vy2uBahpF6a3cw19tC8ut1A9\noINdzNynuoJEuKVvV17MtvgvYwS/viD+160iRF/VORMLRH2KBWD3/MZXkE+8rrBK\nhsuHFTHCKQfx7iJchG7FHGS0gY5Ncxqn2TK3WNpqXTkYhYvCWXsdhMQ70YoTjn+Z\np8CA09kBAU5B5lhAGl5orU6tBqvbwDlBuukMFSf3MgsjlvRIb3oYwWkUW1CGwIPT\nv/cyi5xTHGGNM8jTlW2CUK9QPVZ0mvkSl7W4+0lkp0ifDksmwF94c8WOuUyehiSZ\nAjAbtsgQK7M/8Wayn9zgWpoe6xUr7+u/FB1I0USU5E5wqziMS9k=\n=PYwX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7b7eed9c835a4f5cfa41c69498a724771efe938",
          "sha": "a7b7eed9c835a4f5cfa41c69498a724771efe938",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a7b7eed9c835a4f5cfa41c69498a724771efe938"
        }
      ],
      "message": "net: make room for whitebind inbound connections by evicting harder",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-24T17:17:38Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-08T19:42:04Z"
      },
      "sha": "95bba0b39de090d3935a47e0adfa998628e3146a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc0Mjc3ZDAxNmZlYWM1ZTMyYTE1MDg0MjUwMjQwNmQ3MzU0YTk3OWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74277d016feac5e32a150842502406d7354a979f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/74277d016feac5e32a150842502406d7354a979f",
      "tree": {
        "sha": "c8ee2529dfa6c4ce956d6d829da277719c7ba61c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8ee2529dfa6c4ce956d6d829da277719c7ba61c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c8ee2529dfa6c4ce956d6d829da277719c7ba61c\nparent 95bba0b39de090d3935a47e0adfa998628e3146a\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1683574970 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1684948658 -0400\n\ntest: cover whitebind inbound success even when connections are full\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmRuRrIACgkQ5+KYS2KJ\nyTqBDQ/7BRJu1aTNXUTPakYBcDtRYG66l/UKBOZnPT2vOskQ9D6MIMAMRWslHh2/\nm4vhCMmxlA7JK5evQSsLBA0jmaHACUXScw3M/OMxpa44aa8UQCXpKfkgmKL6P8jY\nEo+nLG1NyEgvPVzxr+mNabglc+WTigTkJ4RbMDav4NPAqWWtrWg8DsoybZJy0s5S\n4Ve+D0hAZCbJSDrvsF3yAONE1xlE1oRW58WOcRcZyPqI6TrqsWwfLxjbS9wkh3lI\noTTVsEsnBiV74M8pw3njm2B/gzQ9Z0Kufydk+QUQ9yfVFL2Sj66EA1QE4KD7nykR\nkNMe6byRGODCBVlYBLsQdg5lFXg1YqLasQ+Y1CgTUFeQJ/SGio/SPPc5EbgWJjz0\nqi601RWrW6dnc5Aw44xbaeFe8VcmwjnzES4ViDZyZkFiiR5AteA2N4b0IJx63uwz\nrfY3mekMW6kvOd2uT4TM0fDalKDDwZcMIvIlURVBvjvmt8ZPWldIdKrGiu6QRP2s\nC6HgUzZS6uqE/IKYnwDztOGOFI6mAlzp8I4BGMH7RIAES1U8Ln6f9uytKaS3rJbH\nueonat7W+gPe2xPiem+UMHuP81STuwcS+XsOEr8g4CYp1SWqPRG/A59WGgl5/iFD\nRg6/nnKaWLClXe/IcqUGHf8wd9TGsnl7roPu2ivjGLZ5cnEslHY=\n=LHAY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95bba0b39de090d3935a47e0adfa998628e3146a",
          "sha": "95bba0b39de090d3935a47e0adfa998628e3146a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/95bba0b39de090d3935a47e0adfa998628e3146a"
        }
      ],
      "message": "test: cover whitebind inbound success even when connections are full",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-24T17:17:38Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-08T19:42:50Z"
      },
      "sha": "74277d016feac5e32a150842502406d7354a979f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNzhmYzU0M2NkNDZlZTFjNzE4MWVjZjZiNjk2YzI4OTJiOWY4ZDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "tree": {
        "sha": "c5a344fe4426a348287a1d52397460e5d9a2400f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5a344fe4426a348287a1d52397460e5d9a2400f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c5a344fe4426a348287a1d52397460e5d9a2400f\nparent 74277d016feac5e32a150842502406d7354a979f\nauthor Matthew Zipkin <pinheadmz@gmail.com> 1684939415 -0400\ncommitter Matthew Zipkin <pinheadmz@gmail.com> 1684948658 -0400\n\ndoc: add release note for #27600\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmRuRrIACgkQ5+KYS2KJ\nyTr8OhAAwdXW6eArencTKCHebeP8eJtiovv0xJ1k8/za853xUklZzNwDVrvbxYT4\nvnyrMeeYt9n1QVGOsVX+/ror6dM2i/De7ZRhLtmIwPjbO1diMefR5/rC22LVliBd\n8yW19Su4ntjqjhpr/fXclaxxJM1rIpL2nbXOLPGcUqy6BSKSr+lDayo7la//Nihq\nsldD9WfYfwuB1ZifV8hF2AJKwx3J9jy7/K1R2mpDaoR8y7PvJnh9085oyb7LrptN\nhMsiybELFz+8NIPU7ybsdg0rgv8C0AKtGlp5EZWzksKP88pXURnwxPziHB8aJxY4\nxCxoHHr+c5TeGPBnN1xbu3drGmdVvZ+OVUJ6Ky5mgenZxU/0DA4hBEF3ppmPobe1\nppfYWfO2IKLceHwD7A2+HMiEJVBn+kuqYWbNOUJMQ2L+V/SE/Kq369pd10d7ejRf\nPAVrGIaDhQL9y7RPt6x+cwpAmEqZsgoBcNIvRqVxQzI7XOaG+w0Jteg2JryhA3oN\nH6Wl3ffPGHeFA9B5u+M2UtFcUEgKlIRwF5npzgTAuSAEvAzcqf3tf/g057oHNCv0\na8ZFNwoJedRJEyBPU/mDeXWzVUAm3jOBIFkBu+1ol+ZHnsD53qoeBvi/ctEDM/0Z\n2OLToDjMdnKbLwgNDB1o14AnebBipqFPru/ZSoaVY78vxqZzGKk=\n=NSyJ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74277d016feac5e32a150842502406d7354a979f",
          "sha": "74277d016feac5e32a150842502406d7354a979f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/74277d016feac5e32a150842502406d7354a979f"
        }
      ],
      "message": "doc: add release note for #27600",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-24T17:17:38Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@gmail.com",
        "date": "2023-05-24T14:43:35Z"
      },
      "sha": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9330654928,
      "node_id": "HRFPE_lADOABII585lYNKczwAAAAIsJn7Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9330654928",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T17:17:50Z"
    },
    {
      "event": "review_requested",
      "id": 9331741038,
      "node_id": "RRE_lADOABII585lYNKczwAAAAIsNxFu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9331741038",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T19:14:14Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1442800192,
      "node_id": "PRR_kwDOABII585V_2JA",
      "url": null,
      "actor": null,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1442800192",
      "submitted_at": "2023-05-24T21:52:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
    },
    {
      "event": "unlabeled",
      "id": 9335706848,
      "node_id": "UNLE_lADOABII585lYNKczwAAAAIsc5Tg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9335706848",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T06:04:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191709646",
      "pull_request_review_id": 1423467785,
      "id": 1191709646,
      "node_id": "PRRC_kwDOABII585HCAvO",
      "diff_hunk": "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit\r\n```suggestion\r\n        return force ? std::make_optional(last_out.id) : std::nullopt;\r\n```",
      "created_at": "2023-05-11T21:34:04Z",
      "updated_at": "2023-05-11T21:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1191709646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191709646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 230,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191732820",
      "pull_request_review_id": 1423506632,
      "id": 1191732820,
      "node_id": "PRRC_kwDOABII585HCGZU",
      "diff_hunk": "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": 1191709646,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure, but IIRC last time I looked RVO wasn't working with a ternary.",
      "created_at": "2023-05-11T22:01:20Z",
      "updated_at": "2023-05-11T22:01:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1191732820",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191732820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 230,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1193951897",
      "pull_request_review_id": 1426738328,
      "id": 1193951897,
      "node_id": "PRRC_kwDOABII585HKkKZ",
      "diff_hunk": "@@ -73,15 +73,22 @@ struct CompareNodeNetworkTime {\n     };\n };\n \n-//! Sort an array by the specified comparator, then erase the last K elements where predicate is true.\n-template <typename T, typename Comparator>\n-static void EraseLastKElements(\n-    std::vector<T>& elements, Comparator comparator, size_t k,\n+//! Sort an array of NodeEvictionCandidates by the specified comparator, then erase the last K elements where predicate is true.\n+//! Return the last element removed if any.\n+static std::optional<NodeEvictionCandidate> EraseLastKElements(\n+    std::vector<NodeEvictionCandidate>& elements, std::function<bool(NodeEvictionCandidate, NodeEvictionCandidate)> comparator, size_t k,\n     std::function<bool(const NodeEvictionCandidate&)> predicate = [](const NodeEvictionCandidate& n) { return true; })\n {\n     std::sort(elements.begin(), elements.end(), comparator);\n     size_t eraseSize = std::min(k, elements.size());\n+\n+    // Return the last erased element\n+    std::optional<NodeEvictionCandidate> last_out{std::nullopt};\n+    if (eraseSize > 0) last_out = elements.at(elements.size() - eraseSize);",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure this is correct, it ignores the checking of `predicate`?",
      "created_at": "2023-05-15T14:46:47Z",
      "updated_at": "2023-05-16T09:16:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1193951897",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1193951897"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194849842",
      "pull_request_review_id": 1426738328,
      "id": 1194849842,
      "node_id": "PRRC_kwDOABII585HN_Yy",
      "diff_hunk": "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "An alternative approach to the duplication of these lines is to just store all the return values in a vector, like:\r\n\r\n```c++\r\nstd::vector<std::optional<NodeEvictionCandidate>> removed;\r\n...\r\nremoved.emplace_back(EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4));\r\n```\r\n\r\nand then just return the last one at the end?",
      "created_at": "2023-05-16T09:01:23Z",
      "updated_at": "2023-05-16T09:16:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194849842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194849842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194857629",
      "pull_request_review_id": 1426738328,
      "id": 1194857629,
      "node_id": "PRRC_kwDOABII585HOBSd",
      "diff_hunk": "@@ -73,15 +73,22 @@ struct CompareNodeNetworkTime {\n     };\n };\n \n-//! Sort an array by the specified comparator, then erase the last K elements where predicate is true.\n-template <typename T, typename Comparator>\n-static void EraseLastKElements(\n-    std::vector<T>& elements, Comparator comparator, size_t k,\n+//! Sort an array of NodeEvictionCandidates by the specified comparator, then erase the last K elements where predicate is true.\n+//! Return the last element removed if any.\n+static std::optional<NodeEvictionCandidate> EraseLastKElements(",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Returning just the last removed element feels like a very bespoke and perhaps unintuitive interface to me. I know we don't currently need it, but perhaps it's worth generalizing this a bit more and returning all the removed elements instead of just the last one? For the callsite, it's trivial to keep just the last one? Just thinking out loud, perhaps this is difficult to do without an unacceptable overhead in terms of allocations etc.",
      "created_at": "2023-05-16T09:07:36Z",
      "updated_at": "2023-05-16T09:16:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194857629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194857629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194860446",
      "pull_request_review_id": 1426738328,
      "id": 1194860446,
      "node_id": "PRRC_kwDOABII585HOB-e",
      "diff_hunk": "@@ -925,7 +925,7 @@ bool CConnman::AttemptToEvictConnection()\n             vEvictionCandidates.push_back(candidate);\n         }\n     }\n-    const std::optional<NodeId> node_id_to_evict = SelectNodeToEvict(std::move(vEvictionCandidates));\n+    const std::optional<NodeId> node_id_to_evict = SelectNodeToEvict(std::move(vEvictionCandidates), force);",
      "path": "src/net.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit (and in quite a few other places):\r\n```suggestion\r\n    const std::optional<NodeId> node_id_to_evict{SelectNodeToEvict(std::move(vEvictionCandidates), force)};\r\n```",
      "created_at": "2023-05-16T09:09:56Z",
      "updated_at": "2023-05-16T09:16:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194860446",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194860446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 928,
      "original_line": 928,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194866624",
      "pull_request_review_id": 1426738328,
      "id": 1194866624,
      "node_id": "PRRC_kwDOABII585HODfA",
      "diff_hunk": "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 122,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "All the `last_out` assignments are behind an `if` condition, I think this theoretically can be a zero-initialized `NodeEvictionCandidate`?",
      "created_at": "2023-05-16T09:14:49Z",
      "updated_at": "2023-05-16T09:16:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194866624",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194866624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194897930",
      "pull_request_review_id": 1428164155,
      "id": 1194897930,
      "node_id": "PRRC_kwDOABII585HOLIK",
      "diff_hunk": "@@ -982,7 +982,7 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    bool AttemptToEvictConnection(bool force);",
      "path": "src/net.h",
      "position": 11,
      "original_position": 5,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it would be nice to document the effect of `force` both here and for `SelectNodeToEvict`",
      "created_at": "2023-05-16T09:40:06Z",
      "updated_at": "2023-05-16T09:40:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194897930",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194897930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 993,
      "original_line": 993,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195276803",
      "pull_request_review_id": 1428756837,
      "id": 1195276803,
      "node_id": "PRRC_kwDOABII585HPnoD",
      "diff_hunk": "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": 1191709646,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not really familiar with this stuff, but that seems to be an MSVC bug? https://stackoverflow.com/questions/55152552/visual-studio-not-performing-rvo-when-ternary-operator-is-used-and-move-copy-cto\r\n\r\nWe do ternary operators in plenty of places, don't think we need to workaround this?",
      "created_at": "2023-05-16T14:42:16Z",
      "updated_at": "2023-05-16T14:42:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1195276803",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195276803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 230,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195757487",
      "pull_request_review_id": 1429544123,
      "id": 1195757487,
      "node_id": "PRRC_kwDOABII585HRc-v",
      "diff_hunk": "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": 1191709646,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does RVO even apply here? I thought it applies to complex structures, a large vector being the canonical example, where we don't want to copy every element. But here we're just returning a `NodeId` which is a `int64_t`, wrapped by `std::optional`. I don't think there's any savings by moving instead of copying one of these.",
      "created_at": "2023-05-16T22:48:35Z",
      "updated_at": "2023-05-16T22:48:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1195757487",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195757487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 230,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196896354",
      "pull_request_review_id": 1431107177,
      "id": 1196896354,
      "node_id": "PRRC_kwDOABII585HVzBi",
      "diff_hunk": "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "in_reply_to_id": 1191709646,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, good point @LarryRuane. I didn't realize `NodeId` was just a typedef for `int64_t`. I think that entirely resolves it indeed.",
      "created_at": "2023-05-17T18:13:40Z",
      "updated_at": "2023-05-17T20:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1196896354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196896354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 230,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197024384",
      "pull_request_review_id": 1431107177,
      "id": 1197024384,
      "node_id": "PRRC_kwDOABII585HWSSA",
      "diff_hunk": "@@ -175,14 +176,22 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Hang on to one random node to evict if forced\n+    std::optional<NodeId> force_evict;\n+    if (vEvictionCandidates.size() > 0) {",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "c826187b5070ce89edcde0536183714a1c2e3207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This block can be skipped if `!force`\r\n\r\n```suggestion\r\n    if (vEvictionCandidates.size() > 0 && force) {\r\n```",
      "created_at": "2023-05-17T20:34:01Z",
      "updated_at": "2023-05-17T20:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197024384",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197024384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197025555",
      "pull_request_review_id": 1431107177,
      "id": 1197025555,
      "node_id": "PRRC_kwDOABII585HWSkT",
      "diff_hunk": "@@ -175,14 +176,22 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Hang on to one random node to evict if forced\n+    std::optional<NodeId> force_evict;\n+    if (vEvictionCandidates.size() > 0) {\n+        FastRandomContext rng;\n+        size_t randpos = rng.randrange(vEvictionCandidates.size());",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "c826187b5070ce89edcde0536183714a1c2e3207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n        size_t randpos{FastRandomContext().randrange(vEvictionCandidates.size())};\r\n```",
      "created_at": "2023-05-17T20:35:04Z",
      "updated_at": "2023-05-17T20:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197025555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197025555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 190,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197030985",
      "pull_request_review_id": 1431107177,
      "id": 1197030985,
      "node_id": "PRRC_kwDOABII585HWT5J",
      "diff_hunk": "@@ -204,7 +213,8 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // or disadvantaged characteristics.\n     ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n \n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    if (vEvictionCandidates.empty())\n+        return force ? force_evict : std::nullopt;",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "c826187b5070ce89edcde0536183714a1c2e3207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since `force_evict` is already an `optional` defaulting to `nullopt`, this can be simplified in conjunction with [my other suggestion](https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197024384).\r\n```suggestion\r\n    if (vEvictionCandidates.empty()) return force_evict;\r\n```",
      "created_at": "2023-05-17T20:41:40Z",
      "updated_at": "2023-05-17T21:01:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197030985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197030985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 216,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197031821",
      "pull_request_review_id": 1431107177,
      "id": 1197031821,
      "node_id": "PRRC_kwDOABII585HWUGN",
      "diff_hunk": "@@ -39,7 +39,7 @@ struct NodeEvictionCandidate {\n  * ratios of desirable or disadvantaged peers. If any eviction candidates\n  * remain, the selection logic chooses a peer to evict.\n  */\n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates);\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force = false);",
      "path": "src/node/eviction.h",
      "position": 8,
      "original_position": 5,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "c826187b5070ce89edcde0536183714a1c2e3207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Documenting the `force` parameter (or linking to `AttemptToEvictConnection`) would be helpful I think.",
      "created_at": "2023-05-17T20:42:42Z",
      "updated_at": "2023-05-17T20:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197031821",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197031821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197037590",
      "pull_request_review_id": 1431107177,
      "id": 1197037590,
      "node_id": "PRRC_kwDOABII585HWVgW",
      "diff_hunk": "@@ -982,7 +982,13 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    /**\n+     * Attempt to find a connected node to disconnect.",
      "path": "src/net.h",
      "position": null,
      "original_position": 6,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "c826187b5070ce89edcde0536183714a1c2e3207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Imo, \"find\" makes it sound like this has no side effects, whereas I think this actually does disconnect the node.",
      "created_at": "2023-05-17T20:48:03Z",
      "updated_at": "2023-05-17T20:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197037590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197037590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 986,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197041677",
      "pull_request_review_id": 1431107177,
      "id": 1197041677,
      "node_id": "PRRC_kwDOABII585HWWgN",
      "diff_hunk": "@@ -982,7 +982,13 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    /**\n+     * Attempt to find a connected node to disconnect.\n+     * Used to make room for new inbound connections, returns true if successful.\n+     * @param[in] force     Try to evict a random node if all connections are otherwise protected.",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "c826187b5070ce89edcde0536183714a1c2e3207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "suggested rephrasing (although I'm not sure about the \"NoBan\" qualifier, maybe we have a better established term?)\r\n```suggestion\r\n     * @param[in] force     If all connections are otherwise protected, still evict a random inbound NoBan node if it exists\r\n```",
      "created_at": "2023-05-17T20:50:59Z",
      "updated_at": "2023-05-17T20:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197041677",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197041677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 988,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197060760",
      "pull_request_review_id": 1431664477,
      "id": 1197060760,
      "node_id": "PRRC_kwDOABII585HWbKY",
      "diff_hunk": "@@ -982,7 +982,13 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    /**\n+     * Attempt to find a connected node to disconnect.",
      "path": "src/net.h",
      "position": null,
      "original_position": 6,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "c826187b5070ce89edcde0536183714a1c2e3207",
      "in_reply_to_id": 1197037590,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe just move the doc from net.cpp? That's basically what I did in a WIP [branch](https://github.com/mzumsande/bitcoin/commit/1aaa795e3f43caf8aa06331e61b14b777a04a6d9).",
      "created_at": "2023-05-17T21:15:48Z",
      "updated_at": "2023-05-17T21:19:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197060760",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197060760"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 986,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197660996",
      "pull_request_review_id": 1432450720,
      "id": 1197660996,
      "node_id": "PRRC_kwDOABII585HYttE",
      "diff_hunk": "@@ -982,7 +982,13 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    /**\n+     * Attempt to find a connected node to disconnect.",
      "path": "src/net.h",
      "position": null,
      "original_position": 6,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "c826187b5070ce89edcde0536183714a1c2e3207",
      "in_reply_to_id": 1197037590,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure that's a strict improvement? Documenting the interface (i.e. pretty much just the first line of what's in `net.cpp`) seems more appropriate to be in the header indeed, but all the rest sounds more like implementation details that may best be kept close to the source code? \r\n\r\nAlso, my main issue is with (having just) the word \"find\", which to me sounds like there are no side effects.",
      "created_at": "2023-05-18T10:31:24Z",
      "updated_at": "2023-05-18T10:31:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197660996",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197660996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 986,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200632788",
      "pull_request_review_id": 1436822917,
      "id": 1200632788,
      "node_id": "PRRC_kwDOABII585HkDPU",
      "diff_hunk": "@@ -175,14 +176,21 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Hang on to one random node to evict if forced\n+    std::optional<NodeId> force_evict;\n+    if (vEvictionCandidates.size() > 0 && force) {",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "96b513f605fb2df441b66da583056b1c8acd4dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: if `vEvictionCandidates` is empty, there's no point (I think, couldn't see any side effects in `EraseLastKElements` or `ProtectEvictionCandidatesByRatio`) executing the next lines so might as well return early? Unless you think this makes the code less clear?\r\n\r\n```suggestion\r\n    if (vEvictionCandidates.empty()) return std::nullopt;\r\n    std::optional<NodeId> force_evict;\r\n    if (force) {\r\n```",
      "created_at": "2023-05-22T14:54:27Z",
      "updated_at": "2023-05-22T18:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1200632788",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200632788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 188,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200865042",
      "pull_request_review_id": 1436822917,
      "id": 1200865042,
      "node_id": "PRRC_kwDOABII585Hk78S",
      "diff_hunk": "@@ -122,6 +122,36 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        self.log.info(\"Test that whitebind inbounds get extra eviction power\")\n+        # Only allow 1 inbound connection, but set whitebind\n+        self.restart_node(0, extra_args=['-maxconnections=12', '-whitebind=0.0.0.0:30201'])",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 6,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "96b513f605fb2df441b66da583056b1c8acd4dbc",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As you [mentioned](https://bitcoincore.reviews/27600#l-165) in the review club, whitelisting just based on ports enables an attacker that discovered which port(s) are whitelisted to take over all (non-whitelisted) inbound connections slots.\r\n\r\nTherefore, I think we have to be careful not to accidentally lead people to this footgun. Binding to `127.0.0.1` seems much more prudent to not set a bad example.\r\n\r\n```suggestion\r\n        self.restart_node(0, extra_args=['-maxconnections=12', '-whitebind=127.0.0.1:30201'])\r\n```",
      "created_at": "2023-05-22T18:09:35Z",
      "updated_at": "2023-05-22T18:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1200865042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200865042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204269104",
      "pull_request_review_id": 1442057981,
      "id": 1204269104,
      "node_id": "PRRC_kwDOABII585Hx7Aw",
      "diff_hunk": "@@ -175,14 +176,21 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Hang on to one random node to evict if forced\n+    std::optional<NodeId> force_evict;\n+    if (vEvictionCandidates.size() > 0 && force) {",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "96b513f605fb2df441b66da583056b1c8acd4dbc",
      "in_reply_to_id": 1200632788,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, although \"if empty, return now\" logic would make sense after each step in this function (why bother calling `EraseLastKElements()` with an empty array?) even without this PR. One thing we could do is add that logic to the beginning of `EraseLastKElements()` itself, but I dunno how much time is really wasted in there (`sort`, `min`, `erase` ... ?)",
      "created_at": "2023-05-24T14:32:21Z",
      "updated_at": "2023-05-24T14:32:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1204269104",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204269104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 188,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204313559",
      "pull_request_review_id": 1442107908,
      "id": 1204313559,
      "node_id": "PRRC_kwDOABII585HyF3X",
      "diff_hunk": "@@ -175,14 +176,21 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Hang on to one random node to evict if forced\n+    std::optional<NodeId> force_evict;\n+    if (vEvictionCandidates.size() > 0 && force) {",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "96b513f605fb2df441b66da583056b1c8acd4dbc",
      "in_reply_to_id": 1200632788,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I had similar considerations to e.g. wrap the `EraseLastKElements` call in a lambda fn, but it's probably not worth the LoC change.\r\n\r\nI think this case is slightly different in that it better highlights that if there are no inbound NoBan peers, the result is always `std::nullopt`.",
      "created_at": "2023-05-24T14:52:55Z",
      "updated_at": "2023-05-24T14:52:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1204313559",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204313559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 188,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204318480",
      "pull_request_review_id": 1442114071,
      "id": 1204318480,
      "node_id": "PRRC_kwDOABII585HyHEQ",
      "diff_hunk": "@@ -175,14 +176,21 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Hang on to one random node to evict if forced\n+    std::optional<NodeId> force_evict;\n+    if (vEvictionCandidates.size() > 0 && force) {",
      "path": "src/node/eviction.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "96b513f605fb2df441b66da583056b1c8acd4dbc",
      "in_reply_to_id": 1200632788,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good point, i'll add it. one line i think in this case will improve readability",
      "created_at": "2023-05-24T14:55:19Z",
      "updated_at": "2023-05-24T14:55:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1204318480",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204318480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": 188,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204534315",
      "pull_request_review_id": 1442410386,
      "id": 1204534315,
      "node_id": "PRRC_kwDOABII585Hy7wr",
      "diff_hunk": "@@ -122,6 +122,36 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        self.log.info(\"Test that whitebind inbounds get extra eviction power\")\n+        # Only allow 1 inbound connection, but set whitebind\n+        self.restart_node(0, extra_args=['-maxconnections=12', '-whitebind=0.0.0.0:30201'])",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 6,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "96b513f605fb2df441b66da583056b1c8acd4dbc",
      "in_reply_to_id": 1200865042,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "updated test and also included warning in release note",
      "created_at": "2023-05-24T17:18:24Z",
      "updated_at": "2023-05-24T17:18:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1204534315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204534315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204795533",
      "pull_request_review_id": 1442800192,
      "id": 1204795533,
      "node_id": "PRRC_kwDOABII585Hz7iN",
      "diff_hunk": "@@ -0,0 +1,10 @@\n+P2P\n+---\n+\n+- Inbound connections from hosts protected by `whitebind` or `whitelist`\n+  permissions will now be more likely to connect even if `maxconnections` is\n+  reached and the node's inbound slots are full. Because this is achieved by\n+  more aggressively finding a current connection to evict, users should take\n+  care only to set these permissions on local ports that attackers can not",
      "path": "doc/release-notes-27600.md",
      "position": 8,
      "original_position": 8,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think \"on local ports\" is unnecessarily restrictive/scary. I think it's still completely fine to whitelist remote addresses, you mostly just want to avoid ranges, right?",
      "created_at": "2023-05-24T21:52:08Z",
      "updated_at": "2023-05-24T21:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1204795533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204795533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1205554274",
      "pull_request_review_id": 1443949800,
      "id": 1205554274,
      "node_id": "PRRC_kwDOABII585H20xi",
      "diff_hunk": "@@ -0,0 +1,10 @@\n+P2P\n+---\n+\n+- Inbound connections from hosts protected by `whitebind` or `whitelist`\n+  permissions will now be more likely to connect even if `maxconnections` is\n+  reached and the node's inbound slots are full. Because this is achieved by\n+  more aggressively finding a current connection to evict, users should take\n+  care only to set these permissions on local ports that attackers can not",
      "path": "doc/release-notes-27600.md",
      "position": 8,
      "original_position": 8,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "in_reply_to_id": 1204795533,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@mzumsande what's your opinion on this? Is this PR a big enough change to warrant this kind of warning?",
      "created_at": "2023-05-25T13:51:30Z",
      "updated_at": "2023-05-25T13:51:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1205554274",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1205554274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210400306",
      "pull_request_review_id": 1451147633,
      "id": 1210400306,
      "node_id": "PRRC_kwDOABII585IJT4y",
      "diff_hunk": "@@ -0,0 +1,10 @@\n+P2P\n+---\n+\n+- Inbound connections from hosts protected by `whitebind` or `whitelist`\n+  permissions will now be more likely to connect even if `maxconnections` is\n+  reached and the node's inbound slots are full. Because this is achieved by\n+  more aggressively finding a current connection to evict, users should take\n+  care only to set these permissions on local ports that attackers can not",
      "path": "doc/release-notes-27600.md",
      "position": 8,
      "original_position": 8,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "in_reply_to_id": 1204795533,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not really sure, I've never looked into these options much and don't know about best practices - I think that if you use `-whitebind` with non-local addresses, you'd at least have to make sure that that address is not self-advertised. I guess that this applies more to `-whitebind` than `-whitelist`, so that the preferred approach in case of a non-local connection would be to use `-whitelist`?\r\nfyi @vasild, do you have an opinion on this?",
      "created_at": "2023-05-30T14:47:41Z",
      "updated_at": "2023-05-30T14:47:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1210400306",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210400306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210427226",
      "pull_request_review_id": 1451196011,
      "id": 1210427226,
      "node_id": "PRRC_kwDOABII585IJada",
      "diff_hunk": "@@ -0,0 +1,10 @@\n+P2P\n+---\n+\n+- Inbound connections from hosts protected by `whitebind` or `whitelist`\n+  permissions will now be more likely to connect even if `maxconnections` is\n+  reached and the node's inbound slots are full. Because this is achieved by\n+  more aggressively finding a current connection to evict, users should take\n+  care only to set these permissions on local ports that attackers can not",
      "path": "doc/release-notes-27600.md",
      "position": 8,
      "original_position": 8,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "in_reply_to_id": 1204795533,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's a good point, `whitelist` is harder to attack than `whitebind` because the attacker would have to spoof their origin IP repeatedly to fill up your inbounds. If a user `whitebind`'s a port and an attacker figures out that port numnber, they can trivially evict all your other inbounds",
      "created_at": "2023-05-30T15:06:41Z",
      "updated_at": "2023-05-30T15:06:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1210427226",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210427226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213318442",
      "pull_request_review_id": 1455736043,
      "id": 1213318442,
      "node_id": "PRRC_kwDOABII585IUcUq",
      "diff_hunk": "@@ -0,0 +1,10 @@\n+P2P\n+---\n+\n+- Inbound connections from hosts protected by `whitebind` or `whitelist`\n+  permissions will now be more likely to connect even if `maxconnections` is\n+  reached and the node's inbound slots are full. Because this is achieved by\n+  more aggressively finding a current connection to evict, users should take\n+  care only to set these permissions on local ports that attackers can not",
      "path": "doc/release-notes-27600.md",
      "position": 8,
      "original_position": 8,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "in_reply_to_id": 1204795533,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree with what you say above - `whitebind` on publicly accessible address:port with this new permission sounds bad. Similar with `whitelist` - if a range is used.\r\n\r\nThis PR currently expands the semantic of the `noban` permission. This will affect existent setups that already use it. Would it make sense to introduce a new permisson, separate from `noban`? I mean - now if somebody is running `-whitebind=noban@publicaddr:port` then a bad actor could cause harm on `master`, but even more harm with this PR.",
      "created_at": "2023-06-01T15:18:06Z",
      "updated_at": "2023-06-01T15:18:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1213318442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213318442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214589081",
      "pull_request_review_id": 1457982087,
      "id": 1214589081,
      "node_id": "PRRC_kwDOABII585IZSiZ",
      "diff_hunk": "@@ -0,0 +1,10 @@\n+P2P\n+---\n+\n+- Inbound connections from hosts protected by `whitebind` or `whitelist`\n+  permissions will now be more likely to connect even if `maxconnections` is\n+  reached and the node's inbound slots are full. Because this is achieved by\n+  more aggressively finding a current connection to evict, users should take\n+  care only to set these permissions on local ports that attackers can not",
      "path": "doc/release-notes-27600.md",
      "position": 8,
      "original_position": 8,
      "commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "original_commit_id": "fa78fc543cd46ee1c7181ecf6b696c2892b9f8d3",
      "in_reply_to_id": 1204795533,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "interesting idea, so we could add `NetPermissionFlags::NoBanForce` or something. The danger will still be present for users of the permission, but existing users of `NoBan` wouldn't have to worry. And since `NoBan` is a default of `whitebind` it'll require more user attention anyway to use the more dangerous option.\r\n\r\nIn that case, the release note should still warn the user about using `NoBanForce` (or whatever we call it) but that warning can just be general, like, keep an eye on your netinfo if you do this. As opposed to just recommending only setting local addresses with whitebind",
      "created_at": "2023-06-02T16:35:01Z",
      "updated_at": "2023-06-02T16:35:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1214589081",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214589081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT"
    }
  ]
}