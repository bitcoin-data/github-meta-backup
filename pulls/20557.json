{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
    "id": 531715694,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTMxNzE1Njk0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20557",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/20557.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/20557.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
    "number": 20557,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "addrman: Fix new table bucketing during unserialization",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This fixes three issues in addrman unserialization.\r\n\r\n1. An addrman entry can appear in up to 8 new table buckets. We store this entry->bucket indexing during shutdown so that on restart we can restore the entries to their correct buckets. Commit ec45646de9e62b3d42c85716bfeb06d8f2b507dc broke the deserialization code so that each entry could only be put in up to one new bucket.\r\n\r\n2. Unserialization may result in an entry appearing in a 9th bucket. If the entry already appears in 8 buckets don't try to place it in another bucket.\r\n\r\n3. We unnecessarily rebucket when reading a peers.dat with file version 1. Don't do that.",
    "labels": [
      {
        "id": 64585,
        "node_id": "MDU6TGFiZWw2NDU4NQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
        "name": "Bug",
        "color": "FBBAAB",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-12-03T11:38:58Z",
    "updated_at": "2022-08-16T17:25:02Z",
    "closed_at": "2021-02-09T11:37:50Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-02-09T11:37:50Z",
    "merge_commit_sha": "b847f49717d1505694727dc800af661737fa6cc6",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jnewbery:2020-12-fix-addrman-bucketing",
      "ref": "2020-12-fix-addrman-bucketing",
      "sha": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 68248485,
        "node_id": "MDEwOlJlcG9zaXRvcnk2ODI0ODQ4NQ==",
        "name": "bitcoin",
        "full_name": "jnewbery/bitcoin",
        "owner": {
          "login": "jnewbery",
          "id": 1063656,
          "node_id": "MDQ6VXNlcjEwNjM2NTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jnewbery",
          "html_url": "https://github.com/jnewbery",
          "followers_url": "https://api.github.com/users/jnewbery/followers",
          "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
          "organizations_url": "https://api.github.com/users/jnewbery/orgs",
          "repos_url": "https://api.github.com/users/jnewbery/repos",
          "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jnewbery/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jnewbery/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jnewbery/bitcoin",
        "archive_url": "https://api.github.com/repos/jnewbery/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jnewbery/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jnewbery/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jnewbery/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jnewbery/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jnewbery/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jnewbery/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jnewbery/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jnewbery/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jnewbery/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jnewbery/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jnewbery/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jnewbery/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jnewbery/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jnewbery/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jnewbery/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jnewbery/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jnewbery/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jnewbery/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jnewbery/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jnewbery/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jnewbery/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jnewbery/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jnewbery/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jnewbery/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jnewbery/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jnewbery/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jnewbery/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jnewbery/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jnewbery/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jnewbery/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jnewbery/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jnewbery/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jnewbery/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jnewbery/bitcoin/hooks",
        "svn_url": "https://github.com/jnewbery/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 219109,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-21T11:07:55Z",
        "created_at": "2016-09-14T22:29:05Z",
        "updated_at": "2021-07-06T16:23:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c8b83510f42c6959c2844b8b81a6590dd3a34e65",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 54,
    "deletions": 40,
    "changed_files": 1,
    "commits": 7,
    "review_comments": 52,
    "comments": 20
  },
  "events": [
    {
      "event": "commented",
      "id": 737888519,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNzg4ODUxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737888519",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-03T11:39:41Z",
      "updated_at": "2020-12-03T11:39:41Z",
      "author_association": "MEMBER",
      "body": "The code currently rebuckets entries (losing the additional bucket positions) if the asmap checksum changes. I'm not sure if that's necessary and don't see any downside to keeping the same bucketing if restarting with a new asmap. If others agree, I can update this PR to not do that rebucketing.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-737888519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "commented",
      "id": 737890278,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNzg5MDI3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737890278",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-03T11:43:28Z",
      "updated_at": "2020-12-03T11:43:28Z",
      "author_association": "MEMBER",
      "body": "We should also add a regression test for this. I think a good test would be to add a round trip serialize/unserialize to the addrman fuzz test, and compare the addrman before and after that round trip. There's some internal state that isn't reconstructed from serialize/unserialize (eg the vRandom ordering), but a comparator function that checked number of entries and bucket->entry pairs should work.\r\n\r\nIf anyone wants to add that fuzz test or other tests, I'm happy to add them to this PR.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-737890278",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "labeled",
      "id": 4067096050,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwNjcwOTYwNTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4067096050",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-03T11:57:09Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 543923638,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTIzNjM4",
      "url": null,
      "actor": null,
      "commit_id": "595e9e56d58afdd283dc83e9bff554d431a34b8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#pullrequestreview-543923638",
      "submitted_at": "2020-12-03T12:55:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
    },
    {
      "event": "labeled",
      "id": 4067332242,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwNjczMzIyNDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4067332242",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-03T12:58:02Z",
      "label": {
        "name": "Bug",
        "color": "FBBAAB"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4067338258,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA2NzMzODI1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4067338258",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-03T12:59:31Z"
    },
    {
      "event": "commented",
      "id": 737994022,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNzk5NDAyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737994022",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-03T13:28:49Z",
      "updated_at": "2021-02-01T15:57:51Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-737994022",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "commented",
      "id": 738505022,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczODUwNTAyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738505022",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-04T01:57:03Z",
      "updated_at": "2020-12-04T01:57:03Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\n>The code currently rebuckets entries (losing the additional bucket positions) if the asmap checksum changes. I'm not sure if that's necessary and don't see any downside to keeping the same bucketing if restarting with a new asmap. If others agree, I can update this PR to not do that rebucketing.\r\n\r\nThat would mean that asmap is applied to only newly learned addresses, which is a downside (assuming asmap is an improvement). On the other hand, losing the existing 8 buckets is unfortunate.\r\nI'm fine either way.\r\n\r\nWe could do the 8 existing + 1 asmap bucket if we really want... but that also has some consequences of potentially overriding existing buckets etc.\r\n\r\nAlso, we should keep in mind that non-rebucketing on a new asmap may allow existing records to appear in 16 buckets now instead of 8 (probably *all* existing records on first asmap appearance). Which is... also not particularly terrible but should be considered?",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-738505022",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "commented",
      "id": 738680739,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczODY4MDczOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738680739",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-04T09:39:02Z",
      "updated_at": "2020-12-04T09:39:02Z",
      "author_association": "MEMBER",
      "body": "> That would mean that asmap is applied to only newly learned addresses, which is a downside (assuming asmap is an improvement)\r\n\r\nCurrently the bucket positions for existing new addresses are lost entirely when changing asmap, so I don't understand how this is a downside. The choice is between throwing away those bucket positions or not.\r\n\r\n> Also, we should keep in mind that non-rebucketing on a new asmap may allow existing records to appear in 16 buckets now instead of 8 (probably all existing records on first asmap appearance). Which is... also not particularly terrible but should be considered?\r\n\r\nNo. We won't add an entry to more than 8 buckets: https://github.com/bitcoin/bitcoin/blob/257cf05f9b841ba30202f23a94bcdb1743feded2/src/addrman.cpp#L294-L296.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-738680739",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "commented",
      "id": 738917757,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczODkxNzc1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738917757",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-04T17:38:35Z",
      "updated_at": "2020-12-04T17:39:09Z",
      "author_association": "MEMBER",
      "body": "> Currently the bucket positions for existing new addresses are lost entirely when changing asmap, so I don't understand how this is a downside. The choice is between throwing away those bucket positions or not.\r\n\r\nI expressed my agreement with you in the following sentence: \"On the other hand, losing the existing 8 buckets is unfortunate.\". Still, ideally, we would apply a new asmap to existing addrs without losing the data. Unfortunately, since we don't store addr source, we have to make this choice between the two. And I agree that of these 2 choices, the one you're suggesting is probably better.\r\n\r\n>No. We won't add an entry to more than 8 buckets: \r\n\r\nGood to know! That was just my wrong assumption without looking deep into code :)",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-738917757",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "reviewed",
      "id": 546862075,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODYyMDc1",
      "url": null,
      "actor": null,
      "commit_id": "3d438273fd3a0d6f0065244a31b423664a99f990",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#pullrequestreview-546862075",
      "submitted_at": "2020-12-08T08:40:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
    },
    {
      "event": "reviewed",
      "id": 546865300,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODY1MzAw",
      "url": null,
      "actor": null,
      "commit_id": "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#pullrequestreview-546865300",
      "submitted_at": "2020-12-08T08:44:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
    },
    {
      "event": "reviewed",
      "id": 546867085,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODY3MDg1",
      "url": null,
      "actor": null,
      "commit_id": "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#pullrequestreview-546867085",
      "submitted_at": "2020-12-08T08:47:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4094495863,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA5NDQ5NTg2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4094495863",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T11:01:58Z"
    },
    {
      "event": "commented",
      "id": 742449291,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjQ0OTI5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742449291",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T11:02:02Z",
      "updated_at": "2020-12-10T11:02:02Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @naumenkogs. I've addressed all your comments.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-742449291",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "mentioned",
      "id": 4094496217,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA5NDQ5NjIxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4094496217",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T11:02:03Z"
    },
    {
      "event": "subscribed",
      "id": 4094496220,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwOTQ0OTYyMjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4094496220",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T11:02:03Z"
    },
    {
      "event": "commented",
      "id": 742510425,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjUxMDQyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742510425",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:08:24Z",
      "updated_at": "2020-12-10T13:08:24Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, and the code change looks overall good to me. \r\n\r\n> https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-737890278\r\n\r\nAgree that a test would be useful, to make it easier to see that this fixes the mentioned problems and prevent future regression.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-742510425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "commented",
      "id": 743033626,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzAzMzYyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743033626",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-11T07:48:33Z",
      "updated_at": "2020-12-11T07:48:33Z",
      "author_association": "MEMBER",
      "body": "utACK dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-743033626",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "reviewed",
      "id": 567787742,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3Nzg3NzQy",
      "url": null,
      "actor": null,
      "commit_id": "41f2fd90eba1447c23efa9a5df031daa448897ee",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review ACK https://github.com/bitcoin/bitcoin/commit/dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3\r\n\r\nCan see that it fixes the bug from https://github.com/bitcoin/bitcoin/commit/ec45646de9e62b3d42c85716bfeb06d8f2b507dc, previously looped over each entry, retrieving the first bucket we recorded in `entryToBucket`, and now creates a list of `<bucket, index>` pairs and loops over all of those instead. Some clarifying questions because I'm super unfamiliar with this code and stared at it for a long time.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#pullrequestreview-567787742",
      "submitted_at": "2021-01-14T01:57:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
    },
    {
      "event": "added_to_project",
      "id": 4207764578,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQ0MjA3NzY0NTc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4207764578",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-14T19:09:25Z",
      "project_card": {
        "id": 52838930,
        "url": "https://api.github.com/projects/columns/cards/52838930",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Bugfixes"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4218156369,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDIxODE1NjM2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4218156369",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-18T13:23:11Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNGM1ZmRhNDE3ZGQ5ZmY4YmY5ZmUyNGE4N2QzODRhNjQ5ZTM3MzBk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "tree": {
        "sha": "8f8bddc6fe9dabcf4474892efb607ab03ae2e67b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f8bddc6fe9dabcf4474892efb607ab03ae2e67b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7acda55c4fa611481979a41dfd5ca016bb535409",
          "sha": "7acda55c4fa611481979a41dfd5ca016bb535409",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7acda55c4fa611481979a41dfd5ca016bb535409"
        }
      ],
      "message": "[addrman] Fix new table bucketing during unserialization\n\nAn addrman entry can appear in up to 8 new table buckets. We store this\nentry->bucket indexing during shutdown so that on restart we can restore\nthe entries to their correct buckets.\n\nCommit ec45646de9e62b3d42c85716bfeb06d8f2b507dc broke the\ndeserialization code so that each entry could only be put in up to one\nnew bucket. Fix that.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-01-18T13:23:16Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-03T10:54:57Z"
      },
      "sha": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDliOGUwZmRmM2JmYjExNjY4ZWRhY2NlZDVkOGI3MDcyNmQ1ZDBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/009b8e0fdf3bfb11668edacced5d8b70726d5d0e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/009b8e0fdf3bfb11668edacced5d8b70726d5d0e",
      "tree": {
        "sha": "d2c80f7f99c2df7c4d347e1a916ac722e59eeddd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2c80f7f99c2df7c4d347e1a916ac722e59eeddd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
          "sha": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b4c5fda417dd9ff8bf9fe24a87d384a649e3730d"
        }
      ],
      "message": "[addrman] Improve variable naming/code style of touched code.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-01-18T13:23:16Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-03T11:31:08Z"
      },
      "sha": "009b8e0fdf3bfb11668edacced5d8b70726d5d0e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDYyZDkyOGNlNWM0OTVjMWI2ZWNkMThlNGIzMGMxMmRhODIyZDkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8062d928ce5c495c1b6ecd18e4b30c12da822d90",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8062d928ce5c495c1b6ecd18e4b30c12da822d90",
      "tree": {
        "sha": "7fedda3656451ae36c7c3d6722594c8201025fb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fedda3656451ae36c7c3d6722594c8201025fb7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/009b8e0fdf3bfb11668edacced5d8b70726d5d0e",
          "sha": "009b8e0fdf3bfb11668edacced5d8b70726d5d0e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/009b8e0fdf3bfb11668edacced5d8b70726d5d0e"
        }
      ],
      "message": "[addrman] Rename asmap version to asmap checksum\n\nVersion implies that higher numbers take precendence. This is really a\nchecksum, to check whether the provided asmap is the same as the one\nused when the peers.dat file was serialized.\n\nAlso update the comments to explain where/why this is used.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-01-18T13:23:16Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-03T11:00:08Z"
      },
      "sha": "8062d928ce5c495c1b6ecd18e4b30c12da822d90"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNWM5YjA0OTU5ZjQ0MzM3MjQwMGY5YTczNmM2ZWFmNTUwMjI4NGEx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5c9b04959f443372400f9a736c6eaf5502284a1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a5c9b04959f443372400f9a736c6eaf5502284a1",
      "tree": {
        "sha": "99cb6e1504a9f89fc961c0f1fe00b7f17c1e036d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99cb6e1504a9f89fc961c0f1fe00b7f17c1e036d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8062d928ce5c495c1b6ecd18e4b30c12da822d90",
          "sha": "8062d928ce5c495c1b6ecd18e4b30c12da822d90",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8062d928ce5c495c1b6ecd18e4b30c12da822d90"
        }
      ],
      "message": "[addrman] Don't rebucket new table entries unnecessarily\n\nOnly rebucket if the asmap checksum has changed, not if the file format\nhas changed but no asmap is provided.\n\nAlso, don't try to add an entry to another bucket if it already appears\nin ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-01-18T13:23:16Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-03T11:12:10Z"
      },
      "sha": "a5c9b04959f443372400f9a736c6eaf5502284a1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzM1NDdlZGRkOGE3ZDY3YjQxMDM1MDhmMzBkNWQwMmE5YzFmMTQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "tree": {
        "sha": "84eb6b1bb0423cc7e18675a20b335fb311b7f777",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84eb6b1bb0423cc7e18675a20b335fb311b7f777"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5c9b04959f443372400f9a736c6eaf5502284a1",
          "sha": "a5c9b04959f443372400f9a736c6eaf5502284a1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a5c9b04959f443372400f9a736c6eaf5502284a1"
        }
      ],
      "message": "[addrman] Improve variable naming/code style of touched code.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-01-18T13:23:16Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-03T11:31:08Z"
      },
      "sha": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148"
    },
    {
      "event": "commented",
      "id": 762249254,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjI0OTI1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/762249254",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-18T13:25:28Z",
      "updated_at": "2021-01-18T13:25:28Z",
      "author_association": "MEMBER",
      "body": "Improved the naming of one of the variables as suggested in https://github.com/bitcoin/bitcoin/pull/20557#discussion_r556985482 :\r\n https://github.com/bitcoin/bitcoin/compare/dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3..36f3d9d8a48541f0b44ea4cff52a770cab43f2f0.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-762249254",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4218482262,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDIxODQ4MjI2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4218482262",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-18T14:34:54Z"
    },
    {
      "event": "commented",
      "id": 762289179,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjI4OTE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/762289179",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-18T14:36:09Z",
      "updated_at": "2021-01-18T14:36:09Z",
      "author_association": "MEMBER",
      "body": "Rebased on master",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-762289179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "commented",
      "id": 762648732,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjY0ODczMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/762648732",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-19T07:11:40Z",
      "updated_at": "2021-01-19T07:11:40Z",
      "author_association": "MEMBER",
      "body": "ACK ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-762648732",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "reviewed",
      "id": 576028779,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2MDI4Nzc5",
      "url": null,
      "actor": null,
      "commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#pullrequestreview-576028779",
      "submitted_at": "2021-01-26T06:05:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
    },
    {
      "event": "commented",
      "id": 767671839,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzY3MTgzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767671839",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T16:42:41Z",
      "updated_at": "2021-01-26T17:11:40Z",
      "author_association": "MEMBER",
      "body": "> I think a good test would be to add a round trip serialize/unserialize to the addrman fuzz test, and compare the addrman before and after that round trip. There's some internal state that isn't reconstructed from serialize/unserialize (eg the vRandom ordering), but a comparator function that checked number of entries and bucket->entry pairs should work.\r\n\r\nCreated such test at: https://github.com/jnewbery/bitcoin/pull/18.\r\n\r\n~~It does not compare bucket->entry though because the ids (the keys into `mapInfo`) could be different after ser/unser.~~",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-767671839",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "commented",
      "id": 769722383,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTcyMjM4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769722383",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-29T10:32:20Z",
      "updated_at": "2021-01-29T10:32:20Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @vasild. I've resolved your review comments.\r\n\r\nI haven't taken your fuzz test yet since it seems like there's a bit more work to make sure that it's getting reliable coverage.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-769722383",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "mentioned",
      "id": 4265485772,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI2NTQ4NTc3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4265485772",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-29T10:32:20Z"
    },
    {
      "event": "subscribed",
      "id": 4265485775,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyNjU0ODU3NzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4265485775",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-29T10:32:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4265965547,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDI2NTk2NTU0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4265965547",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-29T12:39:44Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzYyOTIzNjdjMWQ3MzdjZjczYmQ5ODUyOTM1Mzk1MDBkMTIwNmY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/436292367c1d737cf73bd985293539500d1206f5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/436292367c1d737cf73bd985293539500d1206f5",
      "tree": {
        "sha": "d165925c1d0cb01bfff34c9a9e9fdbd79831a409",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d165925c1d0cb01bfff34c9a9e9fdbd79831a409"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
          "sha": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ac3547eddd8a7d67b4103508f30d5d02a9c1f148"
        }
      ],
      "message": "[addrman] Improve serialization comments\n\nThanks to Vasil Dimov <vd@FreeBSD.org> for these suggestions",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-01-29T12:39:55Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-01-29T10:18:31Z"
      },
      "sha": "436292367c1d737cf73bd985293539500d1206f5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Njc2YTRmYjViZTBmNmVmMGIzZjcxYzFmNDM2MWMyMGY3Y2IwZTBi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "tree": {
        "sha": "d03f2f12741f2ef0365ed216384de5efad9b6be7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d03f2f12741f2ef0365ed216384de5efad9b6be7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/436292367c1d737cf73bd985293539500d1206f5",
          "sha": "436292367c1d737cf73bd985293539500d1206f5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/436292367c1d737cf73bd985293539500d1206f5"
        }
      ],
      "message": "[addrman] Don't repeat \"Bucketing method was updated\" log multiple times\n\nThanks to Vasil Dimov <vd@FreeBSD.org> for these suggestions",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-01-29T12:39:55Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-01-29T10:29:44Z"
      },
      "sha": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4265966651,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDI2NTk2NjY1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4265966651",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-29T12:40:03Z"
    },
    {
      "event": "commented",
      "id": 769834905,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTgzNDkwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769834905",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-29T14:24:19Z",
      "updated_at": "2021-01-29T14:24:19Z",
      "author_association": "MEMBER",
      "body": "ACK 4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b\r\n\r\n* The addition of a fuzzing test (https://github.com/jnewbery/bitcoin/pull/18) is not a show stopper for this PR.\r\n* To my understanding, the unneeded [`vvNew[bucket][bucket_position] == -1`](https://github.com/bitcoin/bitcoin/pull/20557/files#diff-164bd9e2e30f54d0a79eb7cc372309e2f2155edc6c3f051290ab078f03f6a771R546) can be removed. It was part of the code before this PR and is doing no harm (other than confusion). Not a show stopper either.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-769834905",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "reviewed",
      "id": 579301540,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5MzAxNTQw",
      "url": null,
      "actor": null,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#pullrequestreview-579301540",
      "submitted_at": "2021-01-29T14:24:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
    },
    {
      "event": "commented",
      "id": 770103446,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDEwMzQ0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770103446",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-29T23:28:58Z",
      "updated_at": "2021-01-29T23:28:58Z",
      "author_association": "MEMBER",
      "body": "re-ACK https://github.com/bitcoin/bitcoin/commit/4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b, changes were a rename, comments, and removing repeat-logging.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-770103446",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "commented",
      "id": 770181141,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDE4MTE0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770181141",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-30T09:04:52Z",
      "updated_at": "2021-01-30T09:04:52Z",
      "author_association": "MEMBER",
      "body": "ACK 4676a4f",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-770181141",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "commented",
      "id": 772430279,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjQzMDI3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/772430279",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-03T11:13:36Z",
      "updated_at": "2021-02-03T11:13:36Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke or @laanwj - this PR now has 3 ACKs. If one of you re-reviewed, then it might be ready for merge.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-772430279",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "mentioned",
      "id": 4284654869,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI4NDY1NDg2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4284654869",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-03T11:13:36Z"
    },
    {
      "event": "subscribed",
      "id": 4284654874,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyODQ2NTQ4NzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4284654874",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-03T11:13:36Z"
    },
    {
      "event": "mentioned",
      "id": 4284654878,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI4NDY1NDg3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4284654878",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-03T11:13:36Z"
    },
    {
      "event": "subscribed",
      "id": 4284654882,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyODQ2NTQ4ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4284654882",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-03T11:13:36Z"
    },
    {
      "event": "reviewed",
      "id": 586080477,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2MDgwNDc3",
      "url": null,
      "actor": null,
      "commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b\r\n\r\nA couple nits and questions below.",
      "user": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#pullrequestreview-586080477",
      "submitted_at": "2021-02-09T02:08:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
    },
    {
      "event": "reviewed",
      "id": 585955142,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1OTU1MTQy",
      "url": null,
      "actor": null,
      "commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b. I'm not previously familiar with this code but all the changes here do make sense and seem like improvements. Left some notes and comments, but they aren't important so feel to ignore.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#pullrequestreview-585955142",
      "submitted_at": "2021-02-09T02:43:55Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
    },
    {
      "event": "commented",
      "id": 775832831,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTgzMjgzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775832831",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-09T10:24:09Z",
      "updated_at": "2021-02-09T10:24:09Z",
      "author_association": "MEMBER",
      "body": "Thanks @dhruv and @ryanofsky for the reviews. I think this is ready for merge now, and the remaining review comments can be done in follow-ups:\r\n\r\n- [ ] Add test (https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-737890278, also see https://github.com/jnewbery/bitcoin/pull/18)\r\n- [ ] Use structured bindings to iterate bucket_entries (https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572398580)\r\n- [ ] Expand comment about info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS (https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572509364)",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-775832831",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "mentioned",
      "id": 4308353303,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDMwODM1MzMwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4308353303",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-09T10:24:09Z"
    },
    {
      "event": "subscribed",
      "id": 4308353306,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzMDgzNTMzMDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4308353306",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-09T10:24:09Z"
    },
    {
      "event": "mentioned",
      "id": 4308353307,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDMwODM1MzMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4308353307",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-09T10:24:09Z"
    },
    {
      "event": "subscribed",
      "id": 4308353314,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzMDgzNTMzMTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4308353314",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-09T10:24:10Z"
    },
    {
      "event": "commented",
      "id": 775875390,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTg3NTM5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775875390",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-09T11:36:00Z",
      "updated_at": "2021-02-09T11:36:00Z",
      "author_association": "MEMBER",
      "body": "Code review ACK 4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-775875390",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20557"
    },
    {
      "event": "merged",
      "id": 4308686157,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDMwODY4NjE1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4308686157",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b847f49717d1505694727dc800af661737fa6cc6",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b847f49717d1505694727dc800af661737fa6cc6",
      "created_at": "2021-02-09T11:37:50Z"
    },
    {
      "event": "closed",
      "id": 4308686177,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDMwODY4NjE3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4308686177",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-09T11:37:50Z"
    },
    {
      "event": "referenced",
      "id": 4309761489,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzMDk3NjE0ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4309761489",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0702be7159396c365d22897b91f10aaef3e33055",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/0702be7159396c365d22897b91f10aaef3e33055",
      "created_at": "2021-02-09T15:18:53Z"
    },
    {
      "event": "removed_from_project",
      "id": 4319750832,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50NDMxOTc1MDgzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4319750832",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-11T13:10:22Z",
      "project_card": {
        "id": 52838930,
        "url": "https://api.github.com/projects/columns/cards/52838930",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Bugfixes"
      }
    },
    {
      "event": "referenced",
      "id": 4944329986,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQzMjk5ODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944329986",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5c455421d564fb0bcaa68db0559f2fcb7fd18a35",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/5c455421d564fb0bcaa68db0559f2fcb7fd18a35",
      "created_at": "2021-06-27T21:19:32Z"
    },
    {
      "event": "referenced",
      "id": 4944491971,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQ0OTE5NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944491971",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "79690d55548e75286f4fee66c13a3488de73c24c",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/79690d55548e75286f4fee66c13a3488de73c24c",
      "created_at": "2021-06-28T00:24:54Z"
    },
    {
      "event": "referenced",
      "id": 4950405972,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NTA0MDU5NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4950405972",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "54a05bfc58e7ddb67c6b7bae4a59b7dd234761f4",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/54a05bfc58e7ddb67c6b7bae4a59b7dd234761f4",
      "created_at": "2021-06-29T00:06:28Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4967298870,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0OTY3Mjk4ODcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4967298870",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-01T17:21:13Z"
    },
    {
      "event": "referenced",
      "id": 4968415065,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5Njg0MTUwNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4968415065",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d6b893c36a9b2371eacddc482f54819358da38bd",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/d6b893c36a9b2371eacddc482f54819358da38bd",
      "created_at": "2021-07-01T22:04:36Z"
    },
    {
      "event": "referenced",
      "id": 4968437305,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5Njg0MzczMDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4968437305",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8e73c5cc967d1d89b6bdcd63d0d9a453464416e3",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/8e73c5cc967d1d89b6bdcd63d0d9a453464416e3",
      "created_at": "2021-07-01T22:11:27Z"
    },
    {
      "event": "referenced",
      "id": 5027727398,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMjc3MjczOTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5027727398",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "09e574156a6fee41bb288c7451c1cf88e826a67b",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/09e574156a6fee41bb288c7451c1cf88e826a67b",
      "created_at": "2021-07-15T21:00:26Z"
    },
    {
      "event": "referenced",
      "id": 5031465627,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMzE0NjU2Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5031465627",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cd3bedaf1c45cb372877644ca2c67ef59fbe4058",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/cd3bedaf1c45cb372877644ca2c67ef59fbe4058",
      "created_at": "2021-07-16T15:05:03Z"
    },
    {
      "event": "referenced",
      "id": 6568778811,
      "node_id": "REFE_lADOABII584tEXe0zwAAAAGHh5w7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6568778811",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0bff4331731ddf9d2685f1cfcf92e9371aaee97a",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/0bff4331731ddf9d2685f1cfcf92e9371aaee97a",
      "created_at": "2022-05-08T15:27:59Z"
    },
    {
      "event": "locked",
      "id": 7199152468,
      "node_id": "LOE_lADOABII584tEXe0zwAAAAGtGllU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199152468",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:25:02Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535204097",
      "pull_request_review_id": 543923638,
      "id": 535204097,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwNDA5Nw==",
      "diff_hunk": "@@ -500,47 +501,59 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int bucket_size{0};\n+            s >> bucket_size;\n+            for (int n = 0; n < bucket_size; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // Attempt to restore the entry's new buckets if the bucket count and asmap\n+        // checksum haven't changed\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && ",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 81,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "595e9e56d58afdd283dc83e9bff554d431a34b8c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\r\n```",
      "created_at": "2020-12-03T12:55:03Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r535204097",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535204097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 530,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535206817",
      "pull_request_review_id": 543926955,
      "id": 535206817,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwNjgxNw==",
      "diff_hunk": "@@ -500,47 +501,59 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int bucket_size{0};\n+            s >> bucket_size;\n+            for (int n = 0; n < bucket_size; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // Attempt to restore the entry's new buckets if the bucket count and asmap\n+        // checksum haven't changed\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && ",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 81,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "595e9e56d58afdd283dc83e9bff554d431a34b8c",
      "in_reply_to_id": 535204097,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2020-12-03T12:59:23Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r535206817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535206817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 530,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538141515",
      "pull_request_review_id": 546862075,
      "id": 538141515,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0MTUxNQ==",
      "diff_hunk": "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT and the asmap checksum",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 14,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "3d438273fd3a0d6f0065244a31b423664a99f990",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment is weird in general. I don't think we have anything like `ADDRMAN_UNKNOWN_BUCKET_COUNT` anymore?",
      "created_at": "2020-12-08T08:40:13Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538141515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538141515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 352,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538142013",
      "pull_request_review_id": 546862698,
      "id": 538142013,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0MjAxMw==",
      "diff_hunk": "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT and the asmap checksum",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 14,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "3d438273fd3a0d6f0065244a31b423664a99f990",
      "in_reply_to_id": 538141515,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be talking about ADDRMAN_NEW_BUCKET_COUNT, ADDRMAN_NEW_BUCKETS_PER_ADDRESS.",
      "created_at": "2020-12-08T08:41:02Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538142013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538142013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 352,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538144329",
      "pull_request_review_id": 546865300,
      "id": 538144329,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NDMyOQ==",
      "diff_hunk": "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;",
      "path": "src/addrman.h",
      "position": 113,
      "original_position": 24,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So this happens if a new version of Bitcoin Core reduced `ADDRMAN_NEW_BUCKETS_PER_ADDRESS`, and in this case we completely forget the extra addrs.\r\n\r\nWhy do you think it's more reasonable? Assuming addrman is less-than-half-full, there's a good chance this odd addr can find a new place without evicting anything.",
      "created_at": "2020-12-08T08:44:35Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538144329",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538144329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538145834",
      "pull_request_review_id": 546867085,
      "id": 538145834,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NTgzNA==",
      "diff_hunk": "@@ -517,6 +517,8 @@ friend class CAddrManTest;\n             }\n         }\n \n+        // Attempt to restore the entry's new buckets if the bucket count and asmap",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find it hard to parse \"restore the entry's new buckets\".\r\n1. Not only buckets, but also positions.\r\n2. What exactly is \"restore\" is also a bit unclear, I'm thinking if there's a better verb. Perhaps just \"use the serialized [...]\"",
      "created_at": "2020-12-08T08:47:01Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538145834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538145834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 520,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540073174",
      "pull_request_review_id": 549079380,
      "id": 540073174,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA3MzE3NA==",
      "diff_hunk": "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT and the asmap checksum",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 14,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "3d438273fd3a0d6f0065244a31b423664a99f990",
      "in_reply_to_id": 538141515,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, changed to ADDRMAN_NEW_BUCKET_COUNT.",
      "created_at": "2020-12-10T10:57:41Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r540073174",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540073174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 352,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540073873",
      "pull_request_review_id": 549080242,
      "id": 540073873,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA3Mzg3Mw==",
      "diff_hunk": "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;",
      "path": "src/addrman.h",
      "position": 113,
      "original_position": 24,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "in_reply_to_id": 538144329,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because `ADDRMAN_NEW_BUCKETS_PER_ADDRESS` should be an invariant in addrman. No entry should appear in no more than `ADDRMAN_NEW_BUCKETS_PER_ADDRESS` buckets.",
      "created_at": "2020-12-10T10:58:47Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r540073873",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540073873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540075665",
      "pull_request_review_id": 549082343,
      "id": 540075665,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA3NTY2NQ==",
      "diff_hunk": "@@ -517,6 +517,8 @@ friend class CAddrManTest;\n             }\n         }\n \n+        // Attempt to restore the entry's new buckets if the bucket count and asmap",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "in_reply_to_id": 538145834,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed wording to \"If the bucket count and asmap checksum haven't changed, then attempt to restore the entries to the buckets/positions they were in before serialization.\" Hopefully that's clearer!\r\n",
      "created_at": "2020-12-10T11:01:35Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r540075665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540075665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 520,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556985482",
      "pull_request_review_id": 567787742,
      "id": 556985482,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk4NTQ4Mg==",
      "diff_hunk": "@@ -504,14 +504,14 @@ friend class CAddrManTest;\n         // so we store all bucket-entry_index pairs to iterate through later.\n         std::vector<std::pair<int, int>> bucket_entries;\n \n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    bucket_entries.emplace_back(bucket, nIndex);\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int bucket_size{0};\n+            s >> bucket_size;",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 14,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "41f2fd90eba1447c23efa9a5df031daa448897ee",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just to clarify... this is the number of entries in this bucket, right? Not the capacity of the bucket, which is `ADDRMAN_BUCKET_SIZE`?",
      "created_at": "2021-01-14T01:28:16Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r556985482",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556985482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 508,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556991230",
      "pull_request_review_id": 567787742,
      "id": 556991230,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk5MTIzMA==",
      "diff_hunk": "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&",
      "path": "src/addrman.h",
      "position": 99,
      "original_position": 27,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "03002228b16b6729f7720acb761e5a78d49312ef",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So you're removing the `format >= Format::V2_ASMAP` condition here because otherwise it'd be impossible for `serialized_asmap_checksum == supplied_asmap_checksum` yes?",
      "created_at": "2021-01-14T01:46:13Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r556991230",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556991230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 530,
      "original_line": 530,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557383675",
      "pull_request_review_id": 568217486,
      "id": 557383675,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM4MzY3NQ==",
      "diff_hunk": "@@ -504,14 +504,14 @@ friend class CAddrManTest;\n         // so we store all bucket-entry_index pairs to iterate through later.\n         std::vector<std::pair<int, int>> bucket_entries;\n \n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    bucket_entries.emplace_back(bucket, nIndex);\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int bucket_size{0};\n+            s >> bucket_size;",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 14,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "41f2fd90eba1447c23efa9a5df031daa448897ee",
      "in_reply_to_id": 556985482,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Exactly (see the comment above about serialization format: https://github.com/jnewbery/bitcoin/blob/dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3/src/addrman.h#L341)",
      "created_at": "2021-01-14T13:11:31Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r557383675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557383675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 508,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557384721",
      "pull_request_review_id": 568218932,
      "id": 557384721,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM4NDcyMQ==",
      "diff_hunk": "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&",
      "path": "src/addrman.h",
      "position": 99,
      "original_position": 27,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "03002228b16b6729f7720acb761e5a78d49312ef",
      "in_reply_to_id": 556991230,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Correct. If format == V1_DETERMINISTIC, then serialized_asmap_checksum must be 0.",
      "created_at": "2021-01-14T13:13:19Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r557384721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557384721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 530,
      "original_line": 530,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558689266",
      "pull_request_review_id": 569778256,
      "id": 558689266,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODY4OTI2Ng==",
      "diff_hunk": "@@ -504,14 +504,14 @@ friend class CAddrManTest;\n         // so we store all bucket-entry_index pairs to iterate through later.\n         std::vector<std::pair<int, int>> bucket_entries;\n \n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    bucket_entries.emplace_back(bucket, nIndex);\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int bucket_size{0};\n+            s >> bucket_size;",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 14,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "41f2fd90eba1447c23efa9a5df031daa448897ee",
      "in_reply_to_id": 556985482,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I just thought both being called \"size\" is a bit confusing so `num_entries` would have been my choice for naming, but it's the nittiest of nits, non-blocking",
      "created_at": "2021-01-15T23:56:58Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r558689266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558689266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 508,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/559563695",
      "pull_request_review_id": 570485643,
      "id": 559563695,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU2MzY5NQ==",
      "diff_hunk": "@@ -504,14 +504,14 @@ friend class CAddrManTest;\n         // so we store all bucket-entry_index pairs to iterate through later.\n         std::vector<std::pair<int, int>> bucket_entries;\n \n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    bucket_entries.emplace_back(bucket, nIndex);\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int bucket_size{0};\n+            s >> bucket_size;",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 14,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "41f2fd90eba1447c23efa9a5df031daa448897ee",
      "in_reply_to_id": 556985482,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree that this is confusing. I've renamed to `num_entries`.",
      "created_at": "2021-01-18T13:23:38Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r559563695",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/559563695"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 508,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563877014",
      "pull_request_review_id": 575596316,
      "id": 563877014,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzg3NzAxNA==",
      "diff_hunk": "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;",
      "path": "src/addrman.h",
      "position": 113,
      "original_position": 24,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "in_reply_to_id": 538144329,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@naumenkogs if a new Bitcoin Core reduces `ADDRMAN_NEW_BUCKETS_PER_ADDRESS` from 8 to e.g. 6 and this condition becomes true in the new version, then the address is already in 6 buckets in memory. So we would not completely forget it, or do I miss something?",
      "created_at": "2021-01-25T16:51:27Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r563877014",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/563877014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564225855",
      "pull_request_review_id": 576028779,
      "id": 564225855,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDIyNTg1NQ==",
      "diff_hunk": "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_NEW_BUCKET_COUNT and the asmap checksum\n+     * didn't change, otherwise it is reconstructed as well.",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 15,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`vVector` does not exist. More importantly - none of the members is serialized explicitly/directly. So, I think the following changes would make a better description of the source code:\r\n\r\n```diff\r\ndiff --git i/src/addrman.h w/src/addrman.h\r\nindex cde864f25..983a1f4fd 100644\r\n--- i/src/addrman.h\r\n+++ w/src/addrman.h\r\n@@ -332,29 +332,26 @@ public:\r\n      *     (format=5, lowest_compatible=5) and so any versions that do not know how to parse\r\n      *     format=5 will not try to read the file.\r\n      * * nKey\r\n      * * nNew\r\n      * * nTried\r\n      * * number of \"new\" buckets XOR 2**30\r\n-     * * all nNew addrinfos in vvNew\r\n-     * * all nTried addrinfos in vvTried\r\n-     * * for each bucket:\r\n+     * * all new addresses (total count: nNew)\r\n+     * * all tried addresses (total count: nTried)\r\n+     * * for each new bucket:\r\n      *   * number of elements\r\n-     *   * for each element: index\r\n+     *   * for each element: index in the serialized \"all new addresses\"\r\n      * * asmap checksum\r\n      *\r\n      * 2**30 is xorred with the number of buckets to make addrman deserializer v0 detect it\r\n      * as incompatible. This is necessary because it did not check the version number on\r\n      * deserialization.\r\n      *\r\n-     * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\r\n+     * Notice that vvNew, vvTried, mapAddr, mapInfo and vRandom are never encoded explicitly;\r\n      * they are instead reconstructed from the other information.\r\n      *\r\n-     * vvNew is serialized, but only used if ADDRMAN_NEW_BUCKET_COUNT and the asmap checksum\r\n-     * didn't change, otherwise it is reconstructed as well.\r\n-     *\r\n      * This format is more complex, but significantly smaller (at most 1.5 MiB), and supports\r\n      * changes to the ADDRMAN_ parameters without breaking the on-disk structure.\r\n      *\r\n      * We don't use SERIALIZE_METHODS since the serialization and deserialization code has\r\n      * very little in common.\r\n      */\r\n```\r\n\r\nWhy `vvNew` is not serialized? Because `vvNew[i][j]` contains the `id` under which the element can be found in `mapInfo`. We serialize a condensed version of `vvNew` (without the `-1`s), but instead of that `id` we store an index in the serialized list of `CAddrInfo` which exists only on disk.",
      "created_at": "2021-01-26T05:36:55Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r564225855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564225855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 349,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 353,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564232061",
      "pull_request_review_id": 576028779,
      "id": 564232061,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDIzMjA2MQ==",
      "diff_hunk": "@@ -500,47 +501,60 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {",
      "path": "src/addrman.h",
      "position": 116,
      "original_position": 102,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Under what conditions could it happen that `restore_bucketing` is `false` and `vvNew[bucket][bucket_position] != -1` (occupied)?\r\n\r\nIs it only if `ADDRMAN_BUCKET_SIZE` has been changed? If that has happened then we shouldn't try to restore the bucketing (i.e. should set `restore_bucketing` to `false`), but unfortunately the old `ADDRMAN_BUCKET_SIZE` is not saved on disk, so we can only indirectly observe that the file was written with a different `ADDRMAN_BUCKET_SIZE`.\r\n\r\n(the above is not a suggestion for a change, just a few questions to confirm my understanding is correct)",
      "created_at": "2021-01-26T05:48:12Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r564232061",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564232061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 546,
      "original_line": 545,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564248956",
      "pull_request_review_id": 576028779,
      "id": 564248956,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDI0ODk1Ng==",
      "diff_hunk": "@@ -500,47 +501,60 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {\n                 // Bucketing has not changed, using existing bucket positions for the new table\n-                vvNew[bucket][nUBucketPos] = n;\n-                info.nRefCount++;\n+                vvNew[bucket][bucket_position] = entry_index;\n+                ++info.nRefCount;\n             } else {\n-                // In case the new table data cannot be used (format unknown, bucket count wrong or new asmap),\n+                // In case the new table data cannot be used (bucket count wrong or new asmap),\n                 // try to give them a reference based on their primary source address.\n                 LogPrint(BCLog::ADDRMAN, \"Bucketing method was updated, re-bucketing addrman entries from disk\\n\");",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 112,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If `restore_bucketing` is `false`, then this will be printed for every address, possibly _many_ times. But it does not include the address itself. What about printing the address:\r\n\r\n```suggestion\r\n                LogPrint(BCLog::ADDRMAN, \"Bucketing method was updated, re-bucketing addrman entry from disk for %s\\n\", info.ToString());\r\n```\r\n\r\nor print the generic message once:\r\n\r\n```suggestion\r\n                if (!printed) {\r\n                    LogPrint(BCLog::ADDRMAN, \"Bucketing method was updated, re-bucketing addrman entries from disk\\n\");\r\n                    printed = true;\r\n                }\r\n```",
      "created_at": "2021-01-26T06:04:22Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r564248956",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564248956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 552,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566720943",
      "pull_request_review_id": 579122926,
      "id": 566720943,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjcyMDk0Mw==",
      "diff_hunk": "@@ -500,47 +501,60 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {",
      "path": "src/addrman.h",
      "position": 116,
      "original_position": 102,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564232061,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If both `restore_bucketing` is false and `vvNew[bucket][bucket_position] != -1` then it means that two addresses hash into the same position in the same new bucket, which is possible based on the source address. `restore_bucketing` would be false if the number of new buckets had changed or the as map had changed.",
      "created_at": "2021-01-29T10:23:37Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566720943",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566720943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 546,
      "original_line": 545,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566723508",
      "pull_request_review_id": 579126118,
      "id": 566723508,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjcyMzUwOA==",
      "diff_hunk": "@@ -500,47 +501,60 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {\n                 // Bucketing has not changed, using existing bucket positions for the new table\n-                vvNew[bucket][nUBucketPos] = n;\n-                info.nRefCount++;\n+                vvNew[bucket][bucket_position] = entry_index;\n+                ++info.nRefCount;\n             } else {\n-                // In case the new table data cannot be used (format unknown, bucket count wrong or new asmap),\n+                // In case the new table data cannot be used (bucket count wrong or new asmap),\n                 // try to give them a reference based on their primary source address.\n                 LogPrint(BCLog::ADDRMAN, \"Bucketing method was updated, re-bucketing addrman entries from disk\\n\");",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 112,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564248956,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch! I'm just going to move the log to outside the loop to avoid it printing many times. Only printing once seems to be the original intent of this log. Improved logging can be left for a future PR.",
      "created_at": "2021-01-29T10:27:48Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566723508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566723508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 552,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566725650",
      "pull_request_review_id": 579129011,
      "id": 566725650,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjcyNTY1MA==",
      "diff_hunk": "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_NEW_BUCKET_COUNT and the asmap checksum\n+     * didn't change, otherwise it is reconstructed as well.",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 15,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564225855,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good suggestions. I've added a new commit that makes these changes.",
      "created_at": "2021-01-29T10:31:30Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566725650",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566725650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 349,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 353,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566738795",
      "pull_request_review_id": 579146221,
      "id": 566738795,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjczODc5NQ==",
      "diff_hunk": "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_NEW_BUCKET_COUNT and the asmap checksum\n+     * didn't change, otherwise it is reconstructed as well.",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 15,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564225855,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! `s/vVector/vRandom/` in that commit - there is no member named `vVector`.\r\nAlso, consider adding `mapInfo` to the list of members that \"are never encoded explicitly\" - the ids (the keys of that map) are not serialized, only the values (and in different order than in the map).",
      "created_at": "2021-01-29T10:54:35Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566738795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566738795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 349,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 353,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566749293",
      "pull_request_review_id": 579160313,
      "id": 566749293,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njc0OTI5Mw==",
      "diff_hunk": "@@ -500,47 +501,60 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {",
      "path": "src/addrman.h",
      "position": 116,
      "original_position": 102,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564232061,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes! So it follows that (correct me if I am wrong):\r\n\r\n* If `restore_bucketing` is `true` then `vvNew[bucket][bucket_position] == -1` is also `true` (position is free, not occupied). So the `if` condition can be reduced to just `if (restore_bucketing) {`.\r\n\r\n* If `restore_bucketing` is `false` then `vvNew[bucket][bucket_position] == -1` may be `true` or `false` depending on the hashing. In this case too, the `if` condition is equivalent to just `if (restore_bucketing) {`.",
      "created_at": "2021-01-29T11:14:00Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566749293",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566749293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 546,
      "original_line": 545,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566750699",
      "pull_request_review_id": 579162110,
      "id": 566750699,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njc1MDY5OQ==",
      "diff_hunk": "@@ -500,47 +501,60 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {\n                 // Bucketing has not changed, using existing bucket positions for the new table\n-                vvNew[bucket][nUBucketPos] = n;\n-                info.nRefCount++;\n+                vvNew[bucket][bucket_position] = entry_index;\n+                ++info.nRefCount;\n             } else {\n-                // In case the new table data cannot be used (format unknown, bucket count wrong or new asmap),\n+                // In case the new table data cannot be used (bucket count wrong or new asmap),\n                 // try to give them a reference based on their primary source address.\n                 LogPrint(BCLog::ADDRMAN, \"Bucketing method was updated, re-bucketing addrman entries from disk\\n\");",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 112,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564248956,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`s/restore_bucketing/!restore_bucketing/` in 9a0760db4?",
      "created_at": "2021-01-29T11:16:40Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566750699",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566750699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 552,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566789137",
      "pull_request_review_id": 579212255,
      "id": 566789137,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njc4OTEzNw==",
      "diff_hunk": "@@ -500,47 +501,60 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {",
      "path": "src/addrman.h",
      "position": 116,
      "original_position": 102,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564232061,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `vvNew[bucket][bucket_position] == -1` is just a belt-and-suspenders. It shouldn't be hit (if so, then something has gone wrong with the position serializing/deserializing to place two addresses in the same bucket/position). I think you're right that we can just remove it, but can we leave that as a follow-up? We can't fix _all_ of addrman's problems in one PR :)",
      "created_at": "2021-01-29T12:30:50Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566789137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566789137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 546,
      "original_line": 545,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566789249",
      "pull_request_review_id": 579212417,
      "id": 566789249,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njc4OTI0OQ==",
      "diff_hunk": "@@ -500,47 +501,60 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {\n                 // Bucketing has not changed, using existing bucket positions for the new table\n-                vvNew[bucket][nUBucketPos] = n;\n-                info.nRefCount++;\n+                vvNew[bucket][bucket_position] = entry_index;\n+                ++info.nRefCount;\n             } else {\n-                // In case the new table data cannot be used (format unknown, bucket count wrong or new asmap),\n+                // In case the new table data cannot be used (bucket count wrong or new asmap),\n                 // try to give them a reference based on their primary source address.\n                 LogPrint(BCLog::ADDRMAN, \"Bucketing method was updated, re-bucketing addrman entries from disk\\n\");",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 112,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564248956,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ":man_facepalming: You're right of course. I'll fix.",
      "created_at": "2021-01-29T12:31:04Z",
      "updated_at": "2021-01-29T12:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566789249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566789249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 552,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566793958",
      "pull_request_review_id": 579218968,
      "id": 566793958,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njc5Mzk1OA==",
      "diff_hunk": "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_NEW_BUCKET_COUNT and the asmap checksum\n+     * didn't change, otherwise it is reconstructed as well.",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 15,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564225855,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks. I applied the diff by hand and missed those. Now fixed!",
      "created_at": "2021-01-29T12:40:18Z",
      "updated_at": "2021-01-29T12:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566793958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566793958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 349,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 353,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566859824",
      "pull_request_review_id": 579307091,
      "id": 566859824,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njg1OTgyNA==",
      "diff_hunk": "@@ -500,47 +501,60 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // If the bucket count and asmap checksum haven't changed, then attempt\n+        // to restore the entries to the buckets/positions they were in before\n+        // serialization.\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n-            int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int entry_index{bucket_entry.second};\n+            CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n+            int bucket_position = info.GetBucketPosition(nKey, true, bucket);\n+            if (restore_bucketing && vvNew[bucket][bucket_position] == -1) {",
      "path": "src/addrman.h",
      "position": 116,
      "original_position": 102,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "ac3547eddd8a7d67b4103508f30d5d02a9c1f148",
      "in_reply_to_id": 564232061,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alright, so either we are both correct that this is redundant and not needed, or we are both wrong!\r\n\r\nIf we are wrong, and it can happen that `restore_bucketing` is `true` and `vvNew[bucket][bucket_position] == -1` is `false` (occupied!) then moving the `LogPrint()` call was wrong because it would have been executed inside the `else` branch and now it will not be executed because now it is conditional only on `restore_bucketing`.",
      "created_at": "2021-01-29T14:30:02Z",
      "updated_at": "2021-01-29T14:30:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r566859824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566859824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 546,
      "original_line": 545,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572398580",
      "pull_request_review_id": 585955142,
      "id": 572398580,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjM5ODU4MA==",
      "diff_hunk": "@@ -523,9 +525,10 @@ friend class CAddrManTest;\n             s >> serialized_asmap_version;\n         }\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int n{bucket_entry.second};",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 29,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[addrman] Fix new table bucketing during unserialization\" (b4c5fda417dd9ff8bf9fe24a87d384a649e3730d)\r\n\r\nCould avoid some verbosity here with\r\n\r\n```diff\r\n-        for (auto bucket_entry : bucket_entries) {\r\n-            int bucket{bucket_entry.first};\r\n-            const int n{bucket_entry.second};\r\n+        for (auto [bucket, n] : bucket_entries) {\r\n```",
      "created_at": "2021-02-08T21:50:11Z",
      "updated_at": "2021-02-09T02:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572398580",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572398580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 528,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 530,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572401734",
      "pull_request_review_id": 585955142,
      "id": 572401734,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjQwMTczNA==",
      "diff_hunk": "@@ -500,7 +500,9 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;",
      "path": "src/addrman.h",
      "position": 63,
      "original_position": 7,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[addrman] Fix new table bucketing during unserialization\" (b4c5fda417dd9ff8bf9fe24a87d384a649e3730d)\r\n\r\nSeems like having a data structure here is superfluous if it's just going to be filled up then immediately iterated over and discarded. Maybe it would make sense to remove this vector later.",
      "created_at": "2021-02-08T21:55:44Z",
      "updated_at": "2021-02-09T02:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572401734",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572401734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 503,
      "original_line": 505,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572410044",
      "pull_request_review_id": 585955142,
      "id": 572410044,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjQxMDA0NA==",
      "diff_hunk": "@@ -509,7 +511,7 @@ friend class CAddrManTest;\n                 int nIndex = 0;\n                 s >> nIndex;\n                 if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+                    bucket_entries.emplace_back(bucket, nIndex);",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 16,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[addrman] Fix new table bucketing during unserialization\" (b4c5fda417dd9ff8bf9fe24a87d384a649e3730d)\r\n\r\nIt would be good to have some test coverage for this. A functional test might be hard but I would think a c++ unit test should be straightforward. Past bugs predict future bugs so a test here could steer coverage in a useful direction.",
      "created_at": "2021-02-08T22:07:17Z",
      "updated_at": "2021-02-09T02:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572410044",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572410044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572506601",
      "pull_request_review_id": 586080477,
      "id": 572506601,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjUwNjYwMQ==",
      "diff_hunk": "@@ -523,9 +525,10 @@ friend class CAddrManTest;\n             s >> serialized_asmap_version;\n         }\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n+        for (auto bucket_entry : bucket_entries) {",
      "path": "src/addrman.h",
      "position": 105,
      "original_position": 27,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": null,
      "user": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The old code iterates over `mapInfo[0..nNew]`, so we were guaranteed that all `CAddrInfo`s in the new table make their way into `vvNew` (either in the old buckets, or newly assigned ones in the else block below). With the new code, we have an implicit assumption that `bucket_entries.size() == nNew`. Is that safe to assume? I _think_ it is but just wanted to ask since we are iterating over a different part of the serialized data now.",
      "created_at": "2021-02-09T01:43:45Z",
      "updated_at": "2021-02-09T02:12:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572506601",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572506601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 535,
      "original_line": 528,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572507304",
      "pull_request_review_id": 586080477,
      "id": 572507304,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjUwNzMwNA==",
      "diff_hunk": "@@ -504,14 +504,14 @@ friend class CAddrManTest;\n         // so we store all bucket-entry_index pairs to iterate through later.\n         std::vector<std::pair<int, int>> bucket_entries;\n \n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    bucket_entries.emplace_back(bucket, nIndex);\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {",
      "path": "src/addrman.h",
      "position": 71,
      "original_position": 18,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "009b8e0fdf3bfb11668edacced5d8b70726d5d0e",
      "in_reply_to_id": null,
      "user": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(nit) since `entry_index` can be confused with the for-loop index, perhaps `entry_id` is better (to match `nIdCount`)?",
      "created_at": "2021-02-09T01:45:45Z",
      "updated_at": "2021-02-09T02:08:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572507304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572507304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 511,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572507981",
      "pull_request_review_id": 586080477,
      "id": 572507981,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjUwNzk4MQ==",
      "diff_hunk": "@@ -413,13 +414,13 @@ friend class CAddrManTest;\n                 }\n             }\n         }\n-        // Store asmap version after bucket entries so that it\n+        // Store asmap checksum after bucket entries so that it\n         // can be ignored by older clients for backward compatibility.\n-        uint256 asmap_version;\n+        uint256 asmap_checksum;",
      "path": "src/addrman.h",
      "position": 37,
      "original_position": 27,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "8062d928ce5c495c1b6ecd18e4b30c12da822d90",
      "in_reply_to_id": null,
      "user": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you! I actually tripped over this while reading the old code.\r\n\r\n(nit) could this is a `scripted-diff`?",
      "created_at": "2021-02-09T01:47:41Z",
      "updated_at": "2021-02-09T02:08:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572507981",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572507981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 416,
      "original_line": 419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572509364",
      "pull_request_review_id": 585955142,
      "id": 572509364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjUwOTM2NA==",
      "diff_hunk": "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;",
      "path": "src/addrman.h",
      "position": 113,
      "original_position": 24,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "a5c9b04959f443372400f9a736c6eaf5502284a1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[addrman] Don't rebucket new table entries unnecessarily\" (a5c9b04959f443372400f9a736c6eaf5502284a1)\r\n\r\nIt would be good if comment could say when this condition happens. Particularly if there is any case where it's expected to happen, or if it can only happen loading bad data.\r\n\r\nAlso, discarding entries after max buckets reached seems like another subtle change in behavior that could benefit from a simple unit test. (Or if this an unimportant edge case that doesn't merit a test, maybe it also doesn't merit special handling in the code.)",
      "created_at": "2021-02-09T01:51:21Z",
      "updated_at": "2021-02-09T02:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572509364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572509364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 541,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572513322",
      "pull_request_review_id": 586080477,
      "id": 572513322,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjUxMzMyMg==",
      "diff_hunk": "@@ -335,23 +335,20 @@ friend class CAddrManTest;\n      * * nNew\n      * * nTried\n      * * number of \"new\" buckets XOR 2**30\n-     * * all nNew addrinfos in vvNew\n-     * * all nTried addrinfos in vvTried\n-     * * for each bucket:\n+     * * all new addresses (total count: nNew)\n+     * * all tried addresses (total count: nTried)\n+     * * for each new bucket:\n      *   * number of elements\n-     *   * for each element: index\n+     *   * for each element: index in the serialized \"all new addresses\"\n      * * asmap checksum\n      *\n      * 2**30 is xorred with the number of buckets to make addrman deserializer v0 detect it\n      * as incompatible. This is necessary because it did not check the version number on\n      * deserialization.\n      *\n-     * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n+     * vvNew, vvTried, mapInfo, mapAddr and vRandom are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_NEW_BUCKET_COUNT and the asmap checksum",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 23,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "436292367c1d737cf73bd985293539500d1206f5",
      "in_reply_to_id": null,
      "user": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the format above aren't lines 340-342 an encoding of `vvNew`? If so, why remove this comment?",
      "created_at": "2021-02-09T02:02:44Z",
      "updated_at": "2021-02-09T02:23:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572513322",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572513322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 352,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572518900",
      "pull_request_review_id": 585955142,
      "id": 572518900,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjUxODkwMA==",
      "diff_hunk": "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_checksum == supplied_asmap_checksum) {\n+            if (restore_bucketing && vvNew[bucket][nUBucketPos] == -1) {",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 29,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "a5c9b04959f443372400f9a736c6eaf5502284a1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"[addrman] Don't rebucket new table entries unnecessarily\" (a5c9b04959f443372400f9a736c6eaf5502284a1)\r\n\r\nJust some notes to make sure I'm following this correctly.\r\n\r\n- The `restore_bucketing` change here is aesthetic and the only actual change this line is dropping the `format >= Format::V2_ASMAP` condition. \r\n- The effect of dropping `format` condition is this will now keep existing bucket positions instead of rebucketing when an old format is loaded and there is no asmap. (\"Only rebucket if\" in commit description means \"Use existing bucket positions if\")\r\n- In the case where an old format is loaded an there is an asmap, this logic isn't triggered because the `serialized_asmap_checksum == supplied_asmap_checksum` condition is false.\r\n- Maybe could be a unit test checking old format number + no asmap uses  existing bucket positions",
      "created_at": "2021-02-09T02:19:25Z",
      "updated_at": "2021-02-09T02:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572518900",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572518900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 544,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572736572",
      "pull_request_review_id": 586355506,
      "id": 572736572,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjczNjU3Mg==",
      "diff_hunk": "@@ -523,9 +525,10 @@ friend class CAddrManTest;\n             s >> serialized_asmap_version;\n         }\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n+        for (auto bucket_entry : bucket_entries) {",
      "path": "src/addrman.h",
      "position": 105,
      "original_position": 27,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": 572506601,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `bucket_entries.size() >= nNew`, let me use an example:\r\n\r\n```\r\nmapInfo[id=3] = 1.1.1.1\r\n// for the example, I pick up some arbitrary indexes in vvNew\r\nvvNew[2][5] = id=3\r\nvvNew[4][9] = id=3\r\nnNew = 1\r\n```\r\n\r\nThis would be serialized on disk as:\r\n\r\n```\r\n1 (nNew)\r\n0 (nTried)\r\n1024 (new_bucket_count)\r\n1.1.1.1 (list of new addresses) (*)\r\n(zero tried addresses)\r\n0 (number of elements in vvNew[0])\r\n0 (number of elements in vvNew[1])\r\n1 (number of elements in vvNew[2])\r\n0 (the index in (*) of the first non empty element in vvNew[2])\r\n0 (number of elements in vvNew[3])\r\n1 (number of elements in vvNew[4])\r\n0 (the index in (*) of the first non empty element in vvNew[4])\r\n0 (number of elements in vvNew[5])\r\n...\r\n0 (number of elements in vvNew[1023])\r\n```\r\n\r\nDuring unserialization, in the new code from this PR, this will result in:\r\n\r\n```\r\nbucket_entries[0] = (bucket = 2, index in (*) = 0)\r\nbucket_entries[1] = (bucket = 4, index in (*) = 0)\r\n```\r\n\r\nSo, `bucket_entries.size() = 2` while `nNew = 1`.\r\n",
      "created_at": "2021-02-09T09:46:33Z",
      "updated_at": "2021-02-09T09:46:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572736572",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572736572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 535,
      "original_line": 528,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572739225",
      "pull_request_review_id": 586358821,
      "id": 572739225,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjczOTIyNQ==",
      "diff_hunk": "@@ -504,14 +504,14 @@ friend class CAddrManTest;\n         // so we store all bucket-entry_index pairs to iterate through later.\n         std::vector<std::pair<int, int>> bucket_entries;\n \n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    bucket_entries.emplace_back(bucket, nIndex);\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {",
      "path": "src/addrman.h",
      "position": 71,
      "original_position": 18,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "009b8e0fdf3bfb11668edacced5d8b70726d5d0e",
      "in_reply_to_id": 572507304,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That variable `entry_index` describes the index of the address in the disk-only list of new addresses (marked as `(*)` in [the comment above](https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572736572)).\r\n\r\nI think that should not be confused with the in-memory-only \"id\" and `entry_index` describes it well.",
      "created_at": "2021-02-09T09:50:12Z",
      "updated_at": "2021-02-09T09:50:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572739225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572739225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 511,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572742180",
      "pull_request_review_id": 586362464,
      "id": 572742180,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc0MjE4MA==",
      "diff_hunk": "@@ -335,23 +335,20 @@ friend class CAddrManTest;\n      * * nNew\n      * * nTried\n      * * number of \"new\" buckets XOR 2**30\n-     * * all nNew addrinfos in vvNew\n-     * * all nTried addrinfos in vvTried\n-     * * for each bucket:\n+     * * all new addresses (total count: nNew)\n+     * * all tried addresses (total count: nTried)\n+     * * for each new bucket:\n      *   * number of elements\n-     *   * for each element: index\n+     *   * for each element: index in the serialized \"all new addresses\"\n      * * asmap checksum\n      *\n      * 2**30 is xorred with the number of buckets to make addrman deserializer v0 detect it\n      * as incompatible. This is necessary because it did not check the version number on\n      * deserialization.\n      *\n-     * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n+     * vvNew, vvTried, mapInfo, mapAddr and vRandom are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_NEW_BUCKET_COUNT and the asmap checksum",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 23,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "436292367c1d737cf73bd985293539500d1206f5",
      "in_reply_to_id": 572513322,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, because the memory-only `id` may not equal to the disk-only `index in the serialized \"all new addresses\"`.",
      "created_at": "2021-02-09T09:54:11Z",
      "updated_at": "2021-02-09T09:54:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572742180",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572742180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 352,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572747754",
      "pull_request_review_id": 586369416,
      "id": 572747754,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc0Nzc1NA==",
      "diff_hunk": "@@ -523,9 +525,10 @@ friend class CAddrManTest;\n             s >> serialized_asmap_version;\n         }\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n+        for (auto bucket_entry : bucket_entries) {",
      "path": "src/addrman.h",
      "position": 105,
      "original_position": 27,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": 572506601,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was part of the bug that this PR fixes. nNew is the total number of new addrs. Each new addr can appear in more than one new bucket, so the number of entries in bucket_entries could be higher than nNew. The old code was potentially throwing away these additional placements.",
      "created_at": "2021-02-09T10:01:46Z",
      "updated_at": "2021-02-09T10:01:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572747754",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572747754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 535,
      "original_line": 528,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572749636",
      "pull_request_review_id": 586371926,
      "id": 572749636,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc0OTYzNg==",
      "diff_hunk": "@@ -504,14 +504,14 @@ friend class CAddrManTest;\n         // so we store all bucket-entry_index pairs to iterate through later.\n         std::vector<std::pair<int, int>> bucket_entries;\n \n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    bucket_entries.emplace_back(bucket, nIndex);\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int num_entries{0};\n+            s >> num_entries;\n+            for (int n = 0; n < num_entries; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {",
      "path": "src/addrman.h",
      "position": 71,
      "original_position": 18,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "009b8e0fdf3bfb11668edacced5d8b70726d5d0e",
      "in_reply_to_id": 572507304,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that's a reasonable suggestion, but not worth invalidating the existing ACKs.",
      "created_at": "2021-02-09T10:04:33Z",
      "updated_at": "2021-02-09T10:04:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572749636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572749636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 511,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572750454",
      "pull_request_review_id": 586372983,
      "id": 572750454,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc1MDQ1NA==",
      "diff_hunk": "@@ -413,13 +414,13 @@ friend class CAddrManTest;\n                 }\n             }\n         }\n-        // Store asmap version after bucket entries so that it\n+        // Store asmap checksum after bucket entries so that it\n         // can be ignored by older clients for backward compatibility.\n-        uint256 asmap_version;\n+        uint256 asmap_checksum;",
      "path": "src/addrman.h",
      "position": 37,
      "original_position": 27,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "8062d928ce5c495c1b6ecd18e4b30c12da822d90",
      "in_reply_to_id": 572507981,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> (nit) could this is a scripted-diff?\r\n\r\nScripted diffs are useful when there are many occurrences of a string across multiple files. This string is used in 7 places, so is easy enough to review by eye. ",
      "created_at": "2021-02-09T10:05:45Z",
      "updated_at": "2021-02-09T10:05:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572750454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572750454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 416,
      "original_line": 419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572751281",
      "pull_request_review_id": 586374053,
      "id": 572751281,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc1MTI4MQ==",
      "diff_hunk": "@@ -335,23 +335,20 @@ friend class CAddrManTest;\n      * * nNew\n      * * nTried\n      * * number of \"new\" buckets XOR 2**30\n-     * * all nNew addrinfos in vvNew\n-     * * all nTried addrinfos in vvTried\n-     * * for each bucket:\n+     * * all new addresses (total count: nNew)\n+     * * all tried addresses (total count: nTried)\n+     * * for each new bucket:\n      *   * number of elements\n-     *   * for each element: index\n+     *   * for each element: index in the serialized \"all new addresses\"\n      * * asmap checksum\n      *\n      * 2**30 is xorred with the number of buckets to make addrman deserializer v0 detect it\n      * as incompatible. This is necessary because it did not check the version number on\n      * deserialization.\n      *\n-     * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n+     * vvNew, vvTried, mapInfo, mapAddr and vRandom are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_NEW_BUCKET_COUNT and the asmap checksum",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 23,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "436292367c1d737cf73bd985293539500d1206f5",
      "in_reply_to_id": 572513322,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See the line above. vvNew isn't encoded explicitly but is reconstructed.",
      "created_at": "2021-02-09T10:06:56Z",
      "updated_at": "2021-02-09T10:06:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572751281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572751281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 352,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572751661",
      "pull_request_review_id": 586374536,
      "id": 572751661,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc1MTY2MQ==",
      "diff_hunk": "@@ -500,7 +500,9 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;",
      "path": "src/addrman.h",
      "position": 63,
      "original_position": 7,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": 572401734,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that vector could be avoided only if we could seek into the stream. Then we could change the current:\r\n```\r\nread new buckets\r\nread asmap checksum\r\nprocess the new buckets that were read, depending on the asmap checksum\r\n```\r\nto\r\n```\r\nseek forward and read the asmap checksum (last 32 bytes)\r\nseek back and read+process the new bucketing data, depending on the asmap checksum\r\n```",
      "created_at": "2021-02-09T10:07:28Z",
      "updated_at": "2021-02-09T10:07:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572751661",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572751661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 503,
      "original_line": 505,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572753348",
      "pull_request_review_id": 586376587,
      "id": 572753348,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc1MzM0OA==",
      "diff_hunk": "@@ -500,7 +500,9 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;",
      "path": "src/addrman.h",
      "position": 63,
      "original_position": 7,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": 572401734,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We only know how we're going to use the vector after we've deserialized the asmap_checksum field, so I don't think we can get rid of it.",
      "created_at": "2021-02-09T10:09:47Z",
      "updated_at": "2021-02-09T10:09:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572753348",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572753348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 503,
      "original_line": 505,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572753489",
      "pull_request_review_id": 586376753,
      "id": 572753489,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc1MzQ4OQ==",
      "diff_hunk": "@@ -509,7 +511,7 @@ friend class CAddrManTest;\n                 int nIndex = 0;\n                 s >> nIndex;\n                 if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+                    bucket_entries.emplace_back(bucket, nIndex);",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 16,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": 572410044,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A test is in the baking at https://github.com/jnewbery/bitcoin/pull/18.",
      "created_at": "2021-02-09T10:09:58Z",
      "updated_at": "2021-02-09T10:09:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572753489",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572753489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572753969",
      "pull_request_review_id": 586377353,
      "id": 572753969,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc1Mzk2OQ==",
      "diff_hunk": "@@ -509,7 +511,7 @@ friend class CAddrManTest;\n                 int nIndex = 0;\n                 s >> nIndex;\n                 if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+                    bucket_entries.emplace_back(bucket, nIndex);",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 16,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": 572410044,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I definitely agree. @vasild has a test here: https://github.com/jnewbery/bitcoin/pull/18 which can be added after this PR.",
      "created_at": "2021-02-09T10:10:40Z",
      "updated_at": "2021-02-09T10:10:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572753969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572753969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572756630",
      "pull_request_review_id": 586381002,
      "id": 572756630,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc1NjYzMA==",
      "diff_hunk": "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;",
      "path": "src/addrman.h",
      "position": 113,
      "original_position": 24,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "a5c9b04959f443372400f9a736c6eaf5502284a1",
      "in_reply_to_id": 572509364,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'll expand this comment in a follow-up.",
      "created_at": "2021-02-09T10:14:29Z",
      "updated_at": "2021-02-09T10:14:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572756630",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572756630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 541,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572763470",
      "pull_request_review_id": 586389537,
      "id": 572763470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc2MzQ3MA==",
      "diff_hunk": "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;\n+\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_checksum == supplied_asmap_checksum) {\n+            if (restore_bucketing && vvNew[bucket][nUBucketPos] == -1) {",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 29,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "a5c9b04959f443372400f9a736c6eaf5502284a1",
      "in_reply_to_id": 572518900,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The restore_bucketing change here is aesthetic and the only actual change this line is dropping the format >= Format::V2_ASMAP condition.\r\n\r\nRight, this condition doesn't change during loop iterations, so it's clearer to move it out of the loop, mark it const, and only do a conditional check inside the loop on what can change over iterations.\r\n\r\n> The effect of dropping format condition is this will now keep existing bucket positions instead of rebucketing when an old format is loaded and there is no asmap. (\"Only rebucket if\" in commit description means \"Use existing bucket positions if\")\r\n\r\nThat's right. If the file format is old (no asmap), and we don't have an asmap, then we gain nothing by dropping new bucket positions.\r\n\r\n> In the case where an old format is loaded an there is an asmap, this logic isn't triggered because the serialized_asmap_checksum == supplied_asmap_checksum condition is false.\r\n\r\nRight.\r\n\r\n> Maybe could be a unit test checking old format number + no asmap uses existing bucket positions\r\n\r\nPerhaps. It's a bit difficult to test because we can't easily serialize addrman in the old format.",
      "created_at": "2021-02-09T10:23:57Z",
      "updated_at": "2021-02-09T10:23:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572763470",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572763470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 544,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572763827",
      "pull_request_review_id": 586390018,
      "id": 572763827,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjc2MzgyNw==",
      "diff_hunk": "@@ -523,9 +525,10 @@ friend class CAddrManTest;\n             s >> serialized_asmap_version;\n         }\n \n-        for (int n = 0; n < nNew; n++) {\n-            CAddrInfo &info = mapInfo[n];\n-            int bucket = entryToBucket[n];\n+        for (auto bucket_entry : bucket_entries) {\n+            int bucket{bucket_entry.first};\n+            const int n{bucket_entry.second};",
      "path": "src/addrman.h",
      "position": null,
      "original_position": 29,
      "commit_id": "4676a4fb5be0f6ef0b3f71c1f4361c20f7cb0e0b",
      "original_commit_id": "b4c5fda417dd9ff8bf9fe24a87d384a649e3730d",
      "in_reply_to_id": 572398580,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ":heart: structured bindings. Good suggestion. I'll do in a follow-up.",
      "created_at": "2021-02-09T10:24:31Z",
      "updated_at": "2021-02-09T10:24:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r572763827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572763827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
        }
      },
      "start_line": null,
      "original_start_line": 528,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 530,
      "side": "RIGHT"
    }
  ]
}