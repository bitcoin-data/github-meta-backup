{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732",
    "id": 1011383194,
    "node_id": "PR_kwDOABII5848SHua",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25732",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25732.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25732.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/640edd9896d2367e5ad1d9917e889bb5e1baba09",
    "number": 25732,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "tests: Use test utils each time that it is possible",
    "user": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is one of my attempts to make less painful the https://github.com/bitcoin/bitcoin/pull/23127 and try to bring this simple refactoring in.\r\n\r\nIssue related https://github.com/bitcoin/bitcoin/issues/23119\r\n\r\nPR 1/N I think there are a couple of equal size later",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2022-07-28T22:41:34Z",
    "updated_at": "2022-10-03T13:15:25Z",
    "closed_at": "2022-10-03T13:15:25Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "cc911954aefac6c1265cabce5ca1a65b6abdd73f",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "vincenzopalazzo:macros/assert_promotion",
      "ref": "macros/assert_promotion",
      "sha": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 291118974,
        "node_id": "MDEwOlJlcG9zaXRvcnkyOTExMTg5NzQ=",
        "name": "bitcoin",
        "full_name": "vincenzopalazzo/bitcoin",
        "owner": {
          "login": "vincenzopalazzo",
          "id": 17150045,
          "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
          "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vincenzopalazzo",
          "html_url": "https://github.com/vincenzopalazzo",
          "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
          "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
          "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
          "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
          "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vincenzopalazzo/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vincenzopalazzo/bitcoin",
        "archive_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vincenzopalazzo/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vincenzopalazzo/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vincenzopalazzo/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vincenzopalazzo/bitcoin/hooks",
        "svn_url": "https://github.com/vincenzopalazzo/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 217793,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-07T15:36:59Z",
        "created_at": "2020-08-28T18:29:32Z",
        "updated_at": "2021-10-28T07:54:11Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "29d540b7ada890dd588c4825d40c27c5e6f20061",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
      }
    },
    "author_association": "NONE",
    "draft": false,
    "additions": 92,
    "deletions": 58,
    "changed_files": 10,
    "commits": 1,
    "review_comments": 30,
    "comments": 10
  },
  "events": [
    {
      "event": "labeled",
      "id": 7085531305,
      "node_id": "LE_lADOABII585OxX_1zwAAAAGmVKCp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7085531305",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-28T23:02:30Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 1198960064,
      "node_id": "IC_kwDOABII585Hdq3A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1198960064",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-29T07:20:42Z",
      "updated_at": "2022-09-27T00:12:39Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23502](https://github.com/bitcoin/bitcoin/pull/23502) (wallet: Avoid underpaying transaction fees when signing taproot spends by achow101)\n* [#23127](https://github.com/bitcoin/bitcoin/pull/23127) (tests: Use test framework utils where possible by vincenzopalazzo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1198960064",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "commented",
      "id": 1199044180,
      "node_id": "IC_kwDOABII585Hd_ZU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1199044180",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-29T09:02:23Z",
      "updated_at": "2022-07-29T09:02:23Z",
      "author_association": "MEMBER",
      "body": "```bash\r\ntest/functional/interface_zmq.py:367: error: unexpected indent  [syntax]\r\nFound 1 error in 1 file (errors prevented further checking)\r\n/tmp/cirrus-ci-build/test/functional/interface_zmq.py:367: unexpected indent at \"assert_raises_rpc_error(-8, \"Verbose results cannot contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\"\r\nPython dead code detection found some issues\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1199044180",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7088009219,
      "node_id": "HRFPE_lADOABII585OxX_1zwAAAAGmenAD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7088009219",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-29T09:26:16Z"
    },
    {
      "event": "commented",
      "id": 1199066822,
      "node_id": "IC_kwDOABII585HeE7G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1199066822",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-29T09:28:06Z",
      "updated_at": "2022-07-29T09:43:54Z",
      "author_association": "NONE",
      "body": "Thanks! Cherry-pick problem with an older version of the `test/functional/interface_zmq.py` file, lets see if the CI catch other stuff",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1199066822",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7088150780,
      "node_id": "HRFPE_lADOABII585OxX_1zwAAAAGmfJj8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7088150780",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-29T09:48:47Z"
    },
    {
      "event": "reviewed",
      "id": 1057095998,
      "node_id": "PRR_kwDOABII584_AgE-",
      "url": null,
      "actor": null,
      "commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#pullrequestreview-1057095998",
      "submitted_at": "2022-08-01T11:17:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY0MGVkZDk4OTZkMjM2N2U1YWQxZDk5MTdlODg5YmI1ZTFiYWJhMDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "tree": {
        "sha": "d3c1f035c34b8d596c67ceb3e6f6df679febbbbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3c1f035c34b8d596c67ceb3e6f6df679febbbbd"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d3c1f035c34b8d596c67ceb3e6f6df679febbbbd\nparent ce3b75690d10426e97d087ca600140a19bf180b7\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1659386372 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1659386390 +0100\n\ntests: Use test utils each time that it is possible\n\n\n* feature_taproot: Introduce another assert called assert_true. \n\n* interface_zmq.py: Remove assert in favor of test utils functions\n\n* feature_taproot: Fixed imports\n\n* mining_getblocktemplate_longpoll.py: Replace assert with assert_equal\n\n* p2p_addrfetch.py: Replace assert with assert_equal\n\n* p2p_blockfilters.py: Replace assert with test utils function\n\n* test framework: Adding possibility to specify messages in the assert functions\n\n* feature_taproot.py: Use the err_msg introduced in the assert framework.\n\n* feature_taproot.py: Use the err_msg introduced in the assert framework.\n\n* feature_taproot.py: Use the err_msg introduced in the assert framework.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmLoOhYACgkQi23CuHC4\nDV8uoA/+Kr1VYMbCxA7kFQUn3upH4BHxT+gCWZ/7L/b8eygmBBllJzlEK6yyEP5v\n1vbWcRaW8F9hnSg317S4WonWYNu2tYJoFtNCZWHpWq43EfZcim3bwd+Neb+j71O2\n1iPTIyzBUyXcxI71lsvSGQ4vg01OvcwHfRNdLBQ9iNnVCT4GD9zK/M9AfRJAjUkN\nndE/+s5sS65T9DPjWmWwRODE8Z7F1jp6Seet7eNJa2FpqYF9c5M0gZRhoO++/qT+\nw8pynFpzMqExB0u81h7FBA/0wiEVUgdY6F8eXeR4updpjmjLr71AqF60xLnkSg3N\nGNep8OSrruP3GEt6fo56/gDtKItabbAEiIufLkjAR8y9rGqix+olWqpA91ZPla8C\n6rrwSKvDnGHuS8lSuZROGOhqo/mndXyG/WtoIxikNtY0KRonZwHT9kHR3ZwvhnpM\niuft1mReUrmu3zjYnOKJdj16zeXCEoZ1ZT6A/fnhM3qKBtX+gVU7L3hX8RYn2cAq\nuQgVLBHE0DtmGVCN0khvhRRNE69NJnJdmmYK0402K4kJH7B92/+Sy6qtsXFEUUt0\n1Blz6y8rQa5vpDIECCLQ8714qKFf/QDWTn4BNQvJLap5A8Ir5CB5CVRlY+T0Qw2e\nhLJrbl1rBrv3XFDYn/HRHXh/fRMTHQGZXIzX4KA00GfLH5fl5Uk=\n=twbu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce3b75690d10426e97d087ca600140a19bf180b7",
          "sha": "ce3b75690d10426e97d087ca600140a19bf180b7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ce3b75690d10426e97d087ca600140a19bf180b7"
        }
      ],
      "message": "tests: Use test utils each time that it is possible\n\n\n* feature_taproot: Introduce another assert called assert_true. \n\n* interface_zmq.py: Remove assert in favor of test utils functions\n\n* feature_taproot: Fixed imports\n\n* mining_getblocktemplate_longpoll.py: Replace assert with assert_equal\n\n* p2p_addrfetch.py: Replace assert with assert_equal\n\n* p2p_blockfilters.py: Replace assert with test utils function\n\n* test framework: Adding possibility to specify messages in the assert functions\n\n* feature_taproot.py: Use the err_msg introduced in the assert framework.\n\n* feature_taproot.py: Use the err_msg introduced in the assert framework.\n\n* feature_taproot.py: Use the err_msg introduced in the assert framework.",
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2022-08-01T20:39:50Z"
      },
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2022-08-01T20:39:32Z"
      },
      "sha": "640edd9896d2367e5ad1d9917e889bb5e1baba09"
    },
    {
      "event": "commented",
      "id": 1201698700,
      "node_id": "IC_kwDOABII585HoHeM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1201698700",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-01T20:41:12Z",
      "updated_at": "2022-08-01T20:41:12Z",
      "author_association": "NONE",
      "body": "Thanks @stickies-v, you remember me that we have a pending decision on the API that we are using right now https://github.com/bitcoin/bitcoin/pull/23127#discussion_r784135049 maybe we can discuss it here!",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1201698700",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "mentioned",
      "id": 7104773164,
      "node_id": "MEE_lADOABII585OxX_1zwAAAAGnejws",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7104773164",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-01T20:41:13Z"
    },
    {
      "event": "subscribed",
      "id": 7104773173,
      "node_id": "SE_lADOABII585OxX_1zwAAAAGnejw1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7104773173",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-01T20:41:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7104983542,
      "node_id": "HRFPE_lADOABII585OxX_1zwAAAAGnfXH2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7104983542",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-01T21:19:53Z"
    },
    {
      "event": "reviewed",
      "id": 1058843131,
      "node_id": "PRR_kwDOABII584_HKn7",
      "url": null,
      "actor": null,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I don't want to bikeshed over this too much, it's not a big deal. But my view (and it has changed a bit after reading the previous issues/PRs) is that:\r\n\r\n- we check values for being (not) `None` quite often. Even though `==` comparison would work fine in probably all cases, it's not the Python way of doing things and given how often this is used I feel adding a `assert_is_none()` and `assert_is_not_none()` function is warranted. Since generally nothing except for `None` should be compared through `is`, I'd say we can leave out `assert_is()` and `assert_is_none()` (which I suggested earlier) until we actually need it (probably never).\r\n- even though boolean `assert_true()` and `assert_false()` functions _can_ have their merit, upon re-reading I don't see any in the current PR because we currently only ever pass it booleans. In all the cases where `assert_true()` is used, a simple `assert <expression>, <err_msg>` is functionally equivalent, shorter, and without the need to define `assert_true()`. In all places where `assert_true()` is used, the logs would just show `False is not True`, which does not help. I believe this is what @MarcoFalke was [referring to](https://github.com/bitcoin/bitcoin/pull/23127#discussion_r784135049), and I agree with him for this scenario (but not for the `assert_equal()` on which the comment thread was based). Having a boolean assertion function is useful as soon as you need to pass non-boolean types to it. If we do decide to implement an `assert_true(expr, err_msg)` function, it should be implemented to evaluate `bool(expr) is not True` instead of just `expr is not True` (as commented), in which case it offers benefit over `assert_equal(bool(expr), True)` because we can now log the value of `expr` instead of `bool(expr)`. But again, it looks like we currently don't have a need for this.\r\n- From my reading of previous issues, it seems like there is no reason to necessarily phase out _all_ usage of plain `assert` statements here - the only reason to add bespoke `assert_...()` functions was to make it _easier_ to include error messages. As such, I think it's fine to keep plain `assert` statements where it's easier until we have a clear reason (please tell me if I've missed that) to do so.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#pullrequestreview-1058843131",
      "submitted_at": "2022-08-02T14:14:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
    },
    {
      "event": "commented",
      "id": 1203038503,
      "node_id": "IC_kwDOABII585HtOkn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203038503",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T17:51:39Z",
      "updated_at": "2022-08-02T17:52:46Z",
      "author_association": "NONE",
      "body": "In this PR I have no strong opinion in whatever decision we take, and I just do not care too much about what type of assert we will use, as I see this will not bring too much value inside the code base.\r\n\r\nI'm fine with `assert_is_none(x)`, but it is possible to have the same result with `assert_true(x is None, err_msg=f\"wrong value: {x}\")` or `assert_equal(x, None, err_msg=f\"wrong value {x}\")`\r\n\r\nmore function we add, more code to maintain we have, and if there is no strong agreement I will preferer to remove all the `asser_*` functions and keep just `assert_equal` because if we add other functions here we also need to migrate the old code, and migrate test unit IMHO it is never a good idea",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1203038503",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "commented",
      "id": 1203082702,
      "node_id": "IC_kwDOABII585HtZXO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203082702",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T18:39:10Z",
      "updated_at": "2022-08-02T18:39:10Z",
      "author_association": "MEMBER",
      "body": "Yeah okay let's do the common denominator approach now and potentially add more functions later on, I don't want to push on the `is` thing too much. So I think in short, remove `assert_true()` in favour of generic `assert` statements, and use `assert_equal` for the other uses? I'll re-review once that's updated.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1203082702",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "commented",
      "id": 1265362648,
      "node_id": "IC_kwDOABII585La-bY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265362648",
      "actor": {
        "login": "NorrinRadd",
        "id": 971294,
        "node_id": "MDQ6VXNlcjk3MTI5NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971294?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NorrinRadd",
        "html_url": "https://github.com/NorrinRadd",
        "followers_url": "https://api.github.com/users/NorrinRadd/followers",
        "following_url": "https://api.github.com/users/NorrinRadd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NorrinRadd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NorrinRadd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NorrinRadd/subscriptions",
        "organizations_url": "https://api.github.com/users/NorrinRadd/orgs",
        "repos_url": "https://api.github.com/users/NorrinRadd/repos",
        "events_url": "https://api.github.com/users/NorrinRadd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NorrinRadd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T12:23:00Z",
      "updated_at": "2022-10-03T12:23:00Z",
      "author_association": "NONE",
      "body": "Dup from IRC: this PR has been quiet for 2 months.  Is it ok if someone else completes the last recommendations?\r\n\r\nSecondly, the latest ask is essentially the opposite of the the ask in the issue this PR is meant to address.  Can we get some confirmation on what the approach should be? cc: @theStack ",
      "user": {
        "login": "NorrinRadd",
        "id": 971294,
        "node_id": "MDQ6VXNlcjk3MTI5NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971294?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NorrinRadd",
        "html_url": "https://github.com/NorrinRadd",
        "followers_url": "https://api.github.com/users/NorrinRadd/followers",
        "following_url": "https://api.github.com/users/NorrinRadd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NorrinRadd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NorrinRadd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NorrinRadd/subscriptions",
        "organizations_url": "https://api.github.com/users/NorrinRadd/orgs",
        "repos_url": "https://api.github.com/users/NorrinRadd/repos",
        "events_url": "https://api.github.com/users/NorrinRadd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NorrinRadd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1265362648",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "mentioned",
      "id": 7506725290,
      "node_id": "MEE_lADOABII585OxX_1zwAAAAG_b4mq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7506725290",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T12:23:00Z"
    },
    {
      "event": "subscribed",
      "id": 7506725299,
      "node_id": "SE_lADOABII585OxX_1zwAAAAG_b4mz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7506725299",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T12:23:00Z"
    },
    {
      "event": "commented",
      "id": 1265386228,
      "node_id": "IC_kwDOABII585LbEL0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265386228",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T12:44:08Z",
      "updated_at": "2022-10-03T12:44:08Z",
      "author_association": "NONE",
      "body": ">Dup from IRC: this PR has been quiet for 2 months. Is it ok if someone else completes the last recommendations?\r\n\r\nFeel free to cherry-pick my commits and continue in a new PR it is totally fine, and also it useful that someone else will continue an unfinished work",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1265386228",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "commented",
      "id": 1265397250,
      "node_id": "IC_kwDOABII585LbG4C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265397250",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T12:54:22Z",
      "updated_at": "2022-10-03T12:54:22Z",
      "author_association": "MEMBER",
      "body": "> Feel free to cherry-pick my commits and continue in a new PR it is totally fine,\r\n\r\n@vincenzopalazzo does that mean you're no-longer working on / maintaining this PR? If so, would you like to close it?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1265397250",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "mentioned",
      "id": 7506976641,
      "node_id": "MEE_lADOABII585OxX_1zwAAAAG_c1-B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7506976641",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T12:54:22Z"
    },
    {
      "event": "subscribed",
      "id": 7506976648,
      "node_id": "SE_lADOABII585OxX_1zwAAAAG_c1-I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7506976648",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T12:54:22Z"
    },
    {
      "event": "commented",
      "id": 1265423458,
      "node_id": "IC_kwDOABII585LbNRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265423458",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T13:15:25Z",
      "updated_at": "2022-10-03T13:15:25Z",
      "author_association": "NONE",
      "body": "@fanquake Yes I think that there are people that can give a better love to this PR",
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#issuecomment-1265423458",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25732"
    },
    {
      "event": "closed",
      "id": 7507162109,
      "node_id": "CE_lADOABII585OxX_1zwAAAAG_djP9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7507162109",
      "actor": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T13:15:25Z"
    },
    {
      "event": "mentioned",
      "id": 7507162142,
      "node_id": "MEE_lADOABII585OxX_1zwAAAAG_djQe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7507162142",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T13:15:25Z"
    },
    {
      "event": "subscribed",
      "id": 7507162152,
      "node_id": "SE_lADOABII585OxX_1zwAAAAG_djQo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7507162152",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T13:15:25Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934388369",
      "pull_request_review_id": 1057095998,
      "id": 934388369,
      "node_id": "PRRC_kwDOABII5843saKR",
      "diff_hunk": "@@ -47,20 +47,44 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 11,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Less LoC and less code execution when err_msg is provided: (same for the other functions)\r\n```suggestion\r\n        if err_msg is None:\r\n            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\r\n        raise AssertionError(err_msg)\r\n```",
      "created_at": "2022-08-01T10:41:25Z",
      "updated_at": "2022-08-01T11:17:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934388369",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934388369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934393815",
      "pull_request_review_id": 1057095998,
      "id": 934393815,
      "node_id": "PRRC_kwDOABII5843sbfX",
      "diff_hunk": "@@ -47,20 +47,44 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):",
      "path": "test/functional/test_framework/util.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In `assert_raises_message` (which doesn't seem to be used anywhere) we already use the `message` name instead of `err_msg`. I don't care for which one we use, but I think consistency would be preferable?",
      "created_at": "2022-08-01T10:48:37Z",
      "updated_at": "2022-08-01T11:17:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934393815",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934393815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934395972",
      "pull_request_review_id": 1057095998,
      "id": 934395972,
      "node_id": "PRRC_kwDOABII5843scBE",
      "diff_hunk": "@@ -47,20 +47,44 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than(thing1, thing2):\n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:\n+        msg = \"%s it is not True\" % str(thing)",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 45,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        msg = \"%s is not True\" % str(thing)\r\n```",
      "created_at": "2022-08-01T10:51:28Z",
      "updated_at": "2022-08-01T11:17:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934395972",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934395972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934400062",
      "pull_request_review_id": 1057095998,
      "id": 934400062,
      "node_id": "PRRC_kwDOABII5843sdA-",
      "diff_hunk": "@@ -495,11 +499,11 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n \n     # Compute scriptPubKey and set useful defaults based on the inputs.\n     if witv0:\n-        assert tap is None\n+        assert_equal(tap, None)",
      "path": "test/functional/feature_taproot.py",
      "position": 25,
      "original_position": 25,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "edit: please disregard the below\r\n\r\n~~`err_msg` defaults to None and we usually don't specify it. Also, since some assert functions iterate over *args, I'd always use `err_msg` as a named argument, even when not required (as e.g. in `assert_equal`)~~\r\n```suggestion\r\n        assert_equal(tap)\r\n```",
      "created_at": "2022-08-01T10:56:50Z",
      "updated_at": "2022-08-01T21:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934400062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934400062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 502,
      "original_line": 502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934407120",
      "pull_request_review_id": 1057095998,
      "id": 934407120,
      "node_id": "PRRC_kwDOABII5843sevQ",
      "diff_hunk": "@@ -495,11 +499,11 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n \n     # Compute scriptPubKey and set useful defaults based on the inputs.\n     if witv0:\n-        assert tap is None\n+        assert_equal(tap, None)\n         conf[\"mode\"] = \"witv0\"\n         if pkh is not None:\n             # P2WPKH\n-            assert script is None\n+            assert_equal(script, None)",
      "path": "test/functional/feature_taproot.py",
      "position": 30,
      "original_position": 30,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`==` and `is` are not entirely equivalent in Python, with both differences in evaluation speed and outcome. Even though I think it's fine to use the equality operator here, I think the proper way to do it would be to add assert_is and/or assert_is_none functions (e.g. unittest also has these: https://docs.python.org/3/library/unittest.html#assert-methods)",
      "created_at": "2022-08-01T11:06:04Z",
      "updated_at": "2022-08-01T11:17:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934407120",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934407120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 506,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934410841",
      "pull_request_review_id": 1057095998,
      "id": 934410841,
      "node_id": "PRRC_kwDOABII5843sfpZ",
      "diff_hunk": "@@ -136,24 +137,24 @@ def run_test(self):\n         wallet = node_v18.get_wallet_rpc(\"w1_v18\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] > 0\n+        assert_greater_than(info['keypoolsize'], 0)\n \n         # w2: wallet with private keys disabled, created on master: update this\n         #     test when default wallets private keys disabled can no longer be\n         #     opened by older versions.\n         node_master.createwallet(wallet_name=\"w2\", disable_private_keys=True)\n         wallet = node_master.get_wallet_rpc(\"w2\")\n         info = wallet.getwalletinfo()\n-        assert info['private_keys_enabled'] == False\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['private_keys_enabled'], False)",
      "path": "test/functional/feature_backwards_compatibility.py",
      "position": 41,
      "original_position": 41,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since you added `assert_true`, should we also have `assert_false`?",
      "created_at": "2022-08-01T11:10:45Z",
      "updated_at": "2022-08-01T11:17:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934410841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934410841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934414020",
      "pull_request_review_id": 1057095998,
      "id": 934414020,
      "node_id": "PRRC_kwDOABII5843sgbE",
      "diff_hunk": "@@ -70,9 +72,9 @@ def receive_sequence(self):\n         label = chr(body[32])\n         mempool_sequence = None if len(body) != 32+1+8 else struct.unpack(\"<Q\", body[32+1:])[0]\n         if mempool_sequence is not None:\n-            assert label == \"A\" or label == \"R\"\n+            assert_true(label == \"A\" or label == \"R\", err_msg=\"{} different from A or C\".format(label))",
      "path": "test/functional/interface_zmq.py",
      "position": null,
      "original_position": 14,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could optionally also implement `assert_in` (see https://docs.python.org/3/library/unittest.html#assert-methods)?",
      "created_at": "2022-08-01T11:15:11Z",
      "updated_at": "2022-08-01T11:17:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934414020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934414020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934414593",
      "pull_request_review_id": 1057095998,
      "id": 934414593,
      "node_id": "PRRC_kwDOABII5843sgkB",
      "diff_hunk": "@@ -70,9 +72,9 @@ def receive_sequence(self):\n         label = chr(body[32])\n         mempool_sequence = None if len(body) != 32+1+8 else struct.unpack(\"<Q\", body[32+1:])[0]\n         if mempool_sequence is not None:\n-            assert label == \"A\" or label == \"R\"\n+            assert_true(label == \"A\" or label == \"R\", err_msg=\"{} different from A or C\".format(label))",
      "path": "test/functional/interface_zmq.py",
      "position": null,
      "original_position": 14,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934414020,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "f-strings are easier to read imo:\r\n```suggestion\r\n            assert_true(label == \"A\" or label == \"R\", err_msg=f\"{label} different from A or C\")\r\n```",
      "created_at": "2022-08-01T11:16:01Z",
      "updated_at": "2022-08-01T11:17:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934414593",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934414593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934886339",
      "pull_request_review_id": 1057815564,
      "id": 934886339,
      "node_id": "PRRC_kwDOABII5843uTvD",
      "diff_hunk": "@@ -47,20 +47,44 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 11,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934388369,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IMHO the only reason your solution is better than mine is that you avoid the copy of the string, otherwise is only a different way to a boolean condition :)",
      "created_at": "2022-08-01T20:27:21Z",
      "updated_at": "2022-08-01T20:27:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934886339",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934886339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934895798",
      "pull_request_review_id": 1057828334,
      "id": 934895798,
      "node_id": "PRRC_kwDOABII5843uWC2",
      "diff_hunk": "@@ -47,20 +47,44 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):",
      "path": "test/functional/test_framework/util.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934393815,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I preferer to use `err_msg` because in the future you are free to add the message if you need it for other stuff, I like to leave the port open to extension. \r\n\r\nWhat do you think?",
      "created_at": "2022-08-01T20:30:00Z",
      "updated_at": "2022-08-01T20:30:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934895798",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934895798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934897069",
      "pull_request_review_id": 1057830191,
      "id": 934897069,
      "node_id": "PRRC_kwDOABII5843uWWt",
      "diff_hunk": "@@ -495,11 +499,11 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n \n     # Compute scriptPubKey and set useful defaults based on the inputs.\n     if witv0:\n-        assert tap is None\n+        assert_equal(tap, None)",
      "path": "test/functional/feature_taproot.py",
      "position": 25,
      "original_position": 25,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934400062,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think not to being specific here causes confusion for people that are not full-time on bitcoin core and do not know how all the API work, if you are not strong in opposition I would like to keep this more explicit",
      "created_at": "2022-08-01T20:31:50Z",
      "updated_at": "2022-08-01T20:31:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934897069",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934897069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 502,
      "original_line": 502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934898796",
      "pull_request_review_id": 1057832534,
      "id": 934898796,
      "node_id": "PRRC_kwDOABII5843uWxs",
      "diff_hunk": "@@ -495,11 +499,11 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n \n     # Compute scriptPubKey and set useful defaults based on the inputs.\n     if witv0:\n-        assert tap is None\n+        assert_equal(tap, None)\n         conf[\"mode\"] = \"witv0\"\n         if pkh is not None:\n             # P2WPKH\n-            assert script is None\n+            assert_equal(script, None)",
      "path": "test/functional/feature_taproot.py",
      "position": 30,
      "original_position": 30,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934407120,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I'm getting confused here :) \r\n\r\nWe need to converge on some code style here otherwise we cause only confusion https://github.com/bitcoin/bitcoin/pull/23127#discussion_r784135049\r\n\r\ncc @MarcoFalke ",
      "created_at": "2022-08-01T20:34:27Z",
      "updated_at": "2022-08-01T20:34:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934898796",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934898796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 506,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934899089",
      "pull_request_review_id": 1057832903,
      "id": 934899089,
      "node_id": "PRRC_kwDOABII5843uW2R",
      "diff_hunk": "@@ -136,24 +137,24 @@ def run_test(self):\n         wallet = node_v18.get_wallet_rpc(\"w1_v18\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] > 0\n+        assert_greater_than(info['keypoolsize'], 0)\n \n         # w2: wallet with private keys disabled, created on master: update this\n         #     test when default wallets private keys disabled can no longer be\n         #     opened by older versions.\n         node_master.createwallet(wallet_name=\"w2\", disable_private_keys=True)\n         wallet = node_master.get_wallet_rpc(\"w2\")\n         info = wallet.getwalletinfo()\n-        assert info['private_keys_enabled'] == False\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['private_keys_enabled'], False)",
      "path": "test/functional/feature_backwards_compatibility.py",
      "position": 41,
      "original_position": 41,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934410841,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934898796",
      "created_at": "2022-08-01T20:34:49Z",
      "updated_at": "2022-08-01T20:34:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934899089",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934899089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934899720",
      "pull_request_review_id": 1057833747,
      "id": 934899720,
      "node_id": "PRRC_kwDOABII5843uXAI",
      "diff_hunk": "@@ -136,24 +137,24 @@ def run_test(self):\n         wallet = node_v18.get_wallet_rpc(\"w1_v18\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] > 0\n+        assert_greater_than(info['keypoolsize'], 0)\n \n         # w2: wallet with private keys disabled, created on master: update this\n         #     test when default wallets private keys disabled can no longer be\n         #     opened by older versions.\n         node_master.createwallet(wallet_name=\"w2\", disable_private_keys=True)\n         wallet = node_master.get_wallet_rpc(\"w2\")\n         info = wallet.getwalletinfo()\n-        assert info['private_keys_enabled'] == False\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['private_keys_enabled'], False)",
      "path": "test/functional/feature_backwards_compatibility.py",
      "position": 41,
      "original_position": 41,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934410841,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would like use some helper function because IMHO this make the code more readble but this is up to up guys ",
      "created_at": "2022-08-01T20:35:44Z",
      "updated_at": "2022-08-01T20:35:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934899720",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934899720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934902807",
      "pull_request_review_id": 1057838138,
      "id": 934902807,
      "node_id": "PRRC_kwDOABII5843uXwX",
      "diff_hunk": "@@ -70,9 +72,9 @@ def receive_sequence(self):\n         label = chr(body[32])\n         mempool_sequence = None if len(body) != 32+1+8 else struct.unpack(\"<Q\", body[32+1:])[0]\n         if mempool_sequence is not None:\n-            assert label == \"A\" or label == \"R\"\n+            assert_true(label == \"A\" or label == \"R\", err_msg=\"{} different from A or C\".format(label))",
      "path": "test/functional/interface_zmq.py",
      "position": null,
      "original_position": 14,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934414020,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ops, good catch, thanks!",
      "created_at": "2022-08-01T20:40:15Z",
      "updated_at": "2022-08-01T20:40:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934902807",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934902807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934936312",
      "pull_request_review_id": 1057884623,
      "id": 934936312,
      "node_id": "PRRC_kwDOABII5843uf74",
      "diff_hunk": "@@ -47,20 +47,44 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 11,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934388369,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh yeah I didn't mean to make it sound like a big thing, just that in this order it's a bit less code that executes a bit faster. Thanks for updating!",
      "created_at": "2022-08-01T21:32:39Z",
      "updated_at": "2022-08-01T21:32:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934936312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934936312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934938382",
      "pull_request_review_id": 1057887440,
      "id": 934938382,
      "node_id": "PRRC_kwDOABII5843ugcO",
      "diff_hunk": "@@ -495,11 +499,11 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n \n     # Compute scriptPubKey and set useful defaults based on the inputs.\n     if witv0:\n-        assert tap is None\n+        assert_equal(tap, None)",
      "path": "test/functional/feature_taproot.py",
      "position": 25,
      "original_position": 25,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934400062,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry, I was too quick - I thought `None` was passed to `err_msg` but it's just the equality operation of course. Please disregard.",
      "created_at": "2022-08-01T21:36:12Z",
      "updated_at": "2022-08-01T21:36:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934938382",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934938382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 502,
      "original_line": 502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934940953",
      "pull_request_review_id": 1057890734,
      "id": 934940953,
      "node_id": "PRRC_kwDOABII5843uhEZ",
      "diff_hunk": "@@ -47,20 +47,44 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 11,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934388369,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like you only updated it for `assert_equal` but it holds for all the other functions to which you added `err_msg` too.",
      "created_at": "2022-08-01T21:40:36Z",
      "updated_at": "2022-08-01T21:41:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934940953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934940953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934942678",
      "pull_request_review_id": 1057893230,
      "id": 934942678,
      "node_id": "PRRC_kwDOABII5843uhfW",
      "diff_hunk": "@@ -47,20 +47,44 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):",
      "path": "test/functional/test_framework/util.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934393815,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry you're right, I misunderstood what `message` was doing in `assert_raises_message` - had a closer look now. Please disregard.",
      "created_at": "2022-08-01T21:43:54Z",
      "updated_at": "2022-08-01T21:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934942678",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934942678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934944297",
      "pull_request_review_id": 1057895316,
      "id": 934944297,
      "node_id": "PRRC_kwDOABII5843uh4p",
      "diff_hunk": "@@ -47,20 +47,44 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)",
      "path": "test/functional/test_framework/util.py",
      "position": null,
      "original_position": 11,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934388369,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ops :) sorry too lazy! I will update the the others in a few hours :) Thanks for the catch",
      "created_at": "2022-08-01T21:46:44Z",
      "updated_at": "2022-08-01T21:46:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r934944297",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934944297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935452290",
      "pull_request_review_id": 1058599976,
      "id": 935452290,
      "node_id": "PRRC_kwDOABII5843wd6C",
      "diff_hunk": "@@ -136,24 +137,24 @@ def run_test(self):\n         wallet = node_v18.get_wallet_rpc(\"w1_v18\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] > 0\n+        assert_greater_than(info['keypoolsize'], 0)\n \n         # w2: wallet with private keys disabled, created on master: update this\n         #     test when default wallets private keys disabled can no longer be\n         #     opened by older versions.\n         node_master.createwallet(wallet_name=\"w2\", disable_private_keys=True)\n         wallet = node_master.get_wallet_rpc(\"w2\")\n         info = wallet.getwalletinfo()\n-        assert info['private_keys_enabled'] == False\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['private_keys_enabled'], False)",
      "path": "test/functional/feature_backwards_compatibility.py",
      "position": 41,
      "original_position": 41,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "ad9dcabd5d9cef3f16accbc9dc1572cd82a99081",
      "in_reply_to_id": 934410841,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "On second thought, I think `assert_equal` here works well, since the previous code was indeed just comparing equality and not doing a boolean comparison. Resolved.",
      "created_at": "2022-08-02T11:27:24Z",
      "updated_at": "2022-08-02T11:27:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935452290",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935452290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935644152",
      "pull_request_review_id": 1058843131,
      "id": 935644152,
      "node_id": "PRRC_kwDOABII5843xMv4",
      "diff_hunk": "@@ -47,20 +47,42 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        if err_msg is None:\n+            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        raise AssertionError(err_msg)\n \n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n-def assert_greater_than(thing1, thing2):\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:",
      "path": "test/functional/test_framework/util.py",
      "position": 42,
      "original_position": 42,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "These functions are generally (e.g. https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertTrue) used to do a _boolean_ comparison, which makes it functionally different than using `assert_equal(expr, True)`\r\n\r\nIt wouldn't make a functional difference in the places where it's currently used (where a simple `assert` would suffice), but otherwise, this is how I think it should be done:\r\n\r\n```suggestion\r\n    if bool(thing) is not True:\r\n```",
      "created_at": "2022-08-02T14:08:52Z",
      "updated_at": "2022-08-02T14:14:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935644152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935644152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935864928",
      "pull_request_review_id": 1059161175,
      "id": 935864928,
      "node_id": "PRRC_kwDOABII5843yCpg",
      "diff_hunk": "@@ -47,20 +47,42 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        if err_msg is None:\n+            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        raise AssertionError(err_msg)\n \n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n-def assert_greater_than(thing1, thing2):\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:",
      "path": "test/functional/test_framework/util.py",
      "position": 42,
      "original_position": 42,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "in_reply_to_id": 935644152,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "with this suggestion, you will create an error a runtime and no static checker can find it. We can use the only good thing of python language to write something like that\r\n\r\n```\r\ndef assert_true(thing: bool, err_msg=None):\r\n    if thing is not True:\r\n```\r\n\r\nIn this way, the editor is able to catch the type mismatch! the cast of a type at runtime should be an antipattern in all modern language",
      "created_at": "2022-08-02T17:44:46Z",
      "updated_at": "2022-08-02T17:53:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935864928",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935864928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935892797",
      "pull_request_review_id": 1059215459,
      "id": 935892797,
      "node_id": "PRRC_kwDOABII5843yJc9",
      "diff_hunk": "@@ -47,20 +47,42 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        if err_msg is None:\n+            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        raise AssertionError(err_msg)\n \n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n-def assert_greater_than(thing1, thing2):\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:",
      "path": "test/functional/test_framework/util.py",
      "position": 42,
      "original_position": 42,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "in_reply_to_id": 935644152,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The only way `bool(thing)` throws an error is if `thing` is of a custom type that explicitly overrides `__bool__()` to return something other than `True` or `False`, which is... really bad code. I don't think we need to handle that, and we can easily observe if it happens from the stacktrace.\r\n\r\nEven though I'm a fan of type hints, I don't think they change anything here - afaik we don't use tooling like `mypy` that would enforce them? It also wouldn't do the boolean comparison which was kinda my point: you don't want `assert_true()` to just verify if something is equal to True/False (`assert_equal` can do that), it's helpful if you need to check if _the boolean of_ an object would evaluate to True/False. For example:\r\n\r\n```python\r\nresult = some_func()  # some_func returns 0 if it failed, an int between 1-5 if successful\r\nassert_equal(result, True) # this would not work, because e.g. `3 == True` would fail\r\nassert_equal(bool(result), True)  # this would work, but you can't inspect `result` when the assertion fails\r\nassert_true(result)  # this would work if `assert_true` evaluates bool(result), because `bool(3) is True` would pass\r\n\r\nif(result):\r\n    do_something_else()\r\n```",
      "created_at": "2022-08-02T18:18:43Z",
      "updated_at": "2022-08-02T18:27:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935892797",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935892797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935897192",
      "pull_request_review_id": 1059226898,
      "id": 935897192,
      "node_id": "PRRC_kwDOABII5843yKho",
      "diff_hunk": "@@ -47,20 +47,42 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        if err_msg is None:\n+            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        raise AssertionError(err_msg)\n \n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n-def assert_greater_than(thing1, thing2):\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:",
      "path": "test/functional/test_framework/util.py",
      "position": 42,
      "original_position": 42,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "in_reply_to_id": 935644152,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But to reiterate, I'm advocating against implementing `assert_true()` at this moment, so I'll leave it here",
      "created_at": "2022-08-02T18:23:57Z",
      "updated_at": "2022-08-02T18:23:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935897192",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935897192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935908166",
      "pull_request_review_id": 1059254000,
      "id": 935908166,
      "node_id": "PRRC_kwDOABII5843yNNG",
      "diff_hunk": "@@ -47,20 +47,42 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        if err_msg is None:\n+            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        raise AssertionError(err_msg)\n \n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n-def assert_greater_than(thing1, thing2):\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:",
      "path": "test/functional/test_framework/util.py",
      "position": 42,
      "original_position": 42,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "in_reply_to_id": 935644152,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You are right! The thing is worst than the exception because happens something like that\r\n\r\n```\r\n➜  ~ python3\r\nPython 3.8.10 (default, Jun 22 2022, 20:18:18) \r\n[GCC 9.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> bool(12)\r\nTrue\r\n>>> bool(\"Alibaba\")\r\nTrue\r\n>>> \r\n\r\n```\r\n\r\nThis can not hide bugs?",
      "created_at": "2022-08-02T18:37:20Z",
      "updated_at": "2022-08-02T18:37:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935908166",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935908166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935914648",
      "pull_request_review_id": 1059260700,
      "id": 935914648,
      "node_id": "PRRC_kwDOABII5843yOyY",
      "diff_hunk": "@@ -47,20 +47,42 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        if err_msg is None:\n+            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        raise AssertionError(err_msg)\n \n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n-def assert_greater_than(thing1, thing2):\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:",
      "path": "test/functional/test_framework/util.py",
      "position": 42,
      "original_position": 42,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "in_reply_to_id": 935644152,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think to make all happy here is to use the assert_equal everywhere it is possible and move on.\r\n\r\nThis is code that I wrote one year ago, so I do not remember why I insert `assert_true`, but if I was not drunk I think because somewhere there is some comparison with custom error messages that check a boolean condition.\r\n\r\nAnyway, I think if you agree we can move all on `assert_equal` and move on.\r\n\r\n>you don't want assert_true() to just verify if something is equal to True/False\r\n\r\nTo sustain your thesis, I'm not able to see any real use case other than toy example of how this can be used",
      "created_at": "2022-08-02T18:43:26Z",
      "updated_at": "2022-08-02T18:43:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935914648",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935914648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935925206",
      "pull_request_review_id": 1059271879,
      "id": 935925206,
      "node_id": "PRRC_kwDOABII5843yRXW",
      "diff_hunk": "@@ -47,20 +47,42 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        if err_msg is None:\n+            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        raise AssertionError(err_msg)\n \n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n-def assert_greater_than(thing1, thing2):\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:",
      "path": "test/functional/test_framework/util.py",
      "position": 42,
      "original_position": 42,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "in_reply_to_id": 935644152,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How is that worse? You just need to use the right tool for the job. If you need to compare equality, you use `assert_equal`. If you need to do a boolean comparison, you use `assert_true`. If you don't know your input type, you should probably validate/convert that first. If you don't need to do a boolean comparison (i.e. if you wouldn't want \"Alibaba\" to evaluate to True), then you just don't use the boolean assertion? \r\n\r\nThe point of these functions is to check how something would be evaluated to a boolean, as in the example I gave where the program flow is based on `if(result)`. We don't seem to have that need in our test suite atm, so hence we shouldn't have `assert_true`.",
      "created_at": "2022-08-02T18:53:32Z",
      "updated_at": "2022-08-02T18:53:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935925206",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935925206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935947624",
      "pull_request_review_id": 1059301732,
      "id": 935947624,
      "node_id": "PRRC_kwDOABII5843yW1o",
      "diff_hunk": "@@ -47,20 +47,42 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        if err_msg is None:\n+            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        raise AssertionError(err_msg)\n \n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n-def assert_greater_than(thing1, thing2):\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:",
      "path": "test/functional/test_framework/util.py",
      "position": 42,
      "original_position": 42,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "in_reply_to_id": 935644152,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Mh! I do not argue this on the PR because it is the wrong place but I disagree with this statement\r\n\r\n>How is that worse? You just need to use the right tool for the job.\r\n\r\nOf course, bug is a bug, and it is there because there is a mistake in the code, so if a comparison between bool, I want to compare boolean value and not a string that always evaluates to true except for empty.\r\n\r\nIs worse because if we were able to catch this bug easily we were still coding in C without struggling with rust compiler, if you do this case you should define some rules like: `bool(\"False\")` -> False or True?\r\n\r\nImagine to have `assert_true(json['foo'])`  and make an API change that move the type of a filed from string to int\r\n\r\nyou fall in case of \r\n\r\n```\r\nPython 3.8.10 (default, Jun 22 2022, 20:18:18) \r\n[GCC 9.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> bool(0)\r\nFalse\r\n>>> bool(\"0\")\r\nTrue\r\n>>> bool(0.0)\r\nFalse\r\n>>> bool(\"0.0\")\r\nTrue\r\n```\r\n\r\nIt is not the right tool anyway at least without a good reason to allow this, and I do not see any till now\r\n\r\n",
      "created_at": "2022-08-02T19:21:38Z",
      "updated_at": "2022-08-02T19:25:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935947624",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935947624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935953443",
      "pull_request_review_id": 1059312331,
      "id": 935953443,
      "node_id": "PRRC_kwDOABII5843yYQj",
      "diff_hunk": "@@ -47,20 +47,42 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        if err_msg is None:\n+            err_msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        raise AssertionError(err_msg)\n \n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n-def assert_greater_than(thing1, thing2):\n+\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n-\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n+def assert_true(thing, err_msg=None):\n+    if thing is not True:",
      "path": "test/functional/test_framework/util.py",
      "position": 42,
      "original_position": 42,
      "commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "original_commit_id": "640edd9896d2367e5ad1d9917e889bb5e1baba09",
      "in_reply_to_id": 935644152,
      "user": {
        "login": "vincenzopalazzo",
        "id": 17150045,
        "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vincenzopalazzo",
        "html_url": "https://github.com/vincenzopalazzo",
        "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
        "following_url": "https://api.github.com/users/vincenzopalazzo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vincenzopalazzo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vincenzopalazzo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
        "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
        "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
        "events_url": "https://api.github.com/users/vincenzopalazzo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A better example can be\r\n\r\ntake the from our `assert_true(hash_str is None)` with `assert_true(hash_str)`\r\n\r\n```\r\n➜  ~ python3\r\nPython 3.8.10 (default, Jun 22 2022, 20:18:18) \r\n[GCC 9.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> bool(None)\r\nFalse\r\n>>> bool(\"\")\r\nFalse\r\n```\r\n\r\nThis can be a bug not catch by the CI, and if it is an API change you can break the client that use a strongly typed language",
      "created_at": "2022-08-02T19:29:23Z",
      "updated_at": "2022-08-02T19:30:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25732#discussion_r935953443",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935953443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25732"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    }
  ]
}