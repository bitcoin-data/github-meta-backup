{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160",
    "id": 114480419,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE0NDgwNDE5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10160",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/10160.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/10160.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
    "number": 10160,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add updatepeer RPC",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Adds an `updatepeer` RPC to update peer config and carry out actions on the peer by NodeId. At the moment, the actions are just changing whether the peer is whitelisted and whether the peer is a manual_connection (previously called an addnode). Future possible actions would be changing banscore, banning, and so on.\r\n\r\nThis is designed to be called using named arguments, but due to the RPC infrastructure can also be called with positional arguments (although doing so would be very fiddly).\r\n\r\nI've set the category to hidden for now. We may want to make the whitelisting behaviour more granular in future and I don't want to commit us to a public API that we can't then change.",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 749416508,
        "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
        "name": "Up for grabs",
        "color": "99a810",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2017-04-05T21:48:52Z",
    "updated_at": "2022-05-04T13:23:20Z",
    "closed_at": "2018-07-23T17:56:36Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "18baa9adfa27a73434372c97216e69c811019e21",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jnewbery:updatepeer",
      "ref": "updatepeer",
      "sha": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 68248485,
        "node_id": "MDEwOlJlcG9zaXRvcnk2ODI0ODQ4NQ==",
        "name": "bitcoin",
        "full_name": "jnewbery/bitcoin",
        "owner": {
          "login": "jnewbery",
          "id": 1063656,
          "node_id": "MDQ6VXNlcjEwNjM2NTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jnewbery",
          "html_url": "https://github.com/jnewbery",
          "followers_url": "https://api.github.com/users/jnewbery/followers",
          "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
          "organizations_url": "https://api.github.com/users/jnewbery/orgs",
          "repos_url": "https://api.github.com/users/jnewbery/repos",
          "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jnewbery/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jnewbery/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jnewbery/bitcoin",
        "archive_url": "https://api.github.com/repos/jnewbery/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jnewbery/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jnewbery/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jnewbery/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jnewbery/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jnewbery/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jnewbery/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jnewbery/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jnewbery/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jnewbery/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jnewbery/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jnewbery/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jnewbery/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jnewbery/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jnewbery/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jnewbery/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jnewbery/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jnewbery/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jnewbery/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jnewbery/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jnewbery/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jnewbery/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jnewbery/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jnewbery/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jnewbery/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jnewbery/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jnewbery/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jnewbery/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jnewbery/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jnewbery/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jnewbery/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jnewbery/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jnewbery/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jnewbery/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jnewbery/bitcoin/hooks",
        "svn_url": "https://github.com/jnewbery/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 219109,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-21T11:07:55Z",
        "created_at": "2016-09-14T22:29:05Z",
        "updated_at": "2021-07-06T16:23:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ab28b5b52702a81966416d68b04e5bde73b2c4d4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T22:16:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 229,
    "deletions": 65,
    "changed_files": 6,
    "commits": 5,
    "review_comments": 32,
    "comments": 28
  },
  "events": [
    {
      "event": "mentioned",
      "id": 1031217322,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAzMTIxNzMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1031217322",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-05T21:48:52Z"
    },
    {
      "event": "subscribed",
      "id": 1031217323,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMzEyMTczMjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1031217323",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-05T21:48:53Z"
    },
    {
      "event": "labeled",
      "id": 1031294972,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDEwMzEyOTQ5NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1031294972",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-05T22:57:42Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "commented",
      "id": 292258826,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI1ODgyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292258826",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T18:05:47Z",
      "updated_at": "2017-04-06T18:05:47Z",
      "author_association": "MEMBER",
      "body": "I'm not sure I like the idea of adding a command that changes the implied state of a peer via its attributes, rather than performing actions explicitly. The whitelist side-effects are especially hazy, see the brief discussion here: https://github.com/bitcoin/bitcoin/pull/10051#issuecomment-290622674.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-292258826",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "commented",
      "id": 292265018,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI2NTAxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292265018",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T18:26:31Z",
      "updated_at": "2017-04-06T18:26:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jnewbery:\r\nCan you elaborate the use-case for `disconnect`? IMO `setban` provides a similar interface, with disconnecting & banning for a specific timespan (`1h`, etc.) because, a pure `disconnect` does not prevent the peer from a direct re-connect.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-292265018",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1032739275,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAzMjczOTI3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1032739275",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T18:26:31Z"
    },
    {
      "event": "subscribed",
      "id": 1032739276,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMzI3MzkyNzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1032739276",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T18:26:31Z"
    },
    {
      "event": "commented",
      "id": 292265363,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI2NTM2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292265363",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T18:27:34Z",
      "updated_at": "2017-04-06T18:27:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ah... an there is already the `disconnectnode` RPC call.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-292265363",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "commented",
      "id": 292305200,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMwNTIwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292305200",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T20:22:37Z",
      "updated_at": "2017-04-06T20:22:37Z",
      "author_association": "MEMBER",
      "body": "@jonasschnelli see #2729 and #6271 for history of the `disconnectnode` RPC. It's also useful in testing to be able to control the topology of the test nodes.\r\n\r\n@theuni - I agree that whitelisting is a mess and should be broken out into bits for controlling individual behaviours. Hence my original comment: \"I have a feeling we may want to make the whitelisting behaviour more granular and I don't want to commit us to a public API that we can't then change.\" I was thinking of your comment in #10051 but couldn't find the reference.\r\n\r\n> the idea of adding a command that changes the implied state of a peer via its attributes, rather than performing actions explicitly\r\n\r\nI don't understand what this means in the context of whitelisting. The idea is to update the peer's whitelist behaviour. What would performing actions explicitly entail?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-292305200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1032932636,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAzMjkzMjYzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1032932636",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T20:22:37Z"
    },
    {
      "event": "subscribed",
      "id": 1032932637,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMzI5MzI2Mzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1032932637",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T20:22:37Z"
    },
    {
      "event": "mentioned",
      "id": 1032932638,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAzMjkzMjYzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1032932638",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T20:22:37Z"
    },
    {
      "event": "subscribed",
      "id": 1032932639,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMzI5MzI2Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1032932639",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-06T20:22:37Z"
    },
    {
      "event": "commented",
      "id": 292649747,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjY0OTc0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292649747",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-07T20:57:08Z",
      "updated_at": "2017-04-07T20:57:08Z",
      "author_association": "MEMBER",
      "body": "Closing in favour of #10143 for the immediate need (disconnect node by id), but I think this could still be a useful RPC in the future.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-292649747",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "closed",
      "id": 1034775031,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTAzNDc3NTAzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1034775031",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-07T20:57:08Z"
    },
    {
      "event": "reopened",
      "id": 1312934000,
      "node_id": "MDEzOlJlb3BlbmVkRXZlbnQxMzEyOTM0MDAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1312934000",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T22:16:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1312934300,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTMxMjkzNDMwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1312934300",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T22:17:09Z"
    },
    {
      "event": "commented",
      "id": 339817507,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTgxNzUwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339817507",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T22:19:00Z",
      "updated_at": "2017-10-26T22:19:00Z",
      "author_association": "MEMBER",
      "body": "Reopening with just the ability to update:\r\n\r\n- `fWhitelisted`\r\n- `m_manual_connection`\r\n\r\nThe net_processing functionality for the v0.15.0.2 PRs is disabled for manual connections, so this PR could be helpful for testing those changes.\r\n\r\n@sdaftuar ",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-339817507",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1312936582,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxMjkzNjU4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1312936582",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T22:19:00Z"
    },
    {
      "event": "subscribed",
      "id": 1312936583,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTI5MzY1ODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1312936583",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-26T22:19:00Z"
    },
    {
      "event": "reviewed",
      "id": 72463355,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0NjMzNTU=",
      "url": null,
      "actor": null,
      "commit_id": "4a51dbde81c76a8d0c7c8ed606c0f1c358fde4fe",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Will test.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#pullrequestreview-72463355",
      "submitted_at": "2017-10-27T10:32:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1313986824,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTMxMzk4NjgyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1313986824",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T14:02:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1313993543,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTMxMzk5MzU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1313993543",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T14:05:52Z"
    },
    {
      "event": "renamed",
      "id": 1313994064,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTMxMzk5NDA2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1313994064",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T14:06:05Z",
      "rename": {
        "from": "[WIP] updatepeer RPC",
        "to": "updatepeer RPC"
      }
    },
    {
      "event": "commented",
      "id": 339981381,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTk4MTM4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339981381",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T14:06:33Z",
      "updated_at": "2017-10-27T14:06:33Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @promag . I've addressed all your comments.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-339981381",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1313994944,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxMzk5NDk0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1313994944",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T14:06:33Z"
    },
    {
      "event": "subscribed",
      "id": 1313994945,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTM5OTQ5NDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1313994945",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T14:06:33Z"
    },
    {
      "event": "commented",
      "id": 339988630,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTk4ODYzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339988630",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T14:32:40Z",
      "updated_at": "2017-10-27T14:32:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "whitelisting via rpc?? BIG BIG concept ACK. I am excited. It will make configuration of services depending on Bitcoin Core RPC and P2P so much easier.",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-339988630",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "reviewed",
      "id": 72525299,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1MjUyOTk=",
      "url": null,
      "actor": null,
      "commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Nit, rename PR to *Add updatepeer RPC*. Squash `[RPC] Allow manual_connection to be updated using updatepeer` into `[RPC] Add updatenode RPC`.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#pullrequestreview-72525299",
      "submitted_at": "2017-10-27T14:56:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
    },
    {
      "event": "renamed",
      "id": 1314524285,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTMxNDUyNDI4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1314524285",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T19:09:30Z",
      "rename": {
        "from": "updatepeer RPC",
        "to": "Add updatepeer RPC"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1314573160,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTMxNDU3MzE2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1314573160",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T19:42:51Z"
    },
    {
      "event": "commented",
      "id": 340067518,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDA2NzUxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340067518",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T19:43:49Z",
      "updated_at": "2017-10-27T19:43:49Z",
      "author_association": "MEMBER",
      "body": "@promag nits addressed in latest commit.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-340067518",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1314574528,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxNDU3NDUyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1314574528",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T19:43:49Z"
    },
    {
      "event": "subscribed",
      "id": 1314574529,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTQ1NzQ1Mjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1314574529",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T19:43:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1314664920,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTMxNDY2NDkyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1314664920",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-27T20:45:59Z"
    },
    {
      "event": "labeled",
      "id": 1315260449,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDEzMTUyNjA0NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1315260449",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-28T18:05:30Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 73200421,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMyMDA0MjE=",
      "url": null,
      "actor": null,
      "commit_id": "b0da202a2895cad95f8ef479a3497a227e93bacb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK after squash.\r\n\r\nNit, how about `updatepeer id setting value (setting value ...)`:\r\n```\r\nupdatepeer 1 whitelisted true\r\nupdatepeer 1 manual_connection false\r\n```\r\nIt works well without named arguments with the cli, and scales well for other settings.\r\n\r\nNote, I always prefer named arguments, specially in these calls. But we do support index arguments and this approach doesn't help for future settings.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#pullrequestreview-73200421",
      "submitted_at": "2017-10-31T15:25:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
    },
    {
      "event": "commented",
      "id": 340882821,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDg4MjgyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340882821",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T19:36:38Z",
      "updated_at": "2017-10-31T19:36:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "I agree with @promag `updatepeer id setting value (setting value ...)` would be easier to extend later.",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-340882821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1319571485,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMxOTU3MTQ4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1319571485",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T19:36:38Z"
    },
    {
      "event": "subscribed",
      "id": 1319571488,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMTk1NzE0ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1319571488",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T19:36:38Z"
    },
    {
      "event": "commented",
      "id": 340928560,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDkyODU2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340928560",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-31T22:40:00Z",
      "updated_at": "2017-10-31T22:40:00Z",
      "author_association": "MEMBER",
      "body": "> Nit, how about updatepeer id setting value (setting value ...)\r\n\r\nThis is a different scheme from all of the existing RPCs. I expect that there would need to be changes to the rpc framework to make this work.\r\n\r\nIt doesn't make sense to me have a completely different scheme for just this RPC method, since we already have named arguments.\r\n\r\nIf you disagree, perhaps you could implement the scheme you're talking about in a new branch?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-340928560",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "commented",
      "id": 341287363,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTI4NzM2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341287363",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-02T00:59:09Z",
      "updated_at": "2017-11-02T00:59:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jnewbery how so? This is just 3 differents parameters of 3 strings.\r\n\r\nThe way you are doing now, if there is like 60 settings for one peer, we will have 60 parameters to this function. This does not seem very maintainable. In such case even  `updatewhitelist id true` would be better. We would have 60 functions, which is still better than 60 parameters.\r\n",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-341287363",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1322117310,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMyMjExNzMxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1322117310",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-02T00:59:09Z"
    },
    {
      "event": "subscribed",
      "id": 1322117311,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMjIxMTczMTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1322117311",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-02T00:59:09Z"
    },
    {
      "event": "commented",
      "id": 341289626,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTI4OTYyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341289626",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-02T01:15:55Z",
      "updated_at": "2017-11-02T01:16:31Z",
      "author_association": "MEMBER",
      "body": "> This is designed to be called using named arguments, but due to the RPC infrastructure can also be called with positional arguments (although doing so would be very fiddly).\r\n\r\n@jnewbery you too agree that this is by design bad for positional arguments (considering the possible settings can be extended).\r\n\r\nAnother approach is to use something like `sendmany`: `updatepeer {\\\"setting\\\":value, ...}`.\r\n\r\nFWIW I already gave my utACK 😄 ",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-341289626",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1322130660,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMyMjEzMDY2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1322130660",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-02T01:15:55Z"
    },
    {
      "event": "subscribed",
      "id": 1322130661,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMjIxMzA2NjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1322130661",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-02T01:15:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1341488555,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM0MTQ4ODU1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1341488555",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-14T18:33:47Z"
    },
    {
      "event": "commented",
      "id": 344354270,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM1NDI3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344354270",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-14T18:34:49Z",
      "updated_at": "2017-11-14T18:34:49Z",
      "author_association": "MEMBER",
      "body": "@NicolasDorier \r\n\r\n> how so? This is just 3 differents parameters of 3 strings\r\n\r\nRight, but all RPCs currently support positional arguments, where the position of the argument determines its meaning. I don't necessarily agree that it's always appropriate, but having a single RPC that doesn't adhere to that scheme is confusing and inconsistent.\r\n\r\nUsing named arguments have been around for at least two releases now, so there's no need to use positional arguments at all.\r\n\r\nRebased",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-344354270",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1341490444,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM0MTQ5MDQ0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1341490444",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-14T18:34:49Z"
    },
    {
      "event": "subscribed",
      "id": 1341490445,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNDE0OTA0NDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1341490445",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-14T18:34:49Z"
    },
    {
      "event": "commented",
      "id": 345686197,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTY4NjE5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345686197",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-20T12:49:23Z",
      "updated_at": "2017-11-20T12:49:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "yeah we talked about it, I understand now why named args make sense. Concept ACK.",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-345686197",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "commented",
      "id": 348001110,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODAwMTExMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348001110",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-29T21:25:10Z",
      "updated_at": "2017-11-29T21:25:10Z",
      "author_association": "MEMBER",
      "body": "@NicolasDorier - you've given this a *BIG BIG concept ACK*. Mind reviewing? :slightly_smiling_face: ",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-348001110",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1364443919,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM2NDQ0MzkxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1364443919",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-29T21:25:10Z"
    },
    {
      "event": "subscribed",
      "id": 1364443922,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNjQ0NDM5MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1364443922",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-29T21:25:10Z"
    },
    {
      "event": "commented",
      "id": 348058191,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODA1ODE5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348058191",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-30T01:57:19Z",
      "updated_at": "2017-11-30T01:57:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sure will review and test today.",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-348058191",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "reviewed",
      "id": 80059110,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODAwNTkxMTA=",
      "url": null,
      "actor": null,
      "commit_id": "c072501ac4e32dccf508d9b40e56570a15338ce9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#pullrequestreview-80059110",
      "submitted_at": "2017-11-30T02:02:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
    },
    {
      "event": "reviewed",
      "id": 80059374,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODAwNTkzNzQ=",
      "url": null,
      "actor": null,
      "commit_id": "c072501ac4e32dccf508d9b40e56570a15338ce9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#pullrequestreview-80059374",
      "submitted_at": "2017-11-30T02:04:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
    },
    {
      "event": "reviewed",
      "id": 80059772,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODAwNTk3NzI=",
      "url": null,
      "actor": null,
      "commit_id": "c072501ac4e32dccf508d9b40e56570a15338ce9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#pullrequestreview-80059772",
      "submitted_at": "2017-11-30T02:07:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
    },
    {
      "event": "commented",
      "id": 349886489,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg4NjQ4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349886489",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-07T07:33:49Z",
      "updated_at": "2017-12-07T07:33:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jnewbery do you need more help on this PR? I am really interested into seeing it merged.",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-349886489",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1376345826,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM3NjM0NTgyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1376345826",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-07T07:33:49Z"
    },
    {
      "event": "subscribed",
      "id": 1376345827,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNzYzNDU4Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1376345827",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-07T07:33:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1377280897,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM3NzI4MDg5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1377280897",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-07T16:41:00Z"
    },
    {
      "event": "commented",
      "id": 350024909,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDAyNDkwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350024909",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-07T16:43:41Z",
      "updated_at": "2017-12-07T16:43:41Z",
      "author_association": "MEMBER",
      "body": "@NicolasDorier: Sorry for dropping this - I've rebased on master and squashed all nits.\r\n\r\nI'm not sure about your suggestion for locking in updatepeer and fetching the `CNode`. `cs_vNodes` isn't currently locked anywhere outsdie `CConman`, which I think is a good property to maintain.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-350024909",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1377286277,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM3NzI4NjI3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1377286277",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-07T16:43:41Z"
    },
    {
      "event": "subscribed",
      "id": 1377286279,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNzcyODYyNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1377286279",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-07T16:43:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1377287912,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM3NzI4NzkxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1377287912",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-07T16:44:35Z"
    },
    {
      "event": "commented",
      "id": 350174592,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE3NDU5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350174592",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T05:15:11Z",
      "updated_at": "2017-12-08T05:29:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jnewbery in this case, I would suggest to have a method on CConman `bool CConman::UpdateSetting(nodeid, str,value)` because there is high ratio of ceremonial monkey copy pasta code everytimes we will need to add one property here.",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-350174592",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1378231582,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM3ODIzMTU4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1378231582",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T05:15:11Z"
    },
    {
      "event": "subscribed",
      "id": 1378231583,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNzgyMzE1ODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1378231583",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T05:15:11Z"
    },
    {
      "event": "commented",
      "id": 350299532,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDI5OTUzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350299532",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T16:00:35Z",
      "updated_at": "2017-12-08T16:00:35Z",
      "author_association": "MEMBER",
      "body": "I'm still with @theuni on this one, not super happy with the idea of changing properties about peers that net_processing/net both consider \"constant\". Would prefer we add some (undocumented?) options to addnode (or a new RPC) which lets you control the flags of a peer as you create a connection.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-350299532",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1379079328,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM3OTA3OTMyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1379079328",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T16:00:35Z"
    },
    {
      "event": "subscribed",
      "id": 1379079329,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNzkwNzkzMjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1379079329",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T16:00:35Z"
    },
    {
      "event": "commented",
      "id": 350325940,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDMyNTk0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350325940",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T17:44:06Z",
      "updated_at": "2017-12-08T17:44:06Z",
      "author_association": "MEMBER",
      "body": "@theuni's comment was:\r\n\r\n> the idea of adding a command that changes the implied state of a peer via its attributes, rather than performing actions explicitly\r\n\r\nI don't understand what's meant by 'performing actions explicitly', but I'm happy to modify this PR if there are concrete suggestions.\r\n\r\n> not super happy with the idea of changing properties about peers that net_processing/net both consider \"constant\"\r\n\r\nCan you articulate what makes you not happy? Being able to change the properties of a connection without having to delete/recreate that object is generally very useful, since cycling a connection has many side-effects. As far as I can see, the only stateful impact of starting with `fWhitelisted` rather than updating it later is this call to `AddLocal()` in `BindListenPort()`:\r\n\r\n```\r\n    if (addrBind.IsRoutable() && fDiscover && !fWhitelisted)\r\n        AddLocal(addrBind, LOCAL_BIND);\r\n```\r\n\r\nI can't see any other reason to be concerned about updating `fWhitelisted` dynamically.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-350325940",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1379254339,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM3OTI1NDMzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1379254339",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T17:44:06Z"
    },
    {
      "event": "subscribed",
      "id": 1379254340,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNzkyNTQzNDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1379254340",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T17:44:06Z"
    },
    {
      "event": "commented",
      "id": 350340169,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDM0MDE2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350340169",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T18:43:30Z",
      "updated_at": "2017-12-08T18:43:36Z",
      "author_association": "MEMBER",
      "body": "I might be slightly more OK with changing fWhitelisted on a peer after its up, as that may be useful \"in the real world\" outside of tests, but I'm super not a fan of changing manual_connection. One thing @theuni and I have talked about is being more aggressive about CNode representing a \"connection handle\" where its potentially allowed to have a few constant members which are general information about the connection, eg whether it was automatically or manually added, the remote address, etc.\r\nOne thing you might imagine is inserting a peer into a set/map (eg compact blocks HB mode peers set, the (implied) set of nPreferredDownload peers (which we currently track with fPreferredDownload, but we could actually take it as implication based on const values in CNode)) or otherwise performing (between-message-)stateful behavior on a peer based on such (constant) information about a connection. In each of these cases, having such constant information change out from under you could potentially introduce races/bugs.\r\n\r\n> cycling a connection has many side-effects.\r\n\r\nI'm not sure what side-effects there are that couldn't be reproduced on a new connection after cycling the connection. It ends up being an unrealistic test if you dont do that anyway. Maybe I'm just missing the motivation of cases that wouldnt be better tested by cycling a connection?",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-350340169",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1379341093,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTM3OTM0MTA5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1379341093",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T18:43:30Z"
    },
    {
      "event": "subscribed",
      "id": 1379341095,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzNzkzNDEwOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1379341095",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T18:43:30Z"
    },
    {
      "event": "commented",
      "id": 350378639,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDM3ODYzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350378639",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-08T21:38:34Z",
      "updated_at": "2017-12-08T21:38:34Z",
      "author_association": "MEMBER",
      "body": "> One thing you might imagine...\r\n\r\nYou're describing things that _may_ happen in future changes in abstract terms, particularly when you talk about between-message-stateful behaviour.\r\n\r\n`m_manual_connection` is certainly a better name than `fAddNode`, but I still don't think it really captures what the property means. Really it's something like 'preferred_peer' - it's a peer that we don't want to disconnect or punish for bad behaviour. How it was connected isn't really relevant. We may want to prefer a peer that has connected inbound to us, and we may want to connect outbound to a peer without preferring it. In that context, I think it makes sense to want to set this property manually after connection, without having to disconnect and go through the version-verack-getheaders-headers handshaking.\r\n\r\nThis is undoubtedly useful for testing, but I could also imagine it being useful, for example in a business that has more than one bitcoin node and wants to be able to manage their network topology.\r\n\r\nThinking forward a bit more, I think it'd also be beneficial to break out the whitelist behaviour to be more granular, and again be able to update those properties dynamically.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-350378639",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "reviewed",
      "id": 84827305,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODQ4MjczMDU=",
      "url": null,
      "actor": null,
      "commit_id": "0a002002f3f3b816a02ed84b99fa0181ac76e096",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Haven't been following discussion in much detail but if the problem is `fAddNode` having both const and non-const interpretations, maybe it should just be split into two variables: `m_connection_type` that would be const and record origin of connection and `m_preferred_peer` that would be mutable.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#pullrequestreview-84827305",
      "submitted_at": "2017-12-20T16:50:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
    },
    {
      "event": "reviewed",
      "id": 98484547,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3OTg0ODQ1NDc=",
      "url": null,
      "actor": null,
      "commit_id": "0a002002f3f3b816a02ed84b99fa0181ac76e096",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK\r\n\r\nNeeds rebase.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#pullrequestreview-98484547",
      "submitted_at": "2018-02-22T08:58:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1644810193,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTY0NDgxMDE5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1644810193",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-24T17:10:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1645160591,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTY0NTE2MDU5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1645160591",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-24T19:57:41Z"
    },
    {
      "event": "commented",
      "id": 391839757,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTgzOTc1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391839757",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-24T19:57:52Z",
      "updated_at": "2018-05-24T19:57:52Z",
      "author_association": "MEMBER",
      "body": "Fixed @kallewoof review comments.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-391839757",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "mentioned",
      "id": 1645161046,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTY0NTE2MTA0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1645161046",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-24T19:57:53Z"
    },
    {
      "event": "subscribed",
      "id": 1645161048,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2NDUxNjEwNDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1645161048",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-24T19:57:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1651411303,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTY1MTQxMTMwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1651411303",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-29T15:26:02Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjM1Y2RmNjZiYmE1NmY3NDMyZGRkZTgwYzQxYzU5MDIwNjNjMGFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f35cdf66bba56f7432ddde80c41c5902063c0ae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5f35cdf66bba56f7432ddde80c41c5902063c0ae",
      "tree": {
        "sha": "ed6217ddb7ba6ad8d9e5acbe988aaaf29f61bb89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed6217ddb7ba6ad8d9e5acbe988aaaf29f61bb89"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab28b5b52702a81966416d68b04e5bde73b2c4d4",
          "sha": "ab28b5b52702a81966416d68b04e5bde73b2c4d4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab28b5b52702a81966416d68b04e5bde73b2c4d4"
        }
      ],
      "message": "[RPC] Refactor getpeerinfo RPC to call helper function NodeStatsToJSON().\n\nThis commit refactors getpeerinfo() to call a helper function\nNodeStatsToJSON() to build a JSON object with peer information.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-23T14:37:26Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-02T20:13:21Z"
      },
      "sha": "5f35cdf66bba56f7432ddde80c41c5902063c0ae"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMGJlZDllYWE5YWVkNGJhMDc2Y2IzMGJjZDczZmIzNjI5YTU5YjRh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30bed9eaa9aed4ba076cb30bcd73fb3629a59b4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/30bed9eaa9aed4ba076cb30bcd73fb3629a59b4a",
      "tree": {
        "sha": "bc762c4a572424e7944e7c1625b7d5bb169fdb2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc762c4a572424e7944e7c1625b7d5bb169fdb2d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f35cdf66bba56f7432ddde80c41c5902063c0ae",
          "sha": "5f35cdf66bba56f7432ddde80c41c5902063c0ae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5f35cdf66bba56f7432ddde80c41c5902063c0ae"
        }
      ],
      "message": "[net] Add GetNodeByID helper function.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-23T14:37:26Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-05-24T19:43:48Z"
      },
      "sha": "30bed9eaa9aed4ba076cb30bcd73fb3629a59b4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmFlNGE0ZjYzYTZmYWRmMzczOWQ4ZTllMjZlZjk4MDlmM2Q3NWVm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fae4a4f63a6fadf3739d8e9e26ef9809f3d75ef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4fae4a4f63a6fadf3739d8e9e26ef9809f3d75ef",
      "tree": {
        "sha": "89148c60b2036995ea6c98434a7f601c22b61eec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89148c60b2036995ea6c98434a7f601c22b61eec"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30bed9eaa9aed4ba076cb30bcd73fb3629a59b4a",
          "sha": "30bed9eaa9aed4ba076cb30bcd73fb3629a59b4a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/30bed9eaa9aed4ba076cb30bcd73fb3629a59b4a"
        }
      ],
      "message": "[RPC] Add GetNodeStats() function for individual node.\n\nGetNodeStats() can now be called for a single node.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-23T14:37:26Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-02T20:47:45Z"
      },
      "sha": "4fae4a4f63a6fadf3739d8e9e26ef9809f3d75ef"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTc2NDYwMmVhNmYwNzc5MjgxY2MxMTk5YzFhMGIxMjE1OTFhNTA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a764602ea6f0779281cc1199c1a0b121591a507",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2a764602ea6f0779281cc1199c1a0b121591a507",
      "tree": {
        "sha": "e896c0bf3574e4a3f5e30b6aa26a69bc4ad63b88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e896c0bf3574e4a3f5e30b6aa26a69bc4ad63b88"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fae4a4f63a6fadf3739d8e9e26ef9809f3d75ef",
          "sha": "4fae4a4f63a6fadf3739d8e9e26ef9809f3d75ef",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4fae4a4f63a6fadf3739d8e9e26ef9809f3d75ef"
        }
      ],
      "message": "[RPC] Allow getpeerinfo to be called for a single node.\n\nThe getpeerinfo RPC can now be called for a single node by specifying the\nnode id.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-23T14:37:26Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-02T20:52:24Z"
      },
      "sha": "2a764602ea6f0779281cc1199c1a0b121591a507"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODA3ZDk1OWQ1YmE2NGFkNmJkY2E3NmFkYmFkODM0OGE4ZWEyYTNk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "tree": {
        "sha": "7f8c40a0475690d7d64484f3aa0dcc3841ea06e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f8c40a0475690d7d64484f3aa0dcc3841ea06e8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a764602ea6f0779281cc1199c1a0b121591a507",
          "sha": "2a764602ea6f0779281cc1199c1a0b121591a507",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2a764602ea6f0779281cc1199c1a0b121591a507"
        }
      ],
      "message": "[RPC] Add updatepeer RPC.\n\nThis commit adds an updatepeer RPC for updating a single peer node.\n\nCurrently, updatepeer can be used to update the whitelisting and\nmanual_connection settings for the node. It could potentially be\nextended in future to allow updating other attributes of the peer node.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-23T14:37:26Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-02T20:52:58Z"
      },
      "sha": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1748011299,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc0ODAxMTI5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1748011299",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-23T15:25:51Z"
    },
    {
      "event": "commented",
      "id": 407146189,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE0NjE4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407146189",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-23T17:56:35Z",
      "updated_at": "2018-07-23T17:56:35Z",
      "author_association": "MEMBER",
      "body": "There doesn't seem to much appetite for this. Closing.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-407146189",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "closed",
      "id": 1748345474,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTc0ODM0NTQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1748345474",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-23T17:56:36Z"
    },
    {
      "event": "commented",
      "id": 407268229,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI2ODIyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407268229",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-24T03:23:34Z",
      "updated_at": "2018-07-24T03:23:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "I liked it :(",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-407268229",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    },
    {
      "event": "locked",
      "id": 5272033283,
      "node_id": "LOE_lADOABII584NGL9pzwAAAAE6PNgD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5272033283",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:38:09Z",
      "lock_reason": "resolved"
    },
    {
      "event": "labeled",
      "id": 6548483026,
      "node_id": "LE_lADOABII584NGL9pzwAAAAGGUevS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6548483026",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-04T13:22:43Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "commented",
      "id": 1117309257,
      "node_id": "IC_kwDOABII585CmMlJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117309257",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-04T13:23:20Z",
      "updated_at": "2022-05-04T13:23:20Z",
      "author_association": "MEMBER",
      "body": "Marked \"up for grabs\". (Conversation is locked, so a new pull will need to be opened either way).",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#issuecomment-1117309257",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10160"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147375941",
      "pull_request_review_id": 72463355,
      "id": 147375941,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzM3NTk0MQ==",
      "diff_hunk": "@@ -121,73 +182,79 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n \n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (request.params.size() >= 1 && request.params[0].isNum()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        if (g_connman->GetNodeStats(request.params[0].get_int(), stats)) {\n+            NodeStatsToJSON(stats, obj);\n+            ret.push_back(obj);\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n+\n+            ret.push_back(obj);\n+        }\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 3 || request.params.size() == 0)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network node (debug method).\\n\"\n+            \"\\nReturns updated information about the node. See getpeerinfo() for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"node\\\"              (string, required) The node id (see getpeerinfo for a list of nodes with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the node is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the node was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+    if(!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    LOCK(cs_main);\n+\n+    RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n+    int nodeid = request.params[0].get_int();\n+\n+    if (request.params.size() >= 2) {\n+        RPCTypeCheckArgument(request.params[1], UniValue::VBOOL);\n+        if (!g_connman->SetWhitelisted(nodeid, request.params[1].isTrue())) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Failed to update node whitelisting\");\n         }\n-        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+    }\n \n-        UniValue recvPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    if (request.params.size() >= 3) {",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 190,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "4a51dbde81c76a8d0c7c8ed606c0f1c358fde4fe",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is null instead.",
      "created_at": "2017-10-27T10:25:49Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147375941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147375941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 243,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147376503",
      "pull_request_review_id": 72463355,
      "id": 147376503,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzM3NjUwMw==",
      "diff_hunk": "@@ -121,73 +182,79 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n \n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (request.params.size() >= 1 && request.params[0].isNum()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        if (g_connman->GetNodeStats(request.params[0].get_int(), stats)) {\n+            NodeStatsToJSON(stats, obj);\n+            ret.push_back(obj);\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n+\n+            ret.push_back(obj);\n+        }\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 3 || request.params.size() == 0)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network node (debug method).\\n\"\n+            \"\\nReturns updated information about the node. See getpeerinfo() for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"node\\\"              (string, required) The node id (see getpeerinfo for a list of nodes with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the node is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the node was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+    if(!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    LOCK(cs_main);\n+\n+    RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n+    int nodeid = request.params[0].get_int();\n+\n+    if (request.params.size() >= 2) {\n+        RPCTypeCheckArgument(request.params[1], UniValue::VBOOL);\n+        if (!g_connman->SetWhitelisted(nodeid, request.params[1].isTrue())) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Failed to update node whitelisting\");\n         }\n-        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+    }\n \n-        UniValue recvPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    if (request.params.size() >= 3) {\n+        RPCTypeCheckArgument(request.params[2], UniValue::VBOOL);\n+        if (!g_connman->SetManualConnection(nodeid, request.params[2].isTrue())) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Failed to update node manual\");\n         }\n-        obj.push_back(Pair(\"bytesrecv_per_msg\", recvPerMsgCmd));\n+    }\n \n-        ret.push_back(obj);\n+    UniValue entry(UniValue::VOBJ);\n+    CNodeStats stats;\n+\n+    if (g_connman->GetNodeStats(nodeid, stats)) {",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 202,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "4a51dbde81c76a8d0c7c8ed606c0f1c358fde4fe",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If not then raise invalid parameter?",
      "created_at": "2017-10-27T10:29:03Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147376503",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147376503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147376560",
      "pull_request_review_id": 72463355,
      "id": 147376560,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzM3NjU2MA==",
      "diff_hunk": "@@ -121,73 +182,79 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n \n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (request.params.size() >= 1 && request.params[0].isNum()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        if (g_connman->GetNodeStats(request.params[0].get_int(), stats)) {\n+            NodeStatsToJSON(stats, obj);\n+            ret.push_back(obj);\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n+\n+            ret.push_back(obj);\n+        }\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 3 || request.params.size() == 0)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network node (debug method).\\n\"\n+            \"\\nReturns updated information about the node. See getpeerinfo() for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"node\\\"              (string, required) The node id (see getpeerinfo for a list of nodes with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the node is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the node was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+    if(!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    LOCK(cs_main);\n+\n+    RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n+    int nodeid = request.params[0].get_int();\n+\n+    if (request.params.size() >= 2) {\n+        RPCTypeCheckArgument(request.params[1], UniValue::VBOOL);\n+        if (!g_connman->SetWhitelisted(nodeid, request.params[1].isTrue())) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Failed to update node whitelisting\");\n         }\n-        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+    }\n \n-        UniValue recvPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    if (request.params.size() >= 3) {\n+        RPCTypeCheckArgument(request.params[2], UniValue::VBOOL);\n+        if (!g_connman->SetManualConnection(nodeid, request.params[2].isTrue())) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Failed to update node manual\");\n         }\n-        obj.push_back(Pair(\"bytesrecv_per_msg\", recvPerMsgCmd));\n+    }\n \n-        ret.push_back(obj);\n+    UniValue entry(UniValue::VOBJ);\n+    CNodeStats stats;\n+\n+    if (g_connman->GetNodeStats(nodeid, stats)) {",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 202,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "4a51dbde81c76a8d0c7c8ed606c0f1c358fde4fe",
      "in_reply_to_id": 147376503,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing test for invalid node.",
      "created_at": "2017-10-27T10:29:26Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147376560",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147376560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147377023",
      "pull_request_review_id": 72463355,
      "id": 147377023,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzM3NzAyMw==",
      "diff_hunk": "@@ -121,73 +182,79 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n \n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (request.params.size() >= 1 && request.params[0].isNum()) {",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "4a51dbde81c76a8d0c7c8ed606c0f1c358fde4fe",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not null instead.",
      "created_at": "2017-10-27T10:31:55Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147377023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147377023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147427787",
      "pull_request_review_id": 72525299,
      "id": 147427787,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQyNzc4Nw==",
      "diff_hunk": "@@ -121,73 +182,81 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (g_connman->GetNodeStats(node_id, stats)) {",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 130,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```cpp\r\nif (!...) {\r\n    throw ...;\r\n}\r\n```",
      "created_at": "2017-10-27T14:35:38Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147427787",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147427787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147428864",
      "pull_request_review_id": 72525299,
      "id": 147428864,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQyODg2NA==",
      "diff_hunk": "@@ -65,12 +65,73 @@ UniValue ping(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+void NodeStatsToJSON(const CNodeStats& stats, UniValue& obj)\n+{\n+    CNodeStateStats statestats;\n+    bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n+    obj.push_back(Pair(\"id\", stats.nodeid));\n+    obj.push_back(Pair(\"addr\", stats.addrName));\n+    if (!(stats.addrLocal.empty()))\n+        obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n+    if (stats.addrBind.IsValid())\n+        obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n+    obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n+    obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n+    obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n+    obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n+    obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n+    obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n+    obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n+    obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n+    if (stats.dPingTime > 0.0)\n+        obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n+    if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n+        obj.push_back(Pair(\"minping\", stats.dMinPing));\n+    if (stats.dPingWait > 0.0)\n+        obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n+    obj.push_back(Pair(\"version\", stats.nVersion));\n+    // Use the sanitized form of subver here, to avoid tricksy remote peers from\n+    // corrupting or modifying the JSON output by putting special characters in\n+    // their ver message.\n+    obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n+    obj.push_back(Pair(\"inbound\", stats.fInbound));\n+    obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n+    obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n+    if (fStateStats) {\n+        obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n+        obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n+        obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n+        UniValue heights(UniValue::VARR);\n+        for (int height : statestats.vHeightInFlight) {\n+            heights.push_back(height);\n+        }\n+        obj.push_back(Pair(\"inflight\", heights));\n+    }\n+    obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+\n+    UniValue sendPerMsgCmd(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n+        if (i.second > 0)\n+            sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+    }\n+    obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+\n+    UniValue recvPerMsgCmd(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n+        if (i.second > 0)\n+            recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    }\n+    obj.push_back(Pair(\"bytesrecv_per_msg\", recvPerMsgCmd));\n+}\n+\n UniValue getpeerinfo(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 0)\n+    if (request.fHelp || request.params.size() >= 2)",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, `> 1`.",
      "created_at": "2017-10-27T14:39:24Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147428864",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147428864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147428979",
      "pull_request_review_id": 72525299,
      "id": 147428979,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQyODk3OQ==",
      "diff_hunk": "@@ -65,12 +65,73 @@ UniValue ping(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+void NodeStatsToJSON(const CNodeStats& stats, UniValue& obj)\n+{\n+    CNodeStateStats statestats;\n+    bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n+    obj.push_back(Pair(\"id\", stats.nodeid));\n+    obj.push_back(Pair(\"addr\", stats.addrName));\n+    if (!(stats.addrLocal.empty()))\n+        obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n+    if (stats.addrBind.IsValid())\n+        obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n+    obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n+    obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n+    obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n+    obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n+    obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n+    obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n+    obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n+    obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n+    if (stats.dPingTime > 0.0)\n+        obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n+    if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n+        obj.push_back(Pair(\"minping\", stats.dMinPing));\n+    if (stats.dPingWait > 0.0)\n+        obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n+    obj.push_back(Pair(\"version\", stats.nVersion));\n+    // Use the sanitized form of subver here, to avoid tricksy remote peers from\n+    // corrupting or modifying the JSON output by putting special characters in\n+    // their ver message.\n+    obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n+    obj.push_back(Pair(\"inbound\", stats.fInbound));\n+    obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n+    obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n+    if (fStateStats) {\n+        obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n+        obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n+        obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n+        UniValue heights(UniValue::VARR);\n+        for (int height : statestats.vHeightInFlight) {\n+            heights.push_back(height);\n+        }\n+        obj.push_back(Pair(\"inflight\", heights));\n+    }\n+    obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+\n+    UniValue sendPerMsgCmd(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n+        if (i.second > 0)",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, same line or `{ }`.",
      "created_at": "2017-10-27T14:39:49Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147428979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147428979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147429388",
      "pull_request_review_id": 72525299,
      "id": 147429388,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQyOTM4OA==",
      "diff_hunk": "@@ -2521,6 +2521,18 @@ size_t CConnman::GetNodeCount(NumConnections flags)\n     return nNum;\n }\n \n+bool CConnman::GetNodeStats(NodeId nodeid, CNodeStats& stats)\n+{\n+    LOCK(cs_vNodes);\n+    for(CNode* pnode : vNodes) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, missing spaces after `for`.",
      "created_at": "2017-10-27T14:41:09Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147429388",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147429388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147429561",
      "pull_request_review_id": 72525299,
      "id": 147429561,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQyOTU2MQ==",
      "diff_hunk": "@@ -65,12 +65,73 @@ UniValue ping(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+void NodeStatsToJSON(const CNodeStats& stats, UniValue& obj)\n+{\n+    CNodeStateStats statestats;\n+    bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n+    obj.push_back(Pair(\"id\", stats.nodeid));\n+    obj.push_back(Pair(\"addr\", stats.addrName));\n+    if (!(stats.addrLocal.empty()))\n+        obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n+    if (stats.addrBind.IsValid())\n+        obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n+    obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n+    obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n+    obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n+    obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n+    obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n+    obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n+    obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n+    obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n+    if (stats.dPingTime > 0.0)\n+        obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n+    if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n+        obj.push_back(Pair(\"minping\", stats.dMinPing));\n+    if (stats.dPingWait > 0.0)\n+        obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n+    obj.push_back(Pair(\"version\", stats.nVersion));\n+    // Use the sanitized form of subver here, to avoid tricksy remote peers from\n+    // corrupting or modifying the JSON output by putting special characters in\n+    // their ver message.\n+    obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n+    obj.push_back(Pair(\"inbound\", stats.fInbound));\n+    obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n+    obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n+    if (fStateStats) {\n+        obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n+        obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n+        obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n+        UniValue heights(UniValue::VARR);\n+        for (int height : statestats.vHeightInFlight) {\n+            heights.push_back(height);\n+        }\n+        obj.push_back(Pair(\"inflight\", heights));\n+    }\n+    obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+\n+    UniValue sendPerMsgCmd(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n+        if (i.second > 0)\n+            sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+    }\n+    obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+\n+    UniValue recvPerMsgCmd(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n+        if (i.second > 0)",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same as above.",
      "created_at": "2017-10-27T14:41:47Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147429561",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147429561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147430084",
      "pull_request_review_id": 72525299,
      "id": 147430084,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQzMDA4NA==",
      "diff_hunk": "@@ -121,73 +182,81 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (g_connman->GetNodeStats(node_id, stats)) {\n+            NodeStatsToJSON(stats, obj);\n+            ret.push_back(obj);\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Node id %u not found\", node_id));\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n+\n+            ret.push_back(obj);\n+        }\n+    }\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 3 || request.params.size() == 0)",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 158,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, the most common expression is\r\n```cpp\r\nif (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\r\n```",
      "created_at": "2017-10-27T14:43:42Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147430084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147430084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147430252",
      "pull_request_review_id": 72525299,
      "id": 147430252,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQzMDI1Mg==",
      "diff_hunk": "@@ -121,73 +182,81 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (g_connman->GetNodeStats(node_id, stats)) {\n+            NodeStatsToJSON(stats, obj);\n+            ret.push_back(obj);\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Node id %u not found\", node_id));\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n+\n+            ret.push_back(obj);\n+        }\n+    }\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 3 || request.params.size() == 0)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network node (debug method).\\n\"\n+            \"\\nReturns updated information about the node. See getpeerinfo() for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"node\\\"              (string, required) The node id (see getpeerinfo for a list of nodes with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the node is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the node was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n+\n+    if(!g_connman) {",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 172,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, space after `if`.",
      "created_at": "2017-10-27T14:44:17Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147430252",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147430252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147430787",
      "pull_request_review_id": 72525299,
      "id": 147430787,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQzMDc4Nw==",
      "diff_hunk": "@@ -121,73 +182,81 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (g_connman->GetNodeStats(node_id, stats)) {\n+            NodeStatsToJSON(stats, obj);\n+            ret.push_back(obj);\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Node id %u not found\", node_id));\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n+\n+            ret.push_back(obj);\n+        }\n+    }\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 3 || request.params.size() == 0)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network node (debug method).\\n\"\n+            \"\\nReturns updated information about the node. See getpeerinfo() for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"node\\\"              (string, required) The node id (see getpeerinfo for a list of nodes with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the node is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the node was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n+\n+    if(!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    LOCK(cs_main);\n+\n+    RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n+    int nodeid = request.params[0].get_int();",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 179,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same validation of `getpeerinfo`.",
      "created_at": "2017-10-27T14:46:17Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147430787",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147430787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147430945",
      "pull_request_review_id": 72525299,
      "id": 147430945,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQzMDk0NQ==",
      "diff_hunk": "@@ -65,12 +65,73 @@ UniValue ping(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+void NodeStatsToJSON(const CNodeStats& stats, UniValue& obj)\n+{\n+    CNodeStateStats statestats;\n+    bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n+    obj.push_back(Pair(\"id\", stats.nodeid));\n+    obj.push_back(Pair(\"addr\", stats.addrName));\n+    if (!(stats.addrLocal.empty()))\n+        obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n+    if (stats.addrBind.IsValid())\n+        obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n+    obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n+    obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n+    obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n+    obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n+    obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n+    obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n+    obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n+    obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n+    if (stats.dPingTime > 0.0)\n+        obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n+    if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n+        obj.push_back(Pair(\"minping\", stats.dMinPing));\n+    if (stats.dPingWait > 0.0)\n+        obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n+    obj.push_back(Pair(\"version\", stats.nVersion));\n+    // Use the sanitized form of subver here, to avoid tricksy remote peers from\n+    // corrupting or modifying the JSON output by putting special characters in\n+    // their ver message.\n+    obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n+    obj.push_back(Pair(\"inbound\", stats.fInbound));\n+    obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n+    obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n+    if (fStateStats) {\n+        obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n+        obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n+        obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n+        UniValue heights(UniValue::VARR);\n+        for (int height : statestats.vHeightInFlight) {\n+            heights.push_back(height);\n+        }\n+        obj.push_back(Pair(\"inflight\", heights));\n+    }\n+    obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+\n+    UniValue sendPerMsgCmd(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n+        if (i.second > 0)\n+            sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+    }\n+    obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+\n+    UniValue recvPerMsgCmd(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n+        if (i.second > 0)\n+            recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    }\n+    obj.push_back(Pair(\"bytesrecv_per_msg\", recvPerMsgCmd));\n+}\n+\n UniValue getpeerinfo(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 0)\n+    if (request.fHelp || request.params.size() >= 2)",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Needs release notes.",
      "created_at": "2017-10-27T14:46:52Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147430945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147430945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147431612",
      "pull_request_review_id": 72525299,
      "id": 147431612,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQzMTYxMg==",
      "diff_hunk": "@@ -121,73 +182,81 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually I think this is more correct:\r\n - raise `RPC_INVALID_PARAMETER` if `node_id < 0`;\r\n - raise `RPC_INVALID_ADDRESS_OR_KEY` if `!GetNodeStats(...)`.\r\n\r\nNote: if you do this then add a test for 1st case.",
      "created_at": "2017-10-27T14:49:28Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147431612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147431612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147431901",
      "pull_request_review_id": 72525299,
      "id": 147431901,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQzMTkwMQ==",
      "diff_hunk": "@@ -94,5 +95,31 @@ def _test_getpeerinfo(self):\n         assert_equal(peer_info[0][0]['addrbind'], peer_info[1][0]['addr'])\n         assert_equal(peer_info[1][0]['addrbind'], peer_info[0][0]['addr'])\n \n+        # Check that getpeerinfo can be called for a specific peer_id\n+        peer_id = peer_info[0][0]['id']\n+        assert_equal(peer_info[0][0]['addr'], self.nodes[0].getpeerinfo(peer_id)[0]['addr'])\n+        assert_equal(peer_info[0][0]['addrbind'], self.nodes[0].getpeerinfo(peer_id)[0]['addrbind'])\n+\n+        # Check that getpeerinfo fails for an invalid peer_id\n+        assert_raises_rpc_error(-8, \"not found\", self.nodes[0].getpeerinfo, 5000)\n+\n+\n+    def _test_updatepeer(self):\n+        self.log.info(\"Test updatepeer\")\n+\n+        # whitelist should be false, manual conection should be true\n+        peer_info = self.nodes[0].getpeerinfo()[0]\n+        assert not peer_info['whitelisted']\n+        assert peer_info['addnode']\n+\n+        # Update properties and verify that they've changed\n+        self.nodes[0].updatepeer(peer_info['id'], True, False)\n+        peer_info = self.nodes[0].getpeerinfo()[0]\n+        assert peer_info['whitelisted']\n+        assert not peer_info['addnode']\n+\n+        # Check that updatepeer fails for an invalid peer_id\n+        assert_raises_rpc_error(-8, \"not found\", self.nodes[0].updatepeer, 5000)",
      "path": "test/functional/net.py",
      "position": null,
      "original_position": 36,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing failure tests for getpeerinfo (maybe unrelated to this PR).",
      "created_at": "2017-10-27T14:50:26Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147431901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147431901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147500533",
      "pull_request_review_id": 72611235,
      "id": 147500533,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzUwMDUzMw==",
      "diff_hunk": "@@ -121,73 +182,81 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c799a6c16d72a15b10affc0c55257c1bc2c48828",
      "in_reply_to_id": 147431612,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think it's too important, but feel free to open a follow-up PR if you think it's required.",
      "created_at": "2017-10-27T19:43:36Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r147500533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147500533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148022442",
      "pull_request_review_id": 73200421,
      "id": 148022442,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODAyMjQ0Mg==",
      "diff_hunk": "@@ -2553,6 +2565,30 @@ bool CConnman::DisconnectNode(NodeId id)\n     return false;\n }\n \n+bool CConnman::SetWhitelisted(NodeId id, bool fWhitelisted)\n+{\n+    LOCK(cs_vNodes);\n+    for(CNode* pnode : vNodes) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "b0da202a2895cad95f8ef479a3497a227e93bacb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, missing space after `for`. Same below.",
      "created_at": "2017-10-31T14:59:01Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r148022442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148022442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2589,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148030122",
      "pull_request_review_id": 73200421,
      "id": 148030122,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODAzMDEyMg==",
      "diff_hunk": "@@ -121,73 +184,82 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (!g_connman->GetNodeStats(node_id, stats)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Node id %u not found\", node_id));\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+        NodeStatsToJSON(stats, obj);\n+        ret.push_back(obj);\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+            ret.push_back(obj);\n         }\n-        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+    }\n \n-        UniValue recvPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network peer (debug method).\\n\"\n+            \"\\nReturns updated information about the peer. See getpeerinfo() for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"id\\\"                (string, required) The peer id (see getpeerinfo for a list of peers with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the peer is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the peer was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n+\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    LOCK(cs_main);",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "b0da202a2895cad95f8ef479a3497a227e93bacb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Remove lock or am I missing something?",
      "created_at": "2017-10-31T15:22:19Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r148030122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148030122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153969175",
      "pull_request_review_id": 80059110,
      "id": 153969175,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mzk2OTE3NQ==",
      "diff_hunk": "@@ -2571,6 +2583,30 @@ bool CConnman::DisconnectNode(NodeId id)\n     return false;\n }\n \n+bool CConnman::SetWhitelisted(NodeId id, bool fWhitelisted)\n+{\n+    LOCK(cs_vNodes);\n+    for(CNode* pnode : vNodes) {\n+        if (id == pnode->id) {\n+            pnode->fWhitelisted = fWhitelisted;\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CConnman::SetManualConnection(NodeId id, bool manual)\n+{\n+    LOCK(cs_vNodes);\n+    for(CNode* pnode : vNodes) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c072501ac4e32dccf508d9b40e56570a15338ce9",
      "in_reply_to_id": null,
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The loop will get repeated all over the place for each field. (Already two times)\r\n\r\nI think a better approach would be to lock at `updatepeer` level and fetch the right CNode there at the beginning of the call. And change fields directly from there.",
      "created_at": "2017-11-30T02:02:32Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r153969175",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153969175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2601,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153969407",
      "pull_request_review_id": 80059374,
      "id": 153969407,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mzk2OTQwNw==",
      "diff_hunk": "@@ -121,73 +184,82 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (!g_connman->GetNodeStats(node_id, stats)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Node id %u not found\", node_id));\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+        NodeStatsToJSON(stats, obj);\n+        ret.push_back(obj);\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+            ret.push_back(obj);\n         }\n-        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+    }\n \n-        UniValue recvPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network peer (debug method).\\n\"\n+            \"\\nReturns updated information about the peer. See getpeerinfo() for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"id\\\"                (string, required) The peer id (see getpeerinfo for a list of peers with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the peer is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the peer was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n+\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    LOCK(cs_main);\n+\n+    RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n+    int node_id = request.params[0].get_int();\n+\n+    CNodeStats stats;\n+    if (!g_connman->GetNodeStats(node_id, stats)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Node id %u not found\", node_id));\n+    }\n+\n+    if (!request.params[1].isNull()) {\n+        RPCTypeCheckArgument(request.params[1], UniValue::VBOOL);\n+        if (!g_connman->SetWhitelisted(node_id, request.params[1].isTrue())) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Failed to update peer whitelisting\");",
      "path": "src/rpc/net.cpp",
      "position": 199,
      "original_position": 195,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c072501ac4e32dccf508d9b40e56570a15338ce9",
      "in_reply_to_id": null,
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See my above comment, by fetching once the node at the start of this method, you can remove all those `if` as you already know if the CNode with such id already exist. It makes things a bit easier to test and prevent monkey coding each time we want to add a new field.\r\n\r\nThis RPC error is also untestable as it makes you reproduce a difficult race condition. (need to drop the node after the previosu GetNodeStates but before this call)",
      "created_at": "2017-11-30T02:04:15Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r153969407",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153969407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 250,
      "original_line": 250,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153969790",
      "pull_request_review_id": 80059772,
      "id": 153969790,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mzk2OTc5MA==",
      "diff_hunk": "@@ -2539,6 +2539,18 @@ size_t CConnman::GetNodeCount(NumConnections flags)\n     return nNum;\n }\n \n+bool CConnman::GetNodeStats(NodeId nodeid, CNodeStats& stats)",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "c072501ac4e32dccf508d9b40e56570a15338ce9",
      "in_reply_to_id": null,
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This method would also be removed if fetching CNode was done at the updatepeer level.",
      "created_at": "2017-11-30T02:07:33Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r153969790",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153969790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155547583",
      "pull_request_review_id": 81883967,
      "id": 155547583,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTU0NzU4Mw==",
      "diff_hunk": "@@ -2553,6 +2565,30 @@ bool CConnman::DisconnectNode(NodeId id)\n     return false;\n }\n \n+bool CConnman::SetWhitelisted(NodeId id, bool fWhitelisted)\n+{\n+    LOCK(cs_vNodes);\n+    for(CNode* pnode : vNodes) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "b0da202a2895cad95f8ef479a3497a227e93bacb",
      "in_reply_to_id": 148022442,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2017-12-07T15:09:40Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r155547583",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155547583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2589,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155548049",
      "pull_request_review_id": 81884580,
      "id": 155548049,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTU0ODA0OQ==",
      "diff_hunk": "@@ -121,73 +184,82 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (!g_connman->GetNodeStats(node_id, stats)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Node id %u not found\", node_id));\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+        NodeStatsToJSON(stats, obj);\n+        ret.push_back(obj);\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+            ret.push_back(obj);\n         }\n-        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+    }\n \n-        UniValue recvPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network peer (debug method).\\n\"\n+            \"\\nReturns updated information about the peer. See getpeerinfo() for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"id\\\"                (string, required) The peer id (see getpeerinfo for a list of peers with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the peer is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the peer was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n+\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    LOCK(cs_main);",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "b0da202a2895cad95f8ef479a3497a227e93bacb",
      "in_reply_to_id": 148030122,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "you're right - I don't think this is required",
      "created_at": "2017-12-07T15:11:31Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r155548049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155548049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169887796",
      "pull_request_review_id": 98484547,
      "id": 169887796,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTg4Nzc5Ng==",
      "diff_hunk": "@@ -2577,6 +2589,30 @@ bool CConnman::DisconnectNode(NodeId id)\n     return false;\n }\n \n+bool CConnman::SetWhitelisted(NodeId id, bool fWhitelisted)\n+{\n+    LOCK(cs_vNodes);\n+    for (CNode* pnode : vNodes) {\n+        if (id == pnode->id) {\n+            pnode->fWhitelisted = fWhitelisted;\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CConnman::SetManualConnection(NodeId id, bool manual)\n+{\n+    LOCK(cs_vNodes);\n+    for (CNode* pnode : vNodes) {\n+        if (id == pnode->id) {\n+            pnode->m_manual_connection = manual;\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "0a002002f3f3b816a02ed84b99fa0181ac76e096",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you maybe make an (optionally inline) method `find_node_by_id` that the above methods use? Looks a bit copy-pastey.",
      "created_at": "2018-02-22T08:51:34Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r169887796",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169887796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2622,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169888223",
      "pull_request_review_id": 98484547,
      "id": 169888223,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTg4ODIyMw==",
      "diff_hunk": "@@ -65,12 +65,80 @@ UniValue ping(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+void NodeStatsToJSON(const CNodeStats& stats, UniValue& obj)\n+{\n+    CNodeStateStats state_stats;\n+    bool got_state_stats = GetNodeStateStats(stats.nodeid, state_stats);\n+    obj.push_back(Pair(\"id\", stats.nodeid));\n+    obj.push_back(Pair(\"addr\", stats.addrName));\n+    if (!(stats.addrLocal.empty())) {\n+        obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n+    }\n+    if (stats.addrBind.IsValid()) {\n+        obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n+    }\n+    obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n+    obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n+    obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n+    obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n+    obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n+    obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n+    obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n+    obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n+    if (stats.dPingTime > 0.0) {\n+        obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n+    }\n+    if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6) {\n+        obj.push_back(Pair(\"minping\", stats.dMinPing));\n+    }\n+    if (stats.dPingWait > 0.0) {\n+        obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n+    }\n+    obj.push_back(Pair(\"version\", stats.nVersion));\n+    // Use the sanitized form of subver here, to avoid tricksy remote peers from\n+    // corrupting or modifying the JSON output by putting special characters in\n+    // their ver message.\n+    obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n+    obj.push_back(Pair(\"inbound\", stats.fInbound));\n+    obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n+    obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n+    if (got_state_stats) {\n+        obj.push_back(Pair(\"banscore\", state_stats.nMisbehavior));\n+        obj.push_back(Pair(\"synced_headers\", state_stats.nSyncHeight));\n+        obj.push_back(Pair(\"synced_blocks\", state_stats.nCommonHeight));\n+        UniValue heights(UniValue::VARR);\n+        for (int height : state_stats.vHeightInFlight) {\n+            heights.push_back(height);\n+        }\n+        obj.push_back(Pair(\"inflight\", heights));\n+    }\n+    obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+\n+    UniValue bytes_sent_per_message(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n+        if (i.second > 0) {\n+            bytes_sent_per_message.push_back(Pair(i.first, i.second));\n+        }\n+    }\n+    obj.push_back(Pair(\"bytessent_per_msg\", bytes_sent_per_message));\n+\n+    UniValue bytes_recvd_per_message(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n+        if (i.second > 0) {\n+            bytes_recvd_per_message.push_back(Pair(i.first, i.second));\n+        }\n+    }\n+    obj.push_back(Pair(\"bytesrecv_per_msg\", bytes_recvd_per_message));\n+}\n+\n UniValue getpeerinfo(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 0)\n+    if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n             \"getpeerinfo\\n\"\n-            \"\\nReturns data about each connected network node as a json array of objects.\\n\"\n+            \"\\nReturns data about connected network nodes as a json array of objects.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"id\\\"         (numeric, optional) Only return information about the peer with the specified id.\\n\"",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "0a002002f3f3b816a02ed84b99fa0181ac76e096",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: No period at end (seems to be the norm). Also add this to the first line (`\"getpeerinfo \\\"id\\\"\\n\"`)",
      "created_at": "2018-02-22T08:53:22Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r169888223",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169888223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169888849",
      "pull_request_review_id": 98484547,
      "id": 169888849,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTg4ODg0OQ==",
      "diff_hunk": "@@ -121,73 +189,80 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (!g_connman->GetNodeStats(node_id, stats)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Node id %u not found\", node_id));\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+        NodeStatsToJSON(stats, obj);\n+        ret.push_back(obj);\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+            ret.push_back(obj);\n         }\n-        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 167,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "0a002002f3f3b816a02ed84b99fa0181ac76e096",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`\"updatepeer \\\"id\\\" ( \\\"whitelisted\\\" \\\"manual_connection\\\" )\\n\"`",
      "created_at": "2018-02-22T08:56:08Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r169888849",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169888849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169889059",
      "pull_request_review_id": 98484547,
      "id": 169889059,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTg4OTA1OQ==",
      "diff_hunk": "@@ -121,73 +189,80 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (!g_connman->GetNodeStats(node_id, stats)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Node id %u not found\", node_id));\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+        NodeStatsToJSON(stats, obj);\n+        ret.push_back(obj);\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+            ret.push_back(obj);\n         }\n-        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network peer (debug method).\\n\"\n+            \"\\nReturns updated information about the peer. See the help text for getpeerinfo for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"id\\\"                (string, required) The peer id (see getpeerinfo for a list of peers with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the peer is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the peer was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n \n-        UniValue recvPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n+    int node_id = request.params[0].get_int();\n+\n+    CNodeStats stats;\n+    if (!g_connman->GetNodeStats(node_id, stats)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Node id %u not found\", node_id));",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 192,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "0a002002f3f3b816a02ed84b99fa0181ac76e096",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `node_id` is an `int`, so `%d` not `%u`.",
      "created_at": "2018-02-22T08:57:04Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r169889059",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169889059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190711373",
      "pull_request_review_id": 123147907,
      "id": 190711373,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDcxMTM3Mw==",
      "diff_hunk": "@@ -2577,6 +2589,30 @@ bool CConnman::DisconnectNode(NodeId id)\n     return false;\n }\n \n+bool CConnman::SetWhitelisted(NodeId id, bool fWhitelisted)\n+{\n+    LOCK(cs_vNodes);\n+    for (CNode* pnode : vNodes) {\n+        if (id == pnode->id) {\n+            pnode->fWhitelisted = fWhitelisted;\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CConnman::SetManualConnection(NodeId id, bool manual)\n+{\n+    LOCK(cs_vNodes);\n+    for (CNode* pnode : vNodes) {\n+        if (id == pnode->id) {\n+            pnode->m_manual_connection = manual;\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "0a002002f3f3b816a02ed84b99fa0181ac76e096",
      "in_reply_to_id": 169887796,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "refactored out",
      "created_at": "2018-05-24T19:54:46Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r190711373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190711373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2622,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190711669",
      "pull_request_review_id": 123148308,
      "id": 190711669,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDcxMTY2OQ==",
      "diff_hunk": "@@ -65,12 +65,80 @@ UniValue ping(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+void NodeStatsToJSON(const CNodeStats& stats, UniValue& obj)\n+{\n+    CNodeStateStats state_stats;\n+    bool got_state_stats = GetNodeStateStats(stats.nodeid, state_stats);\n+    obj.push_back(Pair(\"id\", stats.nodeid));\n+    obj.push_back(Pair(\"addr\", stats.addrName));\n+    if (!(stats.addrLocal.empty())) {\n+        obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n+    }\n+    if (stats.addrBind.IsValid()) {\n+        obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n+    }\n+    obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n+    obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n+    obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n+    obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n+    obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n+    obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n+    obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n+    obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n+    if (stats.dPingTime > 0.0) {\n+        obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n+    }\n+    if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6) {\n+        obj.push_back(Pair(\"minping\", stats.dMinPing));\n+    }\n+    if (stats.dPingWait > 0.0) {\n+        obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n+    }\n+    obj.push_back(Pair(\"version\", stats.nVersion));\n+    // Use the sanitized form of subver here, to avoid tricksy remote peers from\n+    // corrupting or modifying the JSON output by putting special characters in\n+    // their ver message.\n+    obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n+    obj.push_back(Pair(\"inbound\", stats.fInbound));\n+    obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n+    obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n+    if (got_state_stats) {\n+        obj.push_back(Pair(\"banscore\", state_stats.nMisbehavior));\n+        obj.push_back(Pair(\"synced_headers\", state_stats.nSyncHeight));\n+        obj.push_back(Pair(\"synced_blocks\", state_stats.nCommonHeight));\n+        UniValue heights(UniValue::VARR);\n+        for (int height : state_stats.vHeightInFlight) {\n+            heights.push_back(height);\n+        }\n+        obj.push_back(Pair(\"inflight\", heights));\n+    }\n+    obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+\n+    UniValue bytes_sent_per_message(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n+        if (i.second > 0) {\n+            bytes_sent_per_message.push_back(Pair(i.first, i.second));\n+        }\n+    }\n+    obj.push_back(Pair(\"bytessent_per_msg\", bytes_sent_per_message));\n+\n+    UniValue bytes_recvd_per_message(UniValue::VOBJ);\n+    for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n+        if (i.second > 0) {\n+            bytes_recvd_per_message.push_back(Pair(i.first, i.second));\n+        }\n+    }\n+    obj.push_back(Pair(\"bytesrecv_per_msg\", bytes_recvd_per_message));\n+}\n+\n UniValue getpeerinfo(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 0)\n+    if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n             \"getpeerinfo\\n\"\n-            \"\\nReturns data about each connected network node as a json array of objects.\\n\"\n+            \"\\nReturns data about connected network nodes as a json array of objects.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"id\\\"         (numeric, optional) Only return information about the peer with the specified id.\\n\"",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "0a002002f3f3b816a02ed84b99fa0181ac76e096",
      "in_reply_to_id": 169888223,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2018-05-24T19:56:03Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r190711669",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190711669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190711896",
      "pull_request_review_id": 123148630,
      "id": 190711896,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDcxMTg5Ng==",
      "diff_hunk": "@@ -121,73 +189,80 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n-    g_connman->GetNodeStats(vstats);\n-\n     UniValue ret(UniValue::VARR);\n \n-    for (const CNodeStats& stats : vstats) {\n+    if (!request.params[0].isNull()) {\n         UniValue obj(UniValue::VOBJ);\n-        CNodeStateStats statestats;\n-        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n-        obj.push_back(Pair(\"id\", stats.nodeid));\n-        obj.push_back(Pair(\"addr\", stats.addrName));\n-        if (!(stats.addrLocal.empty()))\n-            obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        if (stats.addrBind.IsValid())\n-            obj.push_back(Pair(\"addrbind\", stats.addrBind.ToString()));\n-        obj.push_back(Pair(\"services\", strprintf(\"%016x\", stats.nServices)));\n-        obj.push_back(Pair(\"relaytxes\", stats.fRelayTxes));\n-        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n-        obj.push_back(Pair(\"timeoffset\", stats.nTimeOffset));\n-        if (stats.dPingTime > 0.0)\n-            obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n-        if (stats.dMinPing < static_cast<double>(std::numeric_limits<int64_t>::max())/1e6)\n-            obj.push_back(Pair(\"minping\", stats.dMinPing));\n-        if (stats.dPingWait > 0.0)\n-            obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n-        obj.push_back(Pair(\"version\", stats.nVersion));\n-        // Use the sanitized form of subver here, to avoid tricksy remote peers from\n-        // corrupting or modifying the JSON output by putting special characters in\n-        // their ver message.\n-        obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n-        obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"addnode\", stats.m_manual_connection));\n-        obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        if (fStateStats) {\n-            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n-            obj.push_back(Pair(\"synced_headers\", statestats.nSyncHeight));\n-            obj.push_back(Pair(\"synced_blocks\", statestats.nCommonHeight));\n-            UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n-                heights.push_back(height);\n-            }\n-            obj.push_back(Pair(\"inflight\", heights));\n+        CNodeStats stats;\n+\n+        int node_id = request.params[0].get_int();\n+        if (!g_connman->GetNodeStats(node_id, stats)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Node id %u not found\", node_id));\n         }\n-        obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n+        NodeStatsToJSON(stats, obj);\n+        ret.push_back(obj);\n+    } else {\n+        std::vector<CNodeStats> vstats;\n+        g_connman->GetNodeStats(vstats);\n+\n+        for (const CNodeStats& stats : vstats) {\n+            UniValue obj(UniValue::VOBJ);\n+            NodeStatsToJSON(stats, obj);\n \n-        UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+            ret.push_back(obj);\n         }\n-        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue updatepeer(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"updatepeer\\n\"\n+            \"\\nUpdate settings for a network peer (debug method).\\n\"\n+            \"\\nReturns updated information about the peer. See the help text for getpeerinfo for the format of the returned object.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"id\\\"                (string, required) The peer id (see getpeerinfo for a list of peers with their ids)\\n\"\n+            \"2. \\\"whitelisted\\\"       (bool, optional) whether the peer is whitelisted\\n\"\n+            \"3. \\\"manual_connection\\\" (bool, optional) whether the peer was manually added\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"updatepeer\", \"0 true\")\n+            + HelpExampleRpc(\"updatepeer\", \"0, true\")\n+        );\n \n-        UniValue recvPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n+    int node_id = request.params[0].get_int();\n+\n+    CNodeStats stats;\n+    if (!g_connman->GetNodeStats(node_id, stats)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Node id %u not found\", node_id));",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 192,
      "commit_id": "7807d959d5ba64ad6bdca76adbad8348a8ea2a3d",
      "original_commit_id": "0a002002f3f3b816a02ed84b99fa0181ac76e096",
      "in_reply_to_id": 169889059,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2018-05-24T19:57:02Z",
      "updated_at": "2018-07-23T15:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10160#discussion_r190711896",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190711896"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10160"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 244,
      "side": "RIGHT"
    }
  ]
}