{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751",
    "id": 716470875,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzE2NDcwODc1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22751",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/22751.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/22751.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
    "number": 22751,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "rpc/wallet: add simulaterawtransaction RPC",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(note: this was originally titled \"add analyzerawtransaction RPC\")\r\n\r\nThis command iterates over the inputs and outputs of the given transactions, and tallies up the balance change for the given wallet. This can be useful e.g. when verifying that a coin join like transaction doesn't contain unexpected inputs that the wallet will then sign for unintentionally.\r\n\r\nI originally proposed this to Elements (https://github.com/ElementsProject/elements/pull/1016) and it was suggested that I propose this upstream.\r\n\r\nThere is an alternative #22776 to instead add this info to `getbalances` when providing an optional transaction as argument.",
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      },
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2021-08-20T06:11:28Z",
    "updated_at": "2022-08-29T14:01:17Z",
    "closed_at": "2022-08-05T19:19:28Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-08-05T19:19:28Z",
    "merge_commit_sha": "35305c759a4afe983272c3509675095743987aa5",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "kallewoof:202108-analyzerawtransaction",
      "ref": "202108-analyzerawtransaction",
      "sha": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 74733553,
        "node_id": "MDEwOlJlcG9zaXRvcnk3NDczMzU1Mw==",
        "name": "bitcoin",
        "full_name": "kallewoof/bitcoin",
        "owner": {
          "login": "kallewoof",
          "id": 250224,
          "node_id": "MDQ6VXNlcjI1MDIyNA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/kallewoof",
          "html_url": "https://github.com/kallewoof",
          "followers_url": "https://api.github.com/users/kallewoof/followers",
          "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
          "organizations_url": "https://api.github.com/users/kallewoof/orgs",
          "repos_url": "https://api.github.com/users/kallewoof/repos",
          "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/kallewoof/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/kallewoof/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/kallewoof/bitcoin",
        "archive_url": "https://api.github.com/repos/kallewoof/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/kallewoof/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/kallewoof/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/kallewoof/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/kallewoof/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/kallewoof/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/kallewoof/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/kallewoof/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/kallewoof/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/kallewoof/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/kallewoof/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/kallewoof/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/kallewoof/bitcoin/events",
        "forks_url": "https://api.github.com/repos/kallewoof/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/kallewoof/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/kallewoof/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/kallewoof/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/kallewoof/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/kallewoof/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/kallewoof/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/kallewoof/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/kallewoof/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/kallewoof/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/kallewoof/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/kallewoof/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/kallewoof/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/kallewoof/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/kallewoof/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/kallewoof/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:kallewoof/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/kallewoof/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/kallewoof/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/kallewoof/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/kallewoof/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/kallewoof/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/kallewoof/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/kallewoof/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/kallewoof/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/kallewoof/bitcoin/hooks",
        "svn_url": "https://github.com/kallewoof/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 206118,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-11T04:43:35Z",
        "created_at": "2016-11-25T06:59:31Z",
        "updated_at": "2023-05-05T12:10:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2c3115d4f568b2719daa44d8eb2504a8cd7691fe",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 249,
    "deletions": 0,
    "changed_files": 5,
    "commits": 2,
    "review_comments": 78,
    "comments": 45
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 5184986733,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE4NDk4NjczMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5184986733",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-20T06:12:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5184992968,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE4NDk5Mjk2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5184992968",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-20T06:14:07Z"
    },
    {
      "event": "labeled",
      "id": 5185006845,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDUxODUwMDY4NDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5185006845",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-20T06:18:41Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 5185006847,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDUxODUwMDY4NDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5185006847",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-20T06:18:41Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "reviewed",
      "id": 734716391,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM0NzE2Mzkx",
      "url": null,
      "actor": null,
      "commit_id": "70620ac3c45da9ed7daa14b52f7d3fbf3b6b7872",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-734716391",
      "submitted_at": "2021-08-20T06:40:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5185156051,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE4NTE1NjA1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5185156051",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-20T07:04:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5185189358,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE4NTE4OTM1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5185189358",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-20T07:13:24Z"
    },
    {
      "event": "commented",
      "id": 903013607,
      "node_id": "IC_kwDOABII58410uTn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903013607",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-21T00:00:12Z",
      "updated_at": "2021-08-21T00:00:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, but I don't think the RPC name represents the functionality. Analyze implies some sort of in-depth breakdown of information. Perhaps `nettransactionbalance` or something to represent the balance-specific use?",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903013607",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 903052080,
      "node_id": "IC_kwDOABII584103sw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903052080",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-21T04:05:07Z",
      "updated_at": "2021-08-21T04:05:07Z",
      "author_association": "NONE",
      "body": "> but I don't think the RPC name represents the functionality. Analyze implies some sort of in-depth breakdown of information. \r\n\r\nAgree. We already have RPC with similar name: `analyzepsbt` which returns lot of things that would be helpful for someone using PSBT. Although I am still confused between `decodepsbt` and `analyzepsbt`.\r\n\r\n> Perhaps nettransactionbalance or something to represent the balance-specific use?\r\n\r\nOr maybe add it in the results of any existing RPC",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903052080",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 903076896,
      "node_id": "IC_kwDOABII584109wg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903076896",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-21T07:45:23Z",
      "updated_at": "2021-08-21T07:48:37Z",
      "author_association": "MEMBER",
      "body": "I have no strong feelings about keeping `analyze` but I think `<verb>rawtransaction` is a good name (edit: because it is sticking to the convention), where `<verb>` somehow indicates looking at each input and output and determining whether they belong to the wallet, and if so to add/subtract the appropriate amount.\r\n\r\nEdit: adding to results of existing RPC sounds good to me too, but not sure which that would be.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903076896",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 903104233,
      "node_id": "IC_kwDOABII58411Ebp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903104233",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-21T11:45:01Z",
      "updated_at": "2021-08-21T12:23:21Z",
      "author_association": "NONE",
      "body": "> adding to results of existing RPC sounds good to me too, but not sure which that would be.\r\n\r\nCan we add this to [`getbalance`](https://bitcoincore.org/en/doc/0.21.0/rpc/wallet/getbalance/)? Will need one argument `include_tx` so the command would look like this:\r\n\r\n```\r\n$ bitcoin-cli -named getbalance include_tx=hex\r\n\r\nResult:\r\n{                   \r\n  \"balance\" : n    (numeric) The total amount in BTC received for this wallet.\r\n\r\n  \"change\"  : n    (numeric) The wallet balance change including tx(negative means decrease).\r\n}\r\n```\r\n ",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903104233",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "reviewed",
      "id": 735506097,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM1NTA2MDk3",
      "url": null,
      "actor": null,
      "commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Maybe add to decoderawtransaction? (Ignore me if that's dumb, and feel free to ignore the more detailed review comments below until the direction is set.)\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-735506097",
      "submitted_at": "2021-08-21T17:07:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "commented",
      "id": 903227551,
      "node_id": "IC_kwDOABII58411iif",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903227551",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-22T07:38:23Z",
      "updated_at": "2021-08-22T07:38:23Z",
      "author_association": "MEMBER",
      "body": "@prayank23 \r\n\r\n> Can we add this to [`getbalance`](https://bitcoincore.org/en/doc/0.21.0/rpc/wallet/getbalance/)?\r\n\r\nAdding to `getbalance` sounds reasonable to me.\r\n\r\n@jonatack \r\n\r\n> Concept ACK. Maybe add to decoderawtransaction? (Ignore me if that's dumb, and feel free to ignore the more detailed review comments below until the direction is set.)\r\n\r\nThis requires the wallet so `decoderawtransaction` is out, I'm afraid. :)",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903227551",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 5190550449,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTE5MDU1MDQ0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5190550449",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-22T07:38:23Z"
    },
    {
      "event": "subscribed",
      "id": 5190550450,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUxOTA1NTA0NTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5190550450",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-22T07:38:23Z"
    },
    {
      "event": "mentioned",
      "id": 5190550451,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTE5MDU1MDQ1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5190550451",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-22T07:38:23Z"
    },
    {
      "event": "subscribed",
      "id": 5190550452,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUxOTA1NTA0NTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5190550452",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-22T07:38:23Z"
    },
    {
      "event": "commented",
      "id": 903228160,
      "node_id": "IC_kwDOABII58411isA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903228160",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-22T07:45:01Z",
      "updated_at": "2021-08-22T07:45:01Z",
      "author_association": "MEMBER",
      "body": "(getbalances is the replacement for getbalance).",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903228160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 903260884,
      "node_id": "IC_kwDOABII58411qrU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903260884",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-22T12:23:08Z",
      "updated_at": "2021-08-22T12:23:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think it would be better to return JSON instead of numeric, that would allow adding possible other analysis in the future without breaking backwards compatibility.",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903260884",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "reviewed",
      "id": 735586779,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM1NTg2Nzc5",
      "url": null,
      "actor": null,
      "commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-735586779",
      "submitted_at": "2021-08-22T15:44:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "commented",
      "id": 903422148,
      "node_id": "IC_kwDOABII58412SDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903422148",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T03:58:42Z",
      "updated_at": "2021-08-23T03:58:42Z",
      "author_association": "MEMBER",
      "body": "Thanks for all the feedback. I'm rewriting this as a separate pull request that adds the feature to `getbalances`. I'll potentially keep updating this PR as well, in case somebody prefers this variant.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903422148",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5191947107,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE5MTk0NzEwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5191947107",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T04:20:38Z"
    },
    {
      "event": "commented",
      "id": 903431067,
      "node_id": "IC_kwDOABII58412UOb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903431067",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T04:20:40Z",
      "updated_at": "2021-08-23T04:20:40Z",
      "author_association": "MEMBER",
      "body": "Opened alternative #22776 and updated this PR.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903431067",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5191947172,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE5MTk0NzE3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5191947172",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T04:20:41Z"
    },
    {
      "event": "renamed",
      "id": 5191948063,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NTE5MTk0ODA2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5191948063",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T04:21:01Z",
      "rename": {
        "from": "wallet/rpc: add analyzerawtransaction RPC",
        "to": "rpc/wallet: add analyzerawtransaction RPC"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5191963195,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE5MTk2MzE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5191963195",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T04:27:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5192218035,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE5MjIxODAzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5192218035",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T06:01:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5192662861,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE5MjY2Mjg2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5192662861",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T07:48:28Z"
    },
    {
      "event": "reviewed",
      "id": 735907562,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM1OTA3NTYy",
      "url": null,
      "actor": null,
      "commit_id": "f19676bf02cb9cc279e2439c53b1f54ff53328fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK f19676bf02cb9cc279e2439c53b1f54ff53328fa",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-735907562",
      "submitted_at": "2021-08-23T09:26:35Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "commented",
      "id": 903811963,
      "node_id": "IC_kwDOABII58413xN7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903811963",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T14:13:21Z",
      "updated_at": "2022-08-05T23:37:14Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25621](https://github.com/bitcoin/bitcoin/pull/25621) (rpc/wallet: Add details and duplicate section for simulaterawtransaction by anibilthare)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-903811963",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5199939117,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTE5OTkzOTExNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5199939117",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-24T11:09:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5200071898,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIwMDA3MTg5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5200071898",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-24T11:39:23Z"
    },
    {
      "event": "reviewed",
      "id": 737235859,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM3MjM1ODU5",
      "url": null,
      "actor": null,
      "commit_id": "c3628daf58bbe8d745cef08db8cee5fffd95167e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK c3628daf58bbe8d745cef08db8cee5fffd95167e",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-737235859",
      "submitted_at": "2021-08-24T13:36:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "reviewed",
      "id": 737255285,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM3MjU1Mjg1",
      "url": null,
      "actor": null,
      "commit_id": "c3628daf58bbe8d745cef08db8cee5fffd95167e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-737255285",
      "submitted_at": "2021-08-24T13:51:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "commented",
      "id": 905174885,
      "node_id": "IC_kwDOABII5841899l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905174885",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T04:32:19Z",
      "updated_at": "2021-08-25T04:32:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "@kallewoof do you mind adding mention of #22776 to the OP so people looking at this are clear of the alternative",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-905174885",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 5204254053,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTIwNDI1NDA1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5204254053",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T04:32:19Z"
    },
    {
      "event": "subscribed",
      "id": 5204254057,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUyMDQyNTQwNTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5204254057",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T04:32:19Z"
    },
    {
      "event": "commented",
      "id": 905367425,
      "node_id": "IC_kwDOABII58419s-B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905367425",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T10:12:43Z",
      "updated_at": "2021-08-25T10:12:43Z",
      "author_association": "MEMBER",
      "body": "> @kallewoof do you mind adding mention of #22776 to the OP so people looking at this are clear of the alternative\r\n\r\nGood point, done.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-905367425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 5205746033,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTIwNTc0NjAzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5205746033",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T10:12:43Z"
    },
    {
      "event": "subscribed",
      "id": 5205746039,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUyMDU3NDYwMzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5205746039",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T10:12:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5205749433,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIwNTc0OTQzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5205749433",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T10:13:23Z"
    },
    {
      "event": "commented",
      "id": 905367905,
      "node_id": "IC_kwDOABII58419tFh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905367905",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T10:13:25Z",
      "updated_at": "2021-08-25T10:29:18Z",
      "author_association": "MEMBER",
      "body": "~Apologies, I switched to a constant CWallet so had to re-push.~\r\n\r\nReverted change.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-905367905",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5205826797,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIwNTgyNjc5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5205826797",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T10:28:46Z"
    },
    {
      "event": "commented",
      "id": 905950000,
      "node_id": "IC_kwDOABII5841_7Mw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/905950000",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T23:49:43Z",
      "updated_at": "2021-08-25T23:49:43Z",
      "author_association": "MEMBER",
      "body": "This seems useful, but I would like to see its functionality be a bit broader, and the name changed.\r\n\r\nOn the topic of functionality, I do see how it would be useful to see what changes a transaction would make without actually broadcasting it. We currently have `testmempoolaccept` which simulates `sendrawtransaction`. What if we had this RPC be `testwalletaccept` where we can not only observe how the balances change, but also which transaction(s) it conflicts with/replaces in the wallet. It could also be useful to have such an RPC indicate whether it would even be tracked by the wallet, and what metadata the wallet would assign to each output (e.g. mine, change, etc.). However such changes would likely need more invasive changes to the wallet itself before the RPC could be implemented (e.g. refactors to allow checks without actually adding to the wallet).\r\n\r\nOn the topic of naming, I would prefer that we don't use `analyzerawtransaction` unless it is doing something equivalent to `analyzepsbt`. Currently the PSBT and raw transaction RPCs have similar names to indicate that they do equivalent things but with different data structures. This proposed `analyzerawtransaction` is not at all equivalent to the existing `analyzepsbt` - the equivalent thing would be to say what steps need to be done next to the raw transaction in order to sign it. I would rather this be something like `testwalletaccept` or perhaps `simulaterawtransaction`.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-905950000",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 906059704,
      "node_id": "IC_kwDOABII5842AV-4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906059704",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-26T03:15:09Z",
      "updated_at": "2021-08-26T03:25:44Z",
      "author_association": "MEMBER",
      "body": "@achow101\r\n\r\nThanks for the feedback. Great suggestions!\r\n\r\nI think it's agreed that this should be renamed if we do not go with the alternative proposal to add this to `getbalances` (see #22776); I'll rename to `simulaterawtransaction` for now. It seems like your additional functionality may come as follow-up PR(s), too.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-906059704",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 5210318848,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTIxMDMxODg0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5210318848",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-26T03:15:09Z"
    },
    {
      "event": "subscribed",
      "id": 5210318852,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUyMTAzMTg4NTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5210318852",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-26T03:15:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5210354807,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIxMDM1NDgwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5210354807",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-26T03:31:06Z"
    },
    {
      "event": "renamed",
      "id": 5210355264,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NTIxMDM1NTI2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5210355264",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-26T03:31:18Z",
      "rename": {
        "from": "rpc/wallet: add analyzerawtransaction RPC",
        "to": "rpc/wallet: add simulaterawtransaction RPC"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5210364240,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIxMDM2NDI0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5210364240",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-26T03:35:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5211260541,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIxMTI2MDU0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5211260541",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-26T08:04:47Z"
    },
    {
      "event": "commented",
      "id": 906187435,
      "node_id": "IC_kwDOABII5842A1Kr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906187435",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-26T08:05:36Z",
      "updated_at": "2021-08-26T08:05:36Z",
      "author_association": "MEMBER",
      "body": "Updated to take array of transactions instead of just one.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-906187435",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5212010130,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIxMjAxMDEzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5212010130",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-26T10:25:07Z"
    },
    {
      "event": "commented",
      "id": 921136915,
      "node_id": "IC_kwDOABII5842528T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921136915",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-16T18:18:47Z",
      "updated_at": "2021-09-16T18:18:47Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, interesting feature",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-921136915",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "labeled",
      "id": 5314333351,
      "node_id": "LE_lADOABII5846IeL1zwAAAAE8wkqn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5314333351",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-16T18:18:58Z",
      "label": {
        "name": "Feature",
        "color": "7cf575"
      }
    },
    {
      "event": "reviewed",
      "id": 756660588,
      "node_id": "PRR_kwDOABII584tGbls",
      "url": null,
      "actor": null,
      "commit_id": "4d6c1a01532fa189c44714fae31916d758f3a574",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-756660588",
      "submitted_at": "2021-09-16T19:04:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5333359351,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAE95Jr3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5333359351",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-21T07:22:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5333361646,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAE95KPu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5333361646",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-21T07:22:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5333370618,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAE95Mb6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5333370618",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-21T07:24:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5334586858,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAE991Xq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5334586858",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-21T10:52:11Z"
    },
    {
      "event": "commented",
      "id": 923865580,
      "node_id": "IC_kwDOABII5843ERHs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923865580",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-21T10:53:08Z",
      "updated_at": "2021-09-21T10:53:08Z",
      "author_association": "MEMBER",
      "body": "* added `include_watchonly` option\r\n* updated tests to use one node with two wallets\r\n* added `include_watchonly` tests",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-923865580",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 924071463,
      "node_id": "IC_kwDOABII5843FDYn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924071463",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-21T14:57:42Z",
      "updated_at": "2021-09-21T14:57:42Z",
      "author_association": "NONE",
      "body": "Approach NACK\r\n\r\nI prefer https://github.com/bitcoin/bitcoin/pull/22776\r\n\r\nReasons: \r\n\r\n1. No need to create another RPC and remember another RPC.\r\n2. Other PR keeps things simple. This is basically returning balances but based on some conditions. It makes sense to add conditions (transactions in this case) as an argument in `getbalances`.\r\n3. Same approach can be followed in future for other RPCs if required. Example: What will be output for `getmempoolinfo` if a list of transactions are broadcasted: `getmempoolinfo \"[Tx1, Tx2.. Txn]\"`",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-924071463",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 924574194,
      "node_id": "IC_kwDOABII5843G-Hy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924574194",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-22T04:29:50Z",
      "updated_at": "2021-09-22T04:29:50Z",
      "author_association": "MEMBER",
      "body": "FWIW, @apoelstra suggests this is modified to take PSBT(s) instead of raw transactions, stating that the latter is more or less made obsolete by the former, and in multi-party transactions people will most likely be using PSBT.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-924574194",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 5340348893,
      "node_id": "MEE_lADOABII5846IeL1zwAAAAE-T0Hd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5340348893",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-22T04:29:50Z"
    },
    {
      "event": "subscribed",
      "id": 5340348896,
      "node_id": "SE_lADOABII5846IeL1zwAAAAE-T0Hg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5340348896",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-22T04:29:50Z"
    },
    {
      "event": "reviewed",
      "id": 763449354,
      "node_id": "PRR_kwDOABII584tgVAK",
      "url": null,
      "actor": null,
      "commit_id": "40944a573a21c225662ce0c8ba7f64a8427ca22d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-763449354",
      "submitted_at": "2021-09-24T20:29:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5359295837,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAE_cF1d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5359295837",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-25T07:12:56Z"
    },
    {
      "event": "referenced",
      "id": 5439570131,
      "node_id": "REFE_lADOABII5846IeL1zwAAAAFEOUDT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5439570131",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5600f6febdd4128a249fb6bc7799e6af15a7a8df",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/5600f6febdd4128a249fb6bc7799e6af15a7a8df",
      "created_at": "2021-10-10T16:20:04Z"
    },
    {
      "event": "reviewed",
      "id": 801190333,
      "node_id": "PRR_kwDOABII584vwTG9",
      "url": null,
      "actor": null,
      "commit_id": "b269f1bb0d6d1c25000732edbcc1407517d3b20a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-801190333",
      "submitted_at": "2021-11-09T12:01:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5614173738,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFOoX4q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5614173738",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-14T11:53:10Z"
    },
    {
      "event": "labeled",
      "id": 5731551327,
      "node_id": "LE_lADOABII5846IeL1zwAAAAFVoIhf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5731551327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-08T05:22:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5738261789,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFWBu0d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5738261789",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-09T04:41:09Z"
    },
    {
      "event": "unlabeled",
      "id": 5738610100,
      "node_id": "UNLE_lADOABII5846IeL1zwAAAAFWDD20",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5738610100",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-09T06:34:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 989609337,
      "node_id": "IC_kwDOABII5846_D15",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/989609337",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-09T08:10:22Z",
      "updated_at": "2021-12-09T08:10:22Z",
      "author_association": "MEMBER",
      "body": "Rebased. I don't even *see* an error in the two failing tests.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-989609337",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 996790730,
      "node_id": "IC_kwDOABII5847adHK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996790730",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-17T15:04:05Z",
      "updated_at": "2021-12-17T15:30:26Z",
      "author_association": "MEMBER",
      "body": "For what it's worth I prefer this as a separate RPC over #22776. Trying to squash this into `getbalances` seems a bit weird to me and I agree with the reasoning in https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-905950000 that this can do more, this way.\r\n\r\nCode + test review ACK 9cc3c4db5c4fdd200e64415fa3184d1b530581dc",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-996790730",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "reviewed",
      "id": 835376284,
      "node_id": "PRR_kwDOABII584xytSc",
      "url": null,
      "actor": null,
      "commit_id": "9cc3c4db5c4fdd200e64415fa3184d1b530581dc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-835376284",
      "submitted_at": "2021-12-17T15:41:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5788767792,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZCZYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5788767792",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-19T05:50:31Z"
    },
    {
      "event": "commented",
      "id": 997334145,
      "node_id": "IC_kwDOABII5847chyB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/997334145",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-19T05:50:57Z",
      "updated_at": "2021-12-19T05:50:57Z",
      "author_association": "MEMBER",
      "body": "Switched to using Decimal. Also added support for mixing floats and Decimals to `assert_approx` as a separate commit.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-997334145",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5788831394,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZCo6i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5788831394",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-19T07:39:24Z"
    },
    {
      "event": "commented",
      "id": 997354758,
      "node_id": "IC_kwDOABII5847cm0G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/997354758",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-19T09:10:42Z",
      "updated_at": "2021-12-19T09:10:42Z",
      "author_association": "MEMBER",
      "body": "So if I understand the CI error right, it's no longer supported to import pubkeys to wallets that have privkeys (but nodes can?) so I should revert back to two nodes with separate wallets I assume? Sounds like a regression, but if it's the way it is, I'm fine doing that.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-997354758",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "reviewed",
      "id": 836127494,
      "node_id": "PRR_kwDOABII584x1ksG",
      "url": null,
      "actor": null,
      "commit_id": "ae8564c198a3f9c57cc896489afcb78d6b947b45",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-836127494",
      "submitted_at": "2021-12-20T08:44:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "commented",
      "id": 998235303,
      "node_id": "IC_kwDOABII5847f9yn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/998235303",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-20T20:10:25Z",
      "updated_at": "2021-12-20T20:10:25Z",
      "author_association": "MEMBER",
      "body": "> So if I understand the CI error right, it's no longer supported to import pubkeys to wallets that have privkeys (but nodes can?) so I should revert back to two nodes with separate wallets I assume? Sounds like a regression, but if it's the way it is, I'm fine doing that.\r\n\r\nYes. Part of the descriptor wallet changes is to have a clear separation of what is watch-only and what is spendable. This is achieved by having watch-only wallets which do not have private keys, and disallowing descriptor wallets with private keys to include watch-only things. So you should avoid continuing to use the legacy wallet behavior of mixing spendable and watch-only things in one wallet.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-998235303",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "reviewed",
      "id": 836775229,
      "node_id": "PRR_kwDOABII584x4C09",
      "url": null,
      "actor": null,
      "commit_id": "ae8564c198a3f9c57cc896489afcb78d6b947b45",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-836775229",
      "submitted_at": "2021-12-20T20:13:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "commented",
      "id": 998250358,
      "node_id": "IC_kwDOABII5847gBd2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/998250358",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-20T20:33:49Z",
      "updated_at": "2021-12-20T20:44:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach wise, i think a better API might be `filterrawtxformine`, where it returns a list of inputs and outputs that are `IsMine`.\r\n\r\nAlthough: I think this can already be done with a batch of gettxout and getaddressinfo. Why the need for a new API?\r\n\r\nedit: pseudocode\r\n\r\n```rust\r\nfn simulate(t: Transaction, info: SomeAPI) {\r\n  let results = vec![];\r\n  for out in t.ins.iter().map(|i| info.gettxout(i.hash, i.index)) {\r\n    for address in out.scriptPubKey.addresses {\r\n       if info.getaddressinfo(adress).ismine {\r\n           resuts.push((address, out.value));\r\n           break;\r\n       }\r\n    }\r\n  }\r\n  let outs =  t.outs.iter().filter_map(|v| { let a = info.getaddressinfo(a); if v.ismine {Some((a.address, v.value))} else {None} });\r\n}\r\n```\r\n\r\nThis should be reordable into 2 batches: [all gettxouts + outs gettaddressinfo, inputs getaddressinfo].\r\n\r\nIt could be one if we added a is_mine filter to gettxout so the behavior doesn't change based on wallet presence.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-998250358",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 998367654,
      "node_id": "IC_kwDOABII5847geGm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/998367654",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-21T00:23:48Z",
      "updated_at": "2021-12-21T00:23:48Z",
      "author_association": "MEMBER",
      "body": "> Although: I think this can already be done with a batch of gettxout and getaddressinfo. Why the need for a new API?\r\n\r\nFor users who don't know the various ismine things and how the wallet actually calculates balances, it is preferable to have a built in RPC that does all that for them instead of hoping that what they think the wallet does is actually what it will do.\r\n\r\nAdditionally, I would like to see this RPC be expanded to be more than just balance calculation (in a future PR). I would like to have it check for conflicts, and that would require much more work if implemented externally.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-998367654",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 998381444,
      "node_id": "IC_kwDOABII5847gheE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/998381444",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-21T00:56:55Z",
      "updated_at": "2021-12-21T00:56:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "that seems like a recursive problem. A new wallet rpc will probably not do what we think a user should do?\r\n\r\nMaybe it's more a matter of cleaning up / augmenting the behavior of things like ismine so that the behavior is clearer for API consumers?",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-998381444",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 998382140,
      "node_id": "IC_kwDOABII5847gho8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/998382140",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-21T00:58:53Z",
      "updated_at": "2021-12-21T00:58:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "that said I don't think there's a terrible cost to a new RPC if it's useful, but I think we should have a concrete justification comparing it to the equivalent userland code. E.g., there have been cases where you can do it in userland but it is very very inefficient.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-998382140",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5796723336,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZgvqI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5796723336",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-21T05:40:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5796936277,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZhjpV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5796936277",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-21T06:49:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5796960132,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZhpeE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5796960132",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-21T06:56:55Z"
    },
    {
      "event": "commented",
      "id": 998521412,
      "node_id": "IC_kwDOABII5847hDpE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/998521412",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-21T06:56:58Z",
      "updated_at": "2021-12-21T06:56:58Z",
      "author_association": "MEMBER",
      "body": "> Yes. Part of the descriptor wallet changes is to have a clear separation of what is watch-only and what is spendable. This is achieved by having watch-only wallets which do not have private keys, and disallowing descriptor wallets with private keys to include watch-only things. So you should avoid continuing to use the legacy wallet behavior of mixing spendable and watch-only things in one wallet.\r\n\r\nUnderstood! I've added a third watch-only wallet and moved the watch-only checks there.\r\n",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-998521412",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5797054246,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZiAcm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5797054246",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-21T07:22:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5797064028,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZiC1c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5797064028",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-21T07:24:41Z"
    },
    {
      "event": "reviewed",
      "id": 837853020,
      "node_id": "PRR_kwDOABII584x8J9c",
      "url": null,
      "actor": null,
      "commit_id": "aaa078857aa0bd4d881f781992dfc7c11aef0451",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-837853020",
      "submitted_at": "2021-12-21T20:45:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5802514877,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZ21m9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5802514877",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-22T04:17:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5802605377,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZ3LtB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5802605377",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-22T04:56:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5802617721,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFZ3Ot5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5802617721",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-22T05:01:21Z"
    },
    {
      "event": "commented",
      "id": 999365671,
      "node_id": "IC_kwDOABII5847kRwn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/999365671",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-22T08:04:37Z",
      "updated_at": "2021-12-22T08:05:02Z",
      "author_association": "NONE",
      "body": "> A new wallet rpc will probably not do what we think a user should do?\r\n\r\n@JeremyRubin \r\n\r\nThere is an alternative solution in https://github.com/bitcoin/bitcoin/pull/22776 which does not add any new RPC command",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-999365671",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 5803210759,
      "node_id": "MEE_lADOABII5846IeL1zwAAAAFZ5fgH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5803210759",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-22T08:05:02Z"
    },
    {
      "event": "subscribed",
      "id": 5803210765,
      "node_id": "SE_lADOABII5846IeL1zwAAAAFZ5fgN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5803210765",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-22T08:05:02Z"
    },
    {
      "event": "commented",
      "id": 999404890,
      "node_id": "IC_kwDOABII5847kbVa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/999404890",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-22T09:03:17Z",
      "updated_at": "2021-12-22T09:03:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "@prayank23 my point was more that no code changes are required to use a constant number of RPC calls to answer this question. This technique might not have occurred to Kalle, so it was worth sharing.\r\n\r\nAndrew's response ~was that \"the already wallet does not do what you think it does\" and that future changes might extend this RPC further.\r\n\r\nI think adding an RPC makes more sense than changing and old one and both make less sense than not adding anything new unless there is a tangible issue with the mock algorithm i provided. A tangible issue could be \"It's slow\" or \"race conditions between batches\". I don't think we should have that issue here. Another compelling answer is \"well it should eventually check for conflicts too, which we can't do well via just RPCs\". In this case I would be curious to know if the check for conflict RPC should really be it's own RPC, and if we might benefit from thinking that through before pushing this.\r\n\r\nI'm also worried that if there are defects in existing RPCs that make them unreliable somehow that we might fix those too.\r\nI am curious -- for my benefit to learn -- why Andrew thinks the ismine field is not safe to use for this.\r\n\r\nAll that said, an RPC isn't giving anyone cancer so by all means, merge if it's useful. \r\n\r\n",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-999404890",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 5803490355,
      "node_id": "MEE_lADOABII5846IeL1zwAAAAFZ6jwz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5803490355",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-22T09:03:17Z"
    },
    {
      "event": "subscribed",
      "id": 5803490361,
      "node_id": "SE_lADOABII5846IeL1zwAAAAFZ6jw5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5803490361",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-22T09:03:18Z"
    },
    {
      "event": "commented",
      "id": 1000039672,
      "node_id": "IC_kwDOABII5847m2T4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1000039672",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-23T04:44:30Z",
      "updated_at": "2021-12-23T04:44:30Z",
      "author_association": "MEMBER",
      "body": "@JeremyRubin Primarily, my reason for wanting this is because I want a clear-cut way to say that the wallet changes I expect are happening. Yes I could manually write code to use getaddressinfo to do parts of this, but I *might get it wrong*. (Note that the command also includes new UTXO balance changes, which your pseudo-code does not, I think?)",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1000039672",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 5807923740,
      "node_id": "MEE_lADOABII5846IeL1zwAAAAFaLeIc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5807923740",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-23T04:44:30Z"
    },
    {
      "event": "subscribed",
      "id": 5807923741,
      "node_id": "SE_lADOABII5846IeL1zwAAAAFaLeId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5807923741",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-23T04:44:30Z"
    },
    {
      "event": "commented",
      "id": 1000098125,
      "node_id": "IC_kwDOABII5847nElN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1000098125",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-23T07:22:16Z",
      "updated_at": "2021-12-23T07:22:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah you should be able to add it onto the code i provided by just inspecting the inputs/outputs fetched with something like:\r\n\r\n```rust\r\nouts.iter().map(|v| v.1).sum()  - results.iter().map(|v| v.1).sum() \r\n```\r\n-------------\r\ni don't have a problem with this RPC existing, it does seem useful.\r\n\r\nBut I want to point out some other problematic behavior you might not have considered:\r\n\r\nsuppose I have a wallet that has an address X that ismine but has the script/descriptor: `and(older(2 years), key(mine))`\r\n\r\nSuppose my wallet has outputs J under address A and K under address X that has matured.\r\n\r\nthen i ask my node to analyze a transaction that looks like:\r\n\r\nInputs: (J, 2.0) (K, 1.0), ....\r\nOutputs: (A, 2.0), (X,  1.0), ....\r\n\r\nwhere I was expecting the J -> A as my coinjoin, but K -> X was unexpected. Now my funds got automatically locked for another 2 years and this was not caught by this logic because the balance seemed fine.\r\n\r\n------\r\n\r\nIDK if we can have CSV scripts in descriptors today, but it's something to note that APIs like this are incredibly tricks.\r\n\r\nI think the better version would be something like \"I expect to care about input J and output A\" and no other effect.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1000098125",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 1000204888,
      "node_id": "IC_kwDOABII5847nepY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1000204888",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-23T10:35:58Z",
      "updated_at": "2021-12-23T10:35:58Z",
      "author_association": "MEMBER",
      "body": "> But I want to point out some other problematic behavior you might not have considered:\r\n\r\nThose to me sound like good reasons to *have* a command like this, as it seems like a natural expansion to add feedback related to time locks in the response.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1000204888",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 1001844409,
      "node_id": "IC_kwDOABII5847tu65",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1001844409",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-28T03:04:47Z",
      "updated_at": "2021-12-28T03:04:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "i don't have a great answer for all this, it does seem to me that the best case is to make sure *the only* things matches are the ones you expect to be there, and that you *only* sign those.\r\n\r\nAnything else could be a vuln.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1001844409",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "labeled",
      "id": 5834148947,
      "node_id": "LE_lADOABII5846IeL1zwAAAAFbvgxT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5834148947",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-03T08:40:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5837796692,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFb9bVU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5837796692",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-04T01:08:13Z"
    },
    {
      "event": "unlabeled",
      "id": 5837822189,
      "node_id": "UNLE_lADOABII5846IeL1zwAAAAFb9hjt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5837822189",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-04T01:19:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 849804088,
      "node_id": "PRR_kwDOABII584ypvs4",
      "url": null,
      "actor": null,
      "commit_id": "84a745eed211b597a89f3bbc3da73b0ac2cb457d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-849804088",
      "submitted_at": "2022-01-11T22:52:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5877348495,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFeUTiP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5877348495",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-12T02:36:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5877537922,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFeVByC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5877537922",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-12T03:48:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5877560395,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFeVHRL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5877560395",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-12T03:56:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5877572343,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAFeVKL3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5877572343",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-12T04:01:50Z"
    },
    {
      "event": "reviewed",
      "id": 849951601,
      "node_id": "PRR_kwDOABII584yqTtx",
      "url": null,
      "actor": null,
      "commit_id": "aff96844f7086458a414df9bb5cf9327a7266f2d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-849951601",
      "submitted_at": "2022-01-12T04:03:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "commented",
      "id": 1011398002,
      "node_id": "IC_kwDOABII5848SLVy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011398002",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-12T19:53:00Z",
      "updated_at": "2022-01-12T19:53:00Z",
      "author_association": "MEMBER",
      "body": "ACK aff96844f7086458a414df9bb5cf9327a7266f2d",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1011398002",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 1061767404,
      "node_id": "IC_kwDOABII584_SUjs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061767404",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:18:19Z",
      "updated_at": "2022-03-08T13:18:19Z",
      "author_association": "MEMBER",
      "body": "@meshcollider @jonatack @kristapsk @laanwj re-review this?",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1061767404",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 6202420487,
      "node_id": "MEE_lADOABII5846IeL1zwAAAAFxsW0H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6202420487",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:18:19Z"
    },
    {
      "event": "subscribed",
      "id": 6202420497,
      "node_id": "SE_lADOABII5846IeL1zwAAAAFxsW0R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6202420497",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:18:19Z"
    },
    {
      "event": "mentioned",
      "id": 6202420504,
      "node_id": "MEE_lADOABII5846IeL1zwAAAAFxsW0Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6202420504",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:18:19Z"
    },
    {
      "event": "subscribed",
      "id": 6202420514,
      "node_id": "SE_lADOABII5846IeL1zwAAAAFxsW0i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6202420514",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:18:19Z"
    },
    {
      "event": "mentioned",
      "id": 6202420523,
      "node_id": "MEE_lADOABII5846IeL1zwAAAAFxsW0r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6202420523",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:18:19Z"
    },
    {
      "event": "subscribed",
      "id": 6202420531,
      "node_id": "SE_lADOABII5846IeL1zwAAAAFxsW0z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6202420531",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:18:19Z"
    },
    {
      "event": "mentioned",
      "id": 6202420538,
      "node_id": "MEE_lADOABII5846IeL1zwAAAAFxsW06",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6202420538",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:18:19Z"
    },
    {
      "event": "subscribed",
      "id": 6202420542,
      "node_id": "SE_lADOABII5846IeL1zwAAAAFxsW0-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6202420542",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:18:19Z"
    },
    {
      "event": "labeled",
      "id": 6335704885,
      "node_id": "LE_lADOABII5846IeL1zwAAAAF5oy81",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6335704885",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-30T14:31:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6359511264,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAF7DnDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6359511264",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T03:14:37Z"
    },
    {
      "event": "unlabeled",
      "id": 6359537905,
      "node_id": "UNLE_lADOABII5846IeL1zwAAAAF7Dtjx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6359537905",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-04T03:21:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1108689122,
      "node_id": "IC_kwDOABII585CFUDi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108689122",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T15:00:34Z",
      "updated_at": "2022-04-25T15:00:34Z",
      "author_association": "MEMBER",
      "body": "re-ACK bd520345f7a5076e5e1eb3877f6330a9e5816267",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1108689122",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "reviewed",
      "id": 952403512,
      "node_id": "PRR_kwDOABII5844xIY4",
      "url": null,
      "actor": null,
      "commit_id": "bd520345f7a5076e5e1eb3877f6330a9e5816267",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-952403512",
      "submitted_at": "2022-04-25T20:15:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "labeled",
      "id": 6499335106,
      "node_id": "LE_lADOABII5846IeL1zwAAAAGDY_vC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6499335106",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-26T14:24:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 6655417464,
      "node_id": "REFE_lADOABII5846IeL1zwAAAAGMsZx4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6655417464",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2744179c4eb70d80c03f535477e4aa70d9d01e01",
      "commit_url": "https://api.github.com/repos/luke-jr/bitcoin/commits/2744179c4eb70d80c03f535477e4aa70d9d01e01",
      "created_at": "2022-05-21T21:51:48Z"
    },
    {
      "event": "referenced",
      "id": 6655417466,
      "node_id": "REFE_lADOABII5846IeL1zwAAAAGMsZx6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6655417466",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e2165e800c340a25cd35068b8e6fd06702568aef",
      "commit_url": "https://api.github.com/repos/luke-jr/bitcoin/commits/e2165e800c340a25cd35068b8e6fd06702568aef",
      "created_at": "2022-05-21T21:51:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6999785999,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAGhOEIP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6999785999",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-15T07:23:31Z"
    },
    {
      "event": "unlabeled",
      "id": 7000101306,
      "node_id": "UNLE_lADOABII5846IeL1zwAAAAGhPRG6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7000101306",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-15T08:17:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1193878890,
      "node_id": "IC_kwDOABII585HKSVq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1193878890",
      "actor": {
        "login": "anibilthare",
        "id": 44436898,
        "node_id": "MDQ6VXNlcjQ0NDM2ODk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/44436898?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/anibilthare",
        "html_url": "https://github.com/anibilthare",
        "followers_url": "https://api.github.com/users/anibilthare/followers",
        "following_url": "https://api.github.com/users/anibilthare/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/anibilthare/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/anibilthare/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/anibilthare/subscriptions",
        "organizations_url": "https://api.github.com/users/anibilthare/orgs",
        "repos_url": "https://api.github.com/users/anibilthare/repos",
        "events_url": "https://api.github.com/users/anibilthare/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/anibilthare/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-25T10:41:30Z",
      "updated_at": "2022-07-25T10:41:30Z",
      "author_association": "NONE",
      "body": "Ack. Tested manually. Works fine.\r\n\r\nI have also created a follow up [PR](https://github.com/bitcoin/bitcoin/pull/25621) which extends the functionality of this RPC.",
      "user": {
        "login": "anibilthare",
        "id": 44436898,
        "node_id": "MDQ6VXNlcjQ0NDM2ODk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/44436898?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/anibilthare",
        "html_url": "https://github.com/anibilthare",
        "followers_url": "https://api.github.com/users/anibilthare/followers",
        "following_url": "https://api.github.com/users/anibilthare/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/anibilthare/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/anibilthare/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/anibilthare/subscriptions",
        "organizations_url": "https://api.github.com/users/anibilthare/orgs",
        "repos_url": "https://api.github.com/users/anibilthare/repos",
        "events_url": "https://api.github.com/users/anibilthare/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/anibilthare/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1193878890",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 1195809523,
      "node_id": "IC_kwDOABII585HRprz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195809523",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T18:03:08Z",
      "updated_at": "2022-07-26T18:03:08Z",
      "author_association": "MEMBER",
      "body": "ACK b557f53eac39b92bfc4922729e94087556de749a",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1195809523",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "reviewed",
      "id": 1051495723,
      "node_id": "PRR_kwDOABII584-rI0r",
      "url": null,
      "actor": null,
      "commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-1051495723",
      "submitted_at": "2022-07-26T19:14:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "reviewed",
      "id": 1053149102,
      "node_id": "PRR_kwDOABII584-xceu",
      "url": null,
      "actor": null,
      "commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK https://github.com/bitcoin/bitcoin/pull/22751/commits/b557f53eac39b92bfc4922729e94087556de749a\r\n\r\nBut as mentioned below, I think a test coverage for the exception `One or more transaction inputs are missing`  can be added.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-1053149102",
      "submitted_at": "2022-07-27T19:56:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7105871741,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAGniv99",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7105871741",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T01:11:05Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwMWE2NGY1NDg2NjJlMDE4MjE3NjViMjkzNGI2ZTRiMzIxZmRhNmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/701a64f548662e01821765b2934b6e4b321fda6d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/701a64f548662e01821765b2934b6e4b321fda6d",
      "tree": {
        "sha": "473f2e3ca625f1119ce10042a617749b9d9c4698",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/473f2e3ca625f1119ce10042a617749b9d9c4698"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 473f2e3ca625f1119ce10042a617749b9d9c4698\nparent ce3b75690d10426e97d087ca600140a19bf180b7\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1639892805 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1659402672 +0900\n\ntest: add support for Decimal to assert_approx\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAmLoebAACgkQV692LbM1\nMyJNCw/+I1ORK0fEQJpOFHWuN8bVyFBSI1OWuz1JNzahmj0nIDN1BsD9f8+/h5nq\nR1Xqlu8PZ+0P77CGbAPidEixlIObkuOpPYDSNnRQtR8flRubgoalSUULkX2cw5Ct\n2jTbH+a//AWrS/T6URGseICUCYF5zCmZwQvOCUx9Jkt6NtbOrsANmX17nDCnfc0h\nH+3bVvBMaQcmf2AytHVXOVguNVVNPSXKJ9zIpUJVk9EPacscbi7qjlYG16/6aVp7\nW49fVKpKYjSYKT3phC1bB/MDEy4l5bo1kjif6aiuB6BlguXcQuS3+b2aFxHdyafB\niEuyp7mjTJ6Q8RJ6chJLRcOvp1h2jIl7TtRmGdfHmjbBArn9RjhrAjQPoUi0DhW6\ngjWCUwdEW/CXEN2it1mg5WKlsSBktuo756x9goCBG+LfM7e/7XgBqDzisUWL8ma5\nCKaM1KaU0cUKpZ0MbYB/KkQa557dmfwYAutboCNlWKpi7H1okeSGasYORaHcvEss\nBjeXCbfYW3/8tRp2kfL+yYzBIvFOqScm4stTcwiU8GXsjeZWRi8E5fpAJzi3YgxW\nW8GAVBP5IB8Q4GGvL6IO4eErgq1pBJdR8PwyGK9pdXqBmqia6d7grt6xIwB8rbm5\nTkDVnVTkskKaqzF0Z9w9euUApITPa4fNet+tJdUj0P5dbg4wNZ0=\n=mAI/\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce3b75690d10426e97d087ca600140a19bf180b7",
          "sha": "ce3b75690d10426e97d087ca600140a19bf180b7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ce3b75690d10426e97d087ca600140a19bf180b7"
        }
      ],
      "message": "test: add support for Decimal to assert_approx",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2022-08-02T01:11:12Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2021-12-19T05:46:45Z"
      },
      "sha": "701a64f548662e01821765b2934b6e4b321fda6d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7105872418,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAGniwIi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7105872418",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T01:11:18Z"
    },
    {
      "event": "commented",
      "id": 1205580966,
      "node_id": "IC_kwDOABII585H27Sm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1205580966",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-04T17:49:03Z",
      "updated_at": "2022-08-04T17:49:03Z",
      "author_association": "MEMBER",
      "body": "re-ACK ced8a3e77d0dde428360f2250576582b624c013c",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1205580966",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "reviewed",
      "id": 1062504277,
      "node_id": "PRR_kwDOABII584_VIdV",
      "url": null,
      "actor": null,
      "commit_id": "ced8a3e77d0dde428360f2250576582b624c013c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Light ACK ced8a3e77d0dde428360f2250576582b624c013c light review, rebased to current master, debug build, checked RPC help and new test\n\nA few suggestions.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-1062504277",
      "submitted_at": "2022-08-04T20:20:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRiMTBjZjhhZTM2NjkzY2I0ZDNlZDFiNDdiODQ3MDljZjljMGQ4NDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "tree": {
        "sha": "30416f1b8bc1e2a6efcc60c5dab7b8dabd1e0c88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30416f1b8bc1e2a6efcc60c5dab7b8dabd1e0c88"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 30416f1b8bc1e2a6efcc60c5dab7b8dabd1e0c88\nparent 701a64f548662e01821765b2934b6e4b321fda6d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1629439743 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1659660489 +0900\n\nrpc/wallet: add simulaterawtransaction RPC\n\nThis command iterates over the inputs and outputs of the given transactions, and tallies up the balance change for the given wallet. This can be useful e.g. when verifying that a coin join like transaction doesn't contain unexpected inputs that the wallet will then sign for unintentionally.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAmLsaMkACgkQV692LbM1\nMyIZcQ/9HAGgAse2Nz+lSTLG5INBHPtRNCdaRyoW645pR0psZPEohLMFweJ9wQ51\n2+iKRVwKOe1fcC6XidipzpvCaHHQqbvlm6oeXQWiC0b2bL2PaZQgVjFpyIJVL/3N\nCNNCTB14Po9AzixLl3OJvZaTvoOem9xCHAWNhUpT8d+SGPAxSzbsemc2VNRoZ1sg\nP6rRMbDXzyErk95xfDy3N4SYXm70AnORiOGsbQ73Drygp8IiY7p8H55a2jFd2E2b\naAiY6mXZoRLDIINGFk9Hb+ql/bNlewqYJb65vyiEcFSgqZGJvVYlbn54qDtZV0CH\nASD44zo2zZOuM1XSJlRkSgemHn2H6NNESmrz+TANUZv9UOjpiMY8B3lQVZTNatrP\nYWuLaV1yBaBU+AiPP9LRPEJiiMFZMZwHqdgBOrnn6Qc+tvsbv9ZjT48pKDMBr7/a\nGqE6Obze6E98Q9ht8SuUDiQrL89Zgg/e3D4RR/JVayAYpbvbRNDKbwIymzFSSnFb\nUKIHQTJoTk4qsrwF97YWRYTE7YhZ59K7l/qkRORjg7/f/dvgUANZ3G2zPSp1uVM/\nPnVYoWDrr+P9XacF35kNEyRqPN/NSliWMF8JaSp09rAdBzMW75lvNV4nBCgt1feG\nUK8tU9Swkzkm8oYJDFS1gPmavcMcp3WrFwoxc7fbhmxboiDVDvs=\n=zWQt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/701a64f548662e01821765b2934b6e4b321fda6d",
          "sha": "701a64f548662e01821765b2934b6e4b321fda6d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/701a64f548662e01821765b2934b6e4b321fda6d"
        }
      ],
      "message": "rpc/wallet: add simulaterawtransaction RPC\n\nThis command iterates over the inputs and outputs of the given transactions, and tallies up the balance change for the given wallet. This can be useful e.g. when verifying that a coin join like transaction doesn't contain unexpected inputs that the wallet will then sign for unintentionally.",
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2022-08-05T00:48:09Z"
      },
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2021-08-20T06:09:03Z"
      },
      "sha": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7132285524,
      "node_id": "HRFPE_lADOABII5846IeL1zwAAAAGpHgpU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7132285524",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T00:48:19Z"
    },
    {
      "event": "commented",
      "id": 1205919604,
      "node_id": "IC_kwDOABII585H4N90",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1205919604",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T00:48:41Z",
      "updated_at": "2022-08-05T00:48:41Z",
      "author_association": "MEMBER",
      "body": "Applied suggestions by @jonatack. Thanks for the feedback!",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1205919604",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "mentioned",
      "id": 7132286559,
      "node_id": "MEE_lADOABII5846IeL1zwAAAAGpHg5f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7132286559",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T00:48:41Z"
    },
    {
      "event": "subscribed",
      "id": 7132286561,
      "node_id": "SE_lADOABII5846IeL1zwAAAAGpHg5h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7132286561",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T00:48:41Z"
    },
    {
      "event": "commented",
      "id": 1206456995,
      "node_id": "IC_kwDOABII585H6RKj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206456995",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T13:25:16Z",
      "updated_at": "2022-08-05T13:25:16Z",
      "author_association": "MEMBER",
      "body": "ACK db10cf8ae36693cb4d3ed1b47b84709cf9c0d849\r\n\r\n<details><summary>A few minor ideas if you retouch (clang-tidy named args format, a const ref, a test)</summary><p>\r\n\r\n```diff\r\n--- a/src/wallet/rpc/wallet.cpp\r\n+++ b/src/wallet/rpc/wallet.cpp\r\n@@ -628,12 +628,12 @@ RPCHelpMan simulaterawtransaction()\r\n \r\n     UniValue include_watchonly(UniValue::VNULL);\r\n     if (request.params[1].isObject()) {\r\n-        UniValue options = request.params[1];\r\n+        const UniValue& options = request.params[1];\r\n         RPCTypeCheckObj(options,\r\n             {\r\n                 {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\r\n             },\r\n-            true, true);\r\n+            /*fAllowNull=*/true, /*fStrict=*/true);\r\n \r\n         include_watchonly = options[\"include_watchonly\"];\r\n     }\r\n@@ -650,7 +650,7 @@ RPCHelpMan simulaterawtransaction()\r\n \r\n     for (size_t i = 0; i < txs.size(); ++i) {\r\n         CMutableTransaction mtx;\r\n-        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\r\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /*try_no_witness=*/true, /*try_witness=*/true)) {\r\n             throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\r\n         }\r\n \r\n@@ -685,7 +685,7 @@ RPCHelpMan simulaterawtransaction()\r\n         // everything in these\r\n         // Also populate new_utxos in case these are spent in later transactions\r\n \r\n-        const auto& hash = mtx.GetHash(); // auto isn't shorter or simpler here so maybe be explicit about the type \r\n+        const uint256& hash = mtx.GetHash();\r\n         for (size_t i = 0; i < mtx.vout.size(); ++i) {\r\n             const auto& txout = mtx.vout[i];\r\n\r\n--- a/test/functional/wallet_simulaterawtx.py\r\n+++ b/test/functional/wallet_simulaterawtx.py\r\n@@ -50,6 +50,9 @@ class SimulateTxTest(BitcoinTestFramework):\r\n         tx1 = node.createrawtransaction([], [{address1: 5.0}])\r\n         tx2 = node.createrawtransaction([], [{address2: 10.0}])\r\n \r\n+        self.log.info(\"Test simulaterawtransaction result if no txns provided\")  # drop this line if no other test logging\r\n+        assert_equal(w0.simulaterawtransaction([]), {'balance_change': Decimal('0E-8')})\r\n+\r\n         # w0 should be unaffected, w2 should see +5 for tx1\r\n         assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\r\n```\r\n</p></details>\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1206456995",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "commented",
      "id": 1206776516,
      "node_id": "IC_kwDOABII585H7fLE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206776516",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T19:08:03Z",
      "updated_at": "2022-08-05T19:08:03Z",
      "author_association": "MEMBER",
      "body": "re-ACK db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#issuecomment-1206776516",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22751"
    },
    {
      "event": "merged",
      "id": 7138208781,
      "node_id": "ME_lADOABII5846IeL1zwAAAAGpeGwN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7138208781",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "35305c759a4afe983272c3509675095743987aa5",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35305c759a4afe983272c3509675095743987aa5",
      "created_at": "2022-08-05T19:19:28Z"
    },
    {
      "event": "closed",
      "id": 7138208800,
      "node_id": "CE_lADOABII5846IeL1zwAAAAGpeGwg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7138208800",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T19:19:28Z"
    },
    {
      "event": "referenced",
      "id": 7140358379,
      "node_id": "REFE_lADOABII5846IeL1zwAAAAGpmTjr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7140358379",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3cdbdce312ec424cfd7678d59597ac3e9c8f8710",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/3cdbdce312ec424cfd7678d59597ac3e9c8f8710",
      "created_at": "2022-08-06T02:59:19Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 7140571974,
      "node_id": "HRDE_lADOABII5846IeL1zwAAAAGpnHtG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7140571974",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-06T06:28:00Z"
    },
    {
      "event": "reviewed",
      "id": 1088717190,
      "node_id": "PRR_kwDOABII585A5IGG",
      "url": null,
      "actor": null,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#pullrequestreview-1088717190",
      "submitted_at": "2022-08-29T13:54:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692703814",
      "pull_request_review_id": 734716391,
      "id": 692703814,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjcwMzgxNA==",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx), 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx), 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])\n+\n+        # node0 sees fee + 5 btc decrease\n+        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\n+\n+        # node1 sees same as before\n+        analysis = w1.analyzerawtransaction(tx)",
      "path": "test/functional/wallet_analyzerawtx.py",
      "position": null,
      "original_position": 60,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "70620ac3c45da9ed7daa14b52f7d3fbf3b6b7872",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`test/functional/wallet_analyzerawtx.py:60:9: F841 local variable 'analysis' is assigned to but never used`",
      "created_at": "2021-08-20T06:40:00Z",
      "updated_at": "2021-08-20T06:40:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692703814",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692703814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692716520",
      "pull_request_review_id": 734731551,
      "id": 692716520,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjcxNjUyMA==",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx), 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx), 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])\n+\n+        # node0 sees fee + 5 btc decrease\n+        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\n+\n+        # node1 sees same as before\n+        analysis = w1.analyzerawtransaction(tx)",
      "path": "test/functional/wallet_analyzerawtx.py",
      "position": null,
      "original_position": 60,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "70620ac3c45da9ed7daa14b52f7d3fbf3b6b7872",
      "in_reply_to_id": 692703814,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed.",
      "created_at": "2021-08-20T07:04:56Z",
      "updated_at": "2021-08-20T07:04:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r692716520",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692716520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693372773",
      "pull_request_review_id": 735506097,
      "id": 693372773,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzM3Mjc3Mw==",
      "diff_hunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(101, w0.getnewaddress())",
      "path": "test/functional/wallet_analyzerawtx.py",
      "position": null,
      "original_position": 37,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "<details><summary>Some suggestions for the test</summary><p>\r\n\r\n```diff\r\n--- a/test/functional/wallet_analyzerawtx.py\r\n+++ b/test/functional/wallet_analyzerawtx.py\r\n@@ -5,12 +5,14 @@\r\n \"\"\"Test analyzerawtransaction.\r\n \"\"\"\r\n \r\n+from test_framework.blocktools import COINBASE_MATURITY\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import (\r\n     assert_approx,\r\n     assert_equal,\r\n )\r\n \r\n+\r\n class AnalyzeTxTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.setup_clean_chain = True\r\n@@ -27,14 +29,14 @@ class AnalyzeTxTest(BitcoinTestFramework):\r\n         node1 = self.nodes[1]\r\n         self.connect_nodes(0, 1)\r\n \r\n-        node0.generate(1) # Leave IBD\r\n+        node0.generate(1)  # Leave IBD\r\n \r\n         node0.createwallet(wallet_name='w0')\r\n         w0 = node0.get_wallet_rpc('w0')\r\n         node1.createwallet(wallet_name='w1')\r\n         w1 = node1.get_wallet_rpc('w1')\r\n \r\n-        node0.generatetoaddress(101, w0.getnewaddress())\r\n+        node0.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())\r\n         assert_equal(w0.getbalance(), 50.0)\r\n         assert_equal(w1.getbalance(), 0.0)\r\n \r\n@@ -43,10 +45,10 @@ class AnalyzeTxTest(BitcoinTestFramework):\r\n         tx = node1.createrawtransaction([], [{address1: 5.0}])\r\n \r\n         # node0 should be unaffected\r\n-        assert_equal(w0.analyzerawtransaction(tx), 0.0)\r\n+        assert_equal(w0.analyzerawtransaction(tx), {\"balance_change\": 0.0})\r\n \r\n         # node1 should see +5 balance\r\n-        assert_equal(w1.analyzerawtransaction(tx), 5.0)\r\n+        assert_equal(w1.analyzerawtransaction(tx), {\"balance_change\": 5.0})\r\n \r\n         # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\r\n         funding = w0.fundrawtransaction(tx)\r\n@@ -54,10 +56,11 @@ class AnalyzeTxTest(BitcoinTestFramework):\r\n         bitcoin_fee = float(funding[\"fee\"])\r\n \r\n         # node0 sees fee + 5 btc decrease\r\n-        assert_approx(w0.analyzerawtransaction(tx), -(5.0 + bitcoin_fee))\r\n+        assert_approx(w0.analyzerawtransaction(tx)[\"balance_change\"], -(5.0 + bitcoin_fee))\r\n \r\n         # node1 sees same as before\r\n-        assert_equal(w1.analyzerawtransaction(tx), 5.0)\r\n+        assert_equal(w1.analyzerawtransaction(tx)[\"balance_change\"], 5.0)\r\n+\r\n \r\n if __name__ == '__main__':\r\n     AnalyzeTxTest().main()\r\n```\r\n</p></details>\r\n\r\n\r\n",
      "created_at": "2021-08-21T16:14:58Z",
      "updated_at": "2021-08-21T17:07:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693372773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693372773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693374190",
      "pull_request_review_id": 735506097,
      "id": 693374190,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzM3NDE5MA==",
      "diff_hunk": "@@ -4685,6 +4738,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &unloadwallet,                   },\n     { \"wallet\",             &upgradewallet,                  },\n     { \"wallet\",             &walletcreatefundedpsbt,         },\n+    { \"wallet\",             &analyzerawtransaction,          },",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "<details><summary>Some suggestions for the rpc</summary><p>\r\n\r\n```diff\r\n--- a/src/wallet/rpcwallet.cpp\r\n+++ b/src/wallet/rpcwallet.cpp\r\n@@ -4647,13 +4647,16 @@ static RPCHelpMan upgradewallet()\r\n RPCHelpMan analyzerawtransaction()\r\n {\r\n     return RPCHelpMan{\"analyzerawtransaction\",\r\n-        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\r\n+        \"\\nCalculate the balance change that would result from the signing and broadcasting of the given transaction.\\n\" +\r\n         HELP_REQUIRING_PASSPHRASE,\r\n         {\r\n             {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\r\n         },\r\n         RPCResult{\r\n-            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\r\n+            RPCResult::Type::OBJ, \"\", \"\",\r\n+            {\r\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\r\n+            }\r\n         },\r\n         RPCExamples{\r\n             HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\r\n@@ -4673,26 +4676,31 @@ RPCHelpMan analyzerawtransaction()\r\n     // Decode the transaction\r\n     CMutableTransaction mtx;\r\n     if (!DecodeHexTx(mtx, request.params[0].get_str(), true, true)) {\r\n-        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\r\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failed. Make sure the transaction has at least one input.\");\r\n     }\r\n \r\n     // Calculate changes\r\n-    CAmount changes = 0;\r\n+    CAmount changes{0};\r\n \r\n-    // Fetch debit; we are *spending* these; if the transaction is signed and broadcast, we will lose everything in these\r\n+    // Fetch debit; we are *spending* these; if the transaction is signed and\r\n+    // broadcast, we will lose everything in these.\r\n     for (size_t i = 0; i < mtx.vin.size(); ++i) {\r\n         changes -= pwallet->GetDebit(mtx.vin.at(i), ISMINE_SPENDABLE);\r\n     }\r\n \r\n-    // Iterate over outputs; we are *receiving* these, if the wallet considers them \"mine\"; if the transaciton is signed\r\n-    // and broadcast, we will receive everything in these\r\n+    // Iterate over outputs; we are *receiving* these, if the wallet considers\r\n+    // them \"mine\"; if the transaction is signed and broadcast, we will receive\r\n+    // everything in these.\r\n     for (size_t i = 0; i < mtx.vout.size(); ++i) {\r\n         const CTxOut& txout = mtx.vout.at(i);\r\n         if (!pwallet->IsMine(txout)) continue;\r\n         changes += txout.nValue;\r\n     }\r\n \r\n-    return ValueFromAmount(changes);\r\n+    UniValue result(UniValue::VOBJ);\r\n+    result.pushKV(\"balance_change\", ValueFromAmount(changes));\r\n+\r\n+    return result;\r\n }\r\n     };\r\n }\r\n@@ -4762,6 +4770,7 @@ static const CRPCCommand commands[] =\r\n     { \"wallet\",             &abandontransaction,             },\r\n     { \"wallet\",             &abortrescan,                    },\r\n     { \"wallet\",             &addmultisigaddress,             },\r\n+    { \"wallet\",             &analyzerawtransaction,          },\r\n     { \"wallet\",             &backupwallet,                   },\r\n     { \"wallet\",             &bumpfee,                        },\r\n     { \"wallet\",             &psbtbumpfee,                    },\r\n@@ -4816,7 +4825,6 @@ static const CRPCCommand commands[] =\r\n     { \"wallet\",             &unloadwallet,                   },\r\n     { \"wallet\",             &upgradewallet,                  },\r\n     { \"wallet\",             &walletcreatefundedpsbt,         },\r\n-    { \"wallet\",             &analyzerawtransaction,          },\r\n```\r\n</p></details>\r\n\r\n- return an amount? (edit: seems to give the same result)\r\n- ISTM returning the result as a JSON object is preferred\r\n- `s/transaciton/transaction/` line 4610\r\n- sort here\r\n",
      "created_at": "2021-08-21T16:28:25Z",
      "updated_at": "2021-08-21T17:11:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693374190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693374190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4741,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693516957",
      "pull_request_review_id": 735586779,
      "id": 693516957,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxNjk1Nw==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    // Decode the transaction\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str(), true, true)) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": null,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Consider please:\r\n```suggestion\r\n    if (!DecodeHexTx(mtx, request.params[0].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\r\n```",
      "created_at": "2021-08-22T15:18:03Z",
      "updated_at": "2021-08-22T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693516957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693516957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4598,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517224",
      "pull_request_review_id": 735586779,
      "id": 693517224,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxNzIyNA==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": null,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: People typically place `const`s before types in this codebase, AFAIK. If I'm wrong, please correct me.",
      "created_at": "2021-08-22T15:20:06Z",
      "updated_at": "2021-08-22T15:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693517224",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517767",
      "pull_request_review_id": 735586779,
      "id": 693517767,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxNzc2Nw==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    // Decode the transaction\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str(), true, true)) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+    }\n+\n+    // Calculate changes\n+    CAmount changes = 0;\n+\n+    // Fetch debit; we are *spending* these; if the transaction is signed and broadcast, we will lose everything in these\n+    for (size_t i = 0; i < mtx.vin.size(); ++i) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": null,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it be more idiomatic to use `for (CTxIn& txin : mtx.vin) {`?",
      "created_at": "2021-08-22T15:23:59Z",
      "updated_at": "2021-08-22T15:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693517767",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693517767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4606,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518657",
      "pull_request_review_id": 735586779,
      "id": 693518657,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxODY1Nw==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": null,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    RPCTypeCheck(request.params, {UniValue::VSTR}, /* fAllowNull */ true);\r\n```",
      "created_at": "2021-08-22T15:30:30Z",
      "updated_at": "2021-08-22T15:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693518657",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518874",
      "pull_request_review_id": 735586779,
      "id": 693518874,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxODg3NA==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693518657,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you allow `null`, then L4598 will lead to a crash, would it not?",
      "created_at": "2021-08-22T15:32:02Z",
      "updated_at": "2021-08-22T15:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693518874",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693518874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693641733",
      "pull_request_review_id": 735697397,
      "id": 693641733,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzY0MTczMw==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693518657,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The RPCHelpMan framework will not execute the code, since the first param is non-optional.",
      "created_at": "2021-08-23T04:19:45Z",
      "updated_at": "2021-08-23T04:19:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693641733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693641733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643260",
      "pull_request_review_id": 735699067,
      "id": 693643260,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzY0MzI2MA==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    // Decode the transaction\n+    CMutableTransaction mtx;\n+    if (!DecodeHexTx(mtx, request.params[0].get_str(), true, true)) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+    }\n+\n+    // Calculate changes\n+    CAmount changes = 0;\n+\n+    // Fetch debit; we are *spending* these; if the transaction is signed and broadcast, we will lose everything in these\n+    for (size_t i = 0; i < mtx.vin.size(); ++i) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693517767,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2021-08-23T04:25:14Z",
      "updated_at": "2021-08-23T04:25:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693643260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4606,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643427",
      "pull_request_review_id": 735699262,
      "id": 693643427,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzY0MzQyNw==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693517224,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looking around in the code, the way I wrote it seems to be the way it's written elsewhere, so keeping as is.",
      "created_at": "2021-08-23T04:25:57Z",
      "updated_at": "2021-08-23T04:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693643427",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643835",
      "pull_request_review_id": 735699733,
      "id": 693643835,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzY0MzgzNQ==",
      "diff_hunk": "@@ -4685,6 +4738,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &unloadwallet,                   },\n     { \"wallet\",             &upgradewallet,                  },\n     { \"wallet\",             &walletcreatefundedpsbt,         },\n+    { \"wallet\",             &analyzerawtransaction,          },",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693374190,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, addressed all. See also alt PR.",
      "created_at": "2021-08-23T04:27:26Z",
      "updated_at": "2021-08-23T04:27:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693643835",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693643835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4741,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693854537",
      "pull_request_review_id": 735966391,
      "id": 693854537,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg1NDUzNw==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693517224,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Two lines above the `const` modifier is before type. Anyway, it's not important so I don't want to waste your time on this any further.",
      "created_at": "2021-08-23T10:32:30Z",
      "updated_at": "2021-08-23T10:32:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693854537",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693854537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693877296",
      "pull_request_review_id": 735996115,
      "id": 693877296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg3NzI5Ng==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693517224,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That would actually make the shared pointer a constant, which points to a non-constant CWallet instance.\r\n\r\nSee e.g. https://stackoverflow.com/questions/7526152/easy-rule-to-read-complicated-const-declarations",
      "created_at": "2021-08-23T11:10:21Z",
      "updated_at": "2021-08-23T11:10:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693877296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693877296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693878759",
      "pull_request_review_id": 735997982,
      "id": 693878759,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg3ODc1OQ==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693517224,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also try modifying my PR to this, and try compiling:\r\n```C++\r\n    const std::shared_ptr<CWallet> wallet = GetWalletForJSONRPCRequest(request);\r\n    wallet->ResendWalletTransactions(); // <- this is not const\r\n```\r\n(it works, even though ResendWalletTransactions() is NOT const-declared)",
      "created_at": "2021-08-23T11:12:47Z",
      "updated_at": "2021-08-23T11:13:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693878759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693878759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693891440",
      "pull_request_review_id": 736014169,
      "id": 693891440,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg5MTQ0MA==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693517224,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, I'm mistaken, and the two versions are identical. (ResendWalletTransactions() compiles for both cases.)\r\nI actually think this is a mistake, and could just as well be\r\n```C++\r\nstd::shared_ptr<CWallet> wallet = GetWalletForJSONRPCRequest(request);\r\n```\r\nbut I'm just going to keep the const where it is, as that's the case for other RPC calls. Sorry for the misinformation!\r\n\r\nTo clarify, I mis-remembered `const` as applying to the thing directly to the right of it, but it's the opposite; const as the starting keyword is simply a remnant from before the const rule was solidified, and is an exception that says \"usually we apply to the token to our left, but when const is preceded by nothing at all, it applies to the thing right after it\". (That stack overflow post explains it.)\r\n\r\nSo\r\n```C++\r\nconst std::shared_ptr<CWallet> wallet = GetWalletForJSONRPCRequest(request);\r\nstd::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\r\n```\r\nall lead to a wallet whose non-const methods can be called, and the const applies to the `std::shared_ptr` in both cases (it stops us from changing `wallet` to, say, some other `CWallet` somewhere).\r\n\r\nWhat we *really* want here is actually\r\n```C++\r\nstd::shared_ptr<CWallet const> const wallet = GetWalletForJSOMRPCRequest(request);\r\n```\r\n",
      "created_at": "2021-08-23T11:33:56Z",
      "updated_at": "2021-08-23T12:31:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r693891440",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693891440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694482649",
      "pull_request_review_id": 736769842,
      "id": 694482649,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDQ4MjY0OQ==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693517224,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I opened a separate pull request on this subject. Thanks for the nudge. https://github.com/bitcoin/bitcoin/pull/22787",
      "created_at": "2021-08-24T04:29:18Z",
      "updated_at": "2021-08-24T04:29:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r694482649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694482649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694870990",
      "pull_request_review_id": 737254585,
      "id": 694870990,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDg3MDk5MA==",
      "diff_hunk": "@@ -4567,6 +4567,59 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan analyzerawtransaction()\n+{\n+    return RPCHelpMan{\"analyzerawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction.\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::NUM, \"\", \"The wallet balance change (negative means decrease).\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+            + HelpExampleRpc(\"analyzerawtransaction\", \"\\\"myhex\\\"\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    CWallet* const pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR}, true);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "f1cc9a1be3d04881935a02f796caca0b0ef320be",
      "in_reply_to_id": 693518657,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would `RPCTypeCheck(request.params, {UniValue::VSTR})` work too then?",
      "created_at": "2021-08-24T13:51:22Z",
      "updated_at": "2021-08-24T13:51:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r694870990",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694870990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694871518",
      "pull_request_review_id": 737255285,
      "id": 694871518,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDg3MTUxOA==",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx)[\"balance_change\"], 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx)[\"balance_change\"], 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])",
      "path": "test/functional/wallet_analyzerawtx.py",
      "position": null,
      "original_position": 55,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "c3628daf58bbe8d745cef08db8cee5fffd95167e",
      "in_reply_to_id": null,
      "user": {
        "login": "kiminuo",
        "id": 58662979,
        "node_id": "MDQ6VXNlcjU4NjYyOTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kiminuo",
        "html_url": "https://github.com/kiminuo",
        "followers_url": "https://api.github.com/users/kiminuo/followers",
        "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
        "organizations_url": "https://api.github.com/users/kiminuo/orgs",
        "repos_url": "https://api.github.com/users/kiminuo/repos",
        "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kiminuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it be better to use `Decimal` here?",
      "created_at": "2021-08-24T13:51:58Z",
      "updated_at": "2021-08-24T13:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r694871518",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694871518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695604933",
      "pull_request_review_id": 738160469,
      "id": 695604933,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NTYwNDkzMw==",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test analyzerawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+)\n+\n+class AnalyzeTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node0 = self.nodes[0]\n+        node1 = self.nodes[1]\n+        self.connect_nodes(0, 1)\n+\n+        node0.generate(1) # Leave IBD\n+\n+        node0.createwallet(wallet_name='w0')\n+        w0 = node0.get_wallet_rpc('w0')\n+        node1.createwallet(wallet_name='w1')\n+        w1 = node1.get_wallet_rpc('w1')\n+\n+        node0.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+\n+        tx = node1.createrawtransaction([], [{address1: 5.0}])\n+\n+        # node0 should be unaffected\n+        assert_equal(w0.analyzerawtransaction(tx)[\"balance_change\"], 0.0)\n+\n+        # node1 should see +5 balance\n+        assert_equal(w1.analyzerawtransaction(tx)[\"balance_change\"], 5.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx)\n+        tx = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])",
      "path": "test/functional/wallet_analyzerawtx.py",
      "position": null,
      "original_position": 55,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "c3628daf58bbe8d745cef08db8cee5fffd95167e",
      "in_reply_to_id": 694871518,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could, but would be another import just for this one place, and the code should be fine (i.e. no rounding errors) due to the `assert_approx`.",
      "created_at": "2021-08-25T10:11:20Z",
      "updated_at": "2021-08-25T10:11:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r695604933",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/695604933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710393087",
      "pull_request_review_id": 756660588,
      "id": 710393087,
      "node_id": "PRRC_kwDOABII584qV7z_",
      "diff_hunk": "@@ -4567,6 +4567,76 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    const auto& txs = request.params[0].get_array();\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            if (spent.count(txin.prevout)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            spent.insert(txin.prevout);\n+            changes -= pwallet->GetDebit(txin, ISMINE_SPENDABLE);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "4d6c1a01532fa189c44714fae31916d758f3a574",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 4d6c1a01532fa189c44714fae31916d758f3a574 \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nThe isminetype here needs to match the isminetype below as otherwise we could get incorrect balance calculations. This either needs to be changed to `ISMINE_ALL` or the calculation in the outputs needs to check `ISMINE_SPENDABLE` too.\r\n\r\nI think it would be better to use `ISMINE_ALL` so that the balance computation includes watchonly things as those are part of the wallet balance as well.\r\n\r\nOr there could be an `include_watchonly` option that would change the IsMine filter from `ISMINE_SPENDABLE` to `ISMINE_ALL`. This would be the most inline with the rest of the RPCs.",
      "created_at": "2021-09-16T18:56:33Z",
      "updated_at": "2021-09-16T19:04:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r710393087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710393087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4732,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710397947",
      "pull_request_review_id": 756660588,
      "id": 710397947,
      "node_id": "PRRC_kwDOABII584qV8_7",
      "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 19,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "4d6c1a01532fa189c44714fae31916d758f3a574",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 4d6c1a01532fa189c44714fae31916d758f3a574 \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nI would prefer using one node with 2 wallets. Having multiple nodes, with one wallet on each, is how we used to do things before multiwallet. Given that the test already makes testing wallets (one on each node), it's unnecessary to have multiple nodes.",
      "created_at": "2021-09-16T19:02:00Z",
      "updated_at": "2021-09-16T19:04:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r710397947",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710397947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712694853",
      "pull_request_review_id": 759301570,
      "id": 712694853,
      "node_id": "PRRC_kwDOABII584qetxF",
      "diff_hunk": "@@ -4567,6 +4567,76 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    const auto& txs = request.params[0].get_array();\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            if (spent.count(txin.prevout)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            spent.insert(txin.prevout);\n+            changes -= pwallet->GetDebit(txin, ISMINE_SPENDABLE);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "4d6c1a01532fa189c44714fae31916d758f3a574",
      "in_reply_to_id": 710393087,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sounds good - adding an `include_watchonly` option.",
      "created_at": "2021-09-21T04:58:14Z",
      "updated_at": "2021-09-21T04:58:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r712694853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712694853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4732,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712767909",
      "pull_request_review_id": 759385992,
      "id": 712767909,
      "node_id": "PRRC_kwDOABII584qe_ml",
      "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 19,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "4d6c1a01532fa189c44714fae31916d758f3a574",
      "in_reply_to_id": 710397947,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That is obviously the right way to do it. Thanks, fixed.",
      "created_at": "2021-09-21T07:22:02Z",
      "updated_at": "2021-09-21T07:22:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r712767909",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712767909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715884509",
      "pull_request_review_id": 763449354,
      "id": 715884509,
      "node_id": "PRRC_kwDOABII584qq4fd",
      "diff_hunk": "@@ -4660,6 +4660,95 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "40944a573a21c225662ce0c8ba7f64a8427ca22d",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 40944a573a21c225662ce0c8ba7f64a8427ca22d \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nThis is unnecessary since no key access is needed.",
      "created_at": "2021-09-24T20:25:04Z",
      "updated_at": "2021-09-24T20:29:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r715884509",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715884509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4699,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715993468",
      "pull_request_review_id": 763562965,
      "id": 715993468,
      "node_id": "PRRC_kwDOABII584qrTF8",
      "diff_hunk": "@@ -4660,6 +4660,95 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "40944a573a21c225662ce0c8ba7f64a8427ca22d",
      "in_reply_to_id": 715884509,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do the vin/vout checks not access keys to determine if the wallet owns them?",
      "created_at": "2021-09-25T05:18:49Z",
      "updated_at": "2021-09-25T05:18:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r715993468",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715993468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4699,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716003118",
      "pull_request_review_id": 763568590,
      "id": 716003118,
      "node_id": "PRRC_kwDOABII584qrVcu",
      "diff_hunk": "@@ -4660,6 +4660,95 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "40944a573a21c225662ce0c8ba7f64a8427ca22d",
      "in_reply_to_id": 715884509,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It only uses pubkeys.",
      "created_at": "2021-09-25T07:02:04Z",
      "updated_at": "2021-09-25T07:02:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r716003118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716003118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4699,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716004123",
      "pull_request_review_id": 763569217,
      "id": 716004123,
      "node_id": "PRRC_kwDOABII584qrVsb",
      "diff_hunk": "@@ -4660,6 +4660,95 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+    EnsureWalletIsUnlocked(*pwallet);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "40944a573a21c225662ce0c8ba7f64a8427ca22d",
      "in_reply_to_id": 715884509,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "OK, you're talking about the `EnsureWalletIsUnlocked` line. I thought you were also talking about L4698. Fixed.",
      "created_at": "2021-09-25T07:12:48Z",
      "updated_at": "2021-09-25T07:12:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r716004123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716004123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4699,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745550564",
      "pull_request_review_id": 801190333,
      "id": 745550564,
      "node_id": "PRRC_kwDOABII584scDLk",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        node.generate(1) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+\n+        node.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 37,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b269f1bb0d6d1c25000732edbcc1407517d3b20a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Needs to use self.gener... after a rebase",
      "created_at": "2021-11-09T12:01:43Z",
      "updated_at": "2021-11-09T12:01:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r745550564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745550564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748843165",
      "pull_request_review_id": 805462408,
      "id": 748843165,
      "node_id": "PRRC_kwDOABII584sonCd",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        node.generate(1) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+\n+        node.generatetoaddress(nblocks=COINBASE_MATURITY + 1, address=w0.getnewaddress())",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 37,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b269f1bb0d6d1c25000732edbcc1407517d3b20a",
      "in_reply_to_id": 745550564,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, updated.",
      "created_at": "2021-11-14T11:52:59Z",
      "updated_at": "2021-11-14T11:52:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r748843165",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748843165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771494286",
      "pull_request_review_id": 835376284,
      "id": 771494286,
      "node_id": "PRRC_kwDOABII584t_BGO",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Make address1 watch-only in w0\n+        w0.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])\n+        all = {\"include_watchonly\": True}\n+\n+        tx1 = node.createrawtransaction([], [{address1: 5.0}])\n+        tx2 = node.createrawtransaction([], [{address2: 10.0}])\n+\n+        # w0 should be unaffected (include_watchonly=False) or see +5 (include_watchonly=True) for tx1\n+        assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\n+        assert_equal(w0.simulaterawtransaction([tx1], all)[\"balance_change\"], 5.0)\n+\n+        # w1 should see +5 balance for tx1\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w0 should be unaffected (include_watchonly=False) or see +5 (include_watchonly=True) for both transactions\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 0.0)\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2], all)[\"balance_change\"], 5.0)\n+\n+        # w1 should see +15 balance for both transactions\n+        assert_equal(w1.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 15.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx1)\n+        tx1 = funding[\"hex\"]\n+        bitcoin_fee = float(funding[\"fee\"])",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 68,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "9cc3c4db5c4fdd200e64415fa3184d1b530581dc",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be better to use `Decimal` instead of float for monetary amounts.",
      "created_at": "2021-12-17T15:41:42Z",
      "updated_at": "2021-12-17T15:41:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r771494286",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771494286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772174126",
      "pull_request_review_id": 836127494,
      "id": 772174126,
      "node_id": "PRRC_kwDOABII584uBnEu",
      "diff_hunk": "@@ -0,0 +1,99 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-addresstype=legacy\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Make address1 watch-only in w0\n+        w0.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 47,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ae8564c198a3f9c57cc896489afcb78d6b947b45",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`importpubkey` does not exist for descriptor wallets (sqlite).\r\n\r\n`                                   test_framework.authproxy.JSONRPCException: Cannot import descriptor without private keys to a wallet with private keys enabled (-4)`",
      "created_at": "2021-12-20T08:44:10Z",
      "updated_at": "2021-12-20T08:44:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r772174126",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772174126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772278292",
      "pull_request_review_id": 836270018,
      "id": 772278292,
      "node_id": "PRRC_kwDOABII584uCAgU",
      "diff_hunk": "@@ -0,0 +1,99 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-addresstype=legacy\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Make address1 watch-only in w0\n+        w0.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 47,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ae8564c198a3f9c57cc896489afcb78d6b947b45",
      "in_reply_to_id": 772174126,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe I should rethink the usage of importpubkey completely. It seems to be not very well supported anymore.",
      "created_at": "2021-12-20T11:11:36Z",
      "updated_at": "2021-12-20T11:11:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r772278292",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772278292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772640020",
      "pull_request_review_id": 836775229,
      "id": 772640020,
      "node_id": "PRRC_kwDOABII584uDY0U",
      "diff_hunk": "@@ -582,6 +582,94 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ae8564c198a3f9c57cc896489afcb78d6b947b45",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In ae8564c198a3f9c57cc896489afcb78d6b947b45 \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nThe wallet does not need to be unlocked, so this help text is not needed.",
      "created_at": "2021-12-20T20:10:56Z",
      "updated_at": "2021-12-20T20:13:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r772640020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772640020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 589,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772640831",
      "pull_request_review_id": 836775229,
      "id": 772640831,
      "node_id": "PRRC_kwDOABII584uDZA_",
      "diff_hunk": "@@ -0,0 +1,99 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-addresstype=legacy\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Make address1 watch-only in w0\n+        w0.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])\n+        all = {\"include_watchonly\": True}\n+\n+        tx1 = node.createrawtransaction([], [{address1: 5.0}])\n+        tx2 = node.createrawtransaction([], [{address2: 10.0}])\n+\n+        # w0 should be unaffected (include_watchonly=False) or see +5 (include_watchonly=True) for tx1\n+        assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\n+        assert_equal(w0.simulaterawtransaction([tx1], all)[\"balance_change\"], 5.0)\n+\n+        # w1 should see +5 balance for tx1\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w0 should be unaffected (include_watchonly=False) or see +5 (include_watchonly=True) for both transactions\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 0.0)\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2], all)[\"balance_change\"], 5.0)\n+\n+        # w1 should see +15 balance for both transactions\n+        assert_equal(w1.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 15.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx1)\n+        tx1 = funding[\"hex\"]\n+        bitcoin_fee = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fee + 5 btc decrease, or fee only for watchonly case\n+        assert_approx(w0.simulaterawtransaction([tx1])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee))\n+        assert_approx(w0.simulaterawtransaction([tx1], all)[\"balance_change\"], -(bitcoin_fee))\n+\n+        # w1 sees same as before\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # same inputs (tx) more than once should error\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1,tx1])\n+\n+        # send tx1 to avoid reusing same UTXO below\n+        node.sendrawtransaction(w0.signrawtransactionwithwallet(tx1)[\"hex\"])\n+        self.sync_all()\n+\n+        # w0 funds transaction 2; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx2)\n+        tx2 = funding[\"hex\"]\n+        bitcoin_fee2 = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fees + 15 btc decrease, or fees + 10 btc decrease for watch only case\n+        assert_approx(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee + Decimal(\"10\") + bitcoin_fee2))",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 92,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ae8564c198a3f9c57cc896489afcb78d6b947b45",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In ae8564c198a3f9c57cc896489afcb78d6b947b45 \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nSince `tx1` is already sent, it will include inputs that are already spent. It seems like we should disallow transactions that spend already spent inputs, at least until we implement conflict checking in this RPC.",
      "created_at": "2021-12-20T20:12:25Z",
      "updated_at": "2021-12-20T20:13:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r772640831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772640831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772836367",
      "pull_request_review_id": 837028284,
      "id": 772836367,
      "node_id": "PRRC_kwDOABII584uEIwP",
      "diff_hunk": "@@ -582,6 +582,94 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\" +\n+        HELP_REQUIRING_PASSPHRASE,",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ae8564c198a3f9c57cc896489afcb78d6b947b45",
      "in_reply_to_id": 772640020,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, removed.",
      "created_at": "2021-12-21T05:23:17Z",
      "updated_at": "2021-12-21T05:23:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r772836367",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772836367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 589,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772870187",
      "pull_request_review_id": 837072340,
      "id": 772870187,
      "node_id": "PRRC_kwDOABII584uERAr",
      "diff_hunk": "@@ -0,0 +1,99 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-addresstype=legacy\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Make address1 watch-only in w0\n+        w0.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])\n+        all = {\"include_watchonly\": True}\n+\n+        tx1 = node.createrawtransaction([], [{address1: 5.0}])\n+        tx2 = node.createrawtransaction([], [{address2: 10.0}])\n+\n+        # w0 should be unaffected (include_watchonly=False) or see +5 (include_watchonly=True) for tx1\n+        assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\n+        assert_equal(w0.simulaterawtransaction([tx1], all)[\"balance_change\"], 5.0)\n+\n+        # w1 should see +5 balance for tx1\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w0 should be unaffected (include_watchonly=False) or see +5 (include_watchonly=True) for both transactions\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 0.0)\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2], all)[\"balance_change\"], 5.0)\n+\n+        # w1 should see +15 balance for both transactions\n+        assert_equal(w1.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 15.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx1)\n+        tx1 = funding[\"hex\"]\n+        bitcoin_fee = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fee + 5 btc decrease, or fee only for watchonly case\n+        assert_approx(w0.simulaterawtransaction([tx1])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee))\n+        assert_approx(w0.simulaterawtransaction([tx1], all)[\"balance_change\"], -(bitcoin_fee))\n+\n+        # w1 sees same as before\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # same inputs (tx) more than once should error\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1,tx1])\n+\n+        # send tx1 to avoid reusing same UTXO below\n+        node.sendrawtransaction(w0.signrawtransactionwithwallet(tx1)[\"hex\"])\n+        self.sync_all()\n+\n+        # w0 funds transaction 2; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx2)\n+        tx2 = funding[\"hex\"]\n+        bitcoin_fee2 = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fees + 15 btc decrease, or fees + 10 btc decrease for watch only case\n+        assert_approx(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee + Decimal(\"10\") + bitcoin_fee2))",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 92,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ae8564c198a3f9c57cc896489afcb78d6b947b45",
      "in_reply_to_id": 772640831,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added fetch/check of coins for transactions and RPC asserts when coins are missing or spent.",
      "created_at": "2021-12-21T06:50:22Z",
      "updated_at": "2021-12-21T06:50:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r772870187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/772870187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/773430392",
      "pull_request_review_id": 837853020,
      "id": 773430392,
      "node_id": "PRRC_kwDOABII584uGZx4",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        node.createwallet(wallet_name='w2', disable_private_keys=True)\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+        w2 = node.get_wallet_rpc('w2')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Add address1 as watch-only to w2\n+        w2.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])\n+\n+        tx1 = node.createrawtransaction([], [{address1: 5.0}])\n+        tx2 = node.createrawtransaction([], [{address2: 10.0}])\n+\n+        # w0 should be unaffected, w2 should see +5 for tx1\n+        assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +5 balance for tx1\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w0 should be unaffected, w2 should see +5 for both transactions\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +15 balance for both transactions\n+        assert_equal(w1.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 15.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx1)\n+        tx1 = funding[\"hex\"]\n+        bitcoin_fee = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fee + 5 btc decrease, w2 sees + 5 btc\n+        assert_approx(w0.simulaterawtransaction([tx1])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee))\n+        assert_approx(w2.simulaterawtransaction([tx1])[\"balance_change\"], Decimal(\"5\"))\n+\n+        # w1 sees same as before\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # same inputs (tx) more than once should error\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1,tx1])\n+\n+        # send tx1 to avoid reusing same UTXO below\n+        node.sendrawtransaction(w0.signrawtransactionwithwallet(tx1)[\"hex\"])\n+        self.generate(node, 1, sync_fun=self.no_op) # Confirm tx to trigger error below\n+        self.sync_all()\n+\n+        # w0 funds transaction 2; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx2)\n+        tx2 = funding[\"hex\"]",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": 117,
      "original_position": 89,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "aaa078857aa0bd4d881f781992dfc7c11aef0451",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In aaa078857aa0bd4d881f781992dfc7c11aef0451 \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nI think this section isn't doing anything now.",
      "created_at": "2021-12-21T20:40:14Z",
      "updated_at": "2021-12-21T20:45:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r773430392",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/773430392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": 115,
      "original_start_line": 87,
      "start_side": "RIGHT",
      "line": 117,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/773432776",
      "pull_request_review_id": 837853020,
      "id": 773432776,
      "node_id": "PRRC_kwDOABII584uGaXI",
      "diff_hunk": "@@ -582,6 +582,109 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            if (spent.count(txin.prevout)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (!coins.count(txin.prevout)) {",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "aaa078857aa0bd4d881f781992dfc7c11aef0451",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In aaa078857aa0bd4d881f781992dfc7c11aef0451 \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nIf the UTXO points to one of the transactions in the array, then this would fail. I think it is possible someone would do this, especially with package relay on the horizon.\r\n\r\nWe could have `coins` outside of the `txs `loop, add the outputs of each tx to `coins`, and also remove coins as they are processed in this loop.",
      "created_at": "2021-12-21T20:45:10Z",
      "updated_at": "2021-12-21T20:45:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r773432776",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/773432776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 661,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/773588753",
      "pull_request_review_id": 838055270,
      "id": 773588753,
      "node_id": "PRRC_kwDOABII584uHAcR",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        node.createwallet(wallet_name='w2', disable_private_keys=True)\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+        w2 = node.get_wallet_rpc('w2')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Add address1 as watch-only to w2\n+        w2.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])\n+\n+        tx1 = node.createrawtransaction([], [{address1: 5.0}])\n+        tx2 = node.createrawtransaction([], [{address2: 10.0}])\n+\n+        # w0 should be unaffected, w2 should see +5 for tx1\n+        assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +5 balance for tx1\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w0 should be unaffected, w2 should see +5 for both transactions\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +15 balance for both transactions\n+        assert_equal(w1.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 15.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx1)\n+        tx1 = funding[\"hex\"]\n+        bitcoin_fee = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fee + 5 btc decrease, w2 sees + 5 btc\n+        assert_approx(w0.simulaterawtransaction([tx1])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee))\n+        assert_approx(w2.simulaterawtransaction([tx1])[\"balance_change\"], Decimal(\"5\"))\n+\n+        # w1 sees same as before\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # same inputs (tx) more than once should error\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1,tx1])\n+\n+        # send tx1 to avoid reusing same UTXO below\n+        node.sendrawtransaction(w0.signrawtransactionwithwallet(tx1)[\"hex\"])\n+        self.generate(node, 1, sync_fun=self.no_op) # Confirm tx to trigger error below\n+        self.sync_all()\n+\n+        # w0 funds transaction 2; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx2)\n+        tx2 = funding[\"hex\"]",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": 117,
      "original_position": 89,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "aaa078857aa0bd4d881f781992dfc7c11aef0451",
      "in_reply_to_id": 773430392,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Re-added tests for tx2 only.",
      "created_at": "2021-12-22T04:17:33Z",
      "updated_at": "2021-12-22T04:17:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r773588753",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/773588753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": 115,
      "original_start_line": 87,
      "start_side": "RIGHT",
      "line": 117,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/773598867",
      "pull_request_review_id": 838068019,
      "id": 773598867,
      "node_id": "PRRC_kwDOABII584uHC6T",
      "diff_hunk": "@@ -582,6 +582,109 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            if (spent.count(txin.prevout)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (!coins.count(txin.prevout)) {",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "aaa078857aa0bd4d881f781992dfc7c11aef0451",
      "in_reply_to_id": 773432776,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To avoid things like tx1 spending tx2 and tx2 spending tx1, I think we may want to strictly require that transactions are in order. If we do, I think we can just iterate one at a time and just append new outputs as we go, without the extra round.\r\n\r\nI updated the code to reflect this suggestion.\r\n\r\nEdit：re-reading your suggestion, I think maybe you suggested the same thing I am saying..",
      "created_at": "2021-12-22T04:55:49Z",
      "updated_at": "2021-12-22T05:40:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r773598867",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/773598867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 661,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782580085",
      "pull_request_review_id": 849804088,
      "id": 782580085,
      "node_id": "PRRC_kwDOABII584upTl1",
      "diff_hunk": "@@ -582,6 +582,124 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& op = txin.prevout;\n+            if (spent.count(op)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (new_utxos.count(op)) {\n+                changes -= new_utxos.at(op);\n+                new_utxos.erase(op);\n+            } else {\n+                if (!coins.count(op)) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs are missing\");\n+                }\n+                if (coins.at(txin.prevout).IsSpent()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs have been spent already\");\n+                }\n+                changes -= pwallet->GetDebit(txin, filter);\n+            }\n+            spent.insert(txin.prevout);\n+        }\n+\n+        for (size_t i = 0; i < txs.size(); ++i) {",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "84a745eed211b597a89f3bbc3da73b0ac2cb457d",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 84a745eed211b597a89f3bbc3da73b0ac2cb457d \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nThis loop doesn't make sense here. It shouldn't be necessary to iterate `txs` at the same time we are already iterating `txs`.\r\n\r\nAt best, this could be moved outside of the first `txs` loop as a preprocessing step to extract all of the UTXOs created, but I don't think that would be a good idea. That would allow for transactions that have circular dependencies and those would be invalid. It is fine to have an order requirement as that is what package validation requires.",
      "created_at": "2022-01-11T22:42:00Z",
      "updated_at": "2022-01-11T22:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r782580085",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782580085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 678,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782580433",
      "pull_request_review_id": 849804088,
      "id": 782580433,
      "node_id": "PRRC_kwDOABII584upTrR",
      "diff_hunk": "@@ -582,6 +582,124 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& op = txin.prevout;\n+            if (spent.count(op)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (new_utxos.count(op)) {\n+                changes -= new_utxos.at(op);\n+                new_utxos.erase(op);\n+            } else {\n+                if (!coins.count(op)) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs are missing\");\n+                }\n+                if (coins.at(txin.prevout).IsSpent()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs have been spent already\");\n+                }\n+                changes -= pwallet->GetDebit(txin, filter);\n+            }\n+            spent.insert(txin.prevout);\n+        }\n+\n+        for (size_t i = 0; i < txs.size(); ++i) {\n+            // Populate new outputs\n+            const auto hash = mtx.GetHash();\n+            for (size_t i = 0; i < mtx.vout.size(); ++i) {\n+                new_utxos[COutPoint(hash, i)] = (pwallet->IsMine(mtx.vout[i]) & filter) ? mtx.vout[i].nValue : 0;",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 101,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "84a745eed211b597a89f3bbc3da73b0ac2cb457d",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 84a745eed211b597a89f3bbc3da73b0ac2cb457d \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nThis can be moved into the loop below that iterates the outputs.",
      "created_at": "2022-01-11T22:42:44Z",
      "updated_at": "2022-01-11T22:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r782580433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782580433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 682,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782581564",
      "pull_request_review_id": 849804088,
      "id": 782581564,
      "node_id": "PRRC_kwDOABII584upT88",
      "diff_hunk": "@@ -258,6 +258,7 @@\n     'wallet_implicitsegwit.py --legacy-wallet',\n     'rpc_named_arguments.py',\n     'feature_startupnotify.py',\n+    'wallet_simulaterawtx.py',",
      "path": "test/functional/test_runner.py",
      "position": null,
      "original_position": 4,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "84a745eed211b597a89f3bbc3da73b0ac2cb457d",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 84a745eed211b597a89f3bbc3da73b0ac2cb457d \"rpc/wallet: add simulaterawtransaction RPC\"\r\n\r\nWallet functional tests should appear in test_runner.py twice, once with `--legacy-wallet` and once with `--descriptors`.",
      "created_at": "2022-01-11T22:45:06Z",
      "updated_at": "2022-01-11T22:52:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r782581564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782581564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782647274",
      "pull_request_review_id": 849892498,
      "id": 782647274,
      "node_id": "PRRC_kwDOABII584upj_q",
      "diff_hunk": "@@ -582,6 +582,124 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& op = txin.prevout;\n+            if (spent.count(op)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (new_utxos.count(op)) {\n+                changes -= new_utxos.at(op);\n+                new_utxos.erase(op);\n+            } else {\n+                if (!coins.count(op)) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs are missing\");\n+                }\n+                if (coins.at(txin.prevout).IsSpent()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs have been spent already\");\n+                }\n+                changes -= pwallet->GetDebit(txin, filter);\n+            }\n+            spent.insert(txin.prevout);\n+        }\n+\n+        for (size_t i = 0; i < txs.size(); ++i) {",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "84a745eed211b597a89f3bbc3da73b0ac2cb457d",
      "in_reply_to_id": 782580085,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, this was clearly a mistake. I removed the loop and kept the inner block only.",
      "created_at": "2022-01-12T01:35:21Z",
      "updated_at": "2022-01-12T01:35:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r782647274",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782647274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 678,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782647823",
      "pull_request_review_id": 849893231,
      "id": 782647823,
      "node_id": "PRRC_kwDOABII584upkIP",
      "diff_hunk": "@@ -582,6 +582,124 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    CAmount changes{0};\n+    std::set<COutPoint> spent;\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& op = txin.prevout;\n+            if (spent.count(op)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (new_utxos.count(op)) {\n+                changes -= new_utxos.at(op);\n+                new_utxos.erase(op);\n+            } else {\n+                if (!coins.count(op)) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs are missing\");\n+                }\n+                if (coins.at(txin.prevout).IsSpent()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs have been spent already\");\n+                }\n+                changes -= pwallet->GetDebit(txin, filter);\n+            }\n+            spent.insert(txin.prevout);\n+        }\n+\n+        for (size_t i = 0; i < txs.size(); ++i) {\n+            // Populate new outputs\n+            const auto hash = mtx.GetHash();\n+            for (size_t i = 0; i < mtx.vout.size(); ++i) {\n+                new_utxos[COutPoint(hash, i)] = (pwallet->IsMine(mtx.vout[i]) & filter) ? mtx.vout[i].nValue : 0;",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 101,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "84a745eed211b597a89f3bbc3da73b0ac2cb457d",
      "in_reply_to_id": 782580433,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moved.",
      "created_at": "2022-01-12T01:37:06Z",
      "updated_at": "2022-01-12T01:37:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r782647823",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782647823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 682,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782648108",
      "pull_request_review_id": 849893595,
      "id": 782648108,
      "node_id": "PRRC_kwDOABII584upkMs",
      "diff_hunk": "@@ -258,6 +258,7 @@\n     'wallet_implicitsegwit.py --legacy-wallet',\n     'rpc_named_arguments.py',\n     'feature_startupnotify.py',\n+    'wallet_simulaterawtx.py',",
      "path": "test/functional/test_runner.py",
      "position": null,
      "original_position": 4,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "84a745eed211b597a89f3bbc3da73b0ac2cb457d",
      "in_reply_to_id": 782581564,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Got it. Done.",
      "created_at": "2022-01-12T01:38:00Z",
      "updated_at": "2022-01-12T01:38:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r782648108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782648108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782693596",
      "pull_request_review_id": 849951601,
      "id": 782693596,
      "node_id": "PRRC_kwDOABII584upvTc",
      "diff_hunk": "@@ -583,6 +583,120 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& op = txin.prevout;\n+            if (spent.count(op)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (new_utxos.count(op)) {\n+                changes -= new_utxos.at(op);\n+                new_utxos.erase(op);\n+            } else {\n+                if (!coins.count(op)) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs are missing\");\n+                }\n+                if (coins.at(op).IsSpent()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs have been spent already\");\n+                }\n+                changes -= pwallet->GetDebit(txin, filter);\n+            }\n+            spent.insert(op);\n+        }\n+\n+        // Iterate over outputs; we are *receiving* these, if the wallet considers\n+        // them \"mine\"; if the transaction is signed and broadcast, we will receive\n+        // everything in these\n+        // Also populate new_utxos in case these are spent in later transactions\n+\n+        const auto hash = mtx.GetHash();\n+        for (size_t i = 0; i < mtx.vout.size(); ++i) {\n+            const auto& txout = mtx.vout[i];\n+            bool is_mine = 0 < (pwallet->IsMine(txout) & filter);\n+            changes += new_utxos[COutPoint(hash, i)] = is_mine ? txout.nValue : 0;",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 103,
      "original_position": 106,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "aff96844f7086458a414df9bb5cf9327a7266f2d",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I hope this line isn't overly confusing.",
      "created_at": "2022-01-12T04:03:10Z",
      "updated_at": "2022-01-12T04:03:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r782693596",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782693596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 692,
      "original_line": 692,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857992736",
      "pull_request_review_id": 952403512,
      "id": 857992736,
      "node_id": "PRRC_kwDOABII584zI-4g",
      "diff_hunk": "@@ -28,6 +28,10 @@\n \n def assert_approx(v, vexp, vspan=0.00001):\n     \"\"\"Assert that `v` is within `vspan` of `vexp`\"\"\"\n+    if isinstance(v, Decimal) or isinstance(vexp, Decimal):\n+        v=Decimal(v)\n+        vexp=Decimal(vexp)\n+        vspan=Decimal(vspan)",
      "path": "test/functional/test_framework/util.py",
      "position": 7,
      "original_position": 7,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "bd520345f7a5076e5e1eb3877f6330a9e5816267",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This results in `Decimal('0.000010000000000000000818030539140313095458623138256371021270751953125')`\r\n\r\nBetter to just insist `v` and `vexp` have compatible types, and default `vspan` sanely?",
      "created_at": "2022-04-25T20:15:15Z",
      "updated_at": "2022-04-25T20:15:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r857992736",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857992736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858273189",
      "pull_request_review_id": 952756168,
      "id": 858273189,
      "node_id": "PRRC_kwDOABII584zKDWl",
      "diff_hunk": "@@ -28,6 +28,10 @@\n \n def assert_approx(v, vexp, vspan=0.00001):\n     \"\"\"Assert that `v` is within `vspan` of `vexp`\"\"\"\n+    if isinstance(v, Decimal) or isinstance(vexp, Decimal):\n+        v=Decimal(v)\n+        vexp=Decimal(vexp)\n+        vspan=Decimal(vspan)",
      "path": "test/functional/test_framework/util.py",
      "position": 7,
      "original_position": 7,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "bd520345f7a5076e5e1eb3877f6330a9e5816267",
      "in_reply_to_id": 857992736,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The idea is to let the caller not worry too much about converting stuff to/from Decimal instances. Is there an issue due to `vspan` having some noise somewhere?",
      "created_at": "2022-04-26T05:11:38Z",
      "updated_at": "2022-04-26T06:33:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r858273189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858273189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930327560",
      "pull_request_review_id": 1051495723,
      "id": 930327560,
      "node_id": "PRRC_kwDOABII5843c6wI",
      "diff_hunk": "@@ -590,6 +590,120 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Based on the command description, why this is needed?\r\n\r\nShouldn't `simulaterawtransaction` only care about how the wallet behaves if a certain transaction gets relayed to the network?.\r\n\r\nIn other words, doesn't seems to be ok to fetch inputs that are not owned/watched by this wallet as them don't mean anything for the wallet.\r\n\r\nWe could replace the input spendability check that is below using `wallet.IsSpent(outpoint)`.",
      "created_at": "2022-07-26T19:14:19Z",
      "updated_at": "2022-07-26T20:11:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r930327560",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930327560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": 657,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930621983",
      "pull_request_review_id": 1051890889,
      "id": 930621983,
      "node_id": "PRRC_kwDOABII5843eCof",
      "diff_hunk": "@@ -590,6 +590,120 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "in_reply_to_id": 930327560,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure what you're proposing. Mind writing a patch that describes your suggestion?",
      "created_at": "2022-07-27T05:01:26Z",
      "updated_at": "2022-07-27T05:01:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r930621983",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930621983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": 657,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/931526163",
      "pull_request_review_id": 1053149102,
      "id": 931526163,
      "node_id": "PRRC_kwDOABII5843hfYT",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        node.createwallet(wallet_name='w2', disable_private_keys=True)\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+        w2 = node.get_wallet_rpc('w2')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Add address1 as watch-only to w2\n+        w2.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])\n+\n+        tx1 = node.createrawtransaction([], [{address1: 5.0}])\n+        tx2 = node.createrawtransaction([], [{address2: 10.0}])\n+\n+        # w0 should be unaffected, w2 should see +5 for tx1\n+        assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +5 balance for tx1\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w0 should be unaffected, w2 should see +5 for both transactions\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +15 balance for both transactions\n+        assert_equal(w1.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 15.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx1)\n+        tx1 = funding[\"hex\"]\n+        tx1changepos = funding[\"changepos\"]\n+        bitcoin_fee = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fee + 5 btc decrease, w2 sees + 5 btc\n+        assert_approx(w0.simulaterawtransaction([tx1])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee))\n+        assert_approx(w2.simulaterawtransaction([tx1])[\"balance_change\"], Decimal(\"5\"))\n+\n+        # w1 sees same as before\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # same inputs (tx) more than once should error\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1,tx1])\n+\n+        tx1ob = node.decoderawtransaction(tx1)\n+        tx1hex = tx1ob[\"txid\"]\n+        tx1vout = 1 - tx1changepos\n+        # tx3 spends new w1 UTXO paying to w0\n+        tx3 = node.createrawtransaction([{\"txid\": tx1hex, \"vout\": tx1vout}], {w0.getnewaddress(): 4.9999})\n+        # tx4 spends new w1 UTXO paying to w1\n+        tx4 = node.createrawtransaction([{\"txid\": tx1hex, \"vout\": tx1vout}], {w1.getnewaddress(): 4.9999})\n+\n+        # on their own, both should fail due to missing input(s)\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs have been spent already\", w0.simulaterawtransaction, [tx3])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs have been spent already\", w1.simulaterawtransaction, [tx3])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs have been spent already\", w0.simulaterawtransaction, [tx4])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs have been spent already\", w1.simulaterawtransaction, [tx4])",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 95,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't these 4 cases raise the exception `One or more transaction inputs are missing` ?\r\n\r\nAnyway, this exception is not being tested.",
      "created_at": "2022-07-27T19:52:11Z",
      "updated_at": "2022-07-27T19:57:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r931526163",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/931526163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/931527652",
      "pull_request_review_id": 1053149102,
      "id": 931527652,
      "node_id": "PRRC_kwDOABII5843hfvk",
      "diff_hunk": "@@ -590,6 +590,120 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& op = txin.prevout;",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: perhaps the `op` variable can be renamed to `outpoint` for the sake of clarity.",
      "created_at": "2022-07-27T19:54:07Z",
      "updated_at": "2022-07-27T19:56:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r931527652",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/931527652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 667,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934726882",
      "pull_request_review_id": 1057587446,
      "id": 934726882,
      "node_id": "PRRC_kwDOABII5843tszi",
      "diff_hunk": "@@ -590,6 +590,120 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "in_reply_to_id": 930327560,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sure, it's merely about removing the coins fetching from chain and using the wallet information to answer the spendability question.",
      "created_at": "2022-08-01T16:46:42Z",
      "updated_at": "2022-08-01T16:46:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r934726882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934726882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": 657,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934738215",
      "pull_request_review_id": 1057603018,
      "id": 934738215,
      "node_id": "PRRC_kwDOABII5843tvkn",
      "diff_hunk": "@@ -590,6 +590,120 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "in_reply_to_id": 930327560,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note: haven't tested it but check it out:\r\n```\r\ndiff --git a/src/wallet/rpc/wallet.cpp b/src/wallet/rpc/wallet.cpp\r\n--- a/src/wallet/rpc/wallet.cpp\t(revision b557f53eac39b92bfc4922729e94087556de749a)\r\n+++ b/src/wallet/rpc/wallet.cpp\t(date 1659372880572)\r\n@@ -654,13 +654,6 @@\r\n             throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\r\n         }\r\n \r\n-        // Fetch previous transactions (inputs)\r\n-        std::map<COutPoint, Coin> coins;\r\n-        for (const CTxIn& txin : mtx.vin) {\r\n-            coins[txin.prevout]; // Create empty map entry keyed by prevout.\r\n-        }\r\n-        pwallet->chain().findCoins(coins);\r\n-\r\n         // Fetch debit; we are *spending* these; if the transaction is signed and\r\n         // broadcast, we will lose everything in these\r\n         for (const auto& txin : mtx.vin) {\r\n@@ -668,19 +661,21 @@\r\n             if (spent.count(op)) {\r\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\r\n             }\r\n+            spent.insert(op); // mark it as spent\r\n             if (new_utxos.count(op)) {\r\n                 changes -= new_utxos.at(op);\r\n                 new_utxos.erase(op);\r\n             } else {\r\n-                if (!coins.count(op)) {\r\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs are missing\");\r\n-                }\r\n-                if (coins.at(op).IsSpent()) {\r\n+                const auto* input_wtx = pwallet->GetWalletTx(txin.prevout.hash);\r\n+                if (!input_wtx) continue;\r\n+                if (input_wtx->tx->vout.size() >= txin.prevout.n) continue; // todo: this should throw an error\r\n+\r\n+                if (!(pwallet->IsMine(input_wtx->tx->vout[txin.prevout.n]) & filter)) continue;\r\n+                if (pwallet->IsSpent(txin.prevout)) {\r\n                     throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs have been spent already\");\r\n                 }\r\n                 changes -= pwallet->GetDebit(txin, filter);\r\n             }\r\n-            spent.insert(op);\r\n         }\r\n \r\n         // Iterate over outputs; we are *receiving* these, if the wallet considers\r\n```\r\n\r\nAs said in the comment, it's about only using the wallet information to check the transaction and not the chain information. Mainly because, in this command, we only care about the wallet state.",
      "created_at": "2022-08-01T17:00:40Z",
      "updated_at": "2022-08-01T17:00:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r934738215",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934738215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": 657,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935024442",
      "pull_request_review_id": 1057999754,
      "id": 935024442,
      "node_id": "PRRC_kwDOABII5843u1c6",
      "diff_hunk": "@@ -590,6 +590,120 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "in_reply_to_id": 930327560,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure that's an improvement. The current implementation seems to be a bit more straightforward, even if it ends up pulling in a few extra inputs. If the difference in performance is significant it might be worth it though, but I'm dubious. :)",
      "created_at": "2022-08-02T00:59:10Z",
      "updated_at": "2022-08-02T00:59:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r935024442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935024442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": 657,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935027517",
      "pull_request_review_id": 1058003714,
      "id": 935027517,
      "node_id": "PRRC_kwDOABII5843u2M9",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        node.createwallet(wallet_name='w2', disable_private_keys=True)\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+        w2 = node.get_wallet_rpc('w2')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Add address1 as watch-only to w2\n+        w2.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])\n+\n+        tx1 = node.createrawtransaction([], [{address1: 5.0}])\n+        tx2 = node.createrawtransaction([], [{address2: 10.0}])\n+\n+        # w0 should be unaffected, w2 should see +5 for tx1\n+        assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +5 balance for tx1\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w0 should be unaffected, w2 should see +5 for both transactions\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +15 balance for both transactions\n+        assert_equal(w1.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 15.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx1)\n+        tx1 = funding[\"hex\"]\n+        tx1changepos = funding[\"changepos\"]\n+        bitcoin_fee = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fee + 5 btc decrease, w2 sees + 5 btc\n+        assert_approx(w0.simulaterawtransaction([tx1])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee))\n+        assert_approx(w2.simulaterawtransaction([tx1])[\"balance_change\"], Decimal(\"5\"))\n+\n+        # w1 sees same as before\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # same inputs (tx) more than once should error\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1,tx1])\n+\n+        tx1ob = node.decoderawtransaction(tx1)\n+        tx1hex = tx1ob[\"txid\"]\n+        tx1vout = 1 - tx1changepos\n+        # tx3 spends new w1 UTXO paying to w0\n+        tx3 = node.createrawtransaction([{\"txid\": tx1hex, \"vout\": tx1vout}], {w0.getnewaddress(): 4.9999})\n+        # tx4 spends new w1 UTXO paying to w1\n+        tx4 = node.createrawtransaction([{\"txid\": tx1hex, \"vout\": tx1vout}], {w1.getnewaddress(): 4.9999})\n+\n+        # on their own, both should fail due to missing input(s)\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs have been spent already\", w0.simulaterawtransaction, [tx3])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs have been spent already\", w1.simulaterawtransaction, [tx3])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs have been spent already\", w0.simulaterawtransaction, [tx4])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs have been spent already\", w1.simulaterawtransaction, [tx4])",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": null,
      "original_position": 95,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "in_reply_to_id": 931526163,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right. I don't think that exception will ever be triggered, because `coins` is always populated with all the outputs in `mtx.vin` in the earlier block. I think the best approach is to simply reword this exception to say \"spent or missing\" and drop the other one.",
      "created_at": "2022-08-02T01:07:50Z",
      "updated_at": "2022-08-02T01:07:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r935027517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935027517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935028496",
      "pull_request_review_id": 1058004935,
      "id": 935028496,
      "node_id": "PRRC_kwDOABII5843u2cQ",
      "diff_hunk": "@@ -590,6 +590,120 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& op = txin.prevout;",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "b557f53eac39b92bfc4922729e94087556de749a",
      "in_reply_to_id": 931527652,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure",
      "created_at": "2022-08-02T01:10:36Z",
      "updated_at": "2022-08-02T01:10:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r935028496",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935028496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 667,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938187236",
      "pull_request_review_id": 1062504277,
      "id": 938187236,
      "node_id": "PRRC_kwDOABII584365nk",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& outpoint = txin.prevout;",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ced8a3e77d0dde428360f2250576582b624c013c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ced8a3e `outpoint` isn't mutated\r\n```suggestion\r\n            const auto& outpoint = txin.prevout;\r\n```",
      "created_at": "2022-08-04T19:43:11Z",
      "updated_at": "2022-08-04T20:20:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r938187236",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938187236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 667,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938187761",
      "pull_request_review_id": 1062504277,
      "id": 938187761,
      "node_id": "PRRC_kwDOABII584365vx",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& outpoint = txin.prevout;\n+            if (spent.count(outpoint)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (new_utxos.count(outpoint)) {\n+                changes -= new_utxos.at(outpoint);\n+                new_utxos.erase(outpoint);\n+            } else {\n+                if (coins.at(outpoint).IsSpent()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs are missing or have been spent already\");\n+                }\n+                changes -= pwallet->GetDebit(txin, filter);\n+            }\n+            spent.insert(outpoint);\n+        }\n+\n+        // Iterate over outputs; we are *receiving* these, if the wallet considers\n+        // them \"mine\"; if the transaction is signed and broadcast, we will receive\n+        // everything in these\n+        // Also populate new_utxos in case these are spent in later transactions\n+\n+        const auto hash = mtx.GetHash();",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 99,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ced8a3e77d0dde428360f2250576582b624c013c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ced8a3e IIRC GetHash() is uint256, which is worth not copying (unsure if compilers do automatic copy elision here) \r\n```suggestion\r\n        const uint256 hash{mtx.GetHash()};\r\n```\r\nor\r\n```suggestion\r\n        const uint256& hash = mtx.GetHash();\r\n```",
      "created_at": "2022-08-04T19:43:56Z",
      "updated_at": "2022-08-04T20:20:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r938187761",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938187761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938205112",
      "pull_request_review_id": 1062504277,
      "id": 938205112,
      "node_id": "PRRC_kwDOABII584369-4",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ced8a3e77d0dde428360f2250576582b624c013c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/ced8a3e77d0dde428360f2250576582b624c013c\r\n```suggestion\r\n                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see RPC importaddress)\"},\r\n```",
      "created_at": "2022-08-04T20:07:36Z",
      "updated_at": "2022-08-04T20:20:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r938205112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938205112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 605,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938213156",
      "pull_request_review_id": 1062504277,
      "id": 938213156,
      "node_id": "PRRC_kwDOABII58436_8k",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ced8a3e77d0dde428360f2250576582b624c013c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/ced8a3e77d0dde428360f2250576582b624c013c my understanding was that a reference is preferred? (see `RPCHelpMan getbalances` for an example)\r\n```suggestion\r\n    const CWallet& wallet = *wallet;\r\n```",
      "created_at": "2022-08-04T20:18:50Z",
      "updated_at": "2022-08-04T20:20:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r938213156",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938213156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 623,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938354846",
      "pull_request_review_id": 1062727464,
      "id": 938354846,
      "node_id": "PRRC_kwDOABII58437iie",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& outpoint = txin.prevout;\n+            if (spent.count(outpoint)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (new_utxos.count(outpoint)) {\n+                changes -= new_utxos.at(outpoint);\n+                new_utxos.erase(outpoint);\n+            } else {\n+                if (coins.at(outpoint).IsSpent()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs are missing or have been spent already\");\n+                }\n+                changes -= pwallet->GetDebit(txin, filter);\n+            }\n+            spent.insert(outpoint);\n+        }\n+\n+        // Iterate over outputs; we are *receiving* these, if the wallet considers\n+        // them \"mine\"; if the transaction is signed and broadcast, we will receive\n+        // everything in these\n+        // Also populate new_utxos in case these are spent in later transactions\n+\n+        const auto hash = mtx.GetHash();",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 99,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ced8a3e77d0dde428360f2250576582b624c013c",
      "in_reply_to_id": 938187761,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does that differ from just doing `const auto& hash = `? I assumed it wouldn't, but you're explicitly switching to `uint256` so now I'm unsure.",
      "created_at": "2022-08-05T00:41:04Z",
      "updated_at": "2022-08-05T00:41:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r938354846",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938354846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938771154",
      "pull_request_review_id": 1063299144,
      "id": 938771154,
      "node_id": "PRRC_kwDOABII58439ILS",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<const CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+    const CWallet* pwallet = wallet.get();\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, *pwallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Transaction hex string decoding failure.\");\n+        }\n+\n+        // Fetch previous transactions (inputs)\n+        std::map<COutPoint, Coin> coins;\n+        for (const CTxIn& txin : mtx.vin) {\n+            coins[txin.prevout]; // Create empty map entry keyed by prevout.\n+        }\n+        pwallet->chain().findCoins(coins);\n+\n+        // Fetch debit; we are *spending* these; if the transaction is signed and\n+        // broadcast, we will lose everything in these\n+        for (const auto& txin : mtx.vin) {\n+            auto& outpoint = txin.prevout;\n+            if (spent.count(outpoint)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Transaction(s) are spending the same output more than once\");\n+            }\n+            if (new_utxos.count(outpoint)) {\n+                changes -= new_utxos.at(outpoint);\n+                new_utxos.erase(outpoint);\n+            } else {\n+                if (coins.at(outpoint).IsSpent()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more transaction inputs are missing or have been spent already\");\n+                }\n+                changes -= pwallet->GetDebit(txin, filter);\n+            }\n+            spent.insert(outpoint);\n+        }\n+\n+        // Iterate over outputs; we are *receiving* these, if the wallet considers\n+        // them \"mine\"; if the transaction is signed and broadcast, we will receive\n+        // everything in these\n+        // Also populate new_utxos in case these are spent in later transactions\n+\n+        const auto hash = mtx.GetHash();",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": null,
      "original_position": 99,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "ced8a3e77d0dde428360f2250576582b624c013c",
      "in_reply_to_id": 938187761,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No difference between `auto` and `uint256`, just highlighting the return type as `auto` isn't really shorter or simpler in this case than just stating the type.",
      "created_at": "2022-08-05T12:39:15Z",
      "updated_at": "2022-08-05T12:41:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r938771154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938771154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957350437",
      "pull_request_review_id": 1088717190,
      "id": 957350437,
      "node_id": "PRRC_kwDOABII5845EAIl",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pretty sure this is not optional (should be `NO`, instead of `OMITTED_NAMED_ARG`)",
      "created_at": "2022-08-29T13:39:16Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957350437",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957350437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 598,
      "original_line": 598,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957351527",
      "pull_request_review_id": 1088717190,
      "id": 957351527,
      "node_id": "PRRC_kwDOABII5845EAZn",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, the newline seems spurious?",
      "created_at": "2022-08-29T13:40:09Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957351527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957351527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 598,
      "original_line": 598,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957352121",
      "pull_request_review_id": 1088717190,
      "id": 957352121,
      "node_id": "PRRC_kwDOABII5845EAi5",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit: `\\n` are not needed, as they don't change the help output",
      "created_at": "2022-08-29T13:40:36Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957352121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957352121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 596,
      "original_line": 596,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957356935",
      "pull_request_review_id": 1088717190,
      "id": 957356935,
      "node_id": "PRRC_kwDOABII5845EBuH",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see RPC importaddress)\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    const std::shared_ptr<const CWallet> rpc_wallet = GetWalletForJSONRPCRequest(request);\n+    if (!rpc_wallet) return UniValue::VNULL;\n+    const CWallet& wallet = *rpc_wallet;\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(wallet.cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, wallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 64,
      "original_position": 64,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why are you trying no witness? It is impossible for a valid transaction to fail witness deserialization. See also `git grep \"Make sure the tx has at least one input\"`",
      "created_at": "2022-08-29T13:44:08Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957356935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957356935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 653,
      "original_line": 653,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957358292",
      "pull_request_review_id": 1088717190,
      "id": 957358292,
      "node_id": "PRRC_kwDOABII5845ECDU",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": 25,
      "original_position": 25,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is `split`?",
      "created_at": "2022-08-29T13:45:27Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957358292",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957358292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957358612",
      "pull_request_review_id": 1088717190,
      "id": 957358612,
      "node_id": "PRRC_kwDOABII5845ECIU",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": 25,
      "original_position": 25,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": 957358292,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this function needed in the first place?",
      "created_at": "2022-08-29T13:45:46Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957358612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957358612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957359435",
      "pull_request_review_id": 1088717190,
      "id": 957359435,
      "node_id": "PRRC_kwDOABII5845ECVL",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": 31,
      "original_position": 31,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No need to skip the sync_fun. With one node, it will be a no-op anyway",
      "created_at": "2022-08-29T13:46:29Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957359435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957359435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957360359",
      "pull_request_review_id": 1088717190,
      "id": 957360359,
      "node_id": "PRRC_kwDOABII5845ECjn",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        node.createwallet(wallet_name='w2', disable_private_keys=True)\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+        w2 = node.get_wallet_rpc('w2')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Add address1 as watch-only to w2\n+        w2.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])\n+\n+        tx1 = node.createrawtransaction([], [{address1: 5.0}])\n+        tx2 = node.createrawtransaction([], [{address2: 10.0}])\n+\n+        # w0 should be unaffected, w2 should see +5 for tx1\n+        assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +5 balance for tx1\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w0 should be unaffected, w2 should see +5 for both transactions\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +15 balance for both transactions\n+        assert_equal(w1.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 15.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx1)\n+        tx1 = funding[\"hex\"]\n+        tx1changepos = funding[\"changepos\"]\n+        bitcoin_fee = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fee + 5 btc decrease, w2 sees + 5 btc\n+        assert_approx(w0.simulaterawtransaction([tx1])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee))\n+        assert_approx(w2.simulaterawtransaction([tx1])[\"balance_change\"], Decimal(\"5\"))\n+\n+        # w1 sees same as before\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # same inputs (tx) more than once should error\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1,tx1])\n+\n+        tx1ob = node.decoderawtransaction(tx1)\n+        tx1hex = tx1ob[\"txid\"]\n+        tx1vout = 1 - tx1changepos\n+        # tx3 spends new w1 UTXO paying to w0\n+        tx3 = node.createrawtransaction([{\"txid\": tx1hex, \"vout\": tx1vout}], {w0.getnewaddress(): 4.9999})\n+        # tx4 spends new w1 UTXO paying to w1\n+        tx4 = node.createrawtransaction([{\"txid\": tx1hex, \"vout\": tx1vout}], {w1.getnewaddress(): 4.9999})\n+\n+        # on their own, both should fail due to missing input(s)\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs are missing or have been spent already\", w0.simulaterawtransaction, [tx3])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs are missing or have been spent already\", w1.simulaterawtransaction, [tx3])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs are missing or have been spent already\", w0.simulaterawtransaction, [tx4])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs are missing or have been spent already\", w1.simulaterawtransaction, [tx4])\n+\n+        # they should succeed when including tx1:\n+        #       wallet                  tx3                             tx4\n+        #       w0                      -5 - bitcoin_fee + 4.9999       -5 - bitcoin_fee\n+        #       w1                      0                               +4.9999\n+        assert_approx(w0.simulaterawtransaction([tx1, tx3])[\"balance_change\"], -Decimal(\"5\") - bitcoin_fee + Decimal(\"4.9999\"))\n+        assert_approx(w1.simulaterawtransaction([tx1, tx3])[\"balance_change\"], 0)\n+        assert_approx(w0.simulaterawtransaction([tx1, tx4])[\"balance_change\"], -Decimal(\"5\") - bitcoin_fee)\n+        assert_approx(w1.simulaterawtransaction([tx1, tx4])[\"balance_change\"], Decimal(\"4.9999\"))\n+\n+        # they should fail if attempting to include both tx3 and tx4\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1, tx3, tx4])\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w1.simulaterawtransaction, [tx1, tx3, tx4])\n+\n+        # send tx1 to avoid reusing same UTXO below\n+        node.sendrawtransaction(w0.signrawtransactionwithwallet(tx1)[\"hex\"])\n+        self.generate(node, 1, sync_fun=self.no_op) # Confirm tx to trigger error below",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": 112,
      "original_position": 112,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same",
      "created_at": "2022-08-29T13:47:22Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957360359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957360359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 112,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957360576",
      "pull_request_review_id": 1088717190,
      "id": 957360576,
      "node_id": "PRRC_kwDOABII5845ECnA",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test simulaterawtransaction.\n+\"\"\"\n+\n+from decimal import Decimal\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_approx,\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class SimulateTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self, split=False):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.generate(node, 1, sync_fun=self.no_op) # Leave IBD\n+\n+        node.createwallet(wallet_name='w0')\n+        node.createwallet(wallet_name='w1')\n+        node.createwallet(wallet_name='w2', disable_private_keys=True)\n+        w0 = node.get_wallet_rpc('w0')\n+        w1 = node.get_wallet_rpc('w1')\n+        w2 = node.get_wallet_rpc('w2')\n+\n+        self.generatetoaddress(node, COINBASE_MATURITY + 1, w0.getnewaddress())\n+        assert_equal(w0.getbalance(), 50.0)\n+        assert_equal(w1.getbalance(), 0.0)\n+\n+        address1 = w1.getnewaddress()\n+        address2 = w1.getnewaddress()\n+\n+        # Add address1 as watch-only to w2\n+        w2.importpubkey(pubkey=w1.getaddressinfo(address1)[\"pubkey\"])\n+\n+        tx1 = node.createrawtransaction([], [{address1: 5.0}])\n+        tx2 = node.createrawtransaction([], [{address2: 10.0}])\n+\n+        # w0 should be unaffected, w2 should see +5 for tx1\n+        assert_equal(w0.simulaterawtransaction([tx1])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +5 balance for tx1\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # w0 should be unaffected, w2 should see +5 for both transactions\n+        assert_equal(w0.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 0.0)\n+        assert_equal(w2.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 5.0)\n+\n+        # w1 should see +15 balance for both transactions\n+        assert_equal(w1.simulaterawtransaction([tx1, tx2])[\"balance_change\"], 15.0)\n+\n+        # w0 funds transaction; it should now see a decrease in (tx fee and payment), and w1 should see the same as above\n+        funding = w0.fundrawtransaction(tx1)\n+        tx1 = funding[\"hex\"]\n+        tx1changepos = funding[\"changepos\"]\n+        bitcoin_fee = Decimal(funding[\"fee\"])\n+\n+        # w0 sees fee + 5 btc decrease, w2 sees + 5 btc\n+        assert_approx(w0.simulaterawtransaction([tx1])[\"balance_change\"], -(Decimal(\"5\") + bitcoin_fee))\n+        assert_approx(w2.simulaterawtransaction([tx1])[\"balance_change\"], Decimal(\"5\"))\n+\n+        # w1 sees same as before\n+        assert_equal(w1.simulaterawtransaction([tx1])[\"balance_change\"], 5.0)\n+\n+        # same inputs (tx) more than once should error\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1,tx1])\n+\n+        tx1ob = node.decoderawtransaction(tx1)\n+        tx1hex = tx1ob[\"txid\"]\n+        tx1vout = 1 - tx1changepos\n+        # tx3 spends new w1 UTXO paying to w0\n+        tx3 = node.createrawtransaction([{\"txid\": tx1hex, \"vout\": tx1vout}], {w0.getnewaddress(): 4.9999})\n+        # tx4 spends new w1 UTXO paying to w1\n+        tx4 = node.createrawtransaction([{\"txid\": tx1hex, \"vout\": tx1vout}], {w1.getnewaddress(): 4.9999})\n+\n+        # on their own, both should fail due to missing input(s)\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs are missing or have been spent already\", w0.simulaterawtransaction, [tx3])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs are missing or have been spent already\", w1.simulaterawtransaction, [tx3])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs are missing or have been spent already\", w0.simulaterawtransaction, [tx4])\n+        assert_raises_rpc_error(-8, \"One or more transaction inputs are missing or have been spent already\", w1.simulaterawtransaction, [tx4])\n+\n+        # they should succeed when including tx1:\n+        #       wallet                  tx3                             tx4\n+        #       w0                      -5 - bitcoin_fee + 4.9999       -5 - bitcoin_fee\n+        #       w1                      0                               +4.9999\n+        assert_approx(w0.simulaterawtransaction([tx1, tx3])[\"balance_change\"], -Decimal(\"5\") - bitcoin_fee + Decimal(\"4.9999\"))\n+        assert_approx(w1.simulaterawtransaction([tx1, tx3])[\"balance_change\"], 0)\n+        assert_approx(w0.simulaterawtransaction([tx1, tx4])[\"balance_change\"], -Decimal(\"5\") - bitcoin_fee)\n+        assert_approx(w1.simulaterawtransaction([tx1, tx4])[\"balance_change\"], Decimal(\"4.9999\"))\n+\n+        # they should fail if attempting to include both tx3 and tx4\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w0.simulaterawtransaction, [tx1, tx3, tx4])\n+        assert_raises_rpc_error(-8, \"Transaction(s) are spending the same output more than once\", w1.simulaterawtransaction, [tx1, tx3, tx4])\n+\n+        # send tx1 to avoid reusing same UTXO below\n+        node.sendrawtransaction(w0.signrawtransactionwithwallet(tx1)[\"hex\"])\n+        self.generate(node, 1, sync_fun=self.no_op) # Confirm tx to trigger error below\n+        self.sync_all()",
      "path": "test/functional/wallet_simulaterawtx.py",
      "position": 113,
      "original_position": 113,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can be removed",
      "created_at": "2022-08-29T13:47:36Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957360576",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957360576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957364990",
      "pull_request_review_id": 1088717190,
      "id": 957364990,
      "node_id": "PRRC_kwDOABII5845EDr-",
      "diff_hunk": "@@ -590,6 +590,117 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+RPCHelpMan simulaterawtransaction()\n+{\n+    return RPCHelpMan{\"simulaterawtransaction\",\n+        \"\\nCalculate the balance change resulting in the signing and broadcasting of the given transaction(s).\\n\",\n+        {\n+            {\"rawtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"An array of hex strings of raw transactions.\\n\",\n+                {\n+                    {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ_USER_KEYS, RPCArg::Optional::OMITTED_NAMED_ARG, \"Options\",\n+                {\n+                    {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see RPC importaddress)\"},\n+                },\n+            },\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_AMOUNT, \"balance_change\", \"The wallet balance change (negative means decrease).\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+            + HelpExampleRpc(\"simulaterawtransaction\", \"[\\\"myhex\\\"]\")\n+        },\n+    [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    const std::shared_ptr<const CWallet> rpc_wallet = GetWalletForJSONRPCRequest(request);\n+    if (!rpc_wallet) return UniValue::VNULL;\n+    const CWallet& wallet = *rpc_wallet;\n+\n+    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ}, true);\n+\n+    LOCK(wallet.cs_wallet);\n+\n+    UniValue include_watchonly(UniValue::VNULL);\n+    if (request.params[1].isObject()) {\n+        UniValue options = request.params[1];\n+        RPCTypeCheckObj(options,\n+            {\n+                {\"include_watchonly\", UniValueType(UniValue::VBOOL)},\n+            },\n+            true, true);\n+\n+        include_watchonly = options[\"include_watchonly\"];\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (ParseIncludeWatchonly(include_watchonly, wallet)) {\n+        filter |= ISMINE_WATCH_ONLY;\n+    }\n+\n+    const auto& txs = request.params[0].get_array();\n+    CAmount changes{0};\n+    std::map<COutPoint, CAmount> new_utxos; // UTXO:s that were made available in transaction array\n+    std::set<COutPoint> spent;\n+\n+    for (size_t i = 0; i < txs.size(); ++i) {\n+        CMutableTransaction mtx;\n+        if (!DecodeHexTx(mtx, txs[i].get_str(), /* try_no_witness */ true, /* try_witness */ true)) {",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 64,
      "original_position": 64,
      "commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "original_commit_id": "db10cf8ae36693cb4d3ed1b47b84709cf9c0d849",
      "in_reply_to_id": 957356935,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see that the tests are relying on no-inputs txs, but I wonder if there is a use case to run this on transactions that can never be valid on the network, even if properly signed.",
      "created_at": "2022-08-29T13:51:28Z",
      "updated_at": "2022-08-29T13:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/22751#discussion_r957364990",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957364990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 653,
      "original_line": 653,
      "side": "RIGHT"
    }
  ]
}