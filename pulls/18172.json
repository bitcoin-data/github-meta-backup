{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172",
    "id": 376611476,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc2NjExNDc2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18172",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18172.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18172.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18172",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18172/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d6d2602a32251c1017da88b47c801b7283c66ce3",
    "number": 18172,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: Transaction expiry from mempool",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This adds the functional test `mempool_expiry.py` covering mempool transaction expiry. Both the default `DEFAULT_MEMPOOL_EXPIRY` of 336 hours (two weeks, set in #9312) and the user definable mempool expiry via the `-mempoolexpiry=<n>` command line option are tested. The test checks that descendants of expired transactions are removed as well.\r\n\r\n*Notes for reviewers*\r\n- `LimitMempoolSize()` (which is the only caller of `CTxMemPool::Expire()`) is only called when a transaction is added to the mempool. In order to test expiry of a transaction-that-should-expire, the mocktime is set and a random transaction is broadcast to trigger `LimitMempoolSize()`. The transaction-that-should-expire is then checked for expiry. LMK if there is another way, but I don't think there is.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-02-18T13:15:42Z",
    "updated_at": "2022-02-15T10:41:36Z",
    "closed_at": "2020-02-21T18:26:42Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-02-21T18:26:42Z",
    "merge_commit_sha": "e9fc8f6e7f572224d2bd4577eee6d538331ef663",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "0xB10C:2020-02-mempool-expiry-test",
      "ref": "2020-02-mempool-expiry-test",
      "sha": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 184896538,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODQ4OTY1Mzg=",
        "name": "bitcoin",
        "full_name": "0xB10C/bitcoin",
        "owner": {
          "login": "0xB10C",
          "id": 19157360,
          "node_id": "MDQ6VXNlcjE5MTU3MzYw",
          "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/0xB10C",
          "html_url": "https://github.com/0xB10C",
          "followers_url": "https://api.github.com/users/0xB10C/followers",
          "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
          "organizations_url": "https://api.github.com/users/0xB10C/orgs",
          "repos_url": "https://api.github.com/users/0xB10C/repos",
          "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/0xB10C/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/0xB10C/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/0xB10C/bitcoin",
        "archive_url": "https://api.github.com/repos/0xB10C/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/0xB10C/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/0xB10C/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/0xB10C/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/0xB10C/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/0xB10C/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/0xB10C/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/0xB10C/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/0xB10C/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/0xB10C/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/0xB10C/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/0xB10C/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/0xB10C/bitcoin/events",
        "forks_url": "https://api.github.com/repos/0xB10C/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/0xB10C/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/0xB10C/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/0xB10C/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/0xB10C/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/0xB10C/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/0xB10C/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/0xB10C/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/0xB10C/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/0xB10C/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/0xB10C/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/0xB10C/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/0xB10C/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/0xB10C/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/0xB10C/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/0xB10C/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:0xB10C/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/0xB10C/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/0xB10C/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/0xB10C/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/0xB10C/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/0xB10C/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/0xB10C/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/0xB10C/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/0xB10C/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/0xB10C/bitcoin/hooks",
        "svn_url": "https://github.com/0xB10C/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 219975,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T09:23:02Z",
        "created_at": "2019-05-04T13:11:05Z",
        "updated_at": "2022-08-30T07:36:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "68e841e0af223a220d1f037e4c5680c1b228aa3e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 101,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 14,
    "comments": 5
  },
  "events": [
    {
      "event": "labeled",
      "id": 3047094949,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwNDcwOTQ5NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3047094949",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T13:16:13Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 360348882,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMzQ4ODgy",
      "url": null,
      "actor": null,
      "commit_id": "a7aced8fb6f309ce02167590713b1827febcc7f7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#pullrequestreview-360348882",
      "submitted_at": "2020-02-18T14:02:36Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3047329153,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA0NzMyOTE1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3047329153",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T14:18:58Z"
    },
    {
      "event": "commented",
      "id": 587482492,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzQ4MjQ5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587482492",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T14:20:07Z",
      "updated_at": "2020-02-18T14:20:07Z",
      "author_association": "MEMBER",
      "body": "Thank you for the review @theStack! Addressed comments and force pushed.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#issuecomment-587482492",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18172"
    },
    {
      "event": "mentioned",
      "id": 3047333812,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA0NzMzMzgxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3047333812",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T14:20:08Z"
    },
    {
      "event": "subscribed",
      "id": 3047333824,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNDczMzM4MjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3047333824",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T14:20:08Z"
    },
    {
      "event": "reviewed",
      "id": 360483807,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNDgzODA3",
      "url": null,
      "actor": null,
      "commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#pullrequestreview-360483807",
      "submitted_at": "2020-02-18T16:26:34Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
    },
    {
      "event": "reviewed",
      "id": 360673702,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjczNzAy",
      "url": null,
      "actor": null,
      "commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#pullrequestreview-360673702",
      "submitted_at": "2020-02-18T21:13:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3049023032,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA0OTAyMzAzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3049023032",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T22:05:09Z"
    },
    {
      "event": "commented",
      "id": 587927916,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzkyNzkxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587927916",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T22:08:36Z",
      "updated_at": "2020-02-18T22:08:36Z",
      "author_association": "MEMBER",
      "body": "Thanks @promag and @MarcoFalke! Addressed nit's, but decided to keep https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380937939 open for now. ",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#issuecomment-587927916",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18172"
    },
    {
      "event": "mentioned",
      "id": 3049040374,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA0OTA0MDM3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3049040374",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T22:08:36Z"
    },
    {
      "event": "subscribed",
      "id": 3049040379,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNDkwNDAzNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3049040379",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T22:08:36Z"
    },
    {
      "event": "mentioned",
      "id": 3049040389,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA0OTA0MDM4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3049040389",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T22:08:36Z"
    },
    {
      "event": "subscribed",
      "id": 3049040395,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNDkwNDAzOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3049040395",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T22:08:36Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmQyNjAyYTMyMjUxYzEwMTdkYTg4YjQ3YzgwMWI3MjgzYzY2Y2Uz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6d2602a32251c1017da88b47c801b7283c66ce3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d6d2602a32251c1017da88b47c801b7283c66ce3",
      "tree": {
        "sha": "d8409904bbf308f7916ddf20a90ecc206678b750",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8409904bbf308f7916ddf20a90ecc206678b750"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68e841e0af223a220d1f037e4c5680c1b228aa3e",
          "sha": "68e841e0af223a220d1f037e4c5680c1b228aa3e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/68e841e0af223a220d1f037e4c5680c1b228aa3e"
        }
      ],
      "message": "add: test that transactions expire from mempool\n\nThis tests that a mempool transaction expires after a given timeout\nand its children are removed as well.\n\nBoth the default expiry timeout defied by DEFAULT_MEMPOOL_EXPIRY and\na user definable expiry timeout via the -mempoolexpiry=<n> command\nline argument (<n> is the timeout in hours) are tested.",
      "committer": {
        "name": "0xb10c",
        "email": "0xb10c@gmail.com",
        "date": "2020-02-19T09:03:48Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "0xb10c@gmail.com",
        "date": "2020-02-17T23:28:06Z"
      },
      "sha": "d6d2602a32251c1017da88b47c801b7283c66ce3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3050826530,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA1MDgyNjUzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3050826530",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T09:04:40Z"
    },
    {
      "event": "reviewed",
      "id": 360989866,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwOTg5ODY2",
      "url": null,
      "actor": null,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/18172/commits/d6d2602a32251c1017da88b47c801b7283c66ce3",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#pullrequestreview-360989866",
      "submitted_at": "2020-02-19T10:16:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
    },
    {
      "event": "commented",
      "id": 588280105,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODI4MDEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588280105",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T15:05:35Z",
      "updated_at": "2020-02-19T15:05:35Z",
      "author_association": "MEMBER",
      "body": "ACK d6d2602a32251c1017da88b47c801b7283c66ce3",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#issuecomment-588280105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18172"
    },
    {
      "event": "reviewed",
      "id": 362443990,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDQzOTkw",
      "url": null,
      "actor": null,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK d6d2602a32251c1017da88b47c801b7283c66ce3.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#pullrequestreview-362443990",
      "submitted_at": "2020-02-21T07:39:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
    },
    {
      "event": "commented",
      "id": 589742040,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTc0MjA0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589742040",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T17:00:38Z",
      "updated_at": "2020-02-21T17:00:38Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--2502f1a698b3751726fa55edcda76cd3-->\n\n### Coverage\n\n| Coverage  | Change ([pull 18172](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/18172/total.coverage/index.html), 8ed789fe4894a474074a55657b83f7d659aa35e0) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html), eb3c6b0912349873113bfd49baf1c505bb48d9cf)   |\n|-----------|-------------------------|--------------------|\n| Lines     | +0.0202 %            | 89.9453 %        |\n| Functions | +0.0000 %            | 85.8836 %        |\n| Branches  | +0.0241 %            | 51.5363 %        |\n\n<sup>Updated at: 2020-02-21T17:00:37.583978.</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#issuecomment-589742040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18172"
    },
    {
      "event": "commented",
      "id": 589754963,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTc1NDk2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589754963",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T17:33:07Z",
      "updated_at": "2020-02-21T17:33:07Z",
      "author_association": "MEMBER",
      "body": "Before https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/src/validation.cpp.gcov.html#318\r\n\r\nAfter https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/18172/total.coverage/src/validation.cpp.gcov.html#318",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#issuecomment-589754963",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18172"
    },
    {
      "event": "merged",
      "id": 3061469216,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzA2MTQ2OTIxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3061469216",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e9fc8f6e7f572224d2bd4577eee6d538331ef663",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9fc8f6e7f572224d2bd4577eee6d538331ef663",
      "created_at": "2020-02-21T18:26:42Z"
    },
    {
      "event": "closed",
      "id": 3061469232,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzA2MTQ2OTIzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3061469232",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T18:26:42Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 3062650133,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQzMDYyNjUwMTMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3062650133",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-22T10:49:53Z"
    },
    {
      "event": "referenced",
      "id": 4162280612,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxNjIyODA2MTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162280612",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7f8780957e52fe06d045098096893ae818fa878a",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/7f8780957e52fe06d045098096893ae818fa878a",
      "created_at": "2021-01-03T08:47:12Z"
    },
    {
      "event": "referenced",
      "id": 4944319298,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQzMTkyOTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944319298",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "63d922a0d3af7cd808100c9938f657044a809c54",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/63d922a0d3af7cd808100c9938f657044a809c54",
      "created_at": "2021-06-27T21:06:53Z"
    },
    {
      "event": "referenced",
      "id": 4944491581,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQ0OTE1ODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944491581",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "71391cd4c6f5d11ed479c342ea515593498d047b",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/71391cd4c6f5d11ed479c342ea515593498d047b",
      "created_at": "2021-06-28T00:24:45Z"
    },
    {
      "event": "referenced",
      "id": 4950405399,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NTA0MDUzOTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4950405399",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "21c3927cc052a0861981f8b51b4a50f2a645ffff",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/21c3927cc052a0861981f8b51b4a50f2a645ffff",
      "created_at": "2021-06-29T00:06:19Z"
    },
    {
      "event": "referenced",
      "id": 4968414464,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5Njg0MTQ0NjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4968414464",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "abb609ac06240b11b8b82ad13eebb01f2bb1ad10",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/abb609ac06240b11b8b82ad13eebb01f2bb1ad10",
      "created_at": "2021-07-01T22:04:27Z"
    },
    {
      "event": "referenced",
      "id": 4968436829,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5Njg0MzY4Mjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4968436829",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f86ee82d9b7a542f024055c6d23b2cf5c6e0d8b8",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/f86ee82d9b7a542f024055c6d23b2cf5c6e0d8b8",
      "created_at": "2021-07-01T22:11:20Z"
    },
    {
      "event": "referenced",
      "id": 5017097981,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMTcwOTc5ODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5017097981",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6a0627d073beb60c91cd955de3bc796ac3d1a085",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/6a0627d073beb60c91cd955de3bc796ac3d1a085",
      "created_at": "2021-07-14T02:20:49Z"
    },
    {
      "event": "locked",
      "id": 6073860977,
      "node_id": "LOE_lADOABII584hyfzlzwAAAAFqB8Nx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073860977",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:41:36Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380680793",
      "pull_request_review_id": 360348882,
      "id": 380680793,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY4MDc5Mw==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defied by DEFAULT_MEMPOOL_EXPIRY and a user",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 8,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "a7aced8fb6f309ce02167590713b1827febcc7f7",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "typo: s/defied/defined",
      "created_at": "2020-02-18T13:47:45Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380680793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380680793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380682245",
      "pull_request_review_id": 360348882,
      "id": 380682245,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY4MjI0NQ==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defied by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal, assert_raises_rpc_error,\n+                                 find_vout_for_address)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))\n+\n+        # Let most of the timeout elapse and check that the parent tx is still\n+        # in the mempool.\n+        nearly_expiry_time = entry_time + 60 * 60 * timeout - 5\n+        node.setmocktime(nearly_expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx not expired after {} hours.\".format(\n+            str(timedelta(seconds=(nearly_expiry_time-entry_time)))))\n+        assert_equal(entry_time, node.getmempoolentry(parent_txid)[\"time\"])\n+\n+        # Transaction should be evicted from the mempool after the expiry time\n+        # has passed.\n+        expiry_time = entry_time + 60 * 60 * timeout + 5\n+        node.setmocktime(expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx expiry after {} hours.\".format(\n+            str(timedelta(seconds=(expiry_time-entry_time)))))\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\",\n+                                node.getmempoolentry, parent_txid)\n+\n+        # The child transaction should be removed from the mempool as well.\n+        self.log.info(\"Test child tx is evicted as well.\")\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\",\n+                                node.getmempoolentry, child_txid)\n+\n+    def run_test(self):\n+\n+        self.log.info(\"Test default mempool expiry timeout of %d hours.\" %\n+                      DEFAULT_MEMPOOL_EXPIRY)\n+        self.test_transaction_expiry(DEFAULT_MEMPOOL_EXPIRY)\n+\n+        self.log.info(\"----\")\n+\n+        CUSTOM_MEMPOOL_EXPIRY = 10",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 92,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "a7aced8fb6f309ce02167590713b1827febcc7f7",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could be moved to the top, right below `DEFAULT_MEMPOOL_EXPIRY`, to have all expiry constants at one place?",
      "created_at": "2020-02-18T13:50:22Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380682245",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380682245"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380685327",
      "pull_request_review_id": 360348882,
      "id": 380685327,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY4NTMyNw==",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defied by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal, assert_raises_rpc_error,\n+                                 find_vout_for_address)",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 17,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "a7aced8fb6f309ce02167590713b1827febcc7f7",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If not all imports fit on one line, usually each import is on a single line, e.g.:\r\nhttps://github.com/bitcoin/bitcoin/blob/36f42e1bf43f2c9f3b4642814051cedf66f05a5e/test/functional/rpc_fundrawtransaction.py#L9-L18\r\n",
      "created_at": "2020-02-18T13:55:36Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380685327",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380685327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": 16,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380785284",
      "pull_request_review_id": 360483807,
      "id": 380785284,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc4NTI4NA==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 58,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `str(` is not needed when using `format(`",
      "created_at": "2020-02-18T16:26:23Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380785284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380785284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380793633",
      "pull_request_review_id": 360494316,
      "id": 380793633,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MzYzMw==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 58,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": 380785284,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "will remove it on the next push",
      "created_at": "2020-02-18T16:39:22Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380793633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380793633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380935667",
      "pull_request_review_id": 360673702,
      "id": 380935667,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTY2Nw==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))\n+\n+        # Let most of the timeout elapse and check that the parent tx is still\n+        # in the mempool.\n+        nearly_expiry_time = entry_time + 60 * 60 * timeout - 5\n+        node.setmocktime(nearly_expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx not expired after {} hours.\".format(\n+            str(timedelta(seconds=(nearly_expiry_time-entry_time)))))\n+        assert_equal(entry_time, node.getmempoolentry(parent_txid)[\"time\"])\n+\n+        # Transaction should be evicted from the mempool after the expiry time\n+        # has passed.\n+        expiry_time = entry_time + 60 * 60 * timeout + 5\n+        node.setmocktime(expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx expiry after {} hours.\".format(\n+            str(timedelta(seconds=(expiry_time-entry_time)))))\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\",\n+                                node.getmempoolentry, parent_txid)\n+\n+        # The child transaction should be removed from the mempool as well.\n+        self.log.info(\"Test child tx is evicted as well.\")\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\",\n+                                node.getmempoolentry, child_txid)\n+\n+    def run_test(self):\n+\n+        self.log.info(\"Test default mempool expiry timeout of %d hours.\" %\n+                      DEFAULT_MEMPOOL_EXPIRY)\n+        self.test_transaction_expiry(DEFAULT_MEMPOOL_EXPIRY)\n+\n+        self.log.info(\"----\")",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 94,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, I'd drop this.",
      "created_at": "2020-02-18T21:08:46Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380935667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380935667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380935982",
      "pull_request_review_id": 360673702,
      "id": 380935982,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTk4Mg==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 22,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, add comment with unit.",
      "created_at": "2020-02-18T21:09:24Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380935982",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380935982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380936458",
      "pull_request_review_id": 360673702,
      "id": 380936458,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNjQ1OA==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 43,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, could stick to `\"` or `'` for strings. My preference is `'`.",
      "created_at": "2020-02-18T21:10:14Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380936458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380936458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380937939",
      "pull_request_review_id": 360673702,
      "id": 380937939,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNzkzOQ==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))\n+\n+        # Let most of the timeout elapse and check that the parent tx is still\n+        # in the mempool.\n+        nearly_expiry_time = entry_time + 60 * 60 * timeout - 5\n+        node.setmocktime(nearly_expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx not expired after {} hours.\".format(",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 67,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, maybe keep these as comment instead? Not sure if logging this adds value.",
      "created_at": "2020-02-18T21:12:54Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380937939",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380937939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380938108",
      "pull_request_review_id": 360673702,
      "id": 380938108,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzODEwOA==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))\n+\n+        # Let most of the timeout elapse and check that the parent tx is still\n+        # in the mempool.\n+        nearly_expiry_time = entry_time + 60 * 60 * timeout - 5\n+        node.setmocktime(nearly_expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx not expired after {} hours.\".format(\n+            str(timedelta(seconds=(nearly_expiry_time-entry_time)))))\n+        assert_equal(entry_time, node.getmempoolentry(parent_txid)[\"time\"])\n+\n+        # Transaction should be evicted from the mempool after the expiry time\n+        # has passed.\n+        expiry_time = entry_time + 60 * 60 * timeout + 5\n+        node.setmocktime(expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx expiry after {} hours.\".format(\n+            str(timedelta(seconds=(expiry_time-entry_time)))))\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\",\n+                                node.getmempoolentry, parent_txid)\n+\n+        # The child transaction should be removed from the mempool as well.\n+        self.log.info(\"Test child tx is evicted as well.\")\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\",\n+                                node.getmempoolentry, child_txid)\n+\n+    def run_test(self):\n+",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 89,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, drop empty line?",
      "created_at": "2020-02-18T21:13:17Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380938108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380938108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380944577",
      "pull_request_review_id": 360684570,
      "id": 380944577,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0NDU3Nw==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))\n+\n+        # Let most of the timeout elapse and check that the parent tx is still\n+        # in the mempool.\n+        nearly_expiry_time = entry_time + 60 * 60 * timeout - 5\n+        node.setmocktime(nearly_expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx not expired after {} hours.\".format(",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 67,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": 380937939,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Logging is preferred over inline comments in the test because logging statements serve as \"checkpoints\" (to see how far a test run until failure). Also, they help to illustrate the test log better, which would otherwise only contain Bitcoin Core logs.",
      "created_at": "2020-02-18T21:26:54Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380944577",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380944577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380947691",
      "pull_request_review_id": 360688454,
      "id": 380947691,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0NzY5MQ==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))\n+\n+        # Let most of the timeout elapse and check that the parent tx is still\n+        # in the mempool.\n+        nearly_expiry_time = entry_time + 60 * 60 * timeout - 5\n+        node.setmocktime(nearly_expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx not expired after {} hours.\".format(",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 67,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": 380937939,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "When a test fails we see trace. I think logging makes sense when it shows some computed values or so, which a trace doesn't help.",
      "created_at": "2020-02-18T21:33:11Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380947691",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380947691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380953432",
      "pull_request_review_id": 360695668,
      "id": 380953432,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1MzQzMg==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))\n+\n+        # Let most of the timeout elapse and check that the parent tx is still\n+        # in the mempool.\n+        nearly_expiry_time = entry_time + 60 * 60 * timeout - 5\n+        node.setmocktime(nearly_expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx not expired after {} hours.\".format(",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 67,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": 380937939,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The trace is one data point that can help debug a test failure. The entire history of the log up to that point is also useful. For example transaction relay (inv-getdata) often takes several seconds, so it is useful to know when a subtest has started and when it ended. If some Bitcoin Core logs from one subtest interleave with the ones of another subtest we can conclude that we are missing a syncronisation call. This is the most common test error we are running into.",
      "created_at": "2020-02-18T21:45:04Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380953432",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380953432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380954952",
      "pull_request_review_id": 360697339,
      "id": 380954952,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1NDk1Mg==",
      "diff_hunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests that a mempool transaction expires after a given timeout and that its\n+children are removed as well.\n+\n+Both the default expiry timeout defined by DEFAULT_MEMPOOL_EXPIRY and a user\n+definable expiry timeout via the '-mempoolexpiry=<n>' command line argument\n+(<n> is the timeout in hours) are tested.\n+\"\"\"\n+\n+from datetime import timedelta\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    find_vout_for_address,\n+)\n+\n+DEFAULT_MEMPOOL_EXPIRY = 336\n+CUSTOM_MEMPOOL_EXPIRY = 10\n+\n+\n+class MempoolExpiryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_transaction_expiry(self, timeout):\n+        \"\"\"Tests that a transaction expires after the expiry timeout and its\n+        children are removed as well.\"\"\"\n+        node = self.nodes[0]\n+\n+        # Send a parent transaction that will expire.\n+        parent_address = node.getnewaddress()\n+        parent_txid = node.sendtoaddress(parent_address, 1.0)\n+\n+        # Set the mocktime to the arrival time of the parent transaction.\n+        entry_time = node.getmempoolentry(parent_txid)[\"time\"]\n+        node.setmocktime(entry_time)\n+\n+        # Create child transaction spending the parent transaction\n+        vout = find_vout_for_address(node, parent_txid, parent_address)\n+        inputs = [{'txid': parent_txid, 'vout': vout}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        child_raw = node.createrawtransaction(inputs, outputs)\n+        child_signed = node.signrawtransactionwithwallet(child_raw)[\"hex\"]\n+\n+        # Let half of the timeout elapse and broadcast the child transaction.\n+        half_expiry_time = entry_time + int(60 * 60 * timeout/2)\n+        node.setmocktime(half_expiry_time)\n+        child_txid = node.sendrawtransaction(child_signed)\n+        self.log.info(\"Broadcast child transaction after {} hours.\".format(\n+            str(timedelta(seconds=(half_expiry_time-entry_time)))))\n+\n+        # Let most of the timeout elapse and check that the parent tx is still\n+        # in the mempool.\n+        nearly_expiry_time = entry_time + 60 * 60 * timeout - 5\n+        node.setmocktime(nearly_expiry_time)\n+        # Expiry of mempool transactions is only checked when a new transaction\n+        # is added to the to the mempool.\n+        node.sendtoaddress(node.getnewaddress(), 1.0)\n+        self.log.info(\"Test parent tx not expired after {} hours.\".format(",
      "path": "test/functional/mempool_expiry.py",
      "position": null,
      "original_position": 67,
      "commit_id": "d6d2602a32251c1017da88b47c801b7283c66ce3",
      "original_commit_id": "608c572077ff39d4183ac65aa0b332659977766a",
      "in_reply_to_id": 380937939,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes makes sense in those cases.",
      "created_at": "2020-02-18T21:47:49Z",
      "updated_at": "2020-02-19T09:04:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18172#discussion_r380954952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380954952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18172"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    }
  ]
}