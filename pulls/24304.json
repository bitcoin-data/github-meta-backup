{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304",
    "id": 844317513,
    "node_id": "PR_kwDOABII584yU0NJ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24304",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24304.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24304.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
    "number": 24304,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "[kernel 0/n] Introduce `bitcoin-chainstate`",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Part of: #24303\r\n\r\nThis PR introduces an example/demo `bitcoin-chainstate` executable using said library which can print out information about a datadir and take in new blocks on stdin.\r\n\r\nPlease read the commit messages for more details.\r\n\r\n-----\r\n\r\n#### You may ask: WTF?! Why is `index/*.cpp`, etc. being linked in?\r\n\r\nThis PR is meant only to capture the state of dependencies in our consensus engine as of right now. There are many things to decouple from consensus, which will be done in subsequent PRs. Listing the files out right now in `bitcoin_chainstate_SOURCES` is purely to give us a clear picture of the task at hand, it is **not** to say that these dependencies _belongs_ there in any way.\r\n\r\n### TODO\r\n\r\n1. Clean up `bitcoin-chainstate.cpp`\r\n   It is quite ugly, with a lot of comments I've left for myself, I should clean it up to the best of my abilities (the ugliness of our init/shutdown might be the upper bound on cleanliness here...)",
    "labels": [
      {
        "id": 61889416,
        "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
      "id": 7150037,
      "node_id": "MI_kwDOABII584AbRnV",
      "number": 54,
      "state": "closed",
      "title": "24.0",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 159,
      "created_at": "2021-09-14T08:27:02Z",
      "updated_at": "2022-11-29T15:44:44Z",
      "closed_at": "2022-11-29T15:44:44Z"
    },
    "created_at": "2022-02-09T21:00:57Z",
    "updated_at": "2023-04-27T09:57:30Z",
    "closed_at": "2022-03-03T19:33:49Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-03-03T19:33:48Z",
    "merge_commit_sha": "619f8a27ad0f6a44f0ad1a1e55a0aaaef7a91312",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "dongcarl:2022-02-libbitcoinkernel-p0-minimal",
      "ref": "2022-02-libbitcoinkernel-p0-minimal",
      "sha": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 97671618,
        "node_id": "MDEwOlJlcG9zaXRvcnk5NzY3MTYxOA==",
        "name": "bitcoin",
        "full_name": "dongcarl/bitcoin",
        "owner": {
          "login": "dongcarl",
          "id": 3445290,
          "node_id": "MDQ6VXNlcjM0NDUyOTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dongcarl",
          "html_url": "https://github.com/dongcarl",
          "followers_url": "https://api.github.com/users/dongcarl/followers",
          "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
          "organizations_url": "https://api.github.com/users/dongcarl/orgs",
          "repos_url": "https://api.github.com/users/dongcarl/repos",
          "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dongcarl/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dongcarl/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/dongcarl/bitcoin",
        "archive_url": "https://api.github.com/repos/dongcarl/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dongcarl/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dongcarl/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dongcarl/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dongcarl/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dongcarl/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dongcarl/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dongcarl/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dongcarl/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dongcarl/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/dongcarl/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/dongcarl/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/dongcarl/bitcoin/events",
        "forks_url": "https://api.github.com/repos/dongcarl/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/dongcarl/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dongcarl/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dongcarl/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dongcarl/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/dongcarl/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dongcarl/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dongcarl/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dongcarl/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dongcarl/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dongcarl/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/dongcarl/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/dongcarl/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dongcarl/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dongcarl/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dongcarl/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:dongcarl/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/dongcarl/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/dongcarl/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dongcarl/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/dongcarl/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/dongcarl/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/dongcarl/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/dongcarl/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dongcarl/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/dongcarl/bitcoin/hooks",
        "svn_url": "https://github.com/dongcarl/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 204504,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-28T17:13:06Z",
        "created_at": "2017-07-19T04:07:18Z",
        "updated_at": "2022-06-03T10:08:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3ce40e64d4ae9419658555fd1fb250b93f52684a",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 380,
    "deletions": 4,
    "changed_files": 6,
    "commits": 2,
    "review_comments": 47,
    "comments": 18
  },
  "events": [
    {
      "event": "convert_to_draft",
      "id": 6037315153,
      "node_id": "CTDE_lADOABII585DS24izwAAAAFn2h5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6037315153",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-09T21:01:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6037317833,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFn2ijJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6037317833",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-09T21:02:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6037475060,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFn3I70",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6037475060",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-09T21:34:07Z"
    },
    {
      "event": "labeled",
      "id": 6037990575,
      "node_id": "LE_lADOABII585DS24izwAAAAFn5Gyv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6037990575",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-09T23:11:05Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 6037990578,
      "node_id": "LE_lADOABII585DS24izwAAAAFn5Gyy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6037990578",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-09T23:11:05Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 879388173,
      "node_id": "PRR_kwDOABII5840amYN",
      "url": null,
      "actor": null,
      "commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Left some questions.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-879388173",
      "submitted_at": "2022-02-10T20:20:58Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "commented",
      "id": 1035466827,
      "node_id": "IC_kwDOABII5849t_hL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035466827",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T20:25:19Z",
      "updated_at": "2022-02-10T20:25:19Z",
      "author_association": "MEMBER",
      "body": "> Would it be appropriate to add a CI job that enables --enable-experimental-util-chainstate?\r\n\r\nDo you need to add one? What about adding it to the existing nowallet task?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1035466827",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6045661518,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFoWXlO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6045661518",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T20:32:45Z"
    },
    {
      "event": "commented",
      "id": 1035477804,
      "node_id": "IC_kwDOABII5849uCMs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035477804",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T20:33:03Z",
      "updated_at": "2022-02-10T20:33:03Z",
      "author_association": "MEMBER",
      "body": "Pushed 518c876efe...1d9faa8fc7:\r\n- Addressed https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804072712",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1035477804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "commented",
      "id": 1035479455,
      "node_id": "IC_kwDOABII5849uCmf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035479455",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T20:34:12Z",
      "updated_at": "2022-02-10T20:34:12Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke \r\n> Do you need to add one? What about adding it to the existing nowallet task?\r\n\r\nI'm happy to add it to the existing nowallet task if you think it's appropriate! Lmk!",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1035479455",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "mentioned",
      "id": 6045672697,
      "node_id": "MEE_lADOABII585DS24izwAAAAFoWaT5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6045672697",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T20:34:13Z"
    },
    {
      "event": "subscribed",
      "id": 6045672709,
      "node_id": "SE_lADOABII585DS24izwAAAAFoWaUF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6045672709",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T20:34:13Z"
    },
    {
      "event": "commented",
      "id": 1035491348,
      "node_id": "IC_kwDOABII5849uFgU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035491348",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T20:42:53Z",
      "updated_at": "2022-02-10T20:42:53Z",
      "author_association": "MEMBER",
      "body": "> I'm happy to add it to the existing nowallet task if you think it's appropriate! Lmk!\r\n\r\nYeah, I don't think there are any downsides and only upsides to it, right?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1035491348",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "commented",
      "id": 1035557645,
      "node_id": "IC_kwDOABII5849uVsN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1035557645",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T21:49:50Z",
      "updated_at": "2022-02-10T21:49:50Z",
      "author_association": "MEMBER",
      "body": "From ci:\r\n\r\n```\r\nclientversion.cpp:19:10: fatal error: 'obj/build.h' file not found\r\n#include <obj/build.h>\r\n         ^~~~~~~~~~~~~\r\n1 error generated.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1035557645",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6046397208,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFoZLMY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6046397208",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T22:24:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6046407575,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFoZNuX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6046407575",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T22:25:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6046649190,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFoaItm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6046649190",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-10T23:11:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6047036770,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFobnVi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6047036770",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T00:35:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6047346889,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFoczDJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6047346889",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T01:58:01Z"
    },
    {
      "event": "reviewed",
      "id": 879860676,
      "node_id": "PRR_kwDOABII5840cZvE",
      "url": null,
      "actor": null,
      "commit_id": "d8f2e52387cb3572dc0a898a33f671aea65d78ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-879860676",
      "submitted_at": "2022-02-11T07:59:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "commented",
      "id": 1036146181,
      "node_id": "IC_kwDOABII5849wlYF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1036146181",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T12:04:10Z",
      "updated_at": "2022-02-24T12:08:16Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24322](https://github.com/bitcoin/bitcoin/pull/24322) ([kernel 1/n] Introduce initial `libbitcoinkernel` by dongcarl)\n* [#24164](https://github.com/bitcoin/bitcoin/pull/24164) (build: Bump minimum required clang/libc++ to 8.0 by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1036146181",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "reviewed",
      "id": 880364209,
      "node_id": "PRR_kwDOABII5840eUqx",
      "url": null,
      "actor": null,
      "commit_id": "e5579f11b702ad978cd4f672b362e6346c699234",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK e5579f11b702ad978cd4f672b362e6346c699234 with caveat that I mostly focused on the first commit and did not very closely review the build changes. (I think it could be a good idea to put first commit and other commits into two separate PRs, because the reviewers who are best able to give feedback about the code in the first commit are not necessarily the same people who can provide best feedback about the build commits.)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-880364209",
      "submitted_at": "2022-02-11T16:44:34Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6053214848,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFozLqA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6053214848",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T18:32:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6053215867,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFozL57",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6053215867",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T18:32:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6053236740,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFozRAE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6053236740",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T18:36:52Z"
    },
    {
      "event": "renamed",
      "id": 6053417966,
      "node_id": "RTE_lADOABII585DS24izwAAAAFoz9Pu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6053417966",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T19:14:10Z",
      "rename": {
        "from": "[kernel 0/n] Introduce `bitcoin-chainstate` and `libbitcoinkernel`",
        "to": "[kernel 0/n] Introduce `bitcoin-chainstate`"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6053420487,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFoz93H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6053420487",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T19:14:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6053519646,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFo0WEe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6053519646",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T19:34:40Z"
    },
    {
      "event": "reviewed",
      "id": 880593623,
      "node_id": "PRR_kwDOABII5840fMrX",
      "url": null,
      "actor": null,
      "commit_id": "da9056423079bcbdcfb23133a6063c37469d58b1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "review ACK da9056423079bcbdcfb23133a6063c37469d58b1",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-880593623",
      "submitted_at": "2022-02-11T19:38:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6053820763,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFo1flb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6053820763",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T20:36:24Z"
    },
    {
      "event": "reviewed",
      "id": 880669466,
      "node_id": "PRR_kwDOABII5840ffMa",
      "url": null,
      "actor": null,
      "commit_id": "9050346f04d0435ad71d93ba1df4f5c126c0337b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 9050346f04d0435ad71d93ba1df4f5c126c0337b. Main difference since last review is build changes have been scaled back to just add the new executable without the new library for now. There are also a few minor tweaks to bitcoin-chainstate, removing `using` statements and simplifying the G_TRANSLATION_FUN declaration",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-880669466",
      "submitted_at": "2022-02-11T20:54:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6054239515,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFo3F0b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6054239515",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-11T21:59:30Z"
    },
    {
      "event": "reviewed",
      "id": 880831291,
      "node_id": "PRR_kwDOABII5840gGs7",
      "url": null,
      "actor": null,
      "commit_id": "0d90128a3b6acab0fd9d1bc39518e2783b55fdf3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-880831291",
      "submitted_at": "2022-02-12T07:25:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "reviewed",
      "id": 880831321,
      "node_id": "PRR_kwDOABII5840gGtZ",
      "url": null,
      "actor": null,
      "commit_id": "0d90128a3b6acab0fd9d1bc39518e2783b55fdf3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-880831321",
      "submitted_at": "2022-02-12T07:25:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "commented",
      "id": 1037040253,
      "node_id": "IC_kwDOABII5849z_p9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1037040253",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-12T07:27:00Z",
      "updated_at": "2022-02-12T07:27:00Z",
      "author_association": "MEMBER",
      "body": "Can be taken out of draft now?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1037040253",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "labeled",
      "id": 6056029420,
      "node_id": "LE_lADOABII585DS24izwAAAAFo96zs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6056029420",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-12T07:35:25Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6062357851,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFpWD1b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6062357851",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-13T19:03:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6062408822,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFpWQR2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6062408822",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-13T19:16:46Z"
    },
    {
      "event": "ready_for_review",
      "id": 6062418396,
      "node_id": "RFRE_lADOABII585DS24izwAAAAFpWSnc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6062418396",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-13T19:19:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6062468332,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFpWezs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6062468332",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-13T19:35:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6062481241,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFpWh9Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6062481241",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-13T19:39:24Z"
    },
    {
      "event": "commented",
      "id": 1038379235,
      "node_id": "IC_kwDOABII58495Gjj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1038379235",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-13T19:40:52Z",
      "updated_at": "2022-02-13T19:40:52Z",
      "author_association": "MEMBER",
      "body": "Pushed 0ad6a3e81265ef2ad5353c4e0f6553955980d2bc:\r\n- Lots of cleanup in `bitcoin-chainstate.cpp`:\r\n  - Added copyright header\r\n  - More information in header comment\r\n  - Removed personal comments\r\n  - Added comments separating the stages of setup\r\n  - Sorted headers\r\n  - Moved `submitblock_StateCatcher` to where it's used so there's more context\r\n  - Addressed some review comments",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1038379235",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "milestoned",
      "id": 6065231254,
      "node_id": "MIE_lADOABII585DS24izwAAAAFphBWW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6065231254",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-14T09:07:22Z",
      "milestone": {
        "title": "24.0"
      }
    },
    {
      "event": "commented",
      "id": 1038829308,
      "node_id": "IC_kwDOABII584960b8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1038829308",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-14T09:07:29Z",
      "updated_at": "2022-02-14T09:07:29Z",
      "author_association": "MEMBER",
      "body": "Assigned 24.0, as this missed the 0.23 feature freeze",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1038829308",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "reviewed",
      "id": 881374201,
      "node_id": "PRR_kwDOABII5840iLP5",
      "url": null,
      "actor": null,
      "commit_id": "0ad6a3e81265ef2ad5353c4e0f6553955980d2bc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 0ad6a3e81265ef2ad5353c4e0f6553955980d2bc 🔟\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK 0ad6a3e81265ef2ad5353c4e0f6553955980d2bc 🔟\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjLOgwAjdvJIwihxHSRaKHl0iVEsfH9gOsvngLNiBtqBBlXbooA0NFaFXMKce5f\r\nv17lIZqfNLCfyIEZFSrgb4cTRAMURDJNTyVg4pFBCEVcmSxmcGniff8v9Y+pbPj7\r\nZ7WYljWzVJpZeuAQyFwiAr9AerIYUZVndLX5X+QKf+JMBqg1Vv7G7SIfgdlUAzl8\r\n+hIPW144xzl6xZRsTJrBp91GdAAY/vyAz+8EfFay82SAJC6ZE9CGtUEzrYyOQ8S/\r\nvD+5ach5xi2FbOQgXYX+49Hqgx+x0VzAhEI4XeUm0NDKaiRlK15oPegyPXjL+obT\r\nwmE+N1AzpeYJ60Wih64XyT7NB3DaMpExoybmMlgPaOyfLZvC+nMlhjffPG5M3sni\r\nXl1ffLN873bQgYJf8mT/vO/U+PHTD6iJBk9LzhMYTF5ltW94j7/2XCCB3/3nRCFn\r\n2R0jz8wJxovw2a/MDkI3mdfvzzWQeIugGNZie2fs+Vtn5cgyWfdburKq4d2bUEum\r\nMuiehY0A\r\n=PeLI\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-881374201",
      "submitted_at": "2022-02-14T09:52:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "commented",
      "id": 1038985002,
      "node_id": "IC_kwDOABII58497acq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1038985002",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-14T11:40:47Z",
      "updated_at": "2022-02-14T11:40:47Z",
      "author_association": "MEMBER",
      "body": "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 3bb93940703e9d0f4bffda98f4fe22fb1487db34<br>(master) | commit 9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`dd60a2a6ddc05117...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/SHA256SUMS.part) | [`c66e790fb18446a3...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`8bc5bcfefab76715...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-aarch64-linux-gnu-debug.tar.gz) | [`3bb32eacda2bb05c...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`710321dcf5f0a4e9...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-aarch64-linux-gnu.tar.gz) | [`0c1e5fe5616aa830...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`d0b5b74e80a06c13...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-arm-linux-gnueabihf-debug.tar.gz) | [`2ecf253ec6fa0271...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`7540ec432bbe611b...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-arm-linux-gnueabihf.tar.gz) | [`47199eb27f02243c...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-arm-linux-gnueabihf.tar.gz) |\n| *-arm64-apple-darwin.tar.gz | [`20bd3de56c122dab...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-arm64-apple-darwin.tar.gz) | [`814782a35b36f1ab...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-arm64-apple-darwin.tar.gz) |\n| *-osx-unsigned.dmg | [`238a67aa27f7ed54...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-osx-unsigned.dmg) | [`a9458756f40d3ddc...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-osx-unsigned.dmg) |\n| *-osx-unsigned.tar.gz | [`ab189b2d1873f62f...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-osx-unsigned.tar.gz) | [`b95e1130224420d3...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-osx-unsigned.tar.gz) |\n| *-osx64.tar.gz | [`c25bd3526668fd5b...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-osx64.tar.gz) | [`3f19b8883178fa1e...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-osx64.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`d8f9c7a39538f196...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-powerpc64-linux-gnu-debug.tar.gz) | [`02db19de98581b1e...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`751c0e3f4371b425...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-powerpc64-linux-gnu.tar.gz) | [`a7a169f4c644fabf...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-powerpc64-linux-gnu.tar.gz) |\n| *-powerpc64le-linux-gnu-debug.tar.gz | [`0b3a07e161da8e65...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-powerpc64le-linux-gnu-debug.tar.gz) | [`bd69f38a7f2666fc...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-powerpc64le-linux-gnu-debug.tar.gz) |\n| *-powerpc64le-linux-gnu.tar.gz | [`df8899cbe9059ccd...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-powerpc64le-linux-gnu.tar.gz) | [`43a74a88dc35429c...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-powerpc64le-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`0cb9b3fe2626bac2...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-riscv64-linux-gnu-debug.tar.gz) | [`add199d090229d79...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`08296f18f18113e9...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-riscv64-linux-gnu.tar.gz) | [`ad4aa3496b4e2659...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-riscv64-linux-gnu.tar.gz) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`41ecc738e3c92499...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-x86_64-linux-gnu-debug.tar.gz) | [`92972e36cb96a7cc...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`9e1179bfc7d06e08...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e-x86_64-linux-gnu.tar.gz) | [`456f9cc530993ded...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`b7698539ff204a66...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/bitcoin-3bb93940703e.tar.gz) | [`7c8b49704e80e812...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/bitcoin-9a7960ddf173.tar.gz) |\n| guix_build.log | [`a288ed44440d4dfb...`](https://drahtbot.space/guix/bitcoin/bitcoin/3bb93940703e9d0f4bffda98f4fe22fb1487db34/guix_build.log) | [`546ce6009e648f76...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/guix_build.log) |\n| guix_build.log.diff |  | [`81641e662291152b...`](https://drahtbot.space/guix/bitcoin/bitcoin/9a7960ddf173b3b53f6b7e21d3ecc0e20372e64c/guix_build.log.diff) |\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1038985002",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "unlabeled",
      "id": 6066318264,
      "node_id": "UNLE_lADOABII585DS24izwAAAAFplKu4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6066318264",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-14T11:40:48Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "reviewed",
      "id": 881902067,
      "node_id": "PRR_kwDOABII5840kMHz",
      "url": null,
      "actor": null,
      "commit_id": "0ad6a3e81265ef2ad5353c4e0f6553955980d2bc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 0ad6a3e81265ef2ad5353c4e0f6553955980d2bc with same caveat that mostly focused on first commit, paid less attention to build changes in second commit. Only changes since last review were documentation changes which all looked very good to me.\r\n\r\nSome comments about dependencies were lost, but it is probably better not to have the level of detail they were going into here:\r\n\r\n```diff\r\n-    // Initialize signatureCache cuz it's used by...\r\n-    //     <- VerifyECDSASignature\r\n-    //     <- CheckECDSASignature\r\n-    //     <- EvalChecksigPreTapscript\r\n-    //     <- EvalScript\r\n-    //     <- VerifyScript\r\n-    //     <- CScriptCheck::()\r\n-    //     <- CheckInputScripts\r\n-    //     <- ConnectBlock\r\n-    //     <- ConnectTip\r\n-    //     <- ActivateBestChainStep\r\n-    //     <- ActivateBestChain\r\n-    //     <- ProcessNewBlock\r\n     InitSignatureCache();\r\n-\r\n-    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\r\n-    //     <- CheckInputScripts\r\n-    //     <- ConnectBlock\r\n-    //     <- ConnectTip\r\n-    //     <- ActivateBestChainStep\r\n-    //     <- ActivateBestChain\r\n-    //     <- ProcessNewBlock\r\n     InitScriptExecutionCache();\r\n```\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-881902067",
      "submitted_at": "2022-02-14T16:51:17Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5NWFhNmNhMzdiZjBiZDVjNWUyMjFiYWI3Nzk5NzhhOTliMmEzNGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/095aa6ca37bf0bd5c5e221bab779978a99b2a34c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/095aa6ca37bf0bd5c5e221bab779978a99b2a34c",
      "tree": {
        "sha": "bc8d2373bbe1268bb240752348940e547ba61482",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc8d2373bbe1268bb240752348940e547ba61482"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ce40e64d4ae9419658555fd1fb250b93f52684a",
          "sha": "3ce40e64d4ae9419658555fd1fb250b93f52684a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ce40e64d4ae9419658555fd1fb250b93f52684a"
        }
      ],
      "message": "build: Add example bitcoin-chainstate executable\n\nThe bitcoin-chainstate executable serves to surface the dependencies\nrequired by a program wishing to use Bitcoin Core's consensus engine as\nit is right now.\n\nMore broadly, the _SOURCES list serves as a guiding \"North Star\" for the\nlibbitcoinkernel project: as we decouple more and more modules of the\ncodebase from our consensus engine, this _SOURCES list will grow shorter\nand shorter. One day, only what is critical to our consensus engine will\nremain. Right now, it's \"the minimal list of files to link in to even\nuse our consensus engine\".\n\n[META] In a future commit the libbitcoinkernel library will be extracted\n       from bitcoin-chainstate, and the libbitcoinkernel library's\n       _SOURCES list will be the list that we aim to shrink.",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-02-14T19:53:46Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-09-01T19:46:51Z"
      },
      "sha": "095aa6ca37bf0bd5c5e221bab779978a99b2a34c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJjMDNjZWMyZmY4Y2RiZmQ1ZGE5MmJmYjUwN2QyMThlNWM2NDM1YjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "tree": {
        "sha": "a9d46ae389a94b398f581f6dbae671720979bfa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9d46ae389a94b398f581f6dbae671720979bfa1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/095aa6ca37bf0bd5c5e221bab779978a99b2a34c",
          "sha": "095aa6ca37bf0bd5c5e221bab779978a99b2a34c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/095aa6ca37bf0bd5c5e221bab779978a99b2a34c"
        }
      ],
      "message": "ci: Build bitcoin-chainstate\n\n...to make sure that the linker errors that arise from coupling\nregressions are caught by CI.\n\nAdding to the \"no wallet\" ci job as suggested by MarcoFalke.",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-02-14T19:54:01Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-02-10T21:08:07Z"
      },
      "sha": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6069803753,
      "node_id": "HRFPE_lADOABII585DS24izwAAAAFpydrp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6069803753",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-14T19:54:52Z"
    },
    {
      "event": "commented",
      "id": 1039509376,
      "node_id": "IC_kwDOABII58499aeA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1039509376",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-14T20:12:52Z",
      "updated_at": "2022-02-14T20:12:52Z",
      "author_association": "MEMBER",
      "body": "Pushed 2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0\r\n- Rebased over master to account for header-only boost change\r\n- Some comment and formatting changes to `bitcoin-chainstate.cpp`",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1039509376",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "reviewed",
      "id": 882205702,
      "node_id": "PRR_kwDOABII5840lWQG",
      "url": null,
      "actor": null,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0. Just rebase, comments, formatting change since last review",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-882205702",
      "submitted_at": "2022-02-14T21:26:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "reviewed",
      "id": 885614605,
      "node_id": "PRR_kwDOABII5840yWgN",
      "url": null,
      "actor": null,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Did some light testing of 2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0. Very cool! I fed it block 1 and 2 on a fresh datadir and it was happy. I fed it a duplicate block and it exited. I fed it block 4 and it complained it didn't have the previous block. All fine for now I would say.\r\n\r\nCan you add a short documentation, e.g. `contrib/KERNEL.md`, that includes a link to #24303, the configure flag and one example incantation how to use this binary? It doesn't have to explain the entire kernel project.\r\n\r\nIt might also be good to add a basic functional test for the binary. `test/functional/tool_wallet.py` should be a good template. You may need to add something to `good_prefixes_re` depending on how you name the test file.\r\n\r\nA skeleton manpage might be nice too, see plumbing example in #20913.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-885614605",
      "submitted_at": "2022-02-17T09:14:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "reviewed",
      "id": 885735093,
      "node_id": "PRR_kwDOABII5840yz61",
      "url": null,
      "actor": null,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> Can you add a short documentation, e.g. `contrib/KERNEL.md`, that includes a link to #24303, the configure flag and one example incantation how to use this binary? It doesn't have to explain the entire kernel project.\r\n\r\nYou already know this since you commented there, but for anyone else I started writing up some things about libbitcoinkernel design in #24352 (with a lot of \"probably\" hedging which I'll remove because it was before I talked to Carl and was guessing about some things).\r\n\r\nI think existing https://github.com/bitcoin/bitcoin/blob/master/doc/shared-libraries.md will be a good place to document libbitcoinkernel usage when it gets added by the next PR.\r\n\r\n> It might also be good to add a basic functional test for the binary. `test/functional/tool_wallet.py` should be a good template. You may need to add something to `good_prefixes_re` depending on how you name the test file.\r\n> \r\n> A skeleton manpage might be nice too, see plumbing example in #20913.\r\n\r\nI think this is only temporarily built as part of our build system, and later moving to an examples folder with a CMake file, so that would be a reason not to do the test, manpage, etc in this style.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-885735093",
      "submitted_at": "2022-02-17T10:40:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "commented",
      "id": 1042814237,
      "node_id": "IC_kwDOABII584-KBUd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1042814237",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T10:47:06Z",
      "updated_at": "2022-02-17T10:47:06Z",
      "author_association": "MEMBER",
      "body": "> I think this is only temporarily built as part of our build system, and later moving to an examples folder with a CMake file, so that would be a reason not to do the test, manpage, etc in this style.\r\n\r\nI agree with Russ. I don't really see a reason to add tests, let alone a manpage for this binary.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1042814237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "commented",
      "id": 1042825106,
      "node_id": "IC_kwDOABII584-KD-S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1042825106",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T10:59:36Z",
      "updated_at": "2022-02-17T11:00:22Z",
      "author_association": "MEMBER",
      "body": ">  later moving to an examples folder with a CMake file\r\n\r\nHaving untested examples could lead to code rot though.\r\n\r\nI could also imagine this `bitcoin-chainstate` binary actually being useful, especially when you add ZMQ support. In a micro-service like architecture you would feed it blocks from another source (like an edge node) and it would spit out ZMQ feeds. All this without the menace of p2p connections and without the need for using RPC communication. But maybe this is a bit too contrived.\r\n\r\n(ZMQ of course doesn't belong in a kernel, but some sort of notification interface probably does, and this binary can demo that)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1042825106",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "commented",
      "id": 1042832273,
      "node_id": "IC_kwDOABII584-KFuR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1042832273",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T11:04:45Z",
      "updated_at": "2022-02-17T11:04:45Z",
      "author_association": "MEMBER",
      "body": "> Having untested examples could lead to code rot though.\r\n\r\nAgreed. I definitely think this should be continue to be built by CI at the very least, and maybe a have a little script feeding it a test block.\r\n\r\n> I could also imagine this `bitcoin-chainstate` binary actually being useful, especially when you add ZMQ support.\r\n\r\nThis could be great, but I believe it should be a separate tool cloned / inspired from this one. When you are using a new library it's helpful to have a simple minimal example along with the fancy demo example.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1042832273",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "commented",
      "id": 1042837112,
      "node_id": "IC_kwDOABII584-KG54",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1042837112",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T11:10:20Z",
      "updated_at": "2022-02-17T11:10:20Z",
      "author_association": "MEMBER",
      "body": "> (ZMQ of course doesn't belong in a kernel, but some sort of notification interface probably does, and this binary can demo that)\r\n\r\nStdout is my favorite notification interface 😏",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1042837112",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "commented",
      "id": 1042920837,
      "node_id": "IC_kwDOABII584-KbWF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1042920837",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T12:55:15Z",
      "updated_at": "2022-02-17T12:55:15Z",
      "author_association": "MEMBER",
      "body": "Not sure if this needs a manpage and test, since there is already a test for it (see second commit). The goal of the binary right now is to confirm that  the compiler and linker doesn't fail. I don't think that the binary should be considered stable for end users. Also, the interface is mostly a playground, as I understand it, and not the interface that will be shipped when it is final and ready for end users. Thus, adding a test will make it harder to change the interface later on.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1042920837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "reviewed",
      "id": 885916780,
      "node_id": "PRR_kwDOABII5840zgRs",
      "url": null,
      "actor": null,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0 🏔\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK 2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0 🏔\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjqVQv9GTYBZ644zKBR/8+NgZAZqR/vzNuVLzgPo9UWDexF6M1LZRVpQaoaz831\r\nPxJui5vAF4Eegt6OPhOEzmW4jpd6s5MpURCBL8BzKiyRxe0uT0MPnzufwpZn3iBP\r\nSVpmoAcgG0ZjM9cdY2iJsLqhf47AHqAqh2K8f9gCoObqloHgjIb5fiK5gXowWLDd\r\nB/zlZgmIaxlS/rgyUkpLa/5kIEOONyO56abJ9PhAlXYKm1GIX5+/GgB0Yb/BJEwL\r\nbP843qBy511C07usDLKp3pPMPAFakDFJPJlmE7evSE5DEKcoXVTQGTjoK1JQ/j4t\r\nPa2bESI48/V7dBOGYDsEd0AdoW3J2Mkhkbzk1lp6Fu+vCQQbEqIVw5F05p3hUmuJ\r\nRyDJROFVjvONophU2MMLOkL7xlfmNQzXY56ONDsd3OhPWG7bX82Kf0XPZ5rDqDGn\r\n9FWDiAf5/mTscazQ0wcwLZlIHX9gx0v0XOZNcLiStfaeAPq4X3U2cEN+2oPHHQtg\r\n8CMkgV6s\r\n=nVUh\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#pullrequestreview-885916780",
      "submitted_at": "2022-02-17T12:55:39Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
    },
    {
      "event": "commented",
      "id": 1043324119,
      "node_id": "IC_kwDOABII584-L9zX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1043324119",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T19:17:39Z",
      "updated_at": "2022-02-17T19:17:39Z",
      "author_association": "MEMBER",
      "body": "ACK 2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1043324119",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "merged",
      "id": 6180544677,
      "node_id": "ME_lADOABII585DS24izwAAAAFwY6Cl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6180544677",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "619f8a27ad0f6a44f0ad1a1e55a0aaaef7a91312",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/619f8a27ad0f6a44f0ad1a1e55a0aaaef7a91312",
      "created_at": "2022-03-03T19:33:48Z"
    },
    {
      "event": "closed",
      "id": 6180544696,
      "node_id": "CE_lADOABII585DS24izwAAAAFwY6C4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6180544696",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-03T19:33:49Z"
    },
    {
      "event": "referenced",
      "id": 6188428737,
      "node_id": "REFE_lADOABII585DS24izwAAAAFw2-3B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6188428737",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d25bd6c5bbec3f2d66769ee4d4d6037bf1851310",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/d25bd6c5bbec3f2d66769ee4d4d6037bf1851310",
      "created_at": "2022-03-05T00:40:23Z"
    },
    {
      "event": "commented",
      "id": 1059853721,
      "node_id": "IC_kwDOABII584_LBWZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059853721",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-05T23:51:56Z",
      "updated_at": "2022-03-05T23:51:56Z",
      "author_association": "MEMBER",
      "body": "Post-merge ACK 2c03cec",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#issuecomment-1059853721",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24304"
    },
    {
      "event": "added_to_project",
      "id": 6261553438,
      "node_id": "ATPE_lADOABII585DS24izwAAAAF1N7ke",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6261553438",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-17T19:26:45Z",
      "project_card": {
        "id": 79294365,
        "url": "https://api.github.com/projects/columns/cards/79294365",
        "project_id": 14269697,
        "project_url": "https://api.github.com/projects/14269697",
        "column_name": "WIP PRs"
      }
    },
    {
      "event": "moved_columns_in_project",
      "id": 6261554982,
      "node_id": "MCIPE_lADOABII585DS24izwAAAAF1N78m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6261554982",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-17T19:27:02Z",
      "project_card": {
        "id": 79294365,
        "url": "https://api.github.com/projects/columns/cards/79294365",
        "project_id": 14269697,
        "project_url": "https://api.github.com/projects/14269697",
        "column_name": "Done",
        "previous_column_name": "WIP PRs"
      }
    },
    {
      "event": "referenced",
      "id": 6515546274,
      "node_id": "REFE_lADOABII585DS24izwAAAAGEW1ii",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6515546274",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dd17c42a164222cd6472c1bd908a3bae58ed228c",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd17c42a164222cd6472c1bd908a3bae58ed228c",
      "created_at": "2022-04-28T14:14:47Z"
    },
    {
      "event": "locked",
      "id": 9112435037,
      "node_id": "LOE_lADOABII585DS24izwAAAAIfJLld",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9112435037",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T09:57:30Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804068683",
      "pull_request_review_id": 879388173,
      "id": 804068683,
      "node_id": "PRRC_kwDOABII584v7R1L",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What would happen if this function was empty? If it builds, then the changes here are minimal and build-system only and wouldn't need to concern itself with (C++) code yet.",
      "created_at": "2022-02-10T20:13:30Z",
      "updated_at": "2022-02-10T20:20:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804068683",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804068683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804072128",
      "pull_request_review_id": 879388173,
      "id": 804072128,
      "node_id": "PRRC_kwDOABII584v7SrA",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wouldn't the code be easier to read by replacing this with `return;` and letting a destructor of an object that lives in this scope take care of the cleanup?",
      "created_at": "2022-02-10T20:18:10Z",
      "updated_at": "2022-02-10T20:20:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804072128",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804072128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804072712",
      "pull_request_review_id": 879388173,
      "id": 804072712,
      "node_id": "PRRC_kwDOABII584v7S0I",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;\n+    } else {\n+        auto maybe_verify_error = VerifyLoadedChainstate(std::ref(chainman),\n+                                                         false,\n+                                                         false,\n+                                                         chainparams.GetConsensus(),\n+                                                         DEFAULT_CHECKBLOCKS,\n+                                                         DEFAULT_CHECKLEVEL,\n+                                                         /*get_unix_time_seconds=*/static_cast<int64_t(*)()>(GetTime));\n+        if (maybe_verify_error.has_value()) {\n+            std::cerr << \"Failed to verify loaded Chain state from your datadir.\" << std::endl;\n+            goto epilogue;\n+        }\n+    }\n+\n+    for (CChainState* chainstate : WITH_LOCK(::cs_main, return chainman.GetAll())) {\n+        BlockValidationState state;\n+        if (!chainstate->ActivateBestChain(state, nullptr)) {\n+            std::cerr << \"Failed to connect best block (\" << state.ToString() << \")\" << std::endl;\n+            goto epilogue;\n+        }\n+    }\n+\n+    std::cout << \"Hello! I'm going to print out some information about your datadir.\" << std::endl;\n+    std::cout << \"\\t\" << \"Path: \" << gArgs.GetDataDirNet() << std::endl;\n+    std::cout << \"\\t\" << \"Reindexing: \" << std::boolalpha << fReindex.load() << std::noboolalpha << std::endl;\n+    std::cout << \"\\t\" << \"Snapshot Active: \" << std::boolalpha << chainman.IsSnapshotActive() << std::noboolalpha << std::endl;\n+    std::cout << \"\\t\" << \"Active Height: \" << chainman.ActiveHeight() << std::endl;\n+    std::cout << \"\\t\" << \"Active IBD: \" << std::boolalpha << chainman.ActiveChainstate().IsInitialBlockDownload() << std::noboolalpha << std::endl;\n+    {\n+        CBlockIndex* tip = chainman.ActiveTip();\n+        if (tip) {\n+            std::cout << \"\\t\" << tip->ToString() << std::endl;\n+        }\n+    }\n+\n+    for (std::string line; std::getline(std::cin, line); ) {\n+        if (line.empty()) {\n+            std::cerr << \"Empty line found\" << std::endl;\n+            break;\n+        }\n+\n+        std::shared_ptr<CBlock> blockptr = std::make_shared<CBlock>();\n+        CBlock& block = *blockptr;\n+\n+        if (!DecodeHexBlk(block, line)) {\n+            std::cerr << \"Block decode failed\" << std::endl;\n+            break;\n+        }\n+\n+        if (block.vtx.empty() || !block.vtx[0]->IsCoinBase()) {\n+            std::cerr << \"Block does not start with a coinbase\" << std::endl;\n+            break;\n+        }\n+\n+        uint256 hash = block.GetHash();\n+        {\n+            LOCK(cs_main);\n+            const CBlockIndex* pindex = chainman.m_blockman.LookupBlockIndex(hash);\n+            if (pindex) {\n+                if (pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+                    std::cerr << \"duplicate\" << std::endl;\n+                    break;\n+                }\n+                if (pindex->nStatus & BLOCK_FAILED_MASK) {\n+                    std::cerr << \"duplicate-invalid\" << std::endl;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        {\n+            LOCK(cs_main);\n+            const CBlockIndex* pindex = chainman.m_blockman.LookupBlockIndex(block.hashPrevBlock);\n+            if (pindex) {\n+                UpdateUncommittedBlockStructures(block, pindex, chainparams.GetConsensus());\n+            }\n+        }\n+\n+        bool new_block;\n+        auto sc = std::make_shared<submitblock_StateCatcher>(block.GetHash());\n+        RegisterSharedValidationInterface(sc);\n+        bool accepted = chainman.ProcessNewBlock(chainparams, blockptr, /* fForceProcessing */ true, /* fNewBlock */ &new_block);",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 190,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "wrong argument names?",
      "created_at": "2022-02-10T20:19:08Z",
      "updated_at": "2022-02-10T20:20:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804072712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804072712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804077679",
      "pull_request_review_id": 879400703,
      "id": 804077679,
      "node_id": "PRRC_kwDOABII584v7UBv",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804068683,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If it's empty, then we would be able to remove all files in `libbitcoinkernel_la_SOURCES` and it would still compile and link. It being not empty is to enforce that we've linked at least the set of files necessary for this functionality.",
      "created_at": "2022-02-10T20:26:24Z",
      "updated_at": "2022-02-10T20:26:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804077679",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804077679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804078881",
      "pull_request_review_id": 879402362,
      "id": 804078881,
      "node_id": "PRRC_kwDOABII584v7UUh",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unfortunately, with our codebase right now if we don't do the shutdown process in a very carefully sequenced way, there will be nullptr dereferences and other undefined behaviour.",
      "created_at": "2022-02-10T20:28:08Z",
      "updated_at": "2022-02-10T20:28:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804078881",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804078881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804088493",
      "pull_request_review_id": 879421212,
      "id": 804088493,
      "node_id": "PRRC_kwDOABII584v7Wqt",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't mean to reorder the sequence. It is just a suggestion to remove `goto`, which in my eyes is impossible to review. I am convinced that any code using `goto` can be rewritten in a way that doesn't use `goto` and is at the same time easier to read. I can look into this in the future, unless someone beats me to it.",
      "created_at": "2022-02-10T20:42:02Z",
      "updated_at": "2022-02-10T21:52:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804088493",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804088493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804422582",
      "pull_request_review_id": 879860676,
      "id": 804422582,
      "node_id": "PRRC_kwDOABII584v8oO2",
      "diff_hunk": "@@ -259,13 +259,13 @@ task:\n     FILE_ENV: \"./ci/test/00_setup_env_i686_multiprocess.sh\"\n \n task:\n-  name: '[no wallet] [bionic]'\n+  name: '[no wallet, libbitcoinkernel] [bionic]'",
      "path": ".cirrus.yml",
      "position": 5,
      "original_position": 5,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "d8f2e52387cb3572dc0a898a33f671aea65d78ad",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in the ci commit: pls remove the @MarcoFalke ",
      "created_at": "2022-02-11T07:59:57Z",
      "updated_at": "2022-02-11T07:59:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804422582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804422582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 262,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804782700",
      "pull_request_review_id": 880364209,
      "id": 804782700,
      "node_id": "PRRC_kwDOABII584v-AJs",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "01840e6161396ed0ab30a122921f67b8dce45499",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"build: Add example bitcoin-chainstate executable\" (01840e6161396ed0ab30a122921f67b8dce45499)\r\n\r\nWould be nicer to print a \"Usage:\" message",
      "created_at": "2022-02-11T15:55:17Z",
      "updated_at": "2022-02-11T16:44:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804782700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804782700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804793259",
      "pull_request_review_id": 880364209,
      "id": 804793259,
      "node_id": "PRRC_kwDOABII584v-Cur",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "01840e6161396ed0ab30a122921f67b8dce45499",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"build: Add example bitcoin-chainstate executable\" (01840e6161396ed0ab30a122921f67b8dce45499)\r\n\r\nThe LoadChainstate and VerifyLoadedChainstate calls here would be cleaner with  b7c7f64dc86f0fcdf07cb1e765f7cccc3a3c8897 suggested in https://github.com/bitcoin/bitcoin/pull/23280#pullrequestreview-825684290 and would let this code print specific error messages instead failing generically and discarding the return codes.",
      "created_at": "2022-02-11T16:06:53Z",
      "updated_at": "2022-02-11T16:44:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804793259",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804793259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804806173",
      "pull_request_review_id": 880364209,
      "id": 804806173,
      "node_id": "PRRC_kwDOABII584v-F4d",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I don't mean to reorder the sequence. It is just a suggestion to remove `goto`, which in my eyes is impossible to review.\r\n\r\nIMO, it is ok to use goto in a limited way to exit a block, and not worse than `break`. This can be cleaner and better than more convoluted alternatives and there are good practices build around it https://www.kernel.org/doc/html/latest/process/coding-style.html#centralized-exiting-of-functions",
      "created_at": "2022-02-11T16:21:45Z",
      "updated_at": "2022-02-11T16:44:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804806173",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804806173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804811990",
      "pull_request_review_id": 880364209,
      "id": 804811990,
      "node_id": "PRRC_kwDOABII584v-HTW",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "01840e6161396ed0ab30a122921f67b8dce45499",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"build: Add example bitcoin-chainstate executable\" (01840e6161396ed0ab30a122921f67b8dce45499)\r\n\r\nShould add the commit description \"The bitcoin-chainstate executable serves to...\" to the top of this file so it is not lost in git history. Or `bitcoin-chainstate` could accept \"-help\" option and describe its purpose there.",
      "created_at": "2022-02-11T16:28:21Z",
      "updated_at": "2022-02-11T16:44:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804811990",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804811990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804814204",
      "pull_request_review_id": 880364209,
      "id": 804814204,
      "node_id": "PRRC_kwDOABII584v-H18",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "01840e6161396ed0ab30a122921f67b8dce45499",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"build: Add example bitcoin-chainstate executable\" (01840e6161396ed0ab30a122921f67b8dce45499)\r\n\r\nI think it would be clearer to drop these using statements, and use the full names symbol below. Especially because `node::fIndex` looks like a local variable, not a global variable without the namespace component.",
      "created_at": "2022-02-11T16:30:48Z",
      "updated_at": "2022-02-11T16:44:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804814204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804814204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804821073",
      "pull_request_review_id": 880364209,
      "id": 804821073,
      "node_id": "PRRC_kwDOABII584v-JhR",
      "diff_hunk": "@@ -19,7 +19,7 @@ using node::fReindex;\n using node::LoadChainstate;\n using node::VerifyLoadedChainstate;\n \n-const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+__attribute__ ((visibility(\"default\"))) const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "e5579f11b702ad978cd4f672b362e6346c699234",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"f\" (e5579f11b702ad978cd4f672b362e6346c699234)\r\n\r\nI don't think `extern` belongs here. Maybe if you drop the `extern` you could drop the visibility attribute as well?",
      "created_at": "2022-02-11T16:38:17Z",
      "updated_at": "2022-02-11T16:44:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804821073",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804821073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804851213",
      "pull_request_review_id": 880461560,
      "id": 804851213,
      "node_id": "PRRC_kwDOABII584v-Q4N",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think we should be using the style guide of the kernel (a project written in C) for a project written in C++.\r\n\r\nBut given that the code here isn't used for anything after compilation (other than to prove that linking works), I think any style is fine here.",
      "created_at": "2022-02-11T17:13:45Z",
      "updated_at": "2022-02-11T17:13:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804851213",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804851213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804923112",
      "pull_request_review_id": 880561912,
      "id": 804923112,
      "node_id": "PRRC_kwDOABII584v-ibo",
      "diff_hunk": "@@ -259,13 +259,13 @@ task:\n     FILE_ENV: \"./ci/test/00_setup_env_i686_multiprocess.sh\"\n \n task:\n-  name: '[no wallet] [bionic]'\n+  name: '[no wallet, libbitcoinkernel] [bionic]'",
      "path": ".cirrus.yml",
      "position": 5,
      "original_position": 5,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "d8f2e52387cb3572dc0a898a33f671aea65d78ad",
      "in_reply_to_id": 804422582,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I removed the \"@\" from the commit message, is that sufficient?",
      "created_at": "2022-02-11T18:53:59Z",
      "updated_at": "2022-02-11T18:54:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804923112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804923112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 262,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804924995",
      "pull_request_review_id": 880564455,
      "id": 804924995,
      "node_id": "PRRC_kwDOABII584v-i5D",
      "diff_hunk": "@@ -19,7 +19,7 @@ using node::fReindex;\n using node::LoadChainstate;\n using node::VerifyLoadedChainstate;\n \n-const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+__attribute__ ((visibility(\"default\"))) const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "e5579f11b702ad978cd4f672b362e6346c699234",
      "in_reply_to_id": 804821073,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right! I've removed it.\r\n\r\nHowever, we still need the visibility attribute for the reasons detailed in the commit message for 7f7f92f81d06b0a3888fad102d3bc09a64483995",
      "created_at": "2022-02-11T18:56:45Z",
      "updated_at": "2022-02-11T18:56:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804924995",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804924995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804945496",
      "pull_request_review_id": 880593623,
      "id": 804945496,
      "node_id": "PRRC_kwDOABII584v-n5Y",
      "diff_hunk": "@@ -1622,6 +1630,10 @@ AC_MSG_CHECKING([whether to build bitcoin-util])\n AM_CONDITIONAL([BUILD_BITCOIN_UTIL], [test $build_bitcoin_util = \"yes\"])\n AC_MSG_RESULT($build_bitcoin_util)\n \n+AC_MSG_CHECKING([whether to build experimental bitcoin-chainstate])\n+AM_CONDITIONAL([BUILD_BITCOIN_CHAINSTATE], [test x$build_bitcoin_chainstate = xyes])",
      "path": "configure.ac",
      "position": null,
      "original_position": 34,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "da9056423079bcbdcfb23133a6063c37469d58b1",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: remove x and add missing \"quotes\" like everywhere else?",
      "created_at": "2022-02-11T19:29:52Z",
      "updated_at": "2022-02-11T19:38:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804945496",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804945496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1634,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804947111",
      "pull_request_review_id": 880593623,
      "id": 804947111,
      "node_id": "PRRC_kwDOABII584v-oSn",
      "diff_hunk": "@@ -764,6 +768,102 @@ bitcoin_util_LDADD = \\\n bitcoin_util_LDADD += $(BOOST_LIBS)\n #\n \n+# bitcoin-chainstate binary #\n+#\n+# TODO: Remove blockfilter.cpp and index/blockfilterindex.cpp after merge of\n+#       \"Improve Indices on pruned nodes via prune blockers\" #21726",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 18,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "da9056423079bcbdcfb23133a6063c37469d58b1",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Maybe remove this TODO and either create a review comment (after merge) on 21726, or create a tracking comment in the parent b-cs issue?",
      "created_at": "2022-02-11T19:32:18Z",
      "updated_at": "2022-02-11T19:38:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804947111",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804947111"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 774,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804950143",
      "pull_request_review_id": 880593623,
      "id": 804950143,
      "node_id": "PRRC_kwDOABII584v-pB_",
      "diff_hunk": "@@ -764,6 +768,102 @@ bitcoin_util_LDADD = \\\n bitcoin_util_LDADD += $(BOOST_LIBS)\n #\n \n+# bitcoin-chainstate binary #\n+#\n+# TODO: Remove blockfilter.cpp and index/blockfilterindex.cpp after merge of\n+#       \"Improve Indices on pruned nodes via prune blockers\" #21726\n+bitcoin_chainstate_SOURCES = \\\n+  bitcoin-chainstate.cpp \\\n+  arith_uint256.cpp \\\n+  blockfilter.cpp \\\n+  chain.cpp \\\n+  chainparamsbase.cpp \\\n+  chainparams.cpp \\\n+  clientversion.cpp \\\n+  coins.cpp \\\n+  compat/glibcxx_sanity.cpp \\\n+  compressor.cpp \\\n+  consensus/merkle.cpp \\\n+  consensus/tx_check.cpp \\\n+  consensus/tx_verify.cpp \\\n+  core_read.cpp \\\n+  dbwrapper.cpp \\\n+  deploymentinfo.cpp \\\n+  deploymentstatus.cpp \\\n+  flatfile.cpp \\\n+  fs.cpp \\\n+  hash.cpp \\\n+  index/base.cpp \\\n+  index/blockfilterindex.cpp \\\n+  index/coinstatsindex.cpp \\\n+  init/common.cpp \\\n+  key.cpp \\\n+  logging.cpp \\\n+  netaddress.cpp \\\n+  node/blockstorage.cpp \\\n+  node/chainstate.cpp \\\n+  node/coinstats.cpp \\\n+  node/ui_interface.cpp \\\n+  policy/feerate.cpp \\\n+  policy/fees.cpp \\\n+  policy/packages.cpp \\\n+  policy/policy.cpp \\\n+  policy/rbf.cpp \\\n+  policy/settings.cpp \\\n+  pow.cpp \\\n+  primitives/block.cpp \\\n+  primitives/transaction.cpp \\\n+  pubkey.cpp \\\n+  random.cpp \\\n+  randomenv.cpp \\\n+  scheduler.cpp \\\n+  script/interpreter.cpp \\\n+  script/script.cpp \\\n+  script/script_error.cpp \\\n+  script/sigcache.cpp \\\n+  script/standard.cpp \\\n+  shutdown.cpp \\\n+  signet.cpp \\\n+  support/cleanse.cpp \\\n+  support/lockedpool.cpp \\\n+  sync.cpp \\\n+  threadinterrupt.cpp \\\n+  timedata.cpp \\\n+  txdb.cpp \\\n+  txmempool.cpp \\\n+  uint256.cpp \\\n+  util/asmap.cpp \\\n+  util/bytevectorhash.cpp \\\n+  util/getuniquepath.cpp \\\n+  util/hasher.cpp \\\n+  util/moneystr.cpp \\\n+  util/rbf.cpp \\\n+  util/serfloat.cpp \\\n+  util/settings.cpp \\\n+  util/strencodings.cpp \\\n+  util/syscall_sandbox.cpp \\\n+  util/system.cpp \\\n+  util/thread.cpp \\\n+  util/threadnames.cpp \\\n+  util/time.cpp \\\n+  util/tokenpipe.cpp \\",
      "path": "src/Makefile.am",
      "position": 90,
      "original_position": 93,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "da9056423079bcbdcfb23133a6063c37469d58b1",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "question: This means that the \"util library\" will be compiled twice? Maybe it could make sense to split libutil out from libcommon and make libkernel depend on libutil?\r\n\r\nSimilarly, the consensus stuff will be compiled twice. Maybe it could make sense to remove consensus stuff from libnode and instead make libnode depend on libkernel?",
      "created_at": "2022-02-11T19:37:15Z",
      "updated_at": "2022-02-11T19:38:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804950143",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804950143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 841,
      "original_line": 841,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804983020",
      "pull_request_review_id": 880646549,
      "id": 804983020,
      "node_id": "PRRC_kwDOABII584v-xDs",
      "diff_hunk": "@@ -764,6 +768,102 @@ bitcoin_util_LDADD = \\\n bitcoin_util_LDADD += $(BOOST_LIBS)\n #\n \n+# bitcoin-chainstate binary #\n+#\n+# TODO: Remove blockfilter.cpp and index/blockfilterindex.cpp after merge of\n+#       \"Improve Indices on pruned nodes via prune blockers\" #21726\n+bitcoin_chainstate_SOURCES = \\\n+  bitcoin-chainstate.cpp \\\n+  arith_uint256.cpp \\\n+  blockfilter.cpp \\\n+  chain.cpp \\\n+  chainparamsbase.cpp \\\n+  chainparams.cpp \\\n+  clientversion.cpp \\\n+  coins.cpp \\\n+  compat/glibcxx_sanity.cpp \\\n+  compressor.cpp \\\n+  consensus/merkle.cpp \\\n+  consensus/tx_check.cpp \\\n+  consensus/tx_verify.cpp \\\n+  core_read.cpp \\\n+  dbwrapper.cpp \\\n+  deploymentinfo.cpp \\\n+  deploymentstatus.cpp \\\n+  flatfile.cpp \\\n+  fs.cpp \\\n+  hash.cpp \\\n+  index/base.cpp \\\n+  index/blockfilterindex.cpp \\\n+  index/coinstatsindex.cpp \\\n+  init/common.cpp \\\n+  key.cpp \\\n+  logging.cpp \\\n+  netaddress.cpp \\\n+  node/blockstorage.cpp \\\n+  node/chainstate.cpp \\\n+  node/coinstats.cpp \\\n+  node/ui_interface.cpp \\\n+  policy/feerate.cpp \\\n+  policy/fees.cpp \\\n+  policy/packages.cpp \\\n+  policy/policy.cpp \\\n+  policy/rbf.cpp \\\n+  policy/settings.cpp \\\n+  pow.cpp \\\n+  primitives/block.cpp \\\n+  primitives/transaction.cpp \\\n+  pubkey.cpp \\\n+  random.cpp \\\n+  randomenv.cpp \\\n+  scheduler.cpp \\\n+  script/interpreter.cpp \\\n+  script/script.cpp \\\n+  script/script_error.cpp \\\n+  script/sigcache.cpp \\\n+  script/standard.cpp \\\n+  shutdown.cpp \\\n+  signet.cpp \\\n+  support/cleanse.cpp \\\n+  support/lockedpool.cpp \\\n+  sync.cpp \\\n+  threadinterrupt.cpp \\\n+  timedata.cpp \\\n+  txdb.cpp \\\n+  txmempool.cpp \\\n+  uint256.cpp \\\n+  util/asmap.cpp \\\n+  util/bytevectorhash.cpp \\\n+  util/getuniquepath.cpp \\\n+  util/hasher.cpp \\\n+  util/moneystr.cpp \\\n+  util/rbf.cpp \\\n+  util/serfloat.cpp \\\n+  util/settings.cpp \\\n+  util/strencodings.cpp \\\n+  util/syscall_sandbox.cpp \\\n+  util/system.cpp \\\n+  util/thread.cpp \\\n+  util/threadnames.cpp \\\n+  util/time.cpp \\\n+  util/tokenpipe.cpp \\",
      "path": "src/Makefile.am",
      "position": 90,
      "original_position": 93,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "da9056423079bcbdcfb23133a6063c37469d58b1",
      "in_reply_to_id": 804950143,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This means that the \"util library\" will be compiled twice?\r\n\r\nYes, as it stands currently at least these few files of the util library will be compiled twice.\r\n\r\n> Maybe it could make sense to split libutil out from libcommon and make libkernel depend on libutil?\r\n\r\nUnfortunately, there are plenty of `util/*.cpp` that libbitcoinkernel doesn't use, and I wish to prevent any futher coupling in that regard especially since the files under `util/*.cpp` are largely unrelated.\r\n\r\n> Maybe it could make sense to remove consensus stuff from libnode and instead make libnode depend on libkernel?\r\n\r\nUnfortunately `bitcoin-chainstate` or `libbitcoinkernel` requires quite a lot of `.cpp` files that `libnode` doesn't, and also vice versa (both ends of the venn diagram are non-empty). So there's no clear hierarchy that we can establish without linking in a large number of unnecessary `.cpp` files which I want to prevent.\r\n\r\nThe following invocation (in a shell that supports process substitution) will print all the `.cpp` that `bitcoin-chainstate`/`libbitcoinkernel` requires but `libnode` doesn't:\r\n```sh\r\ncomm -23 <(make --no-print-directory -C src print-bitcoin_chainstate_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u) \\\r\n         <(make --no-print-directory -C src print-libbitcoin_node_a_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u)\r\n```\r\n\r\n```sh\r\narith_uint256.cpp\r\nbitcoin-chainstate.cpp\r\nchainparamsbase.cpp\r\nchainparams.cpp\r\nclientversion.cpp\r\ncoins.cpp\r\ncompat/glibcxx_sanity.cpp\r\ncompressor.cpp\r\nconsensus/merkle.cpp\r\nconsensus/tx_check.cpp\r\ncore_read.cpp\r\ndeploymentinfo.cpp\r\nfs.cpp\r\nhash.cpp\r\ninit/common.cpp\r\nkey.cpp\r\nlogging.cpp\r\nnetaddress.cpp\r\npolicy/feerate.cpp\r\npolicy/policy.cpp\r\nprimitives/block.cpp\r\nprimitives/transaction.cpp\r\npubkey.cpp\r\nrandom.cpp\r\nrandomenv.cpp\r\nscheduler.cpp\r\nscript/interpreter.cpp\r\nscript/script.cpp\r\nscript/script_error.cpp\r\nscript/standard.cpp\r\nsupport/cleanse.cpp\r\nsupport/lockedpool.cpp\r\nsync.cpp\r\nthreadinterrupt.cpp\r\nuint256.cpp\r\nutil/asmap.cpp\r\nutil/bytevectorhash.cpp\r\nutil/getuniquepath.cpp\r\nutil/hasher.cpp\r\nutil/moneystr.cpp\r\nutil/rbf.cpp\r\nutil/serfloat.cpp\r\nutil/settings.cpp\r\nutil/strencodings.cpp\r\nutil/syscall_sandbox.cpp\r\nutil/system.cpp\r\nutil/thread.cpp\r\nutil/threadnames.cpp\r\nutil/time.cpp\r\nutil/tokenpipe.cpp\r\nwarnings.cpp\r\n```\r\n\r\nAll the `.cpp` that `libnode` requires but `bitcoin-chainstate`/`libbitcoinkernel` doesn't:\r\n```sh\r\ncomm -13 <(make --no-print-directory -C src print-bitcoin_chainstate_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u) \\\r\n         <(make --no-print-directory -C src print-libbitcoin_node_a_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u)\r\n```\r\n\r\n```sh\r\naddrdb.cpp\r\naddrman.cpp\r\nbanman.cpp\r\nblockencodings.cpp\r\nhttprpc.cpp\r\nhttpserver.cpp\r\ni2p.cpp\r\nindex/txindex.cpp\r\ninit.cpp\r\nmapport.cpp\r\nnet.cpp\r\nnet_processing.cpp\r\nnode/caches.cpp\r\nnode/coin.cpp\r\nnode/context.cpp\r\nnode/interfaces.cpp\r\nnode/miner.cpp\r\nnode/minisketchwrapper.cpp\r\nnode/psbt.cpp\r\nnode/transaction.cpp\r\nnoui.cpp\r\nrest.cpp\r\nrpc/blockchain.cpp\r\nrpc/mining.cpp\r\nrpc/misc.cpp\r\nrpc/net.cpp\r\nrpc/rawtransaction.cpp\r\nrpc/server.cpp\r\nrpc/server_util.cpp\r\ntorcontrol.cpp\r\ntxorphanage.cpp\r\ntxrequest.cpp\r\nwallet/init.cpp\r\n```\r\n\r\nHowever, if we perform a similar analysis on `libbitcoinconsensus.la` we'll see that it compiles the `crypto/*.cpp` files, which can be eliminated by https://github.com/bitcoin/bitcoin/pull/24322/commits/7c2b41e9f81e52cb30efc2d90ebb4b414b97617f, after that change there's just `script/bitcoinconsensus.cpp` left.\r\n\r\n**Potential followup PR:** Extract out a `libbitcoinconensus_internal.la` which doesn't include `script/bitcoinconsensus.cpp` that `libbitcoinkernel` can link against and avoid unnecessary compilation.\r\n\r\n```sh\r\ncomm -13 <(make --no-print-directory -C src print-bitcoin_chainstate_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u) \\\r\n         <(make --no-print-directory -C src print-libbitcoinconsensus_la_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u)\r\n```\r\n\r\n```sh\r\ncrypto/aes.cpp\r\ncrypto/chacha20.cpp\r\ncrypto/chacha_poly_aead.cpp\r\ncrypto/hkdf_sha256_32.cpp\r\ncrypto/hmac_sha256.cpp\r\ncrypto/hmac_sha512.cpp\r\ncrypto/muhash.cpp\r\ncrypto/poly1305.cpp\r\ncrypto/ripemd160.cpp\r\ncrypto/sha1.cpp\r\ncrypto/sha256.cpp\r\ncrypto/sha256_sse4.cpp\r\ncrypto/sha3.cpp\r\ncrypto/sha512.cpp\r\ncrypto/siphash.cpp\r\nscript/bitcoinconsensus.cpp\r\n```\r\n\r\n-----\r\n\r\n## Appendix \r\n\r\nFor reference, here's the `.cpp` comparison for `libcommon`:\r\n\r\nAll the `.cpp` that `bitcoin-chainstate`/`libbitcoinkernel` requires but `libcommon` doesn't:\r\n\r\n```sh\r\ncomm -23 <(make --no-print-directory -C src print-bitcoin_chainstate_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u) \\\r\n         <(make --no-print-directory -C src print-libbitcoin_common_a_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u)\r\n```\r\n\r\n```sh\r\narith_uint256.cpp\r\nbitcoin-chainstate.cpp\r\nblockfilter.cpp\r\nchain.cpp\r\nchainparamsbase.cpp\r\nclientversion.cpp\r\ncompat/glibcxx_sanity.cpp\r\nconsensus/merkle.cpp\r\nconsensus/tx_check.cpp\r\nconsensus/tx_verify.cpp\r\ndbwrapper.cpp\r\ndeploymentstatus.cpp\r\nflatfile.cpp\r\nfs.cpp\r\nhash.cpp\r\nindex/base.cpp\r\nindex/blockfilterindex.cpp\r\nindex/coinstatsindex.cpp\r\nlogging.cpp\r\nnode/blockstorage.cpp\r\nnode/chainstate.cpp\r\nnode/coinstats.cpp\r\nnode/ui_interface.cpp\r\npolicy/fees.cpp\r\npolicy/packages.cpp\r\npolicy/rbf.cpp\r\npolicy/settings.cpp\r\npow.cpp\r\nprimitives/block.cpp\r\nprimitives/transaction.cpp\r\npubkey.cpp\r\nrandom.cpp\r\nrandomenv.cpp\r\nscript/interpreter.cpp\r\nscript/script.cpp\r\nscript/script_error.cpp\r\nscript/sigcache.cpp\r\nshutdown.cpp\r\nsignet.cpp\r\nsupport/cleanse.cpp\r\nsupport/lockedpool.cpp\r\nsync.cpp\r\nthreadinterrupt.cpp\r\ntimedata.cpp\r\ntxdb.cpp\r\ntxmempool.cpp\r\nuint256.cpp\r\nutil/asmap.cpp\r\nutil/bytevectorhash.cpp\r\nutil/getuniquepath.cpp\r\nutil/hasher.cpp\r\nutil/moneystr.cpp\r\nutil/rbf.cpp\r\nutil/serfloat.cpp\r\nutil/settings.cpp\r\nutil/strencodings.cpp\r\nutil/syscall_sandbox.cpp\r\nutil/system.cpp\r\nutil/thread.cpp\r\nutil/threadnames.cpp\r\nutil/time.cpp\r\nutil/tokenpipe.cpp\r\nvalidation.cpp\r\nvalidationinterface.cpp\r\nversionbits.cpp\r\n```\r\n\r\nAll the `.cpp` that `libcommon` requires but `bitcoin-chainstate`/`libbitcoinkernel` doesn't:\r\n\r\n```sh\r\ncomm -13 <(make --no-print-directory -C src print-bitcoin_chainstate_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u) \\\r\n         <(make --no-print-directory -C src print-libbitcoin_common_a_SOURCES | cut -d= -f2 | tr ' ' '\\n' | grep -v '\\.h$' | sort -u)\r\n```\r\n\r\n```sh\r\nbase58.cpp\r\nbech32.cpp\r\ncommon/bloom.cpp\r\ncore_write.cpp\r\nexternal_signer.cpp\r\nkey_io.cpp\r\nmerkleblock.cpp\r\nnetbase.cpp\r\nnet_permissions.cpp\r\nnet_types.cpp\r\noutputtype.cpp\r\nprotocol.cpp\r\npsbt.cpp\r\nrpc/external_signer.cpp\r\nrpc/rawtransaction_util.cpp\r\nrpc/util.cpp\r\nscript/descriptor.cpp\r\nscript/sign.cpp\r\nscript/signingprovider.cpp\r\n```",
      "created_at": "2022-02-11T20:27:06Z",
      "updated_at": "2022-02-11T20:27:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804983020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804983020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 841,
      "original_line": 841,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804988164",
      "pull_request_review_id": 880653946,
      "id": 804988164,
      "node_id": "PRRC_kwDOABII584v-yUE",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "01840e6161396ed0ab30a122921f67b8dce45499",
      "in_reply_to_id": 804814204,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as of 9050346f04d0435ad71d93ba1df4f5c126c0337b",
      "created_at": "2022-02-11T20:36:21Z",
      "updated_at": "2022-02-11T20:36:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804988164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804988164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804988455",
      "pull_request_review_id": 880654501,
      "id": 804988455,
      "node_id": "PRRC_kwDOABII584v-yYn",
      "diff_hunk": "@@ -1622,6 +1630,10 @@ AC_MSG_CHECKING([whether to build bitcoin-util])\n AM_CONDITIONAL([BUILD_BITCOIN_UTIL], [test $build_bitcoin_util = \"yes\"])\n AC_MSG_RESULT($build_bitcoin_util)\n \n+AC_MSG_CHECKING([whether to build experimental bitcoin-chainstate])\n+AM_CONDITIONAL([BUILD_BITCOIN_CHAINSTATE], [test x$build_bitcoin_chainstate = xyes])",
      "path": "configure.ac",
      "position": null,
      "original_position": 34,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "da9056423079bcbdcfb23133a6063c37469d58b1",
      "in_reply_to_id": 804945496,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as of 9050346f04d0435ad71d93ba1df4f5c126c0337b",
      "created_at": "2022-02-11T20:36:50Z",
      "updated_at": "2022-02-11T20:36:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804988455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804988455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1634,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804989115",
      "pull_request_review_id": 880655528,
      "id": 804989115,
      "node_id": "PRRC_kwDOABII584v-yi7",
      "diff_hunk": "@@ -764,6 +768,102 @@ bitcoin_util_LDADD = \\\n bitcoin_util_LDADD += $(BOOST_LIBS)\n #\n \n+# bitcoin-chainstate binary #\n+#\n+# TODO: Remove blockfilter.cpp and index/blockfilterindex.cpp after merge of\n+#       \"Improve Indices on pruned nodes via prune blockers\" #21726",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 18,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "da9056423079bcbdcfb23133a6063c37469d58b1",
      "in_reply_to_id": 804947111,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comment removed as of 9050346f04d0435ad71d93ba1df4f5c126c0337b\r\nAdded to \"Project-wide TODOs\": https://github.com/bitcoin/bitcoin/issues/24303",
      "created_at": "2022-02-11T20:38:05Z",
      "updated_at": "2022-02-11T20:38:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r804989115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/804989115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 774,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805035302",
      "pull_request_review_id": 880725045,
      "id": 805035302,
      "node_id": "PRRC_kwDOABII584v-90m",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "01840e6161396ed0ab30a122921f67b8dce45499",
      "in_reply_to_id": 804782700,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as of 0d90128a3b6acab0fd9d1bc39518e2783b55fdf3",
      "created_at": "2022-02-11T22:04:03Z",
      "updated_at": "2022-02-11T22:04:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805035302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805035302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805035342",
      "pull_request_review_id": 880725148,
      "id": 805035342,
      "node_id": "PRRC_kwDOABII584v-91O",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "01840e6161396ed0ab30a122921f67b8dce45499",
      "in_reply_to_id": 804811990,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as of 0d90128a3b6acab0fd9d1bc39518e2783b55fdf3",
      "created_at": "2022-02-11T22:04:09Z",
      "updated_at": "2022-02-11T22:04:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805035342",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805035342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805130394",
      "pull_request_review_id": 880831291,
      "id": 805130394,
      "node_id": "PRRC_kwDOABII584v_VCa",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// The bitcoin-chainstate executable serves to surface the dependencies required\n+// by a program wishing to use Bitcoin Core's consensus engine as it is right\n+// now.\n+//\n+// It is part of the libbitcoinkernel project.\n+\n+#include <iosfwd> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for node::LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for node::fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+    const std::function<std::string(const char*)>\n+        G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    if (argc != 2) {\n+        std::cerr\n+            << \"Usage: \" << argv[0] << \" DATADIR\" << std::endl\n+            << \"Display DATADIR information, and process hex-encoded blocks on standard input.\" << std::endl;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0d90128a3b6acab0fd9d1bc39518e2783b55fdf3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could clarify that this is experimental, for testing only, and expected to break in future versions?\r\n\r\nOtherwise someone might accidentally pass the configure option and then open a bug that their mainnet utxo database is corrupted.",
      "created_at": "2022-02-12T07:25:11Z",
      "updated_at": "2022-02-12T07:25:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805130394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805130394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805130435",
      "pull_request_review_id": 880831321,
      "id": 805130435,
      "node_id": "PRRC_kwDOABII584v_VDD",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// The bitcoin-chainstate executable serves to surface the dependencies required",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 5,
      "original_position": 1,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0d90128a3b6acab0fd9d1bc39518e2783b55fdf3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "missing copyright header?",
      "created_at": "2022-02-12T07:25:55Z",
      "updated_at": "2022-02-12T07:25:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805130435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805130435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805402349",
      "pull_request_review_id": 881032815,
      "id": 805402349,
      "node_id": "PRRC_kwDOABII584wAXbt",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Leaving this thread open for the benefit of future reviewers.",
      "created_at": "2022-02-13T19:11:36Z",
      "updated_at": "2022-02-13T19:11:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805402349",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805402349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805403052",
      "pull_request_review_id": 881033367,
      "id": 805403052,
      "node_id": "PRRC_kwDOABII584wAXms",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// The bitcoin-chainstate executable serves to surface the dependencies required\n+// by a program wishing to use Bitcoin Core's consensus engine as it is right\n+// now.\n+//\n+// It is part of the libbitcoinkernel project.\n+\n+#include <iosfwd> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for node::LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for node::fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+    const std::function<std::string(const char*)>\n+        G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    if (argc != 2) {\n+        std::cerr\n+            << \"Usage: \" << argv[0] << \" DATADIR\" << std::endl\n+            << \"Display DATADIR information, and process hex-encoded blocks on standard input.\" << std::endl;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0d90128a3b6acab0fd9d1bc39518e2783b55fdf3",
      "in_reply_to_id": 805130394,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed as of: f0f78cb20b49f0a022bf3661538db17eb58ad280",
      "created_at": "2022-02-13T19:17:40Z",
      "updated_at": "2022-02-13T19:17:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805403052",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805403052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805403065",
      "pull_request_review_id": 881033383,
      "id": 805403065,
      "node_id": "PRRC_kwDOABII584wAXm5",
      "diff_hunk": "@@ -0,0 +1,263 @@\n+// The bitcoin-chainstate executable serves to surface the dependencies required",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 5,
      "original_position": 1,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0d90128a3b6acab0fd9d1bc39518e2783b55fdf3",
      "in_reply_to_id": 805130435,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed as of: f0f78cb20b49f0a022bf3661538db17eb58ad280",
      "created_at": "2022-02-13T19:17:48Z",
      "updated_at": "2022-02-13T19:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805403065",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805403065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805403170",
      "pull_request_review_id": 881033466,
      "id": 805403170,
      "node_id": "PRRC_kwDOABII584wAXoi",
      "diff_hunk": "@@ -764,6 +768,102 @@ bitcoin_util_LDADD = \\\n bitcoin_util_LDADD += $(BOOST_LIBS)\n #\n \n+# bitcoin-chainstate binary #\n+#\n+# TODO: Remove blockfilter.cpp and index/blockfilterindex.cpp after merge of\n+#       \"Improve Indices on pruned nodes via prune blockers\" #21726\n+bitcoin_chainstate_SOURCES = \\\n+  bitcoin-chainstate.cpp \\\n+  arith_uint256.cpp \\\n+  blockfilter.cpp \\\n+  chain.cpp \\\n+  chainparamsbase.cpp \\\n+  chainparams.cpp \\\n+  clientversion.cpp \\\n+  coins.cpp \\\n+  compat/glibcxx_sanity.cpp \\\n+  compressor.cpp \\\n+  consensus/merkle.cpp \\\n+  consensus/tx_check.cpp \\\n+  consensus/tx_verify.cpp \\\n+  core_read.cpp \\\n+  dbwrapper.cpp \\\n+  deploymentinfo.cpp \\\n+  deploymentstatus.cpp \\\n+  flatfile.cpp \\\n+  fs.cpp \\\n+  hash.cpp \\\n+  index/base.cpp \\\n+  index/blockfilterindex.cpp \\\n+  index/coinstatsindex.cpp \\\n+  init/common.cpp \\\n+  key.cpp \\\n+  logging.cpp \\\n+  netaddress.cpp \\\n+  node/blockstorage.cpp \\\n+  node/chainstate.cpp \\\n+  node/coinstats.cpp \\\n+  node/ui_interface.cpp \\\n+  policy/feerate.cpp \\\n+  policy/fees.cpp \\\n+  policy/packages.cpp \\\n+  policy/policy.cpp \\\n+  policy/rbf.cpp \\\n+  policy/settings.cpp \\\n+  pow.cpp \\\n+  primitives/block.cpp \\\n+  primitives/transaction.cpp \\\n+  pubkey.cpp \\\n+  random.cpp \\\n+  randomenv.cpp \\\n+  scheduler.cpp \\\n+  script/interpreter.cpp \\\n+  script/script.cpp \\\n+  script/script_error.cpp \\\n+  script/sigcache.cpp \\\n+  script/standard.cpp \\\n+  shutdown.cpp \\\n+  signet.cpp \\\n+  support/cleanse.cpp \\\n+  support/lockedpool.cpp \\\n+  sync.cpp \\\n+  threadinterrupt.cpp \\\n+  timedata.cpp \\\n+  txdb.cpp \\\n+  txmempool.cpp \\\n+  uint256.cpp \\\n+  util/asmap.cpp \\\n+  util/bytevectorhash.cpp \\\n+  util/getuniquepath.cpp \\\n+  util/hasher.cpp \\\n+  util/moneystr.cpp \\\n+  util/rbf.cpp \\\n+  util/serfloat.cpp \\\n+  util/settings.cpp \\\n+  util/strencodings.cpp \\\n+  util/syscall_sandbox.cpp \\\n+  util/system.cpp \\\n+  util/thread.cpp \\\n+  util/threadnames.cpp \\\n+  util/time.cpp \\\n+  util/tokenpipe.cpp \\",
      "path": "src/Makefile.am",
      "position": 90,
      "original_position": 93,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "da9056423079bcbdcfb23133a6063c37469d58b1",
      "in_reply_to_id": 804950143,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Leaving this thread open for the benefit of future reviewers.",
      "created_at": "2022-02-13T19:18:54Z",
      "updated_at": "2022-02-13T19:18:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805403170",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805403170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 841,
      "original_line": 841,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805659994",
      "pull_request_review_id": 881374201,
      "id": 805659994,
      "node_id": "PRRC_kwDOABII584wBWVa",
      "diff_hunk": "@@ -764,6 +768,103 @@ bitcoin_util_LDADD = \\\n bitcoin_util_LDADD += $(BOOST_LIBS)\n #\n \n+# bitcoin-chainstate binary #\n+bitcoin_chainstate_SOURCES = \\\n+  bitcoin-chainstate.cpp \\\n+  arith_uint256.cpp \\\n+  blockfilter.cpp \\\n+  chain.cpp \\\n+  chainparamsbase.cpp \\\n+  chainparams.cpp \\\n+  clientversion.cpp \\\n+  coins.cpp \\\n+  compat/glibcxx_sanity.cpp \\\n+  compressor.cpp \\\n+  consensus/merkle.cpp \\\n+  consensus/tx_check.cpp \\\n+  consensus/tx_verify.cpp \\\n+  core_read.cpp \\\n+  dbwrapper.cpp \\\n+  deploymentinfo.cpp \\\n+  deploymentstatus.cpp \\\n+  flatfile.cpp \\\n+  fs.cpp \\\n+  hash.cpp \\\n+  index/base.cpp \\\n+  index/blockfilterindex.cpp \\\n+  index/coinstatsindex.cpp \\\n+  init/common.cpp \\\n+  key.cpp \\\n+  logging.cpp \\\n+  netaddress.cpp \\\n+  node/blockstorage.cpp \\\n+  node/chainstate.cpp \\\n+  node/coinstats.cpp \\\n+  node/ui_interface.cpp \\\n+  policy/feerate.cpp \\\n+  policy/fees.cpp \\\n+  policy/packages.cpp \\\n+  policy/policy.cpp \\\n+  policy/rbf.cpp \\\n+  policy/settings.cpp \\\n+  pow.cpp \\\n+  primitives/block.cpp \\\n+  primitives/transaction.cpp \\\n+  pubkey.cpp \\\n+  random.cpp \\\n+  randomenv.cpp \\\n+  scheduler.cpp \\\n+  script/interpreter.cpp \\\n+  script/script.cpp \\\n+  script/script_error.cpp \\\n+  script/sigcache.cpp \\\n+  script/standard.cpp \\\n+  shutdown.cpp \\\n+  signet.cpp \\\n+  support/cleanse.cpp \\\n+  support/lockedpool.cpp \\\n+  sync.cpp \\\n+  threadinterrupt.cpp \\\n+  timedata.cpp \\\n+  txdb.cpp \\\n+  txmempool.cpp \\\n+  uint256.cpp \\\n+  util/asmap.cpp \\\n+  util/bytevectorhash.cpp \\\n+  util/getuniquepath.cpp \\\n+  util/hasher.cpp \\\n+  util/moneystr.cpp \\\n+  util/rbf.cpp \\\n+  util/serfloat.cpp \\\n+  util/settings.cpp \\\n+  util/strencodings.cpp \\\n+  util/syscall_sandbox.cpp \\\n+  util/system.cpp \\\n+  util/thread.cpp \\\n+  util/threadnames.cpp \\\n+  util/time.cpp \\\n+  util/tokenpipe.cpp \\\n+  validation.cpp \\\n+  validationinterface.cpp \\\n+  versionbits.cpp \\\n+  warnings.cpp\n+bitcoin_chainstate_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_chainstate_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_chainstate_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n+bitcoin_chainstate_LDADD = \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBSECP256K1) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBLEVELDB_SSE42) \\\n+  $(LIBMEMENV) \\\n+  $(BOOST_LIBS)",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 105,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0ad6a3e81265ef2ad5353c4e0f6553955980d2bc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Needs rebase after #24301",
      "created_at": "2022-02-14T09:40:57Z",
      "updated_at": "2022-02-14T09:52:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805659994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805659994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805663780",
      "pull_request_review_id": 881374201,
      "id": 805663780,
      "node_id": "PRRC_kwDOABII584wBXQk",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+// The bitcoin-chainstate executable serves to surface the dependencies required\n+// by a program wishing to use Bitcoin Core's consensus engine as it is right\n+// now.\n+//\n+// DEVELOPER NOTE: Since this is a \"demo-only\", experimental, etc. executable,\n+//                 it may diverge from Bitcoin Core's coding style.",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0ad6a3e81265ef2ad5353c4e0f6553955980d2bc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this can be removed and if there was any reason to use a different coding style for this binary, it can be explained in the pull request, a review comment, or a code comment.",
      "created_at": "2022-02-14T09:45:16Z",
      "updated_at": "2022-02-14T09:52:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805663780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805663780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805664418",
      "pull_request_review_id": 881374201,
      "id": 805664418,
      "node_id": "PRRC_kwDOABII584wBXai",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+// The bitcoin-chainstate executable serves to surface the dependencies required\n+// by a program wishing to use Bitcoin Core's consensus engine as it is right\n+// now.\n+//\n+// DEVELOPER NOTE: Since this is a \"demo-only\", experimental, etc. executable,\n+//                 it may diverge from Bitcoin Core's coding style.\n+//\n+// It is part of the libbitcoinkernel project.\n+\n+#include <chainparams.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <init/common.h>\n+#include <node/blockstorage.h>\n+#include <node/chainstate.h>\n+#include <scheduler.h>\n+#include <script/sigcache.h>\n+#include <util/system.h>\n+#include <util/thread.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <filesystem>\n+#include <functional>\n+#include <iosfwd>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+int main(int argc, char* argv[]) {",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0ad6a3e81265ef2ad5353c4e0f6553955980d2bc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "clang-format?",
      "created_at": "2022-02-14T09:45:57Z",
      "updated_at": "2022-02-14T09:52:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805664418",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805664418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805858483",
      "pull_request_review_id": 881652796,
      "id": 805858483,
      "node_id": "PRRC_kwDOABII584wCGyz",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IMO goto is acceptable in C, which has no RAII and other scope-based ways of handling errors, but not in C++, generally. The only current use of `goto` we have in the code is in `src/crypto/poly1305.cpp` which is effectively included C code. So i'd really like to avoid it if remotely possible.",
      "created_at": "2022-02-14T13:47:46Z",
      "updated_at": "2022-02-14T13:49:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r805858483",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/805858483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806032728",
      "pull_request_review_id": 881902067,
      "id": 806032728,
      "node_id": "PRRC_kwDOABII584wCxVY",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+// The bitcoin-chainstate executable serves to surface the dependencies required\n+// by a program wishing to use Bitcoin Core's consensus engine as it is right\n+// now.\n+//\n+// DEVELOPER NOTE: Since this is a \"demo-only\", experimental, etc. executable,\n+//                 it may diverge from Bitcoin Core's coding style.\n+//\n+// It is part of the libbitcoinkernel project.\n+\n+#include <chainparams.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <init/common.h>\n+#include <node/blockstorage.h>\n+#include <node/chainstate.h>\n+#include <scheduler.h>\n+#include <script/sigcache.h>\n+#include <util/system.h>\n+#include <util/thread.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <filesystem>\n+#include <functional>\n+#include <iosfwd>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+int main(int argc, char* argv[]) {\n+    // SETUP: Argument parsing and handling\n+    if (argc != 2) {\n+        std::cerr\n+            << \"Usage: \" << argv[0] << \" DATADIR\" << std::endl\n+            << \"Display DATADIR information, and process hex-encoded blocks on standard input.\" << std::endl\n+            << std::endl\n+            << \"IMPORTANT: THIS EXECUTABLE IS EXPERIMENTAL, FOR TESTING ONLY, AND EXPECTED TO\" << std::endl\n+            << \"           BREAK IN FUTURE VERSIONS. DO NOT USE ON YOUR ACTUAL DATADIR.\" << std::endl;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 42,
      "original_position": 41,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "ceb9fe7a6462259bd5f01eda920ca60c0d77eefb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"build: Add example bitcoin-chainstate executable\" (ac43dd0c8ed4b85e5fea359f1d584678bbc9378f)\r\n\r\nI like the disclaimer. Good to think of the user! All the documention updates here look great.",
      "created_at": "2022-02-14T16:40:03Z",
      "updated_at": "2022-02-14T16:51:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r806032728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806032728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": 41,
      "original_start_line": 40,
      "start_side": "RIGHT",
      "line": 42,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806039251",
      "pull_request_review_id": 881902067,
      "id": 806039251,
      "node_id": "PRRC_kwDOABII584wCy7T",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"build: Add example bitcoin-chainstate executable\" (ac43dd0c8ed4b85e5fea359f1d584678bbc9378f)\r\n\r\nI guess the goto is kind of a shiny object. You can get rid of gotos by improving code (refactoring out functions, using RAII) but you can also get rid of gotos by making code worse (adding layers of nesting and loops and confusing variables). Exciting to see what is in this little goto's future!",
      "created_at": "2022-02-14T16:46:21Z",
      "updated_at": "2022-02-14T16:51:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r806039251",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806039251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806190083",
      "pull_request_review_id": 882119096,
      "id": 806190083,
      "node_id": "PRRC_kwDOABII584wDXwD",
      "diff_hunk": "@@ -764,6 +768,103 @@ bitcoin_util_LDADD = \\\n bitcoin_util_LDADD += $(BOOST_LIBS)\n #\n \n+# bitcoin-chainstate binary #\n+bitcoin_chainstate_SOURCES = \\\n+  bitcoin-chainstate.cpp \\\n+  arith_uint256.cpp \\\n+  blockfilter.cpp \\\n+  chain.cpp \\\n+  chainparamsbase.cpp \\\n+  chainparams.cpp \\\n+  clientversion.cpp \\\n+  coins.cpp \\\n+  compat/glibcxx_sanity.cpp \\\n+  compressor.cpp \\\n+  consensus/merkle.cpp \\\n+  consensus/tx_check.cpp \\\n+  consensus/tx_verify.cpp \\\n+  core_read.cpp \\\n+  dbwrapper.cpp \\\n+  deploymentinfo.cpp \\\n+  deploymentstatus.cpp \\\n+  flatfile.cpp \\\n+  fs.cpp \\\n+  hash.cpp \\\n+  index/base.cpp \\\n+  index/blockfilterindex.cpp \\\n+  index/coinstatsindex.cpp \\\n+  init/common.cpp \\\n+  key.cpp \\\n+  logging.cpp \\\n+  netaddress.cpp \\\n+  node/blockstorage.cpp \\\n+  node/chainstate.cpp \\\n+  node/coinstats.cpp \\\n+  node/ui_interface.cpp \\\n+  policy/feerate.cpp \\\n+  policy/fees.cpp \\\n+  policy/packages.cpp \\\n+  policy/policy.cpp \\\n+  policy/rbf.cpp \\\n+  policy/settings.cpp \\\n+  pow.cpp \\\n+  primitives/block.cpp \\\n+  primitives/transaction.cpp \\\n+  pubkey.cpp \\\n+  random.cpp \\\n+  randomenv.cpp \\\n+  scheduler.cpp \\\n+  script/interpreter.cpp \\\n+  script/script.cpp \\\n+  script/script_error.cpp \\\n+  script/sigcache.cpp \\\n+  script/standard.cpp \\\n+  shutdown.cpp \\\n+  signet.cpp \\\n+  support/cleanse.cpp \\\n+  support/lockedpool.cpp \\\n+  sync.cpp \\\n+  threadinterrupt.cpp \\\n+  timedata.cpp \\\n+  txdb.cpp \\\n+  txmempool.cpp \\\n+  uint256.cpp \\\n+  util/asmap.cpp \\\n+  util/bytevectorhash.cpp \\\n+  util/getuniquepath.cpp \\\n+  util/hasher.cpp \\\n+  util/moneystr.cpp \\\n+  util/rbf.cpp \\\n+  util/serfloat.cpp \\\n+  util/settings.cpp \\\n+  util/strencodings.cpp \\\n+  util/syscall_sandbox.cpp \\\n+  util/system.cpp \\\n+  util/thread.cpp \\\n+  util/threadnames.cpp \\\n+  util/time.cpp \\\n+  util/tokenpipe.cpp \\\n+  validation.cpp \\\n+  validationinterface.cpp \\\n+  versionbits.cpp \\\n+  warnings.cpp\n+bitcoin_chainstate_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_chainstate_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_chainstate_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n+bitcoin_chainstate_LDADD = \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBSECP256K1) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBLEVELDB_SSE42) \\\n+  $(LIBMEMENV) \\\n+  $(BOOST_LIBS)",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 105,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0ad6a3e81265ef2ad5353c4e0f6553955980d2bc",
      "in_reply_to_id": 805659994,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as of 2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "created_at": "2022-02-14T19:55:06Z",
      "updated_at": "2022-02-14T19:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r806190083",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806190083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806190166",
      "pull_request_review_id": 882119208,
      "id": 806190166,
      "node_id": "PRRC_kwDOABII584wDXxW",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+// The bitcoin-chainstate executable serves to surface the dependencies required\n+// by a program wishing to use Bitcoin Core's consensus engine as it is right\n+// now.\n+//\n+// DEVELOPER NOTE: Since this is a \"demo-only\", experimental, etc. executable,\n+//                 it may diverge from Bitcoin Core's coding style.\n+//\n+// It is part of the libbitcoinkernel project.\n+\n+#include <chainparams.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <init/common.h>\n+#include <node/blockstorage.h>\n+#include <node/chainstate.h>\n+#include <scheduler.h>\n+#include <script/sigcache.h>\n+#include <util/system.h>\n+#include <util/thread.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <filesystem>\n+#include <functional>\n+#include <iosfwd>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+int main(int argc, char* argv[]) {",
      "path": "src/bitcoin-chainstate.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0ad6a3e81265ef2ad5353c4e0f6553955980d2bc",
      "in_reply_to_id": 805664418,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as of 2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "created_at": "2022-02-14T19:55:12Z",
      "updated_at": "2022-02-14T19:55:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r806190166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806190166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806194408",
      "pull_request_review_id": 882125149,
      "id": 806194408,
      "node_id": "PRRC_kwDOABII584wDYzo",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree that this `goto` is a shiny object 😅 . It's actually the reason why I added the developer note at the beginning of the file here: https://github.com/bitcoin/bitcoin/blob/095aa6ca37bf0bd5c5e221bab779978a99b2a34c/src/bitcoin-chainstate.cpp#L9-L10\r\n\r\nI think that since this binary is a \"demo-only\" executable (that will actually later be moved to `src/kernel/examples/bitcoin-chainstate`) we can not bother too much with its style. However, I do agree that this wouldn't be acceptable if it were not \"demo-only\".\r\n\r\nIf people feel very strongly about it, please speak up and I can make the necessary modifications, but it might make things a bit less readable.",
      "created_at": "2022-02-14T20:01:08Z",
      "updated_at": "2022-02-14T20:01:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r806194408",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806194408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806194876",
      "pull_request_review_id": 882125760,
      "id": 806194876,
      "node_id": "PRRC_kwDOABII584wDY68",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+// The bitcoin-chainstate executable serves to surface the dependencies required\n+// by a program wishing to use Bitcoin Core's consensus engine as it is right\n+// now.\n+//\n+// DEVELOPER NOTE: Since this is a \"demo-only\", experimental, etc. executable,\n+//                 it may diverge from Bitcoin Core's coding style.",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "0ad6a3e81265ef2ad5353c4e0f6553955980d2bc",
      "in_reply_to_id": 805663780,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Some discussion here: https://github.com/bitcoin/bitcoin/pull/24304#discussion_r806194408",
      "created_at": "2022-02-14T20:01:44Z",
      "updated_at": "2022-02-14T20:01:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r806194876",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806194876"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806195173",
      "pull_request_review_id": 882126219,
      "id": 806195173,
      "node_id": "PRRC_kwDOABII584wDY_l",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+// The bitcoin-chainstate executable serves to surface the dependencies required\n+// by a program wishing to use Bitcoin Core's consensus engine as it is right\n+// now.\n+//\n+// DEVELOPER NOTE: Since this is a \"demo-only\", experimental, etc. executable,\n+//                 it may diverge from Bitcoin Core's coding style.\n+//\n+// It is part of the libbitcoinkernel project.\n+\n+#include <chainparams.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <init/common.h>\n+#include <node/blockstorage.h>\n+#include <node/chainstate.h>\n+#include <scheduler.h>\n+#include <script/sigcache.h>\n+#include <util/system.h>\n+#include <util/thread.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <filesystem>\n+#include <functional>\n+#include <iosfwd>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+int main(int argc, char* argv[]) {\n+    // SETUP: Argument parsing and handling\n+    if (argc != 2) {\n+        std::cerr\n+            << \"Usage: \" << argv[0] << \" DATADIR\" << std::endl\n+            << \"Display DATADIR information, and process hex-encoded blocks on standard input.\" << std::endl\n+            << std::endl\n+            << \"IMPORTANT: THIS EXECUTABLE IS EXPERIMENTAL, FOR TESTING ONLY, AND EXPECTED TO\" << std::endl\n+            << \"           BREAK IN FUTURE VERSIONS. DO NOT USE ON YOUR ACTUAL DATADIR.\" << std::endl;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 42,
      "original_position": 41,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "ceb9fe7a6462259bd5f01eda920ca60c0d77eefb",
      "in_reply_to_id": 806032728,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Marco's idea, and I agree! 😄 ",
      "created_at": "2022-02-14T20:02:12Z",
      "updated_at": "2022-02-14T20:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r806195173",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806195173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": 41,
      "original_start_line": 40,
      "start_side": "RIGHT",
      "line": 42,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/808803775",
      "pull_request_review_id": 885614605,
      "id": 808803775,
      "node_id": "PRRC_kwDOABII584wNV2_",
      "diff_hunk": "@@ -626,6 +627,12 @@ AC_ARG_ENABLE([util-util],\n   [build_bitcoin_util=$enableval],\n   [build_bitcoin_util=$build_bitcoin_utils])\n \n+AC_ARG_ENABLE([experimental-util-chainstate],\n+  [AS_HELP_STRING([--enable-experimental-util-chainstate],",
      "path": "configure.ac",
      "position": 13,
      "original_position": 13,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You may want to document this in the PR description and elsewhere.\r\n\r\nAlso should be in the `./configure` summary.",
      "created_at": "2022-02-17T08:49:29Z",
      "updated_at": "2022-02-17T09:14:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r808803775",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/808803775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 631,
      "original_line": 631,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/808888210",
      "pull_request_review_id": 885735093,
      "id": 808888210,
      "node_id": "PRRC_kwDOABII584wNqeS",
      "diff_hunk": "@@ -626,6 +627,12 @@ AC_ARG_ENABLE([util-util],\n   [build_bitcoin_util=$enableval],\n   [build_bitcoin_util=$build_bitcoin_utils])\n \n+AC_ARG_ENABLE([experimental-util-chainstate],\n+  [AS_HELP_STRING([--enable-experimental-util-chainstate],",
      "path": "configure.ac",
      "position": 13,
      "original_position": 13,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "in_reply_to_id": 808803775,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/24304#discussion_r808803775\r\n\r\n> You may want to document this in the PR description and elsewhere.\r\n> \r\n> Also should be in the `./configure` summary.\r\n\r\nI believe this is only temporarily built as part of our build system and later moves to an examples folder (and  built with cmake!) So that may a reason not to add it to `--configure` help, though I guess it you could have a comment saying the option is temporary and will be removed later. Agree it makes sense to document in PR description and elsewhere (maybe at the top of `bitcoin-chainstate.cpp`) so it's obvious how to build & test this",
      "created_at": "2022-02-17T10:18:34Z",
      "updated_at": "2022-02-17T10:40:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r808888210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/808888210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 631,
      "original_line": 631,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/808914028",
      "pull_request_review_id": 885770293,
      "id": 808914028,
      "node_id": "PRRC_kwDOABII584wNwxs",
      "diff_hunk": "@@ -626,6 +627,12 @@ AC_ARG_ENABLE([util-util],\n   [build_bitcoin_util=$enableval],\n   [build_bitcoin_util=$build_bitcoin_utils])\n \n+AC_ARG_ENABLE([experimental-util-chainstate],\n+  [AS_HELP_STRING([--enable-experimental-util-chainstate],",
      "path": "configure.ac",
      "position": 13,
      "original_position": 13,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "in_reply_to_id": 808803775,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> So that may a reason not to add it to --configure help,\r\n\r\nThis option is already included in `./configure --help` output, that's done automatically by autotools.\r\n\r\n> Also should be in the ./configure summary.\r\n\r\nI don't think it needs to be.",
      "created_at": "2022-02-17T10:46:07Z",
      "updated_at": "2022-02-17T10:46:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r808914028",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/808914028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 631,
      "original_line": 631,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/809380178",
      "pull_request_review_id": 886428054,
      "id": 809380178,
      "node_id": "PRRC_kwDOABII584wPilS",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here's a simple way of avoiding goto without (I think) making things less readable: https://github.com/ajtowns/bitcoin/commit/5d7d8de713961a88a40c236346bbfad4ad2906f0",
      "created_at": "2022-02-17T19:10:40Z",
      "updated_at": "2022-02-17T19:10:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r809380178",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/809380178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/809517232",
      "pull_request_review_id": 886625754,
      "id": 809517232,
      "node_id": "PRRC_kwDOABII584wQECw",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+#include <iostream> // for cout and shit\n+#include <functional> // for std::function\n+#include <filesystem>\n+\n+#include <node/chainstate.h>          // for LoadChainstate\n+#include <init/common.h>              // for SetGlobals, UnsetGlobals\n+#include <validation.h>               // for ChainstateManager, InitScriptExecutionCache, StopScriptCheckWorkerThreads, UpdateUncommittedBlockStructures, BlockManager, DEFAULT_CHECKBLOCKS, DEFAULT_CHECKLEVEL\n+#include <validationinterface.h>      // for GetMainSignals, cs_main, CMainSignals, RegisterSharedValidationInterface, UnregisterSharedValidationInterface, CValidationInterface\n+#include <core_io.h>                  // for DecodeHexBlk\n+#include <consensus/validation.h>     // for BlockValidationState\n+#include <chainparams.h>              // for Params, SelectParams, CChainParams\n+#include <node/blockstorage.h>        // for fReindex\n+#include <util/system.h>              // for gArgs, ArgsManager\n+#include <util/thread.h>              // for TraceThread\n+#include <scheduler.h>                // for CScheduler\n+#include <script/sigcache.h>          // for InitSignatureCache\n+\n+using node::fReindex;\n+using node::LoadChainstate;\n+using node::VerifyLoadedChainstate;\n+\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+// Adapted from rpc/mining.cpp\n+class submitblock_StateCatcher final : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    BlockValidationState state;\n+\n+    explicit submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& stateIn) override {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    }\n+};\n+\n+\n+int main(int argc, char* argv[]) {\n+    assert(argc == 2);\n+    std::filesystem::path abs_datadir = std::filesystem::absolute(argv[1]);\n+    std::filesystem::create_directories(abs_datadir);\n+    gArgs.ForceSetArg(\"-datadir\", abs_datadir.string());\n+\n+    SelectParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = Params();\n+\n+    init::SetGlobals();  // ECC_Start, etc.\n+\n+    // Initialize signatureCache cuz it's used by...\n+    //     <- VerifyECDSASignature\n+    //     <- CheckECDSASignature\n+    //     <- EvalChecksigPreTapscript\n+    //     <- EvalScript\n+    //     <- VerifyScript\n+    //     <- CScriptCheck::()\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitSignatureCache();\n+\n+    // Initialize g_scriptExecutionCache{,Hasher} cuz it's used by...\n+    //     <- CheckInputScripts\n+    //     <- ConnectBlock\n+    //     <- ConnectTip\n+    //     <- ActivateBestChainStep\n+    //     <- ActivateBestChain\n+    //     <- ProcessNewBlock\n+    InitScriptExecutionCache();\n+\n+    // START scheduler for RegisterSharedValidationInterface\n+    CScheduler scheduler{};\n+    // Start the lightweight task scheduler thread\n+    scheduler.m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { scheduler.serviceQueue(); });\n+\n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, std::chrono::minutes{1});\n+    // END scheduler for RegisterSharedValidationInterface\n+\n+    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+\n+    ChainstateManager chainman;\n+\n+    auto rv = LoadChainstate(false,\n+                             std::ref(chainman),\n+                             nullptr,\n+                             false,\n+                             chainparams.GetConsensus(),\n+                             false,\n+                             2 << 20,\n+                             2 << 22,\n+                             (450 << 20) - (2 << 20) - (2 << 22),\n+                             false,\n+                             false,\n+                             [](){ return false; });\n+    if (rv.has_value()) {\n+        std::cerr << \"Failed to load Chain state from your datadir.\" << std::endl;\n+        goto epilogue;",
      "path": "src/bitcoin-chainstate.cpp",
      "position": 91,
      "original_position": 108,
      "commit_id": "2c03cec2ff8cdbfd5da92bfb507d218e5c6435b0",
      "original_commit_id": "518c876efe10be5271e218e026db6892c1936f19",
      "in_reply_to_id": 804072128,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ajtowns Hmmm good point... Well since I'm going to introduce a `kernel::Context` object anyway, might be good to just move the init/shutdown logic over there and let RAII handle it. Will play around with it, thanks for the hint!!",
      "created_at": "2022-02-17T22:22:16Z",
      "updated_at": "2022-02-17T22:22:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24304#discussion_r809517232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/809517232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    }
  ]
}